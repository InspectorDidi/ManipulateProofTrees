(Definition Goedel.LNN.System (App Goedel.fol.System Goedel.Languages.LNN)) (Definition Goedel.Languages.LNN (App language LNNRelation LNTFunction Goedel.Languages.LNNArity)) (Definition Goedel.NN.NN (App Coq.Sets.Ensembles.Add (App Formula Goedel.Languages.LNN) (App Coq.Sets.Ensembles.Add (App Formula Goedel.Languages.LNN) (App Coq.Sets.Ensembles.Add (App Formula Goedel.Languages.LNN) (App Coq.Sets.Ensembles.Add (App Formula Goedel.Languages.LNN) (App Coq.Sets.Ensembles.Add (App Formula Goedel.Languages.LNN) (App Coq.Sets.Ensembles.Add (App Formula Goedel.Languages.LNN) (App Coq.Sets.Ensembles.Add (App Formula Goedel.Languages.LNN) (App Coq.Sets.Ensembles.Add (App Formula Goedel.Languages.LNN) (App Singleton (App Formula Goedel.Languages.LNN) Goedel.NN.NN1) Goedel.NN.NN2) Goedel.NN.NN3) Goedel.NN.NN4) Goedel.NN.NN5) Goedel.NN.NN6) Goedel.NN.NN7) Goedel.NN.NN8) Goedel.NN.NN9)) (Definition Goedel.LNN.Formula (App Formula Goedel.Languages.LNN)) (Definition Goedel.folProp.freeVarFormula (Lambda gen_var_8 Language (Fix (Functions (App gen_var_9 0 (Prod gen_var_10 (App Formula gen_var_8) (App list nat)) (Lambda gen_var_21 (App Formula gen_var_8) (Case 1 (Lambda gen_var_12 (App Formula gen_var_8) (App list nat)) (CaseMatch gen_var_12) (CaseBranches (Lambda gen_var_13 (App Term gen_var_8) (Lambda gen_var_14 (App Term gen_var_8) (App Coq.Init.Datatypes.app nat (App Goedel.folProp.freeVarTerm gen_var_8 gen_var_13) (App Goedel.folProp.freeVarTerm gen_var_8 gen_var_14)))) (Lambda gen_var_15 (App Goedel.fol.Relations gen_var_8) (Lambda gen_var_16 (App Terms gen_var_8 (App Goedel.fol.arity gen_var_8 (App inl (App Goedel.fol.Relations gen_var_8) (App Goedel.fol.Functions gen_var_8) gen_var_15))) (App Goedel.folProp.freeVarTerms gen_var_8 (App Goedel.fol.arity gen_var_8 (App inl (App Goedel.fol.Relations gen_var_8) (App Goedel.fol.Functions gen_var_8) gen_var_15)) gen_var_16))) (Lambda gen_var_17 (App Formula gen_var_8) (Lambda gen_var_18 (App Formula gen_var_8) (App Coq.Init.Datatypes.app nat (App gen_var_9 gen_var_17) (App gen_var_9 gen_var_18)))) (Lambda gen_var_19 (App Formula gen_var_8) (App gen_var_9 gen_var_19)) (Lambda gen_var_20 nat (Lambda gen_var_21 (App Formula gen_var_8) (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec gen_var_20 (App gen_var_9 gen_var_21))))))))) 0))) (Definition Goedel.fol.mem Coq.Sets.Ensembles.In) (Definition Goedel.LNN.SysPrf (App Goedel.folProof.SysPrf Goedel.Languages.LNN)) (Definition Goedel.folProp.substituteFormula (Lambda gen_var_25 Language (LetIn gen_var_26 (App var gen_var_25) (Prod Anonymous nat (App Term gen_var_25)) (LetIn gen_var_28 (App apply gen_var_25) (Prod gen_var_29 (App Goedel.fol.Functions gen_var_25) (Prod Anonymous (App Terms gen_var_25 (App Goedel.fol.arity gen_var_25 (App inr (App Goedel.fol.Relations gen_var_25) (App Goedel.fol.Functions gen_var_25) gen_var_29))) (App Term gen_var_25))) (LetIn gen_var_31 (App equal gen_var_25) (Prod Anonymous (App Term gen_var_25) (Prod Anonymous (App Term gen_var_25) (App Formula gen_var_25))) (LetIn gen_var_34 (App atomic gen_var_25) (Prod gen_var_35 (App Goedel.fol.Relations gen_var_25) (Prod Anonymous (App Terms gen_var_25 (App Goedel.fol.arity gen_var_25 (App inl (App Goedel.fol.Relations gen_var_25) (App Goedel.fol.Functions gen_var_25) gen_var_35))) (App Formula gen_var_25))) (LetIn gen_var_37 (App impH gen_var_25) (Prod Anonymous (App Formula gen_var_25) (Prod Anonymous (App Formula gen_var_25) (App Formula gen_var_25))) (LetIn gen_var_40 (App notH gen_var_25) (Prod Anonymous (App Formula gen_var_25) (App Formula gen_var_25)) (LetIn gen_var_42 (App forallH gen_var_25) (Prod Anonymous nat (Prod Anonymous (App Formula gen_var_25) (App Formula gen_var_25))) (LetIn gen_var_45 (App Goedel.fol.lt_depth gen_var_25) (Prod gen_var_46 (App Formula gen_var_25) (Prod gen_var_47 (App Formula gen_var_25) (Sort Prop))) (Lambda gen_var_48 (App Formula gen_var_25) (Lambda gen_var_49 nat (Lambda gen_var_50 (App Term gen_var_25) (App Coq.Init.Specif.proj1_sig (App Formula gen_var_25) (Lambda gen_var_51 (App Formula gen_var_25) (App eq nat (App Goedel.fol.depth gen_var_25 gen_var_51) (App Goedel.fol.depth gen_var_25 gen_var_48))) (App Goedel.folProp.substituteFormulaHelp gen_var_25 gen_var_48 gen_var_49 gen_var_50))))))))))))))) (Definition Goedel.LNN.natToTerm (Fix (Functions (App gen_var_52 0 (Prod gen_var_53 nat Goedel.LNN.Term) (Lambda gen_var_55 nat (Case 0 (Lambda gen_var_55 nat Goedel.LNN.Term) (CaseMatch gen_var_55) (CaseBranches Goedel.LNN.Zero (Lambda gen_var_56 nat (App Goedel.LNN.Succ (App gen_var_52 gen_var_56)))))))) 0)) (Definition Goedel.goedel1.codeFormula (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation)) (Definition Goedel.LNN.notH (App notH Goedel.Languages.LNN)) (Definition Goedel.wConsistent.wConsistent (Lambda gen_var_61 Goedel.LNN.System (Prod gen_var_62 Goedel.LNN.Formula (Prod gen_var_63 nat (Prod Anonymous (Prod gen_var_65 nat (Prod Anonymous (App Coq.Lists.List.In nat gen_var_65 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_62)) (App eq nat gen_var_63 gen_var_65))) (Prod Anonymous (App Goedel.LNN.SysPrf gen_var_61 (App Goedel.LNN.existH gen_var_63 (App Goedel.LNN.notH gen_var_62))) (App ex nat (Lambda gen_var_68 nat (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_61 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN gen_var_62 gen_var_63 (App Goedel.LNN.natToTerm gen_var_68)))))))))))) (Definition Goedel.goedel1.G (Lambda gen_var_71 Goedel.LNN.Formula (Lambda gen_var_72 nat (Case 2 (Lambda gen_var_73 (App sig Goedel.LNN.Formula (Lambda gen_var_74 Goedel.LNN.Formula (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_74 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_71 gen_var_72)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_74))))) (Prod gen_var_75 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_75 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_74)) (App Coq.Lists.List.In nat gen_var_75 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_71 gen_var_72)))))))))) Goedel.LNN.Formula) (CaseMatch (App Goedel.fixPoint.FixPointLNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_71 gen_var_72)) O)) (CaseBranches (Lambda gen_var_76 Goedel.LNN.Formula (Lambda Anonymous (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_76 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_71 gen_var_72)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_76))))) (Prod gen_var_78 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_78 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_76)) (App Coq.Lists.List.In nat gen_var_78 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_71 gen_var_72)))))))) gen_var_76))))))) (Definition Goedel.goedel1.freeVarG (Lambda gen_var_80 Goedel.LNN.Formula (Lambda gen_var_81 nat (Lambda gen_var_82 (Prod gen_var_83 nat (Prod Anonymous (App Coq.Lists.List.In nat gen_var_83 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_80)) (App eq nat gen_var_83 gen_var_81))) (Cast (LetIn gen_var_92 (App Goedel.fixPoint.FixPointLNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_80 gen_var_81)) O) (App sig Goedel.LNN.Formula (Lambda gen_var_86 Goedel.LNN.Formula (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_86 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_80 gen_var_81)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_86))))) (Prod gen_var_87 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_87 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_86)) (App Coq.Lists.List.In nat gen_var_87 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_80 gen_var_81)))))))))) (Case 2 (Lambda gen_var_92 (App sig Goedel.LNN.Formula (Lambda gen_var_89 Goedel.LNN.Formula (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_89 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_80 gen_var_81)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_89))))) (Prod gen_var_90 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_90 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_89)) (App Coq.Lists.List.In nat gen_var_90 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_80 gen_var_81)))))))))) (Prod gen_var_91 nat (App Coq.Init.Logic.not (App Coq.Lists.List.In nat gen_var_91 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (Case 2 (Lambda gen_var_92 (App sig Goedel.LNN.Formula (Lambda gen_var_93 Goedel.LNN.Formula (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_93 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_80 gen_var_81)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_93))))) (Prod gen_var_94 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_94 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_93)) (App Coq.Lists.List.In nat gen_var_94 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_80 gen_var_81)))))))))) Goedel.LNN.Formula) (CaseMatch gen_var_92) (CaseBranches (Lambda gen_var_95 Goedel.LNN.Formula (Lambda Anonymous (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_95 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_80 gen_var_81)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_95))))) (Prod gen_var_97 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_97 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_95)) (App Coq.Lists.List.In nat gen_var_97 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_80 gen_var_81)))))))) gen_var_95))))))))) (CaseMatch gen_var_92) (CaseBranches (Lambda gen_var_106 Goedel.LNN.Formula (Lambda gen_var_99 (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_98 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_80 gen_var_81)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_98))))) (Prod gen_var_100 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_100 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_100)) (App Coq.Lists.List.In nat gen_var_100 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_80 gen_var_81)))))))) (Case 2 (Lambda Anonymous (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_100 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_80 gen_var_81)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_100))))) (Prod gen_var_102 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_102 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_102)) (App Coq.Lists.List.In nat gen_var_102 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_80 gen_var_81)))))))) (Prod gen_var_103 nat (App Coq.Init.Logic.not (App Coq.Lists.List.In nat gen_var_103 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_102))))) (CaseMatch gen_var_99) (CaseBranches (Lambda gen_var_104 (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_102 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_80 gen_var_81)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_102))))) (Lambda gen_var_105 (Prod gen_var_106 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_106 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_106)) (App Coq.Lists.List.In nat gen_var_106 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_80 gen_var_81))))))) (Cast (Lambda gen_var_107 nat (Lambda gen_var_108 (App Coq.Lists.List.In nat gen_var_107 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_106)) (LetIn gen_var_109 (App gen_var_105 gen_var_107) (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_107 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_106)) (App Coq.Lists.List.In nat gen_var_107 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_80 gen_var_81)))))) (App Coq.Init.Logic.and_ind (Prod Anonymous (App Coq.Lists.List.In nat gen_var_107 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_106)) (App Coq.Lists.List.In nat gen_var_107 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_80 gen_var_81)))))) (Prod Anonymous (App Coq.Lists.List.In nat gen_var_107 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_80 gen_var_81))))) (App Coq.Lists.List.In nat gen_var_107 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_106))) False (Lambda gen_var_112 (Prod Anonymous (App Coq.Lists.List.In nat gen_var_107 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_106)) (App Coq.Lists.List.In nat gen_var_107 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_80 gen_var_81)))))) (Lambda gen_var_114 (Prod Anonymous (App Coq.Lists.List.In nat gen_var_107 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_80 gen_var_81))))) (App Coq.Lists.List.In nat gen_var_107 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_106))) (App Coq.Init.Logic.False_ind False (App Goedel.ListExt.In_list_remove2 nat Coq.Arith.PeanoNat.Nat.eq_dec gen_var_107 O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_80 gen_var_81))) (App gen_var_112 gen_var_108) (App Goedel.codeSysPrf.freeVarCodeSysPf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR Goedel.Languages.codeArityLNTFIsPR Goedel.Languages.codeArityLNNRIsPR gen_var_80 gen_var_81 gen_var_82 gen_var_107 (LetIn gen_var_118 (Lambda gen_var_117 Goedel.LNN.Formula (Lambda gen_var_118 (App Coq.Lists.List.In nat gen_var_107 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH gen_var_117))) gen_var_118)) (Prod gen_var_119 Goedel.LNN.Formula (Prod Anonymous (App Coq.Lists.List.In nat gen_var_107 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH gen_var_119))) (App Coq.Lists.List.In nat gen_var_107 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_119)))) (App gen_var_118 (App Goedel.codeSysPrf.codeSysPf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR Goedel.Languages.codeArityLNTFIsPR Goedel.Languages.codeArityLNNRIsPR gen_var_80 gen_var_81) (App Goedel.ListExt.In_list_remove1 nat Coq.Arith.PeanoNat.Nat.eq_dec gen_var_107 O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.codeSysPrf.codeSysPf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR Goedel.Languages.codeArityLNTFIsPR Goedel.Languages.codeArityLNNRIsPR gen_var_80 gen_var_81))) (App gen_var_112 gen_var_108))))))))) gen_var_109)))) REVERTcast (Prod gen_var_121 nat (App Coq.Init.Logic.not (App Coq.Lists.List.In nat gen_var_121 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_106)))))))))))))) REVERTcast (Prod gen_var_122 nat (App Coq.Init.Logic.not (App Coq.Lists.List.In nat gen_var_122 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.G gen_var_80 gen_var_81)))))))))) (Definition Goedel.goedel1.FirstIncompletenessA (Lambda gen_var_125 Goedel.LNN.System (Lambda gen_var_126 (App Coq.Sets.Ensembles.Included (App Formula Goedel.Languages.LNN) Goedel.NN.NN gen_var_125) (Lambda gen_var_127 Goedel.LNN.Formula (Lambda gen_var_128 nat (Lambda gen_var_129 (Prod gen_var_130 nat (Prod Anonymous (App Coq.Lists.List.In nat gen_var_130 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_127)) (App eq nat gen_var_130 gen_var_128))) (Lambda gen_var_132 (Prod gen_var_133 Goedel.LNN.Formula (Prod Anonymous (App Goedel.fol.mem (App Formula Goedel.Languages.LNN) gen_var_125 gen_var_133) (App Goedel.LNN.SysPrf gen_var_125 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN gen_var_127 gen_var_128 (App Goedel.LNN.natToTerm (App Goedel.goedel1.codeFormula gen_var_133)))))) (Lambda gen_var_158 (App Goedel.LNN.SysPrf gen_var_125 (App Goedel.goedel1.G gen_var_127 gen_var_128)) (LetIn gen_var_143 (App Goedel.fixPoint.FixPointLNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128)) O) (App sig Goedel.LNN.Formula (Lambda gen_var_137 Goedel.LNN.Formula (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_137 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_137))))) (Prod gen_var_138 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_138 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_137)) (App Coq.Lists.List.In nat gen_var_138 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128)))))))))) (App (Case 2 (Lambda gen_var_143 (App sig Goedel.LNN.Formula (Lambda gen_var_140 Goedel.LNN.Formula (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_140 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_140))))) (Prod gen_var_141 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_141 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_140)) (App Coq.Lists.List.In nat gen_var_141 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128)))))))))) (Prod gen_var_142 (App Goedel.LNN.SysPrf gen_var_125 (Case 2 (Lambda gen_var_143 (App sig Goedel.LNN.Formula (Lambda gen_var_144 Goedel.LNN.Formula (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_144 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_144))))) (Prod gen_var_145 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_145 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_144)) (App Coq.Lists.List.In nat gen_var_145 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128)))))))))) Goedel.LNN.Formula) (CaseMatch gen_var_143) (CaseBranches (Lambda gen_var_146 Goedel.LNN.Formula (Lambda Anonymous (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_146 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_146))))) (Prod gen_var_148 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_148 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_146)) (App Coq.Lists.List.In nat gen_var_148 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128)))))))) gen_var_146))))) (App Goedel.folProof.Inconsistent Goedel.Languages.LNN gen_var_125))) (CaseMatch gen_var_143) (CaseBranches (Lambda gen_var_157 Goedel.LNN.Formula (Lambda gen_var_150 (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_149 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_149))))) (Prod gen_var_151 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_151 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_151)) (App Coq.Lists.List.In nat gen_var_151 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128)))))))) (Case 2 (Lambda Anonymous (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_151 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_151))))) (Prod gen_var_153 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_153 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_153)) (App Coq.Lists.List.In nat gen_var_153 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128)))))))) (Prod gen_var_154 (App Goedel.LNN.SysPrf gen_var_125 gen_var_153) (App Goedel.folProof.Inconsistent Goedel.Languages.LNN gen_var_125))) (CaseMatch gen_var_150) (CaseBranches (Lambda gen_var_155 (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_153 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_153))))) (Lambda gen_var_156 (Prod gen_var_157 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_157 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_157)) (App Coq.Lists.List.In nat gen_var_157 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128))))))) (Lambda gen_var_158 (App Goedel.LNN.SysPrf gen_var_125 gen_var_157) (Cast (Lambda gen_var_160 (App Formula Goedel.Languages.LNN) (App Goedel.LNN.contradiction gen_var_125 gen_var_157 gen_var_159 gen_var_158 (App Goedel.LNN.impE gen_var_125 (App Goedel.LNN.notH gen_var_157) (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_157)))) (App Goedel.LNN.cp2 gen_var_125 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_157))) gen_var_157 (App Goedel.LNN.iffE1 gen_var_125 gen_var_157 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_157))) (App Goedel.LNN.sysExtend Goedel.NN.NN gen_var_125 (App Goedel.LNN.iffH gen_var_157 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_157)))) gen_var_126 gen_var_155))) (App Coq.Init.Logic.eq_ind_r (App Formula Goedel.Languages.LNN) (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_157)))) (Lambda gen_var_160 (App Formula Goedel.Languages.LNN) (App Goedel.LNN.SysPrf gen_var_125 (App Goedel.LNN.notH gen_var_160))) (App Goedel.LNN.nnI gen_var_125 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_157))) (App Goedel.goedel1.codeSysPfCorrect gen_var_125 gen_var_126 gen_var_127 gen_var_128 gen_var_129 gen_var_132 gen_var_157 gen_var_158)) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App notH Goedel.Languages.LNN (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_157))) (App Goedel.folProp.subFormulaNot Goedel.Languages.LNN (App Goedel.goedel1.codeSysPf gen_var_127 gen_var_128) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_157))))))) REVERTcast (App Goedel.folProof.Inconsistent Goedel.Languages.LNN gen_var_125))))))))))) gen_var_158)))))))))) (Definition Goedel.folProof.Inconsistent (Lambda gen_var_162 Language (LetIn gen_var_163 (App gen_var_163 gen_var_162) (Sort Set) (LetIn gen_var_164 (App Goedel.fol.Formulas gen_var_162) (Sort Set) (LetIn gen_var_165 (App Goedel.fol.System gen_var_162) (Sort Type) (LetIn gen_var_166 (App gen_var_166 gen_var_162) (Sort Set) (LetIn gen_var_167 (App gen_var_167 gen_var_162) (Prod Anonymous nat (Sort Set)) (LetIn gen_var_169 (App var gen_var_162) (Prod Anonymous nat (App gen_var_166 gen_var_162)) (LetIn gen_var_171 (App apply gen_var_162) (Prod gen_var_172 (App Goedel.fol.Functions gen_var_162) (Prod Anonymous (App gen_var_167 gen_var_162 (App Goedel.fol.arity gen_var_162 (App inr (App Goedel.fol.Relations gen_var_162) (App Goedel.fol.Functions gen_var_162) gen_var_172))) (App gen_var_166 gen_var_162))) (LetIn gen_var_174 (App equal gen_var_162) (Prod Anonymous (App gen_var_166 gen_var_162) (Prod Anonymous (App gen_var_166 gen_var_162) (App gen_var_163 gen_var_162))) (LetIn gen_var_177 (App atomic gen_var_162) (Prod gen_var_178 (App Goedel.fol.Relations gen_var_162) (Prod Anonymous (App gen_var_167 gen_var_162 (App Goedel.fol.arity gen_var_162 (App inl (App Goedel.fol.Relations gen_var_162) (App Goedel.fol.Functions gen_var_162) gen_var_178))) (App gen_var_163 gen_var_162))) (LetIn gen_var_180 (App impH gen_var_162) (Prod Anonymous (App gen_var_163 gen_var_162) (Prod Anonymous (App gen_var_163 gen_var_162) (App gen_var_163 gen_var_162))) (LetIn gen_var_183 (App notH gen_var_162) (Prod Anonymous (App gen_var_163 gen_var_162) (App gen_var_163 gen_var_162)) (LetIn gen_var_185 (App Goedel.fol.iffH gen_var_162) (Prod gen_var_186 (App gen_var_163 gen_var_162) (Prod gen_var_187 (App gen_var_163 gen_var_162) (App gen_var_163 gen_var_162))) (LetIn gen_var_188 (App forallH gen_var_162) (Prod Anonymous nat (Prod Anonymous (App gen_var_163 gen_var_162) (App gen_var_163 gen_var_162))) (Lambda gen_var_191 gen_var_165 (Prod gen_var_192 gen_var_163 (App Goedel.folProof.SysPrf gen_var_162 gen_var_191 gen_var_192)))))))))))))))))) (Definition Goedel.goedel1.FirstIncompletenessB (Lambda gen_var_194 Goedel.LNN.System (Lambda gen_var_195 (App Coq.Sets.Ensembles.Included (App gen_var_163 Goedel.Languages.LNN) Goedel.NN.NN gen_var_194) (Lambda gen_var_196 Goedel.LNN.Formula (Lambda gen_var_197 nat (Lambda gen_var_198 (Prod gen_var_199 nat (Prod Anonymous (App Coq.Lists.List.In nat gen_var_199 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_196)) (App eq nat gen_var_199 gen_var_197))) (Lambda gen_var_201 (Prod gen_var_202 Goedel.LNN.Formula (Prod Anonymous (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_202)) (App Goedel.LNN.SysPrf gen_var_194 (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN gen_var_196 gen_var_197 (App Goedel.LNN.natToTerm (App Goedel.goedel1.codeFormula gen_var_202))))))) (Lambda gen_var_204 (App Goedel.wConsistent.wConsistent gen_var_194) (LetIn gen_var_205 (Lambda gen_var_206 (Prod gen_var_207 Goedel.LNN.Formula (App Goedel.LNN.SysPrf gen_var_194 gen_var_207)) (LetIn gen_var_208 (App Goedel.wConsistent.wCon2Con gen_var_194 gen_var_204) (App Goedel.folProof.Consistent Goedel.Languages.LNN gen_var_194) (App Coq.Init.Logic.ex_ind (App gen_var_163 Goedel.Languages.LNN) (Lambda gen_var_209 (App gen_var_163 Goedel.Languages.LNN) (App Coq.Init.Logic.not (App Goedel.folProof.SysPrf Goedel.Languages.LNN gen_var_194 gen_var_209))) False (Lambda gen_var_210 (App gen_var_163 Goedel.Languages.LNN) (Lambda gen_var_211 (App Coq.Init.Logic.not (App Goedel.folProof.SysPrf Goedel.Languages.LNN gen_var_194 gen_var_210)) (App gen_var_211 (App gen_var_206 gen_var_210)))) gen_var_208))) (Prod Anonymous (Prod gen_var_213 Goedel.LNN.Formula (App Goedel.LNN.SysPrf gen_var_194 gen_var_213)) False) (Cast (LetIn gen_var_318 (App Goedel.fixPoint.FixPointLNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_196 gen_var_197)) O) (App sig Goedel.LNN.Formula (Lambda gen_var_215 Goedel.LNN.Formula (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_215 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_215))))) (Prod gen_var_216 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_216 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_215)) (App Coq.Lists.List.In nat gen_var_216 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_196 gen_var_197)))))))))) (Case 2 (Lambda gen_var_220 (App sig Goedel.LNN.Formula (Lambda gen_var_218 Goedel.LNN.Formula (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_218 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_218))))) (Prod gen_var_219 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_219 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_218)) (App Coq.Lists.List.In nat gen_var_219 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_196 gen_var_197)))))))))) (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_194 (App Goedel.LNN.notH (Case 2 (Lambda gen_var_220 (App sig Goedel.LNN.Formula (Lambda gen_var_221 Goedel.LNN.Formula (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_221 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_221))))) (Prod gen_var_222 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_222 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_221)) (App Coq.Lists.List.In nat gen_var_222 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_196 gen_var_197)))))))))) Goedel.LNN.Formula) (CaseMatch gen_var_220) (CaseBranches (Lambda gen_var_223 Goedel.LNN.Formula (Lambda Anonymous (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_223 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_223))))) (Prod gen_var_225 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_225 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_223)) (App Coq.Lists.List.In nat gen_var_225 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_196 gen_var_197)))))))) gen_var_223)))))))) (CaseMatch gen_var_220) (CaseBranches (Lambda gen_var_294 Goedel.LNN.Formula (Lambda gen_var_414 (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_226 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_226))))) (Prod gen_var_228 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_228 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_228)) (App Coq.Lists.List.In nat gen_var_228 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_196 gen_var_197)))))))) (Case 2 (Lambda Anonymous (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_228 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_228))))) (Prod gen_var_230 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_230 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_230)) (App Coq.Lists.List.In nat gen_var_230 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_196 gen_var_197)))))))) (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_194 (App Goedel.LNN.notH gen_var_230)))) (CaseMatch gen_var_227) (CaseBranches (Lambda gen_var_231 (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_230 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_230))))) (Lambda gen_var_232 (Prod gen_var_233 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_233 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_233)) (App Coq.Lists.List.In nat gen_var_233 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_196 gen_var_197))))))) (Cast (Lambda gen_var_234 (App Goedel.LNN.SysPrf gen_var_194 (App Goedel.LNN.notH gen_var_233)) (LetIn gen_var_235 (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_233) nat (LetIn gen_var_236 (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App gen_var_163 Goedel.Languages.LNN) (LetIn gen_var_262 (Lambda gen_var_238 nat (Lambda gen_var_262 (App Coq.Lists.List.In nat gen_var_238 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_236)) (LetIn gen_var_263 gen_var_239 (App Coq.Lists.List.In nat gen_var_238 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (LetIn gen_var_241 (App Goedel.subProp.freeVarSubFormula3 Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235) gen_var_238 gen_var_240) (App or (App Coq.Lists.List.In nat gen_var_238 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)))) (App Coq.Lists.List.In nat gen_var_238 (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (App Coq.Init.Logic.or_ind (App Coq.Lists.List.In nat gen_var_238 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)))) (App Coq.Lists.List.In nat gen_var_238 (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App eq nat (App S O) gen_var_238) (Lambda gen_var_264 (App Coq.Lists.List.In nat gen_var_238 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)))) (App (Case 0 (Lambda gen_var_243 nat (Prod gen_var_244 (App Coq.Lists.List.In nat gen_var_243 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))) (Prod gen_var_245 (App Coq.Lists.List.In nat gen_var_243 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (Prod gen_var_246 (App Coq.Lists.List.In nat gen_var_243 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)))) (App eq nat (App S O) gen_var_243))))) (CaseMatch gen_var_238) (CaseBranches (Lambda gen_var_247 (App Coq.Lists.List.In nat O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))) (Lambda gen_var_248 (App Coq.Lists.List.In nat O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (Lambda gen_var_249 (App Coq.Lists.List.In nat O (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)))) (App Coq.Init.Logic.False_ind (App eq nat (App S O) O) (App Goedel.ListExt.In_list_remove2 nat Coq.Arith.PeanoNat.Nat.eq_dec O O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)) gen_var_249 (App eq_refl nat O)))))) (Lambda gen_var_261 nat (Lambda gen_var_262 (App Coq.Lists.List.In nat (App S gen_var_250) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))) (Lambda gen_var_263 (App Coq.Lists.List.In nat (App S gen_var_250) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (Lambda gen_var_264 (App Coq.Lists.List.In nat (App S gen_var_250) (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)))) (App (Case 0 (Lambda gen_var_254 nat (Prod gen_var_255 (App Coq.Lists.List.In nat (App S gen_var_254) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))) (Prod gen_var_256 (App Coq.Lists.List.In nat (App S gen_var_254) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (Prod gen_var_257 (App Coq.Lists.List.In nat (App S gen_var_254) (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)))) (App eq nat (App S O) (App S gen_var_254)))))) (CaseMatch gen_var_254) (CaseBranches (Lambda gen_var_258 (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))) (Lambda gen_var_259 (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (Lambda gen_var_260 (App Coq.Lists.List.In nat (App S O) (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)))) (App eq_refl nat (App S O))))) (Lambda gen_var_261 nat (Lambda gen_var_262 (App Coq.Lists.List.In nat (App S (App S gen_var_261)) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))) (Lambda gen_var_263 (App Coq.Lists.List.In nat (App S (App S gen_var_261)) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (Lambda gen_var_264 (App Coq.Lists.List.In nat (App S (App S gen_var_261)) (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)))) (App Coq.Init.Logic.False_ind (App eq nat (App S O) (App S (App S gen_var_261))) (App Coq.Arith.Lt.le_not_lt (App S (App S gen_var_261)) (App S O) (LetIn gen_var_265 (App Goedel.ListExt.In_list_remove1 nat Coq.Arith.PeanoNat.Nat.eq_dec (App S (App S gen_var_261)) O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)) gen_var_264) (App Coq.Lists.List.In nat (App S (App S gen_var_261)) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197))) (App Goedel.codeSysPrf.freeVarCodeSysPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR Goedel.Languages.codeArityLNTFIsPR Goedel.Languages.codeArityLNNRIsPR gen_var_196 gen_var_197 gen_var_198 (App S (App S gen_var_261)) gen_var_265)) (App Coq.Arith.Lt.lt_n_S O (App S gen_var_261) (App Coq.Arith.PeanoNat.Nat.lt_0_succ gen_var_261)))))))))) gen_var_262 gen_var_263 gen_var_264))))))) gen_var_262 gen_var_263 gen_var_264)) (Lambda gen_var_266 (App Coq.Lists.List.In nat gen_var_238 (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App Coq.Init.Logic.False_ind (App eq nat (App S O) gen_var_238) (App Goedel.LNN.closedNatToTerm gen_var_235 gen_var_238 gen_var_266))) gen_var_241))))) (Prod gen_var_267 nat (Prod Anonymous (App Coq.Lists.List.In nat gen_var_267 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_236)) (App eq nat (App S O) gen_var_267))) (LetIn gen_var_330 (App gen_var_204 gen_var_236 (App S O) gen_var_262 (App Goedel.LNN.impE gen_var_194 (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH gen_var_236)) (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (Cast (Cast (App Coq.Init.Logic.eq_ind_r (App gen_var_163 Goedel.Languages.LNN) (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (Lambda gen_var_270 (App gen_var_163 Goedel.Languages.LNN) (App Goedel.LNN.SysPrf gen_var_194 (App Goedel.LNN.impH (App Goedel.LNN.notH gen_var_270) (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))))))) (App Goedel.LNN.impTrans gen_var_194 (App Goedel.LNN.notH (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))) (App Goedel.LNN.impI gen_var_194 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App Goedel.LNN.notH (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (App Goedel.LNN.nnE (App Coq.Sets.Ensembles.Add (App gen_var_163 Goedel.Languages.LNN) gen_var_194 (App Goedel.LNN.notH (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App Goedel.LNN.Axm (App Coq.Sets.Ensembles.Add (App gen_var_163 Goedel.Languages.LNN) gen_var_194 (App Goedel.LNN.notH (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (App Union_intror (App gen_var_163 Goedel.Languages.LNN) gen_var_194 (App Singleton (App gen_var_163 Goedel.Languages.LNN) (App Goedel.LNN.notH (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (App In_singleton (App gen_var_163 Goedel.Languages.LNN) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))))))) (App Goedel.LNN.sysExtend Goedel.NN.NN gen_var_194 (App Goedel.LNN.impH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))))) gen_var_195 (App Goedel.LNN.impI Goedel.NN.NN (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App Coq.Init.Logic.eq_ind_r (App gen_var_163 Goedel.Languages.LNN) (Case 2 (Lambda gen_var_271 (App sumbool (App eq nat (App S O) O) (App Coq.Init.Logic.not (App eq nat (App S O) O))) (App gen_var_163 Goedel.Languages.LNN)) (CaseMatch (App Coq.Arith.PeanoNat.Nat.eq_dec (App S O) O)) (CaseBranches (Lambda gen_var_272 (App eq nat (App S O) O) (App Goedel.fol.existH Goedel.Languages.LNN (App S O) (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197))) (Lambda gen_var_276 (App Coq.Init.Logic.not (App eq nat (App S O) O)) (Case 2 (Lambda gen_var_274 (App sumbool (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App Coq.Init.Logic.not (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))) (App gen_var_163 Goedel.Languages.LNN)) (CaseMatch (App Coq.Lists.List.in_dec nat Coq.Arith.PeanoNat.Nat.eq_dec (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (CaseBranches (Lambda gen_var_275 (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App Goedel.fol.existH Goedel.Languages.LNN (App Goedel.folProp.newVar (App cons nat O (App Coq.Init.Datatypes.app nat (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197))))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) (App S O) (App var Goedel.Languages.LNN (App Goedel.folProp.newVar (App cons nat O (App Coq.Init.Datatypes.app nat (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197))))))) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (Lambda gen_var_276 (App Coq.Init.Logic.not (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (App Goedel.fol.existH Goedel.Languages.LNN (App S O) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))))))) (Lambda gen_var_277 (App gen_var_163 Goedel.Languages.LNN) (App Goedel.LNN.SysPrf (App Coq.Sets.Ensembles.Add (App gen_var_163 Goedel.Languages.LNN) Goedel.NN.NN gen_var_277) (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))))) (LetIn gen_var_305 (App Coq.Arith.PeanoNat.Nat.eq_dec (App S O) O) (App sumbool (App eq nat (App S O) O) (App Coq.Init.Logic.not (App eq nat (App S O) O))) (App Coq.Init.Specif.sumbool_ind (App eq nat (App S O) O) (App Coq.Init.Logic.not (App eq nat (App S O) O)) (Lambda gen_var_279 (App sumbool (App eq nat (App S O) O) (App Coq.Init.Logic.not (App eq nat (App S O) O))) (App Goedel.LNN.SysPrf (App Coq.Sets.Ensembles.Add (App gen_var_163 Goedel.Languages.LNN) Goedel.NN.NN (Case 2 (Lambda gen_var_280 (App sumbool (App eq nat (App S O) O) (App Coq.Init.Logic.not (App eq nat (App S O) O))) (App gen_var_163 Goedel.Languages.LNN)) (CaseMatch gen_var_279) (CaseBranches (Lambda gen_var_281 (App eq nat (App S O) O) (App Goedel.fol.existH Goedel.Languages.LNN (App S O) (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197))) (Lambda gen_var_285 (App Coq.Init.Logic.not (App eq nat (App S O) O)) (Case 2 (Lambda gen_var_283 (App sumbool (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App Coq.Init.Logic.not (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))) (App gen_var_163 Goedel.Languages.LNN)) (CaseMatch (App Coq.Lists.List.in_dec nat Coq.Arith.PeanoNat.Nat.eq_dec (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (CaseBranches (Lambda gen_var_284 (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App Goedel.fol.existH Goedel.Languages.LNN (App Goedel.folProp.newVar (App cons nat O (App Coq.Init.Datatypes.app nat (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197))))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) (App S O) (App var Goedel.Languages.LNN (App Goedel.folProp.newVar (App cons nat O (App Coq.Init.Datatypes.app nat (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197))))))) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (Lambda gen_var_285 (App Coq.Init.Logic.not (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (App Goedel.fol.existH Goedel.Languages.LNN (App S O) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))))))))) (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))))) (Lambda gen_var_286 (App eq nat (App S O) O) (LetIn gen_var_287 (App Coq.Init.Logic.eq_ind nat (App S O) (Lambda gen_var_288 nat (Case 0 (Lambda gen_var_289 nat (Sort Prop)) (CaseMatch gen_var_288) (CaseBranches False (Lambda Anonymous nat True)))) I O gen_var_286) False (App Coq.Init.Logic.False_ind (App Goedel.LNN.SysPrf (App Coq.Sets.Ensembles.Add (App gen_var_163 Goedel.Languages.LNN) Goedel.NN.NN (App Goedel.fol.existH Goedel.Languages.LNN (App S O) (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197))) (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))))) gen_var_287))) (Lambda gen_var_291 (App Coq.Init.Logic.not (App eq nat (App S O) O)) (LetIn gen_var_305 (App Coq.Lists.List.in_dec nat Coq.Arith.PeanoNat.Nat.eq_dec (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App sumbool (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App Coq.Init.Logic.not (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))) (App Coq.Init.Specif.sumbool_ind (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App Coq.Init.Logic.not (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (Lambda gen_var_293 (App sumbool (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App Coq.Init.Logic.not (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))) (App Goedel.LNN.SysPrf (App Coq.Sets.Ensembles.Add (App gen_var_163 Goedel.Languages.LNN) Goedel.NN.NN (Case 2 (Lambda gen_var_294 (App sumbool (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App Coq.Init.Logic.not (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))) (App gen_var_163 Goedel.Languages.LNN)) (CaseMatch gen_var_293) (CaseBranches (Lambda gen_var_295 (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App Goedel.fol.existH Goedel.Languages.LNN (App Goedel.folProp.newVar (App cons nat O (App Coq.Init.Datatypes.app nat (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197))))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) (App S O) (App var Goedel.Languages.LNN (App Goedel.folProp.newVar (App cons nat O (App Coq.Init.Datatypes.app nat (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197))))))) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (Lambda gen_var_296 (App Coq.Init.Logic.not (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (App Goedel.fol.existH Goedel.Languages.LNN (App S O) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))))) (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))))) (Lambda gen_var_297 (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App Coq.Init.Logic.False_ind (App Goedel.LNN.SysPrf (App Coq.Sets.Ensembles.Add (App gen_var_163 Goedel.Languages.LNN) Goedel.NN.NN (App Goedel.fol.existH Goedel.Languages.LNN (App Goedel.folProp.newVar (App cons nat O (App Coq.Init.Datatypes.app nat (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197))))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) (App S O) (App var Goedel.Languages.LNN (App Goedel.folProp.newVar (App cons nat O (App Coq.Init.Datatypes.app nat (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197))))))) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))))) (App Goedel.LNN.closedNatToTerm gen_var_235 (App S O) gen_var_297))) (Lambda gen_var_298 (App Coq.Init.Logic.not (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (App Goedel.LNN.existSys Goedel.NN.NN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))) (App S O) (App Goedel.NN.closedNN (App S O)) (Cast (Lambda gen_var_299 (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))))) (App Coq.Init.Logic.False_ind False (App Goedel.ListExt.In_list_remove2 nat Coq.Arith.PeanoNat.Nat.eq_dec (App S O) (App S O) (App (Fix (Functions (App gen_var_300 0 (Prod gen_var_301 (App gen_var_163 Goedel.Languages.LNN) (App list nat)) (Lambda gen_var_312 (App gen_var_163 Goedel.Languages.LNN) (Case 1 (Lambda gen_var_303 (App gen_var_163 Goedel.Languages.LNN) (App list nat)) (CaseMatch gen_var_303) (CaseBranches (Lambda gen_var_304 (App gen_var_166 Goedel.Languages.LNN) (Lambda gen_var_305 (App gen_var_166 Goedel.Languages.LNN) (App Coq.Init.Datatypes.app nat (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN gen_var_304) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN gen_var_305)))) (Lambda gen_var_306 (App Goedel.fol.Relations Goedel.Languages.LNN) (Lambda gen_var_307 (App gen_var_167 Goedel.Languages.LNN (App Goedel.fol.arity Goedel.Languages.LNN (App inl (App Goedel.fol.Relations Goedel.Languages.LNN) (App Goedel.fol.Functions Goedel.Languages.LNN) gen_var_306))) (App Goedel.folProp.freeVarTerms Goedel.Languages.LNN (App Goedel.fol.arity Goedel.Languages.LNN (App inl (App Goedel.fol.Relations Goedel.Languages.LNN) (App Goedel.fol.Functions Goedel.Languages.LNN) gen_var_306)) gen_var_307))) (Lambda gen_var_308 (App gen_var_163 Goedel.Languages.LNN) (Lambda gen_var_309 (App gen_var_163 Goedel.Languages.LNN) (App Coq.Init.Datatypes.app nat (App gen_var_300 gen_var_308) (App gen_var_300 gen_var_309)))) (Lambda gen_var_310 (App gen_var_163 Goedel.Languages.LNN) (App gen_var_300 gen_var_310)) (Lambda gen_var_311 nat (Lambda gen_var_312 (App gen_var_163 Goedel.Languages.LNN) (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec gen_var_311 (App gen_var_300 gen_var_312))))))))) 0) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) gen_var_299 (App eq_refl nat (App S O))))) REVERTcast (App Coq.Init.Logic.not (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))))))) (App Goedel.LNN.existSimp (App Coq.Sets.Ensembles.Add (App gen_var_163 Goedel.Languages.LNN) Goedel.NN.NN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))) (App S O) (App Goedel.LNN.nnI (App Coq.Sets.Ensembles.Add (App gen_var_163 Goedel.Languages.LNN) Goedel.NN.NN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App Goedel.LNN.Axm (App Coq.Sets.Ensembles.Add (App gen_var_163 Goedel.Languages.LNN) Goedel.NN.NN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App Union_intror (App gen_var_163 Goedel.Languages.LNN) Goedel.NN.NN (App Singleton (App gen_var_163 Goedel.Languages.LNN) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App In_singleton (App gen_var_163 Goedel.Languages.LNN) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))))))))) gen_var_305))) gen_var_305)) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.fol.existH Goedel.Languages.LNN (App S O) (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App Goedel.folProp.subFormulaExist Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) (App S O) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App notH Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197))) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App Goedel.folProp.subFormulaNot Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) REVERTcast (App Goedel.LNN.SysPrf gen_var_194 (App Goedel.LNN.impH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.LNN.existH (App S O) (App Goedel.codeSysPrf.codeSysPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR Goedel.Languages.codeArityLNTFIsPR Goedel.Languages.codeArityLNNRIsPR gen_var_196 gen_var_197))) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)))))))) REVERTcast (App Goedel.LNN.SysPrf gen_var_194 (App Goedel.LNN.impH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH gen_var_236))))) (App Goedel.LNN.impE gen_var_194 (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App Goedel.LNN.notH gen_var_294) (App Goedel.LNN.cp2 gen_var_194 gen_var_294 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App Goedel.LNN.iffE2 gen_var_194 gen_var_294 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App Goedel.LNN.sysExtend Goedel.NN.NN gen_var_194 (App Goedel.LNN.iffH gen_var_294 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_196 gen_var_197)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) gen_var_195 gen_var_231))) gen_var_234))) (App ex nat (Lambda gen_var_313 nat (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_194 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN gen_var_236 (App S O) (App Goedel.LNN.natToTerm gen_var_313)))))) (App Coq.Init.Logic.ex_ind nat (Lambda gen_var_314 nat (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_194 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN gen_var_236 (App S O) (App Goedel.LNN.natToTerm gen_var_314))))) False (Lambda gen_var_398 nat (Lambda gen_var_316 (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_194 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN gen_var_236 (App S O) (App Goedel.LNN.natToTerm gen_var_315)))) (LetIn gen_var_318 (App Coq.Arith.PeanoNat.Nat.eq_dec (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_294) gen_var_315) O) (App sumbool (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_294) gen_var_315) O) (App Coq.Init.Logic.not (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_294) gen_var_315) O))) (App Coq.Init.Specif.sumbool_ind (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_294) gen_var_315) O) (App Coq.Init.Logic.not (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_294) gen_var_315) O)) (Lambda gen_var_318 (App sumbool (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_294) gen_var_315) O) (App Coq.Init.Logic.not (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_294) gen_var_315) O))) False) (Lambda gen_var_327 (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_294) gen_var_315) O) (App gen_var_316 (App Coq.Init.Logic.eq_ind_r (App gen_var_163 Goedel.Languages.LNN) (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App S O) (App Goedel.LNN.natToTerm gen_var_315))) (Lambda gen_var_320 (App gen_var_163 Goedel.Languages.LNN) (App Goedel.LNN.SysPrf gen_var_194 gen_var_320)) (Cast (App Goedel.goedel1.codeSysPrfCorrect3 gen_var_194 gen_var_195 gen_var_196 gen_var_197 gen_var_294 gen_var_315 (Cast (Lambda gen_var_321 (App list (App gen_var_163 Goedel.Languages.LNN)) (Lambda gen_var_322 (App Prf Goedel.Languages.LNN gen_var_321 gen_var_294) (Lambda gen_var_323 (App eq nat gen_var_315 (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_321 gen_var_294 gen_var_322)) (LetIn gen_var_325 (App Goedel.checkPrf.checkPrfCorrect1 Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR Goedel.Languages.codeArityLNTFIsCorrect1 Goedel.Languages.codeArityLNNRIsCorrect1 gen_var_321 gen_var_294 gen_var_322) (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_294) (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_321 gen_var_294 gen_var_322)) (App S (App Goedel.cPair.codeList (App Coq.Lists.List.map (App gen_var_163 Goedel.Languages.LNN) nat Goedel.goedel1.codeFormula gen_var_321)))) (LetIn gen_var_325 (App Coq.Init.Logic.eq_ind_r nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_321 gen_var_294 gen_var_322) (Lambda gen_var_326 nat (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_294) gen_var_326) (App S (App Goedel.cPair.codeList (App Coq.Lists.List.map (App gen_var_163 Goedel.Languages.LNN) nat Goedel.goedel1.codeFormula gen_var_321))))) gen_var_325 gen_var_315 gen_var_323) (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_294) gen_var_315) (App S (App Goedel.cPair.codeList (App Coq.Lists.List.map (App gen_var_163 Goedel.Languages.LNN) nat Goedel.goedel1.codeFormula gen_var_321)))) (LetIn gen_var_327 (App Coq.Init.Logic.eq_ind nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_294) gen_var_315) (Lambda gen_var_328 nat (App eq nat gen_var_328 O)) gen_var_327 (App S (App Goedel.cPair.codeList (App Coq.Lists.List.map (App gen_var_163 Goedel.Languages.LNN) nat Goedel.goedel1.codeFormula gen_var_321))) gen_var_325) (App eq nat (App S (App Goedel.cPair.codeList (App Coq.Lists.List.map (App gen_var_163 Goedel.Languages.LNN) nat Goedel.goedel1.codeFormula gen_var_321))) O) (LetIn gen_var_329 (App Coq.Init.Logic.eq_ind nat (App S (App Goedel.cPair.codeList (App Coq.Lists.List.map (App gen_var_163 Goedel.Languages.LNN) nat Goedel.goedel1.codeFormula gen_var_321))) (Lambda gen_var_330 nat (Case 0 (Lambda gen_var_331 nat (Sort Prop)) (CaseMatch gen_var_330) (CaseBranches False (Lambda Anonymous nat True)))) I O gen_var_327) False (App Coq.Init.Logic.False_ind False gen_var_329)))))))) REVERTcast (Prod gen_var_333 (App list (App gen_var_163 Goedel.Languages.LNN)) (Prod gen_var_334 (App Prf Goedel.Languages.LNN gen_var_333 gen_var_294) (App Coq.Init.Logic.not (App eq nat gen_var_315 (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_333 gen_var_294 gen_var_334))))))) REVERTcast (App Goedel.LNN.SysPrf gen_var_194 (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App S O) (App Goedel.LNN.natToTerm gen_var_315))))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App S O) (App Goedel.LNN.natToTerm gen_var_315)) (App Goedel.folProp.subFormulaNot Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App S O) (App Goedel.LNN.natToTerm gen_var_315))))) (Lambda gen_var_335 (App Coq.Init.Logic.not (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_294) gen_var_315) O)) (LetIn gen_var_336 gen_var_335 (App Coq.Init.Logic.not (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_294) gen_var_315) O)) (LetIn gen_var_422 (App Goedel.checkPrf.checkPrfCorrect2 Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR Goedel.Languages.codeArityLNTFIsCorrect1 Goedel.Languages.codeArityLNTFIsCorrect2 Goedel.Languages.codeArityLNNRIsCorrect1 Goedel.Languages.codeArityLNNRIsCorrect2 Goedel.Languages.codeLNTFunctionInj Goedel.Languages.codeLNNRelationInj (App Goedel.goedel1.codeFormula gen_var_294) gen_var_315 gen_var_336) (App ex (App gen_var_163 Goedel.Languages.LNN) (Lambda gen_var_338 (App gen_var_163 Goedel.Languages.LNN) (App and (App eq nat (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_338) (App Goedel.goedel1.codeFormula gen_var_294)) (App ex (App list (App gen_var_163 Goedel.Languages.LNN)) (Lambda gen_var_339 (App list (App gen_var_163 Goedel.Languages.LNN)) (App ex (App Prf Goedel.Languages.LNN gen_var_339 gen_var_338) (Lambda gen_var_340 (App Prf Goedel.Languages.LNN gen_var_339 gen_var_338) (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_339 gen_var_338 gen_var_340) gen_var_315)))))))) (App (Lambda gen_var_341 (App ex (App gen_var_163 Goedel.Languages.LNN) (Lambda gen_var_342 (App gen_var_163 Goedel.Languages.LNN) (App and (App eq nat (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_342) (App Goedel.goedel1.codeFormula gen_var_294)) (App ex (App list (App gen_var_163 Goedel.Languages.LNN)) (Lambda gen_var_343 (App list (App gen_var_163 Goedel.Languages.LNN)) (App ex (App Prf Goedel.Languages.LNN gen_var_343 gen_var_342) (Lambda gen_var_344 (App Prf Goedel.Languages.LNN gen_var_343 gen_var_342) (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_343 gen_var_342 gen_var_344) gen_var_315)))))))) (App Coq.Init.Logic.ex_ind (App gen_var_163 Goedel.Languages.LNN) (Lambda gen_var_345 (App gen_var_163 Goedel.Languages.LNN) (App and (App eq nat (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_345) (App Goedel.goedel1.codeFormula gen_var_294)) (App ex (App list (App gen_var_163 Goedel.Languages.LNN)) (Lambda gen_var_346 (App list (App gen_var_163 Goedel.Languages.LNN)) (App ex (App Prf Goedel.Languages.LNN gen_var_346 gen_var_345) (Lambda gen_var_347 (App Prf Goedel.Languages.LNN gen_var_346 gen_var_345) (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_346 gen_var_345 gen_var_347) gen_var_315))))))) False (Lambda gen_var_434 (App gen_var_163 Goedel.Languages.LNN) (Lambda gen_var_422 (App and (App eq nat (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_348) (App Goedel.goedel1.codeFormula gen_var_294)) (App ex (App list (App gen_var_163 Goedel.Languages.LNN)) (Lambda gen_var_350 (App list (App gen_var_163 Goedel.Languages.LNN)) (App ex (App Prf Goedel.Languages.LNN gen_var_350 gen_var_348) (Lambda gen_var_351 (App Prf Goedel.Languages.LNN gen_var_350 gen_var_348) (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_350 gen_var_348 gen_var_351) gen_var_315)))))) (App Coq.Init.Logic.and_ind (App eq nat (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_348) (App Goedel.goedel1.codeFormula gen_var_294)) (App ex (App list (App gen_var_163 Goedel.Languages.LNN)) (Lambda gen_var_352 (App list (App gen_var_163 Goedel.Languages.LNN)) (App ex (App Prf Goedel.Languages.LNN gen_var_352 gen_var_348) (Lambda gen_var_353 (App Prf Goedel.Languages.LNN gen_var_352 gen_var_348) (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_352 gen_var_348 gen_var_353) gen_var_315))))) False (Lambda gen_var_425 (App eq nat (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_348) (App Goedel.goedel1.codeFormula gen_var_294)) (Lambda gen_var_442 (App ex (App list (App gen_var_163 Goedel.Languages.LNN)) (Lambda gen_var_356 (App list (App gen_var_163 Goedel.Languages.LNN)) (App ex (App Prf Goedel.Languages.LNN gen_var_356 gen_var_348) (Lambda gen_var_357 (App Prf Goedel.Languages.LNN gen_var_356 gen_var_348) (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_356 gen_var_348 gen_var_357) gen_var_315))))) (App Coq.Init.Logic.ex_ind (App list (App gen_var_163 Goedel.Languages.LNN)) (Lambda gen_var_358 (App list (App gen_var_163 Goedel.Languages.LNN)) (App ex (App Prf Goedel.Languages.LNN gen_var_358 gen_var_348) (Lambda gen_var_359 (App Prf Goedel.Languages.LNN gen_var_358 gen_var_348) (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_358 gen_var_348 gen_var_359) gen_var_315)))) False (Lambda gen_var_415 (App list (App gen_var_163 Goedel.Languages.LNN)) (Lambda gen_var_422 (App ex (App Prf Goedel.Languages.LNN gen_var_360 gen_var_348) (Lambda gen_var_362 (App Prf Goedel.Languages.LNN gen_var_360 gen_var_348) (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_360 gen_var_348 gen_var_362) gen_var_315))) (App Coq.Init.Logic.ex_ind (App Prf Goedel.Languages.LNN gen_var_360 gen_var_348) (Lambda gen_var_363 (App Prf Goedel.Languages.LNN gen_var_360 gen_var_348) (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_360 gen_var_348 gen_var_363) gen_var_315)) False (Lambda gen_var_369 (App Prf Goedel.Languages.LNN gen_var_360 gen_var_348) (Lambda gen_var_442 (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_360 gen_var_348 gen_var_364) gen_var_315) (LetIn gen_var_422 (App Goedel.code.codeFormulaInj Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeLNTFunctionInj Goedel.Languages.codeLNNRelationInj gen_var_348 gen_var_294 gen_var_354) (App eq (App gen_var_163 Goedel.Languages.LNN) gen_var_348 gen_var_294) (LetIn gen_var_454 gen_var_365 (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_360 gen_var_348 gen_var_364) gen_var_315) (App Coq.Init.Logic.eq_ind_r (App gen_var_163 Goedel.Languages.LNN) gen_var_294 (Lambda gen_var_368 (App gen_var_163 Goedel.Languages.LNN) (Prod gen_var_369 (App Prf Goedel.Languages.LNN gen_var_360 gen_var_368) (Prod Anonymous (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_360 gen_var_368 gen_var_369) gen_var_315) False))) (Lambda gen_var_371 (App Prf Goedel.Languages.LNN gen_var_360 gen_var_294) (Lambda gen_var_454 (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_360 gen_var_294 gen_var_371) gen_var_315) (LetIn gen_var_422 (Cast (Lambda gen_var_374 (Prod gen_var_375 (App gen_var_163 Goedel.Languages.LNN) (Prod Anonymous (App Coq.Lists.List.In (App gen_var_163 Goedel.Languages.LNN) gen_var_375 gen_var_360) (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_375))) (LetIn gen_var_386 (Cast (App ex_intro (App Goedel.fol.Formulas Goedel.Languages.LNN) (Lambda gen_var_378 (App Goedel.fol.Formulas Goedel.Languages.LNN) (App ex (App Prf Goedel.Languages.LNN gen_var_378 gen_var_294) (Lambda gen_var_379 (App Prf Goedel.Languages.LNN gen_var_378 gen_var_294) (Prod gen_var_380 (App gen_var_163 Goedel.Languages.LNN) (Prod Anonymous (App Coq.Lists.List.In (App gen_var_163 Goedel.Languages.LNN) gen_var_380 gen_var_378) (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_380)))))) gen_var_360 (App ex_intro (App Prf Goedel.Languages.LNN gen_var_360 gen_var_294) (Lambda gen_var_382 (App Prf Goedel.Languages.LNN gen_var_360 gen_var_294) (Prod gen_var_383 (App gen_var_163 Goedel.Languages.LNN) (Prod Anonymous (App Coq.Lists.List.In (App gen_var_163 Goedel.Languages.LNN) gen_var_383 gen_var_360) (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_383)))) gen_var_371 (Lambda gen_var_385 (App gen_var_163 Goedel.Languages.LNN) (Lambda gen_var_386 (App Coq.Lists.List.In (App gen_var_163 Goedel.Languages.LNN) gen_var_385 gen_var_360) (App gen_var_374 gen_var_385 gen_var_386))))) REVERTcast (App Goedel.LNN.SysPrf gen_var_194 gen_var_294)) (App Goedel.LNN.SysPrf gen_var_194 gen_var_294) (App gen_var_205 (Cast (Lambda gen_var_387 Goedel.LNN.Formula (App Goedel.LNN.contradiction gen_var_194 gen_var_294 gen_var_387 gen_var_386 gen_var_234)) REVERTcast (Prod gen_var_388 Goedel.LNN.Formula (App Goedel.LNN.SysPrf gen_var_194 gen_var_388)))))) REVERTcast (App Coq.Init.Logic.not (Prod gen_var_389 (App gen_var_163 Goedel.Languages.LNN) (Prod Anonymous (App Coq.Lists.List.In (App gen_var_163 Goedel.Languages.LNN) gen_var_389 gen_var_360) (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_389))))) (App Coq.Init.Logic.not (Prod gen_var_391 (App gen_var_163 Goedel.Languages.LNN) (Prod Anonymous (App Coq.Lists.List.In (App gen_var_163 Goedel.Languages.LNN) gen_var_391 gen_var_360) (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_391)))) (LetIn gen_var_425 (Cast (Lambda gen_var_394 (App ex Goedel.LNN.Formula (Lambda gen_var_395 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_395 gen_var_360) (Prod Anonymous (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_395) False)))) (App gen_var_316 (App Coq.Init.Logic.eq_ind_r (App gen_var_163 Goedel.Languages.LNN) (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App S O) (App Goedel.LNN.natToTerm gen_var_315))) (Lambda gen_var_397 (App gen_var_163 Goedel.Languages.LNN) (App Goedel.LNN.SysPrf gen_var_194 gen_var_397)) (Cast (App Coq.Init.Logic.eq_ind nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_360 gen_var_294 gen_var_371) (Lambda gen_var_398 nat (App Goedel.LNN.SysPrf gen_var_194 (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.codeSysPrf.codeSysPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR Goedel.Languages.codeArityLNTFIsPR Goedel.Languages.codeArityLNNRIsPR gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_294))) (App S O) (App Goedel.LNN.natToTerm gen_var_398))))) (App Goedel.goedel1.codeSysPrfCorrect2 gen_var_194 gen_var_195 gen_var_196 gen_var_197 gen_var_198 gen_var_201 gen_var_294 gen_var_360 gen_var_394 gen_var_371) gen_var_398 gen_var_372) REVERTcast (App Goedel.LNN.SysPrf gen_var_194 (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App S O) (App Goedel.LNN.natToTerm gen_var_398))))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235))) (App S O) (App Goedel.LNN.natToTerm gen_var_398)) (App Goedel.folProp.subFormulaNot Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_196 gen_var_197) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_235)) (App S O) (App Goedel.LNN.natToTerm gen_var_398))))) REVERTcast (App Coq.Init.Logic.not (App ex Goedel.LNN.Formula (Lambda gen_var_399 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_399 gen_var_360) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_399))))))) (App Coq.Init.Logic.not (App ex Goedel.LNN.Formula (Lambda gen_var_400 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_400 gen_var_360) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_400)))))) (App Coq.Init.Datatypes.list_ind (App gen_var_163 Goedel.Languages.LNN) (Lambda gen_var_401 (App list (App gen_var_163 Goedel.Languages.LNN)) (Prod gen_var_402 (App Coq.Init.Logic.not (Prod gen_var_403 (App gen_var_163 Goedel.Languages.LNN) (Prod Anonymous (App Coq.Lists.List.In (App gen_var_163 Goedel.Languages.LNN) gen_var_403 gen_var_401) (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_403)))) (Prod gen_var_405 (App Coq.Init.Logic.not (App ex Goedel.LNN.Formula (Lambda gen_var_406 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_406 gen_var_401) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_406)))))) False))) (Lambda gen_var_407 (App Coq.Init.Logic.not (Prod gen_var_408 (App gen_var_163 Goedel.Languages.LNN) (Prod Anonymous (App Coq.Lists.List.In (App gen_var_163 Goedel.Languages.LNN) gen_var_408 (App nil (App gen_var_163 Goedel.Languages.LNN))) (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_408)))) (Lambda gen_var_410 (App Coq.Init.Logic.not (App ex Goedel.LNN.Formula (Lambda gen_var_411 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_411 (App nil (App gen_var_163 Goedel.Languages.LNN))) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_411)))))) (App gen_var_407 (Lambda gen_var_412 (App gen_var_163 Goedel.Languages.LNN) (Lambda gen_var_413 (App Coq.Lists.List.In (App gen_var_163 Goedel.Languages.LNN) gen_var_412 (App nil (App gen_var_163 Goedel.Languages.LNN))) (App Coq.Init.Logic.False_ind (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_412) gen_var_413)))))) (Lambda gen_var_414 (App gen_var_163 Goedel.Languages.LNN) (Lambda gen_var_415 (App list (App gen_var_163 Goedel.Languages.LNN)) (Lambda gen_var_416 (Prod gen_var_417 (App Coq.Init.Logic.not (Prod gen_var_418 (App gen_var_163 Goedel.Languages.LNN) (Prod Anonymous (App Coq.Lists.List.In (App gen_var_163 Goedel.Languages.LNN) gen_var_418 gen_var_415) (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_418)))) (Prod gen_var_420 (App Coq.Init.Logic.not (App ex Goedel.LNN.Formula (Lambda gen_var_421 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_421 gen_var_415) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_421)))))) False)) (Lambda gen_var_422 (App Coq.Init.Logic.not (Prod gen_var_423 (App gen_var_163 Goedel.Languages.LNN) (Prod Anonymous (App Coq.Lists.List.In (App gen_var_163 Goedel.Languages.LNN) gen_var_423 (App cons (App gen_var_163 Goedel.Languages.LNN) gen_var_414 gen_var_415)) (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_423)))) (Lambda gen_var_425 (App Coq.Init.Logic.not (App ex Goedel.LNN.Formula (Lambda gen_var_426 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_426 (App cons (App gen_var_163 Goedel.Languages.LNN) gen_var_414 gen_var_415)) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_426)))))) (LetIn gen_var_442 (Cast (Lambda gen_var_442 (App ex Goedel.LNN.Formula (Lambda gen_var_429 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_429 gen_var_415) (Prod Anonymous (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_429) False)))) (App gen_var_425 (App Coq.Init.Logic.ex_ind Goedel.LNN.Formula (Lambda gen_var_431 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_431 gen_var_415) (Prod Anonymous (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_431) False))) (App ex Goedel.LNN.Formula (Lambda gen_var_433 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_433 (App cons (App gen_var_163 Goedel.Languages.LNN) gen_var_414 gen_var_415)) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_433))))) (Lambda gen_var_434 Goedel.LNN.Formula (Lambda gen_var_442 (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_434 gen_var_415) (Prod Anonymous (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_434) False)) (App ex_intro Goedel.LNN.Formula (Lambda gen_var_437 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_437 (App cons (App gen_var_163 Goedel.Languages.LNN) gen_var_414 gen_var_415)) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_437)))) gen_var_434 (Cast (App Coq.Init.Logic.and_ind (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_434 gen_var_415) (Prod Anonymous (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_434) False) (App and (App or (App eq Goedel.LNN.Formula gen_var_414 gen_var_434) (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_434 gen_var_415)) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_434))) (Lambda gen_var_439 (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_434 gen_var_415) (Lambda gen_var_440 (Prod Anonymous (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_434) False) (App conj (App or (App eq Goedel.LNN.Formula gen_var_414 gen_var_434) (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_434 gen_var_415)) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_434)) (App or_intror (App eq Goedel.LNN.Formula gen_var_414 gen_var_434) (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_434 gen_var_415) gen_var_439) (Cast (Lambda gen_var_442 (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_434) (LetIn gen_var_443 (App gen_var_440 gen_var_442) False (App Coq.Init.Logic.False_ind False gen_var_443))) REVERTcast (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_434)))))) gen_var_442) REVERTcast (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_434 (App cons (App gen_var_163 Goedel.Languages.LNN) gen_var_414 gen_var_415)) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_434))))))) gen_var_442))) REVERTcast (App Coq.Init.Logic.not (App ex Goedel.LNN.Formula (Lambda gen_var_444 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_444 gen_var_415) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_444))))))) (App Coq.Init.Logic.not (App ex Goedel.LNN.Formula (Lambda gen_var_445 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_445 gen_var_415) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_445)))))) (LetIn gen_var_454 (Cast (Lambda gen_var_454 (App Coq.Init.Logic.not (App or (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414)))) (LetIn gen_var_449 (Lambda gen_var_449 (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414) (App gen_var_447 (App or_introl (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414)) gen_var_449))) (Prod Anonymous (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414) False) (LetIn gen_var_452 (Lambda gen_var_452 (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414)) (App gen_var_447 (App or_intror (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414)) gen_var_452))) (Prod Anonymous (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414)) False) (LetIn gen_var_454 (App gen_var_452 gen_var_449) False (App Coq.Init.Logic.False_ind False gen_var_454))))) REVERTcast (App Coq.Init.Logic.not (App Coq.Init.Logic.not (App or (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414)))))) (App Coq.Init.Logic.not (App Coq.Init.Logic.not (App or (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414))))) (App gen_var_454 (Cast (Lambda gen_var_469 (App or (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414) (Prod Anonymous (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414) False)) (App Coq.Init.Logic.or_ind (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414) (Prod Anonymous (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414) False) False (Lambda gen_var_458 (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414) (App gen_var_416 (Cast (Lambda gen_var_459 (Prod gen_var_460 (App gen_var_163 Goedel.Languages.LNN) (Prod Anonymous (App Coq.Lists.List.In (App gen_var_163 Goedel.Languages.LNN) gen_var_460 gen_var_415) (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_460))) (App gen_var_422 (Lambda gen_var_465 (App gen_var_163 Goedel.Languages.LNN) (Lambda gen_var_466 (App Coq.Lists.List.In (App gen_var_163 Goedel.Languages.LNN) gen_var_462 (App cons (App gen_var_163 Goedel.Languages.LNN) gen_var_414 gen_var_415)) (App Coq.Init.Logic.or_ind (App eq (App gen_var_163 Goedel.Languages.LNN) gen_var_414 gen_var_462) (App Coq.Lists.List.In (App gen_var_163 Goedel.Languages.LNN) gen_var_462 gen_var_415) (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_462) (Lambda gen_var_464 (App eq (App gen_var_163 Goedel.Languages.LNN) gen_var_414 gen_var_462) (App Coq.Init.Logic.eq_ind (App gen_var_163 Goedel.Languages.LNN) gen_var_414 (Lambda gen_var_465 (App gen_var_163 Goedel.Languages.LNN) (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_465)) gen_var_458 gen_var_465 gen_var_464)) (Lambda gen_var_466 (App Coq.Lists.List.In (App gen_var_163 Goedel.Languages.LNN) gen_var_465 gen_var_415) (App gen_var_459 gen_var_465 gen_var_466)) gen_var_466))))) REVERTcast (App Coq.Init.Logic.not (Prod gen_var_467 (App gen_var_163 Goedel.Languages.LNN) (Prod Anonymous (App Coq.Lists.List.In (App gen_var_163 Goedel.Languages.LNN) gen_var_467 gen_var_415) (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_467))))) gen_var_442)) (Lambda gen_var_469 (Prod Anonymous (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414) False) (App gen_var_425 (App ex_intro Goedel.LNN.Formula (Lambda gen_var_471 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_471 (App cons (App gen_var_163 Goedel.Languages.LNN) gen_var_414 gen_var_415)) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_471)))) gen_var_414 (Cast (App conj (App or (App eq Goedel.LNN.Formula gen_var_414 gen_var_414) (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_414 gen_var_415)) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414)) (App or_introl (App eq Goedel.LNN.Formula gen_var_414 gen_var_414) (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_414 gen_var_415) (App eq_refl Goedel.LNN.Formula gen_var_414)) gen_var_469) REVERTcast (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_414 (App cons (App gen_var_163 Goedel.Languages.LNN) gen_var_414 gen_var_415)) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414))))))) gen_var_469)) REVERTcast (App Coq.Init.Logic.not (App or (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_163 Goedel.Languages.LNN) gen_var_194 gen_var_414))))))))))))) gen_var_415 gen_var_422 gen_var_425))))) gen_var_434 gen_var_422 gen_var_369 gen_var_454))))) gen_var_422))) gen_var_442))) gen_var_422))) gen_var_341)) gen_var_422)))) gen_var_318)))) gen_var_330)))))) REVERTcast (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_194 (App Goedel.LNN.notH gen_var_294))))))))))))) REVERTcast (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_194 (App Goedel.LNN.notH (App Goedel.goedel1.G gen_var_196 gen_var_197)))))))))))))) (Definition Goedel.wConsistent.wCon2Con (Lambda gen_var_476 Goedel.LNN.System (Lambda gen_var_477 (App Goedel.wConsistent.wConsistent gen_var_476) (Cast (LetIn gen_var_478 (App Goedel.LNN.existSimp gen_var_476 (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.LNN.equal (App Goedel.LNN.var O) (App Goedel.LNN.var O)))) O (App Goedel.LNN.nnI gen_var_476 (App Goedel.LNN.equal (App Goedel.LNN.var O) (App Goedel.LNN.var O)) (App Goedel.LNN.eqRefl gen_var_476 (App Goedel.LNN.var O)))) (App Goedel.LNN.SysPrf gen_var_476 (App Goedel.LNN.existH O (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.LNN.equal (App Goedel.LNN.var O) (App Goedel.LNN.var O)))))) (LetIn gen_var_487 (Lambda gen_var_486 nat (Lambda gen_var_487 (App Coq.Lists.List.In nat gen_var_480 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.LNN.equal (App Goedel.LNN.var O) (App Goedel.LNN.var O))))) (App Coq.Init.Logic.or_ind (App eq nat O gen_var_480) (App or (App eq nat O gen_var_480) False) (App eq nat O gen_var_480) (Lambda gen_var_482 (App eq nat O gen_var_480) (App Coq.Init.Logic.eq_ind nat O (Lambda gen_var_483 nat (App eq nat O gen_var_483)) (App eq_refl nat O) gen_var_483 gen_var_482)) (Lambda gen_var_487 (App or (App eq nat O gen_var_483) False) (App Coq.Init.Logic.or_ind (App eq nat O gen_var_483) False (App eq nat O gen_var_483) (Lambda gen_var_485 (App eq nat O gen_var_483) (App Coq.Init.Logic.eq_ind nat O (Lambda gen_var_486 nat (App eq nat O gen_var_486)) (App eq_refl nat O) gen_var_486 gen_var_485)) (Lambda gen_var_487 False (App Coq.Init.Logic.False_ind (App eq nat O gen_var_486) gen_var_487)) gen_var_487)) gen_var_487))) (Prod gen_var_488 nat (Prod Anonymous (App Coq.Lists.List.In nat gen_var_488 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.LNN.equal (App Goedel.LNN.var O) (App Goedel.LNN.var O))))) (App eq nat O gen_var_488))) (LetIn gen_var_490 (App gen_var_477 (App Goedel.LNN.notH (App Goedel.LNN.equal (App Goedel.LNN.var O) (App Goedel.LNN.var O))) O gen_var_487 gen_var_478) (App ex nat (Lambda gen_var_491 nat (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_476 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.LNN.equal (App Goedel.LNN.var O) (App Goedel.LNN.var O))) O (App Goedel.LNN.natToTerm gen_var_491)))))) (App Coq.Init.Logic.ex_ind nat (Lambda gen_var_492 nat (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_476 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.LNN.equal (App Goedel.LNN.var O) (App Goedel.LNN.var O))) O (App Goedel.LNN.natToTerm gen_var_492))))) (App ex (App gen_var_163 Goedel.Languages.LNN) (Lambda gen_var_493 (App gen_var_163 Goedel.Languages.LNN) (App Coq.Init.Logic.not (App Goedel.folProof.SysPrf Goedel.Languages.LNN gen_var_476 gen_var_493)))) (Lambda gen_var_494 nat (Lambda gen_var_495 (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_476 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.LNN.equal (App Goedel.LNN.var O) (App Goedel.LNN.var O))) O (App Goedel.LNN.natToTerm gen_var_494)))) (App ex_intro (App gen_var_163 Goedel.Languages.LNN) (Lambda gen_var_496 (App gen_var_163 Goedel.Languages.LNN) (App Coq.Init.Logic.not (App Goedel.folProof.SysPrf Goedel.Languages.LNN gen_var_476 gen_var_496))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.LNN.equal (App Goedel.LNN.var O) (App Goedel.LNN.var O))) O (App Goedel.LNN.natToTerm gen_var_494)) gen_var_495))) gen_var_490)))) REVERTcast (App Goedel.folProof.Consistent Goedel.Languages.LNN gen_var_476))))) (Definition Goedel.folProof.Consistent (Lambda gen_var_497 Language (LetIn gen_var_498 (App gen_var_498 gen_var_497) (Sort Set) (LetIn gen_var_499 (App Goedel.fol.Formulas gen_var_497) (Sort Set) (LetIn gen_var_500 (App Goedel.fol.System gen_var_497) (Sort Type) (LetIn gen_var_501 (App gen_var_501 gen_var_497) (Sort Set) (LetIn gen_var_502 (App gen_var_502 gen_var_497) (Prod Anonymous nat (Sort Set)) (LetIn gen_var_504 (App var gen_var_497) (Prod Anonymous nat (App gen_var_501 gen_var_497)) (LetIn gen_var_506 (App apply gen_var_497) (Prod gen_var_507 (App Goedel.fol.Functions gen_var_497) (Prod Anonymous (App gen_var_502 gen_var_497 (App Goedel.fol.arity gen_var_497 (App inr (App Goedel.fol.Relations gen_var_497) (App Goedel.fol.Functions gen_var_497) gen_var_507))) (App gen_var_501 gen_var_497))) (LetIn gen_var_509 (App equal gen_var_497) (Prod Anonymous (App gen_var_501 gen_var_497) (Prod Anonymous (App gen_var_501 gen_var_497) (App gen_var_498 gen_var_497))) (LetIn gen_var_512 (App atomic gen_var_497) (Prod gen_var_513 (App Goedel.fol.Relations gen_var_497) (Prod Anonymous (App gen_var_502 gen_var_497 (App Goedel.fol.arity gen_var_497 (App inl (App Goedel.fol.Relations gen_var_497) (App Goedel.fol.Functions gen_var_497) gen_var_513))) (App gen_var_498 gen_var_497))) (LetIn gen_var_515 (App impH gen_var_497) (Prod Anonymous (App gen_var_498 gen_var_497) (Prod Anonymous (App gen_var_498 gen_var_497) (App gen_var_498 gen_var_497))) (LetIn gen_var_518 (App notH gen_var_497) (Prod Anonymous (App gen_var_498 gen_var_497) (App gen_var_498 gen_var_497)) (LetIn gen_var_520 (App Goedel.fol.iffH gen_var_497) (Prod gen_var_521 (App gen_var_498 gen_var_497) (Prod gen_var_522 (App gen_var_498 gen_var_497) (App gen_var_498 gen_var_497))) (LetIn gen_var_523 (App forallH gen_var_497) (Prod Anonymous nat (Prod Anonymous (App gen_var_498 gen_var_497) (App gen_var_498 gen_var_497))) (Lambda gen_var_526 gen_var_500 (App ex gen_var_498 (Lambda gen_var_527 gen_var_498 (App Coq.Init.Logic.not (App Goedel.folProof.SysPrf gen_var_497 gen_var_526 gen_var_527)))))))))))))))))))) (Definition Goedel.folProof.SysPrf (Lambda gen_var_530 Language (LetIn gen_var_531 (App gen_var_531 gen_var_530) (Sort Set) (LetIn gen_var_532 (App Goedel.fol.Formulas gen_var_530) (Sort Set) (LetIn gen_var_533 (App Goedel.fol.System gen_var_530) (Sort Type) (LetIn gen_var_534 (App gen_var_534 gen_var_530) (Sort Set) (LetIn gen_var_535 (App gen_var_535 gen_var_530) (Prod Anonymous nat (Sort Set)) (LetIn gen_var_537 (App var gen_var_530) (Prod Anonymous nat (App gen_var_534 gen_var_530)) (LetIn gen_var_539 (App apply gen_var_530) (Prod gen_var_540 (App Goedel.fol.Functions gen_var_530) (Prod Anonymous (App gen_var_535 gen_var_530 (App Goedel.fol.arity gen_var_530 (App inr (App Goedel.fol.Relations gen_var_530) (App Goedel.fol.Functions gen_var_530) gen_var_540))) (App gen_var_534 gen_var_530))) (LetIn gen_var_542 (App equal gen_var_530) (Prod Anonymous (App gen_var_534 gen_var_530) (Prod Anonymous (App gen_var_534 gen_var_530) (App gen_var_531 gen_var_530))) (LetIn gen_var_545 (App atomic gen_var_530) (Prod gen_var_546 (App Goedel.fol.Relations gen_var_530) (Prod Anonymous (App gen_var_535 gen_var_530 (App Goedel.fol.arity gen_var_530 (App inl (App Goedel.fol.Relations gen_var_530) (App Goedel.fol.Functions gen_var_530) gen_var_546))) (App gen_var_531 gen_var_530))) (LetIn gen_var_548 (App impH gen_var_530) (Prod Anonymous (App gen_var_531 gen_var_530) (Prod Anonymous (App gen_var_531 gen_var_530) (App gen_var_531 gen_var_530))) (LetIn gen_var_551 (App notH gen_var_530) (Prod Anonymous (App gen_var_531 gen_var_530) (App gen_var_531 gen_var_530)) (LetIn gen_var_553 (App Goedel.fol.iffH gen_var_530) (Prod gen_var_554 (App gen_var_531 gen_var_530) (Prod gen_var_555 (App gen_var_531 gen_var_530) (App gen_var_531 gen_var_530))) (LetIn gen_var_556 (App forallH gen_var_530) (Prod Anonymous nat (Prod Anonymous (App gen_var_531 gen_var_530) (App gen_var_531 gen_var_530))) (Lambda gen_var_559 gen_var_533 (Lambda gen_var_560 gen_var_531 (App ex gen_var_532 (Lambda gen_var_561 gen_var_532 (App ex (App Prf gen_var_530 gen_var_561 gen_var_560) (Lambda gen_var_562 (App Prf gen_var_530 gen_var_561 gen_var_560) (Prod gen_var_563 gen_var_531 (Prod Anonymous (App Coq.Lists.List.In gen_var_531 gen_var_563 gen_var_561) (App Goedel.fol.mem (App gen_var_531 gen_var_530) gen_var_559 gen_var_563)))))))))))))))))))))))) (Definition Goedel.goedel1.Goedel'sIncompleteness1st (Lambda gen_var_559 Goedel.LNN.System (Lambda gen_var_195 (App Coq.Sets.Ensembles.Included (App Formula Goedel.Languages.LNN) Goedel.NN.NN gen_var_1) (Lambda gen_var_196 Goedel.LNN.Formula (Lambda gen_var_197 nat (Lambda gen_var_198 (Prod gen_var_20 nat (Prod Anonymous (App Coq.Lists.List.In nat gen_var_6 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_3)) (App eq nat gen_var_20 gen_var_4))) (Lambda gen_var_132 (Prod gen_var_48 Goedel.LNN.Formula (Prod Anonymous (App Goedel.fol.mem (App Formula Goedel.Languages.LNN) gen_var_1 gen_var_23) (App Goedel.LNN.SysPrf gen_var_1 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN gen_var_3 gen_var_4 (App Goedel.LNN.natToTerm (App Goedel.goedel1.codeFormula gen_var_48)))))) (Lambda gen_var_201 (Prod gen_var_58 Goedel.LNN.Formula (Prod Anonymous (App Coq.Init.Logic.not (App Goedel.fol.mem (App Formula Goedel.Languages.LNN) gen_var_1 gen_var_58)) (App Goedel.LNN.SysPrf gen_var_1 (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN gen_var_3 gen_var_4 (App Goedel.LNN.natToTerm (App Goedel.goedel1.codeFormula gen_var_58))))))) (Lambda gen_var_477 (App Goedel.wConsistent.wConsistent gen_var_61) (App ex_intro Goedel.LNN.Formula (Lambda gen_var_69 Goedel.LNN.Formula (App and (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_61 gen_var_69)) (App and (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_61 (App Goedel.LNN.notH gen_var_69))) (Prod gen_var_70 nat (App Coq.Init.Logic.not (App Coq.Lists.List.In nat gen_var_70 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_69))))))) (App Goedel.goedel1.G gen_var_71 gen_var_72) (LetIn gen_var_492 (App Goedel.goedel1.freeVarG gen_var_80 gen_var_81 gen_var_82) (Prod gen_var_123 nat (App Coq.Init.Logic.not (App Coq.Lists.List.In nat gen_var_123 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.G gen_var_80 gen_var_81))))) (LetIn gen_var_295 (App Goedel.goedel1.FirstIncompletenessA gen_var_125 gen_var_126 gen_var_127 gen_var_128 gen_var_129 gen_var_132) (Prod Anonymous (App Goedel.LNN.SysPrf gen_var_125 (App Goedel.goedel1.G gen_var_127 gen_var_128)) (App Goedel.folProof.Inconsistent Goedel.Languages.LNN gen_var_191)) (LetIn gen_var_193 (App Goedel.goedel1.FirstIncompletenessB gen_var_194 gen_var_195 gen_var_196 gen_var_197 gen_var_198 gen_var_201) (Prod Anonymous (App Goedel.wConsistent.wConsistent gen_var_194) (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_194 (App Goedel.LNN.notH (App Goedel.goedel1.G gen_var_196 gen_var_197))))) (LetIn gen_var_478 (Cast (Lambda gen_var_478 (App Goedel.folProof.Inconsistent Goedel.Languages.LNN gen_var_194) (LetIn gen_var_475 (App Goedel.wConsistent.wCon2Con gen_var_476 gen_var_477) (App Goedel.folProof.Consistent Goedel.Languages.LNN gen_var_526) (Case 2 (Lambda Anonymous (App ex (App gen_var_498 Goedel.Languages.LNN) (Lambda gen_var_560 (App gen_var_498 Goedel.Languages.LNN) (App Coq.Init.Logic.not (App Goedel.folProof.SysPrf Goedel.Languages.LNN gen_var_559 gen_var_560)))) False) (CaseMatch gen_var_475) (CaseBranches (Lambda gen_var_565 (App gen_var_531 Goedel.Languages.LNN) (Lambda gen_var_566 (App Coq.Init.Logic.not (App Goedel.folProof.SysPrf Goedel.Languages.LNN gen_var_559 gen_var_565)) (App gen_var_566 (App gen_var_478 gen_var_565)))))))) REVERTcast (App Coq.Init.Logic.not (App Goedel.folProof.Inconsistent Goedel.Languages.LNN gen_var_559))) (App Coq.Init.Logic.not (App Goedel.folProof.Inconsistent Goedel.Languages.LNN gen_var_559)) (LetIn gen_var_567 (App gen_var_193 gen_var_477) (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_559 (App Goedel.LNN.notH (App Goedel.goedel1.G gen_var_196 gen_var_197)))) (App conj (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_559 (App Goedel.goedel1.G gen_var_196 gen_var_197))) (App and (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_559 (App Goedel.LNN.notH (App Goedel.goedel1.G gen_var_196 gen_var_197)))) (Prod gen_var_568 nat (App Coq.Init.Logic.not (App Coq.Lists.List.In nat gen_var_568 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.G gen_var_196 gen_var_197)))))) (Cast (Lambda gen_var_569 (App Goedel.LNN.SysPrf gen_var_559 (App Goedel.goedel1.G gen_var_196 gen_var_197)) (LetIn gen_var_570 (App gen_var_295 gen_var_569) (App Goedel.folProof.Inconsistent Goedel.Languages.LNN gen_var_559) (LetIn gen_var_571 (App gen_var_478 gen_var_570) False (App Coq.Init.Logic.False_ind False gen_var_571)))) REVERTcast (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_559 (App Goedel.goedel1.G gen_var_196 gen_var_197)))) (App conj (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_559 (App Goedel.LNN.notH (App Goedel.goedel1.G gen_var_196 gen_var_197)))) (Prod gen_var_572 nat (App Coq.Init.Logic.not (App Coq.Lists.List.In nat gen_var_572 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.G gen_var_196 gen_var_197))))) (Cast (Lambda gen_var_573 (App Goedel.LNN.SysPrf gen_var_559 (App Goedel.LNN.notH (App Goedel.goedel1.G gen_var_196 gen_var_197))) (LetIn gen_var_574 (App gen_var_567 gen_var_573) False (App Coq.Init.Logic.False_ind False gen_var_574))) REVERTcast (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_559 (App Goedel.LNN.notH (App Goedel.goedel1.G gen_var_196 gen_var_197))))) gen_var_492))))))))))))))))) 