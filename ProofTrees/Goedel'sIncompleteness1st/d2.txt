(Definition Goedel.LNN.System (App Goedel.fol.System Goedel.Languages.LNN)) (Definition Coq.Sets.Ensembles.Included (Lambda gen_var_3 (Sort Type) (Lambda gen_var_4 (App Coq.Sets.Ensembles.Ensemble gen_var_3) (Lambda gen_var_5 (App Coq.Sets.Ensembles.Ensemble gen_var_3) (Prod gen_var_6 gen_var_3 (Prod Anonymous (App Coq.Sets.Ensembles.In gen_var_3 gen_var_4 gen_var_6) (App Coq.Sets.Ensembles.In gen_var_3 gen_var_5 gen_var_6))))))) (Definition Goedel.Languages.LNN (App language LNNRelation LNTFunction Goedel.Languages.LNNArity)) (Definition Goedel.NN.NN (App Coq.Sets.Ensembles.Add (App Formula Goedel.Languages.LNN) (App Coq.Sets.Ensembles.Add (App Formula Goedel.Languages.LNN) (App Coq.Sets.Ensembles.Add (App Formula Goedel.Languages.LNN) (App Coq.Sets.Ensembles.Add (App Formula Goedel.Languages.LNN) (App Coq.Sets.Ensembles.Add (App Formula Goedel.Languages.LNN) (App Coq.Sets.Ensembles.Add (App Formula Goedel.Languages.LNN) (App Coq.Sets.Ensembles.Add (App Formula Goedel.Languages.LNN) (App Coq.Sets.Ensembles.Add (App Formula Goedel.Languages.LNN) (App Singleton (App Formula Goedel.Languages.LNN) Goedel.NN.NN1) Goedel.NN.NN2) Goedel.NN.NN3) Goedel.NN.NN4) Goedel.NN.NN5) Goedel.NN.NN6) Goedel.NN.NN7) Goedel.NN.NN8) Goedel.NN.NN9)) (Definition Goedel.LNN.Formula (App Formula Goedel.Languages.LNN)) (Definition Coq.Lists.List.In (Lambda gen_var_13 (Sort Type) (Fix (Functions (App gen_var_14 0 (Prod gen_var_15 gen_var_13 (Prod gen_var_16 (App list gen_var_13) (Sort Prop))) (Lambda gen_var_17 gen_var_13 (Lambda gen_var_19 (App list gen_var_13) (Case 1 (Lambda gen_var_19 (App list gen_var_13) (Sort Prop)) (CaseMatch gen_var_19) (CaseBranches False (Lambda gen_var_20 gen_var_13 (Lambda gen_var_21 (App list gen_var_13) (App or (App eq gen_var_13 gen_var_20 gen_var_17) (App gen_var_14 gen_var_17 gen_var_21)))))))))) 0))) (Definition Goedel.folProp.freeVarFormula (Lambda gen_var_22 Language (Fix (Functions (App gen_var_23 0 (Prod gen_var_24 (App Formula gen_var_22) (App list nat)) (Lambda gen_var_35 (App Formula gen_var_22) (Case 1 (Lambda gen_var_26 (App Formula gen_var_22) (App list nat)) (CaseMatch gen_var_26) (CaseBranches (Lambda gen_var_27 (App Term gen_var_22) (Lambda gen_var_28 (App Term gen_var_22) (App Coq.Init.Datatypes.app nat (App Goedel.folProp.freeVarTerm gen_var_22 gen_var_27) (App Goedel.folProp.freeVarTerm gen_var_22 gen_var_28)))) (Lambda gen_var_29 (App Goedel.fol.Relations gen_var_22) (Lambda gen_var_30 (App Terms gen_var_22 (App Goedel.fol.arity gen_var_22 (App inl (App Goedel.fol.Relations gen_var_22) (App Goedel.fol.Functions gen_var_22) gen_var_29))) (App Goedel.folProp.freeVarTerms gen_var_22 (App Goedel.fol.arity gen_var_22 (App inl (App Goedel.fol.Relations gen_var_22) (App Goedel.fol.Functions gen_var_22) gen_var_29)) gen_var_30))) (Lambda gen_var_31 (App Formula gen_var_22) (Lambda gen_var_32 (App Formula gen_var_22) (App Coq.Init.Datatypes.app nat (App gen_var_23 gen_var_31) (App gen_var_23 gen_var_32)))) (Lambda gen_var_33 (App Formula gen_var_22) (App gen_var_23 gen_var_33)) (Lambda gen_var_34 nat (Lambda gen_var_35 (App Formula gen_var_22) (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec gen_var_34 (App gen_var_23 gen_var_35))))))))) 0))) (Definition Goedel.fol.mem Coq.Sets.Ensembles.In) (Definition Goedel.LNN.SysPrf (App Goedel.folProof.SysPrf Goedel.Languages.LNN)) (Definition Goedel.folProp.substituteFormula (Lambda gen_var_39 Language (LetIn gen_var_40 (App var gen_var_39) (Prod Anonymous nat (App Term gen_var_39)) (LetIn gen_var_42 (App apply gen_var_39) (Prod gen_var_43 (App Goedel.fol.Functions gen_var_39) (Prod Anonymous (App Terms gen_var_39 (App Goedel.fol.arity gen_var_39 (App inr (App Goedel.fol.Relations gen_var_39) (App Goedel.fol.Functions gen_var_39) gen_var_43))) (App Term gen_var_39))) (LetIn gen_var_45 (App equal gen_var_39) (Prod Anonymous (App Term gen_var_39) (Prod Anonymous (App Term gen_var_39) (App Formula gen_var_39))) (LetIn gen_var_48 (App atomic gen_var_39) (Prod gen_var_49 (App Goedel.fol.Relations gen_var_39) (Prod Anonymous (App Terms gen_var_39 (App Goedel.fol.arity gen_var_39 (App inl (App Goedel.fol.Relations gen_var_39) (App Goedel.fol.Functions gen_var_39) gen_var_49))) (App Formula gen_var_39))) (LetIn gen_var_51 (App impH gen_var_39) (Prod Anonymous (App Formula gen_var_39) (Prod Anonymous (App Formula gen_var_39) (App Formula gen_var_39))) (LetIn gen_var_54 (App notH gen_var_39) (Prod Anonymous (App Formula gen_var_39) (App Formula gen_var_39)) (LetIn gen_var_56 (App forallH gen_var_39) (Prod Anonymous nat (Prod Anonymous (App Formula gen_var_39) (App Formula gen_var_39))) (LetIn gen_var_59 (App Goedel.fol.lt_depth gen_var_39) (Prod gen_var_60 (App Formula gen_var_39) (Prod gen_var_61 (App Formula gen_var_39) (Sort Prop))) (Lambda gen_var_62 (App Formula gen_var_39) (Lambda gen_var_63 nat (Lambda gen_var_64 (App Term gen_var_39) (App Coq.Init.Specif.proj1_sig (App Formula gen_var_39) (Lambda gen_var_65 (App Formula gen_var_39) (App eq nat (App Goedel.fol.depth gen_var_39 gen_var_65) (App Goedel.fol.depth gen_var_39 gen_var_62))) (App Goedel.folProp.substituteFormulaHelp gen_var_39 gen_var_62 gen_var_63 gen_var_64))))))))))))))) (Definition Goedel.LNN.natToTerm (Fix (Functions (App gen_var_66 0 (Prod gen_var_67 nat Goedel.LNN.Term) (Lambda gen_var_69 nat (Case 0 (Lambda gen_var_69 nat Goedel.LNN.Term) (CaseMatch gen_var_69) (CaseBranches Goedel.LNN.Zero (Lambda gen_var_70 nat (App Goedel.LNN.Succ (App gen_var_66 gen_var_70)))))))) 0)) (Definition Goedel.goedel1.codeFormula (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation)) (Definition Coq.Init.Logic.not (Lambda gen_var_74 (Sort Prop) (Prod Anonymous gen_var_74 False))) (Definition Goedel.LNN.notH (App notH Goedel.Languages.LNN)) (Definition Goedel.wConsistent.wConsistent (Lambda gen_var_77 Goedel.LNN.System (Prod gen_var_78 Goedel.LNN.Formula (Prod gen_var_79 nat (Prod Anonymous (Prod gen_var_81 nat (Prod Anonymous (App Coq.Lists.List.In nat gen_var_81 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_78)) (App eq nat gen_var_79 gen_var_81))) (Prod Anonymous (App Goedel.LNN.SysPrf gen_var_77 (App Goedel.LNN.existH gen_var_79 (App Goedel.LNN.notH gen_var_78))) (App ex nat (Lambda gen_var_84 nat (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_77 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN gen_var_78 gen_var_79 (App Goedel.LNN.natToTerm gen_var_84)))))))))))) (Definition Goedel.goedel1.G (Lambda gen_var_87 Goedel.LNN.Formula (Lambda gen_var_88 nat (Case 2 (Lambda gen_var_89 (App sig Goedel.LNN.Formula (Lambda gen_var_90 Goedel.LNN.Formula (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_90 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_87 gen_var_88)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_90))))) (Prod gen_var_91 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_91 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_90)) (App Coq.Lists.List.In nat gen_var_91 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_87 gen_var_88)))))))))) Goedel.LNN.Formula) (CaseMatch (App Goedel.fixPoint.FixPointLNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_87 gen_var_88)) O)) (CaseBranches (Lambda gen_var_92 Goedel.LNN.Formula (Lambda Anonymous (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_92 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_87 gen_var_88)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_92))))) (Prod gen_var_94 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_94 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_92)) (App Coq.Lists.List.In nat gen_var_94 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_87 gen_var_88)))))))) gen_var_92))))))) (Definition Goedel.goedel1.freeVarG (Lambda gen_var_96 Goedel.LNN.Formula (Lambda gen_var_97 nat (Lambda gen_var_98 (Prod gen_var_99 nat (Prod Anonymous (App Coq.Lists.List.In nat gen_var_99 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_96)) (App eq nat gen_var_99 gen_var_97))) (Cast (LetIn gen_var_108 (App Goedel.fixPoint.FixPointLNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_96 gen_var_97)) O) (App sig Goedel.LNN.Formula (Lambda gen_var_102 Goedel.LNN.Formula (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_102 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_96 gen_var_97)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_102))))) (Prod gen_var_103 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_103 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_102)) (App Coq.Lists.List.In nat gen_var_103 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_96 gen_var_97)))))))))) (Case 2 (Lambda gen_var_108 (App sig Goedel.LNN.Formula (Lambda gen_var_105 Goedel.LNN.Formula (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_105 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_96 gen_var_97)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_105))))) (Prod gen_var_106 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_106 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_105)) (App Coq.Lists.List.In nat gen_var_106 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_96 gen_var_97)))))))))) (Prod gen_var_107 nat (App Coq.Init.Logic.not (App Coq.Lists.List.In nat gen_var_107 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (Case 2 (Lambda gen_var_108 (App sig Goedel.LNN.Formula (Lambda gen_var_109 Goedel.LNN.Formula (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_109 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_96 gen_var_97)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_109))))) (Prod gen_var_110 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_110 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_109)) (App Coq.Lists.List.In nat gen_var_110 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_96 gen_var_97)))))))))) Goedel.LNN.Formula) (CaseMatch gen_var_108) (CaseBranches (Lambda gen_var_111 Goedel.LNN.Formula (Lambda Anonymous (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_111 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_96 gen_var_97)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_111))))) (Prod gen_var_113 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_113 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_111)) (App Coq.Lists.List.In nat gen_var_113 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_96 gen_var_97)))))))) gen_var_111))))))))) (CaseMatch gen_var_108) (CaseBranches (Lambda gen_var_122 Goedel.LNN.Formula (Lambda gen_var_115 (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_114 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_96 gen_var_97)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_114))))) (Prod gen_var_116 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_116 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_116)) (App Coq.Lists.List.In nat gen_var_116 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_96 gen_var_97)))))))) (Case 2 (Lambda Anonymous (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_116 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_96 gen_var_97)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_116))))) (Prod gen_var_118 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_118 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_118)) (App Coq.Lists.List.In nat gen_var_118 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_96 gen_var_97)))))))) (Prod gen_var_119 nat (App Coq.Init.Logic.not (App Coq.Lists.List.In nat gen_var_119 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_118))))) (CaseMatch gen_var_115) (CaseBranches (Lambda gen_var_120 (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_118 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_96 gen_var_97)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_118))))) (Lambda gen_var_121 (Prod gen_var_122 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_122 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_122)) (App Coq.Lists.List.In nat gen_var_122 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_96 gen_var_97))))))) (Cast (Lambda gen_var_123 nat (Lambda gen_var_124 (App Coq.Lists.List.In nat gen_var_123 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_122)) (LetIn gen_var_125 (App gen_var_121 gen_var_123) (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_123 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_122)) (App Coq.Lists.List.In nat gen_var_123 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_96 gen_var_97)))))) (App Coq.Init.Logic.and_ind (Prod Anonymous (App Coq.Lists.List.In nat gen_var_123 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_122)) (App Coq.Lists.List.In nat gen_var_123 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_96 gen_var_97)))))) (Prod Anonymous (App Coq.Lists.List.In nat gen_var_123 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_96 gen_var_97))))) (App Coq.Lists.List.In nat gen_var_123 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_122))) False (Lambda gen_var_128 (Prod Anonymous (App Coq.Lists.List.In nat gen_var_123 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_122)) (App Coq.Lists.List.In nat gen_var_123 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_96 gen_var_97)))))) (Lambda gen_var_130 (Prod Anonymous (App Coq.Lists.List.In nat gen_var_123 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_96 gen_var_97))))) (App Coq.Lists.List.In nat gen_var_123 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_122))) (App Coq.Init.Logic.False_ind False (App Goedel.ListExt.In_list_remove2 nat Coq.Arith.PeanoNat.Nat.eq_dec gen_var_123 O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_96 gen_var_97))) (App gen_var_128 gen_var_124) (App Goedel.codeSysPrf.freeVarCodeSysPf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR Goedel.Languages.codeArityLNTFIsPR Goedel.Languages.codeArityLNNRIsPR gen_var_96 gen_var_97 gen_var_98 gen_var_123 (LetIn gen_var_134 (Lambda gen_var_133 Goedel.LNN.Formula (Lambda gen_var_134 (App Coq.Lists.List.In nat gen_var_123 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH gen_var_133))) gen_var_134)) (Prod gen_var_135 Goedel.LNN.Formula (Prod Anonymous (App Coq.Lists.List.In nat gen_var_123 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH gen_var_135))) (App Coq.Lists.List.In nat gen_var_123 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_135)))) (App gen_var_134 (App Goedel.codeSysPrf.codeSysPf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR Goedel.Languages.codeArityLNTFIsPR Goedel.Languages.codeArityLNNRIsPR gen_var_96 gen_var_97) (App Goedel.ListExt.In_list_remove1 nat Coq.Arith.PeanoNat.Nat.eq_dec gen_var_123 O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.codeSysPrf.codeSysPf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR Goedel.Languages.codeArityLNTFIsPR Goedel.Languages.codeArityLNNRIsPR gen_var_96 gen_var_97))) (App gen_var_128 gen_var_124))))))))) gen_var_125)))) REVERTcast (Prod gen_var_137 nat (App Coq.Init.Logic.not (App Coq.Lists.List.In nat gen_var_137 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_122)))))))))))))) REVERTcast (Prod gen_var_138 nat (App Coq.Init.Logic.not (App Coq.Lists.List.In nat gen_var_138 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.G gen_var_96 gen_var_97)))))))))) (Definition Goedel.goedel1.FirstIncompletenessA (Lambda gen_var_141 Goedel.LNN.System (Lambda gen_var_142 (App Coq.Sets.Ensembles.Included (App Formula Goedel.Languages.LNN) Goedel.NN.NN gen_var_141) (Lambda gen_var_143 Goedel.LNN.Formula (Lambda gen_var_144 nat (Lambda gen_var_145 (Prod gen_var_146 nat (Prod Anonymous (App Coq.Lists.List.In nat gen_var_146 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_143)) (App eq nat gen_var_146 gen_var_144))) (Lambda gen_var_148 (Prod gen_var_149 Goedel.LNN.Formula (Prod Anonymous (App Goedel.fol.mem (App Formula Goedel.Languages.LNN) gen_var_141 gen_var_149) (App Goedel.LNN.SysPrf gen_var_141 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN gen_var_143 gen_var_144 (App Goedel.LNN.natToTerm (App Goedel.goedel1.codeFormula gen_var_149)))))) (Lambda gen_var_174 (App Goedel.LNN.SysPrf gen_var_141 (App Goedel.goedel1.G gen_var_143 gen_var_144)) (LetIn gen_var_159 (App Goedel.fixPoint.FixPointLNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144)) O) (App sig Goedel.LNN.Formula (Lambda gen_var_153 Goedel.LNN.Formula (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_153 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_153))))) (Prod gen_var_154 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_154 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_153)) (App Coq.Lists.List.In nat gen_var_154 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144)))))))))) (App (Case 2 (Lambda gen_var_159 (App sig Goedel.LNN.Formula (Lambda gen_var_156 Goedel.LNN.Formula (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_156 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_156))))) (Prod gen_var_157 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_157 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_156)) (App Coq.Lists.List.In nat gen_var_157 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144)))))))))) (Prod gen_var_158 (App Goedel.LNN.SysPrf gen_var_141 (Case 2 (Lambda gen_var_159 (App sig Goedel.LNN.Formula (Lambda gen_var_160 Goedel.LNN.Formula (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_160 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_160))))) (Prod gen_var_161 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_161 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_160)) (App Coq.Lists.List.In nat gen_var_161 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144)))))))))) Goedel.LNN.Formula) (CaseMatch gen_var_159) (CaseBranches (Lambda gen_var_162 Goedel.LNN.Formula (Lambda Anonymous (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_162 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_162))))) (Prod gen_var_164 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_164 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_162)) (App Coq.Lists.List.In nat gen_var_164 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144)))))))) gen_var_162))))) (App Goedel.folProof.Inconsistent Goedel.Languages.LNN gen_var_141))) (CaseMatch gen_var_159) (CaseBranches (Lambda gen_var_173 Goedel.LNN.Formula (Lambda gen_var_166 (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_165 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_165))))) (Prod gen_var_167 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_167 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_167)) (App Coq.Lists.List.In nat gen_var_167 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144)))))))) (Case 2 (Lambda Anonymous (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_167 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_167))))) (Prod gen_var_169 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_169 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_169)) (App Coq.Lists.List.In nat gen_var_169 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144)))))))) (Prod gen_var_170 (App Goedel.LNN.SysPrf gen_var_141 gen_var_169) (App Goedel.folProof.Inconsistent Goedel.Languages.LNN gen_var_141))) (CaseMatch gen_var_166) (CaseBranches (Lambda gen_var_171 (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_169 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_169))))) (Lambda gen_var_172 (Prod gen_var_173 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_173 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_173)) (App Coq.Lists.List.In nat gen_var_173 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144))))))) (Lambda gen_var_174 (App Goedel.LNN.SysPrf gen_var_141 gen_var_173) (Cast (Lambda gen_var_176 (App Formula Goedel.Languages.LNN) (App Goedel.LNN.contradiction gen_var_141 gen_var_173 gen_var_175 gen_var_174 (App Goedel.LNN.impE gen_var_141 (App Goedel.LNN.notH gen_var_173) (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_173)))) (App Goedel.LNN.cp2 gen_var_141 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_173))) gen_var_173 (App Goedel.LNN.iffE1 gen_var_141 gen_var_173 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_173))) (App Goedel.LNN.sysExtend Goedel.NN.NN gen_var_141 (App Goedel.LNN.iffH gen_var_173 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_173)))) gen_var_142 gen_var_171))) (App Coq.Init.Logic.eq_ind_r (App Formula Goedel.Languages.LNN) (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_173)))) (Lambda gen_var_176 (App Formula Goedel.Languages.LNN) (App Goedel.LNN.SysPrf gen_var_141 (App Goedel.LNN.notH gen_var_176))) (App Goedel.LNN.nnI gen_var_141 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_173))) (App Goedel.goedel1.codeSysPfCorrect gen_var_141 gen_var_142 gen_var_143 gen_var_144 gen_var_145 gen_var_148 gen_var_173 gen_var_174)) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App notH Goedel.Languages.LNN (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_173))) (App Goedel.folProp.subFormulaNot Goedel.Languages.LNN (App Goedel.goedel1.codeSysPf gen_var_143 gen_var_144) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_173))))))) REVERTcast (App Goedel.folProof.Inconsistent Goedel.Languages.LNN gen_var_141))))))))))) gen_var_174)))))))))) (Definition Goedel.folProof.Inconsistent (Lambda gen_var_178 Language (LetIn gen_var_179 (App gen_var_179 gen_var_178) (Sort Set) (LetIn gen_var_180 (App Goedel.fol.Formulas gen_var_178) (Sort Set) (LetIn gen_var_181 (App Goedel.fol.System gen_var_178) (Sort Type) (LetIn gen_var_182 (App gen_var_182 gen_var_178) (Sort Set) (LetIn gen_var_183 (App gen_var_183 gen_var_178) (Prod Anonymous nat (Sort Set)) (LetIn gen_var_185 (App var gen_var_178) (Prod Anonymous nat (App gen_var_182 gen_var_178)) (LetIn gen_var_187 (App apply gen_var_178) (Prod gen_var_188 (App Goedel.fol.Functions gen_var_178) (Prod Anonymous (App gen_var_183 gen_var_178 (App Goedel.fol.arity gen_var_178 (App inr (App Goedel.fol.Relations gen_var_178) (App Goedel.fol.Functions gen_var_178) gen_var_188))) (App gen_var_182 gen_var_178))) (LetIn gen_var_190 (App equal gen_var_178) (Prod Anonymous (App gen_var_182 gen_var_178) (Prod Anonymous (App gen_var_182 gen_var_178) (App gen_var_179 gen_var_178))) (LetIn gen_var_193 (App atomic gen_var_178) (Prod gen_var_194 (App Goedel.fol.Relations gen_var_178) (Prod Anonymous (App gen_var_183 gen_var_178 (App Goedel.fol.arity gen_var_178 (App inl (App Goedel.fol.Relations gen_var_178) (App Goedel.fol.Functions gen_var_178) gen_var_194))) (App gen_var_179 gen_var_178))) (LetIn gen_var_196 (App impH gen_var_178) (Prod Anonymous (App gen_var_179 gen_var_178) (Prod Anonymous (App gen_var_179 gen_var_178) (App gen_var_179 gen_var_178))) (LetIn gen_var_199 (App notH gen_var_178) (Prod Anonymous (App gen_var_179 gen_var_178) (App gen_var_179 gen_var_178)) (LetIn gen_var_201 (App Goedel.fol.iffH gen_var_178) (Prod gen_var_202 (App gen_var_179 gen_var_178) (Prod gen_var_203 (App gen_var_179 gen_var_178) (App gen_var_179 gen_var_178))) (LetIn gen_var_204 (App forallH gen_var_178) (Prod Anonymous nat (Prod Anonymous (App gen_var_179 gen_var_178) (App gen_var_179 gen_var_178))) (Lambda gen_var_207 gen_var_181 (Prod gen_var_208 gen_var_179 (App Goedel.folProof.SysPrf gen_var_178 gen_var_207 gen_var_208)))))))))))))))))) (Definition Goedel.goedel1.FirstIncompletenessB (Lambda gen_var_210 Goedel.LNN.System (Lambda gen_var_211 (App Coq.Sets.Ensembles.Included (App gen_var_179 Goedel.Languages.LNN) Goedel.NN.NN gen_var_210) (Lambda gen_var_212 Goedel.LNN.Formula (Lambda gen_var_213 nat (Lambda gen_var_214 (Prod gen_var_215 nat (Prod Anonymous (App Coq.Lists.List.In nat gen_var_215 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_212)) (App eq nat gen_var_215 gen_var_213))) (Lambda gen_var_217 (Prod gen_var_218 Goedel.LNN.Formula (Prod Anonymous (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_218)) (App Goedel.LNN.SysPrf gen_var_210 (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN gen_var_212 gen_var_213 (App Goedel.LNN.natToTerm (App Goedel.goedel1.codeFormula gen_var_218))))))) (Lambda gen_var_220 (App Goedel.wConsistent.wConsistent gen_var_210) (LetIn gen_var_221 (Lambda gen_var_222 (Prod gen_var_223 Goedel.LNN.Formula (App Goedel.LNN.SysPrf gen_var_210 gen_var_223)) (LetIn gen_var_224 (App Goedel.wConsistent.wCon2Con gen_var_210 gen_var_220) (App Goedel.folProof.Consistent Goedel.Languages.LNN gen_var_210) (App Coq.Init.Logic.ex_ind (App gen_var_179 Goedel.Languages.LNN) (Lambda gen_var_225 (App gen_var_179 Goedel.Languages.LNN) (App Coq.Init.Logic.not (App Goedel.folProof.SysPrf Goedel.Languages.LNN gen_var_210 gen_var_225))) False (Lambda gen_var_226 (App gen_var_179 Goedel.Languages.LNN) (Lambda gen_var_227 (App Coq.Init.Logic.not (App Goedel.folProof.SysPrf Goedel.Languages.LNN gen_var_210 gen_var_226)) (App gen_var_227 (App gen_var_222 gen_var_226)))) gen_var_224))) (Prod Anonymous (Prod gen_var_229 Goedel.LNN.Formula (App Goedel.LNN.SysPrf gen_var_210 gen_var_229)) False) (Cast (LetIn gen_var_334 (App Goedel.fixPoint.FixPointLNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_212 gen_var_213)) O) (App sig Goedel.LNN.Formula (Lambda gen_var_231 Goedel.LNN.Formula (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_231 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_231))))) (Prod gen_var_232 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_232 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_231)) (App Coq.Lists.List.In nat gen_var_232 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_212 gen_var_213)))))))))) (Case 2 (Lambda gen_var_236 (App sig Goedel.LNN.Formula (Lambda gen_var_234 Goedel.LNN.Formula (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_234 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_234))))) (Prod gen_var_235 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_235 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_234)) (App Coq.Lists.List.In nat gen_var_235 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_212 gen_var_213)))))))))) (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_210 (App Goedel.LNN.notH (Case 2 (Lambda gen_var_236 (App sig Goedel.LNN.Formula (Lambda gen_var_237 Goedel.LNN.Formula (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_237 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_237))))) (Prod gen_var_238 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_238 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_237)) (App Coq.Lists.List.In nat gen_var_238 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_212 gen_var_213)))))))))) Goedel.LNN.Formula) (CaseMatch gen_var_236) (CaseBranches (Lambda gen_var_239 Goedel.LNN.Formula (Lambda Anonymous (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_239 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_239))))) (Prod gen_var_241 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_241 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_239)) (App Coq.Lists.List.In nat gen_var_241 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_212 gen_var_213)))))))) gen_var_239)))))))) (CaseMatch gen_var_236) (CaseBranches (Lambda gen_var_310 Goedel.LNN.Formula (Lambda gen_var_430 (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_242 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_242))))) (Prod gen_var_244 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_244 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_244)) (App Coq.Lists.List.In nat gen_var_244 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_212 gen_var_213)))))))) (Case 2 (Lambda Anonymous (App and (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_244 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_244))))) (Prod gen_var_246 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_246 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_246)) (App Coq.Lists.List.In nat gen_var_246 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_212 gen_var_213)))))))) (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_210 (App Goedel.LNN.notH gen_var_246)))) (CaseMatch gen_var_243) (CaseBranches (Lambda gen_var_247 (App Goedel.LNN.SysPrf Goedel.NN.NN (App Goedel.LNN.iffH gen_var_246 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_246))))) (Lambda gen_var_248 (Prod gen_var_249 nat (App Coq.Init.Logic.iff (App Coq.Lists.List.In nat gen_var_249 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_249)) (App Coq.Lists.List.In nat gen_var_249 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_212 gen_var_213))))))) (Cast (Lambda gen_var_250 (App Goedel.LNN.SysPrf gen_var_210 (App Goedel.LNN.notH gen_var_249)) (LetIn gen_var_251 (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_249) nat (LetIn gen_var_252 (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App gen_var_179 Goedel.Languages.LNN) (LetIn gen_var_278 (Lambda gen_var_254 nat (Lambda gen_var_278 (App Coq.Lists.List.In nat gen_var_254 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_252)) (LetIn gen_var_279 gen_var_255 (App Coq.Lists.List.In nat gen_var_254 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (LetIn gen_var_257 (App Goedel.subProp.freeVarSubFormula3 Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251) gen_var_254 gen_var_256) (App or (App Coq.Lists.List.In nat gen_var_254 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)))) (App Coq.Lists.List.In nat gen_var_254 (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (App Coq.Init.Logic.or_ind (App Coq.Lists.List.In nat gen_var_254 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)))) (App Coq.Lists.List.In nat gen_var_254 (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App eq nat (App S O) gen_var_254) (Lambda gen_var_280 (App Coq.Lists.List.In nat gen_var_254 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)))) (App (Case 0 (Lambda gen_var_259 nat (Prod gen_var_260 (App Coq.Lists.List.In nat gen_var_259 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))) (Prod gen_var_261 (App Coq.Lists.List.In nat gen_var_259 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (Prod gen_var_262 (App Coq.Lists.List.In nat gen_var_259 (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)))) (App eq nat (App S O) gen_var_259))))) (CaseMatch gen_var_254) (CaseBranches (Lambda gen_var_263 (App Coq.Lists.List.In nat O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))) (Lambda gen_var_264 (App Coq.Lists.List.In nat O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (Lambda gen_var_265 (App Coq.Lists.List.In nat O (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)))) (App Coq.Init.Logic.False_ind (App eq nat (App S O) O) (App Goedel.ListExt.In_list_remove2 nat Coq.Arith.PeanoNat.Nat.eq_dec O O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)) gen_var_265 (App eq_refl nat O)))))) (Lambda gen_var_277 nat (Lambda gen_var_278 (App Coq.Lists.List.In nat (App S gen_var_266) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))) (Lambda gen_var_279 (App Coq.Lists.List.In nat (App S gen_var_266) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (Lambda gen_var_280 (App Coq.Lists.List.In nat (App S gen_var_266) (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)))) (App (Case 0 (Lambda gen_var_270 nat (Prod gen_var_271 (App Coq.Lists.List.In nat (App S gen_var_270) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))) (Prod gen_var_272 (App Coq.Lists.List.In nat (App S gen_var_270) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (Prod gen_var_273 (App Coq.Lists.List.In nat (App S gen_var_270) (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)))) (App eq nat (App S O) (App S gen_var_270)))))) (CaseMatch gen_var_270) (CaseBranches (Lambda gen_var_274 (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))) (Lambda gen_var_275 (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (Lambda gen_var_276 (App Coq.Lists.List.In nat (App S O) (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)))) (App eq_refl nat (App S O))))) (Lambda gen_var_277 nat (Lambda gen_var_278 (App Coq.Lists.List.In nat (App S (App S gen_var_277)) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))) (Lambda gen_var_279 (App Coq.Lists.List.In nat (App S (App S gen_var_277)) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (Lambda gen_var_280 (App Coq.Lists.List.In nat (App S (App S gen_var_277)) (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)))) (App Coq.Init.Logic.False_ind (App eq nat (App S O) (App S (App S gen_var_277))) (App Coq.Arith.Lt.le_not_lt (App S (App S gen_var_277)) (App S O) (LetIn gen_var_281 (App Goedel.ListExt.In_list_remove1 nat Coq.Arith.PeanoNat.Nat.eq_dec (App S (App S gen_var_277)) O (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)) gen_var_280) (App Coq.Lists.List.In nat (App S (App S gen_var_277)) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213))) (App Goedel.codeSysPrf.freeVarCodeSysPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR Goedel.Languages.codeArityLNTFIsPR Goedel.Languages.codeArityLNNRIsPR gen_var_212 gen_var_213 gen_var_214 (App S (App S gen_var_277)) gen_var_281)) (App Coq.Arith.Lt.lt_n_S O (App S gen_var_277) (App Coq.Arith.PeanoNat.Nat.lt_0_succ gen_var_277)))))))))) gen_var_278 gen_var_279 gen_var_280))))))) gen_var_278 gen_var_279 gen_var_280)) (Lambda gen_var_282 (App Coq.Lists.List.In nat gen_var_254 (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App Coq.Init.Logic.False_ind (App eq nat (App S O) gen_var_254) (App Goedel.LNN.closedNatToTerm gen_var_251 gen_var_254 gen_var_282))) gen_var_257))))) (Prod gen_var_283 nat (Prod Anonymous (App Coq.Lists.List.In nat gen_var_283 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_252)) (App eq nat (App S O) gen_var_283))) (LetIn gen_var_346 (App gen_var_220 gen_var_252 (App S O) gen_var_278 (App Goedel.LNN.impE gen_var_210 (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH gen_var_252)) (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (Cast (Cast (App Coq.Init.Logic.eq_ind_r (App gen_var_179 Goedel.Languages.LNN) (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (Lambda gen_var_286 (App gen_var_179 Goedel.Languages.LNN) (App Goedel.LNN.SysPrf gen_var_210 (App Goedel.LNN.impH (App Goedel.LNN.notH gen_var_286) (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))))))) (App Goedel.LNN.impTrans gen_var_210 (App Goedel.LNN.notH (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))) (App Goedel.LNN.impI gen_var_210 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App Goedel.LNN.notH (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (App Goedel.LNN.nnE (App Coq.Sets.Ensembles.Add (App gen_var_179 Goedel.Languages.LNN) gen_var_210 (App Goedel.LNN.notH (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App Goedel.LNN.Axm (App Coq.Sets.Ensembles.Add (App gen_var_179 Goedel.Languages.LNN) gen_var_210 (App Goedel.LNN.notH (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (App Union_intror (App gen_var_179 Goedel.Languages.LNN) gen_var_210 (App Singleton (App gen_var_179 Goedel.Languages.LNN) (App Goedel.LNN.notH (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (App In_singleton (App gen_var_179 Goedel.Languages.LNN) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))))))) (App Goedel.LNN.sysExtend Goedel.NN.NN gen_var_210 (App Goedel.LNN.impH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))))) gen_var_211 (App Goedel.LNN.impI Goedel.NN.NN (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App Coq.Init.Logic.eq_ind_r (App gen_var_179 Goedel.Languages.LNN) (Case 2 (Lambda gen_var_287 (App sumbool (App eq nat (App S O) O) (App Coq.Init.Logic.not (App eq nat (App S O) O))) (App gen_var_179 Goedel.Languages.LNN)) (CaseMatch (App Coq.Arith.PeanoNat.Nat.eq_dec (App S O) O)) (CaseBranches (Lambda gen_var_288 (App eq nat (App S O) O) (App Goedel.fol.existH Goedel.Languages.LNN (App S O) (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213))) (Lambda gen_var_292 (App Coq.Init.Logic.not (App eq nat (App S O) O)) (Case 2 (Lambda gen_var_290 (App sumbool (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App Coq.Init.Logic.not (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))) (App gen_var_179 Goedel.Languages.LNN)) (CaseMatch (App Coq.Lists.List.in_dec nat Coq.Arith.PeanoNat.Nat.eq_dec (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (CaseBranches (Lambda gen_var_291 (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App Goedel.fol.existH Goedel.Languages.LNN (App Goedel.folProp.newVar (App cons nat O (App Coq.Init.Datatypes.app nat (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213))))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) (App S O) (App var Goedel.Languages.LNN (App Goedel.folProp.newVar (App cons nat O (App Coq.Init.Datatypes.app nat (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213))))))) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (Lambda gen_var_292 (App Coq.Init.Logic.not (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (App Goedel.fol.existH Goedel.Languages.LNN (App S O) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))))))) (Lambda gen_var_293 (App gen_var_179 Goedel.Languages.LNN) (App Goedel.LNN.SysPrf (App Coq.Sets.Ensembles.Add (App gen_var_179 Goedel.Languages.LNN) Goedel.NN.NN gen_var_293) (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))))) (LetIn gen_var_321 (App Coq.Arith.PeanoNat.Nat.eq_dec (App S O) O) (App sumbool (App eq nat (App S O) O) (App Coq.Init.Logic.not (App eq nat (App S O) O))) (App Coq.Init.Specif.sumbool_ind (App eq nat (App S O) O) (App Coq.Init.Logic.not (App eq nat (App S O) O)) (Lambda gen_var_295 (App sumbool (App eq nat (App S O) O) (App Coq.Init.Logic.not (App eq nat (App S O) O))) (App Goedel.LNN.SysPrf (App Coq.Sets.Ensembles.Add (App gen_var_179 Goedel.Languages.LNN) Goedel.NN.NN (Case 2 (Lambda gen_var_296 (App sumbool (App eq nat (App S O) O) (App Coq.Init.Logic.not (App eq nat (App S O) O))) (App gen_var_179 Goedel.Languages.LNN)) (CaseMatch gen_var_295) (CaseBranches (Lambda gen_var_297 (App eq nat (App S O) O) (App Goedel.fol.existH Goedel.Languages.LNN (App S O) (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213))) (Lambda gen_var_301 (App Coq.Init.Logic.not (App eq nat (App S O) O)) (Case 2 (Lambda gen_var_299 (App sumbool (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App Coq.Init.Logic.not (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))) (App gen_var_179 Goedel.Languages.LNN)) (CaseMatch (App Coq.Lists.List.in_dec nat Coq.Arith.PeanoNat.Nat.eq_dec (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (CaseBranches (Lambda gen_var_300 (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App Goedel.fol.existH Goedel.Languages.LNN (App Goedel.folProp.newVar (App cons nat O (App Coq.Init.Datatypes.app nat (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213))))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) (App S O) (App var Goedel.Languages.LNN (App Goedel.folProp.newVar (App cons nat O (App Coq.Init.Datatypes.app nat (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213))))))) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (Lambda gen_var_301 (App Coq.Init.Logic.not (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (App Goedel.fol.existH Goedel.Languages.LNN (App S O) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))))))))) (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))))) (Lambda gen_var_302 (App eq nat (App S O) O) (LetIn gen_var_303 (App Coq.Init.Logic.eq_ind nat (App S O) (Lambda gen_var_304 nat (Case 0 (Lambda gen_var_305 nat (Sort Prop)) (CaseMatch gen_var_304) (CaseBranches False (Lambda Anonymous nat True)))) I O gen_var_302) False (App Coq.Init.Logic.False_ind (App Goedel.LNN.SysPrf (App Coq.Sets.Ensembles.Add (App gen_var_179 Goedel.Languages.LNN) Goedel.NN.NN (App Goedel.fol.existH Goedel.Languages.LNN (App S O) (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213))) (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))))) gen_var_303))) (Lambda gen_var_307 (App Coq.Init.Logic.not (App eq nat (App S O) O)) (LetIn gen_var_321 (App Coq.Lists.List.in_dec nat Coq.Arith.PeanoNat.Nat.eq_dec (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App sumbool (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App Coq.Init.Logic.not (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))) (App Coq.Init.Specif.sumbool_ind (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App Coq.Init.Logic.not (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (Lambda gen_var_309 (App sumbool (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App Coq.Init.Logic.not (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))) (App Goedel.LNN.SysPrf (App Coq.Sets.Ensembles.Add (App gen_var_179 Goedel.Languages.LNN) Goedel.NN.NN (Case 2 (Lambda gen_var_310 (App sumbool (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App Coq.Init.Logic.not (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))) (App gen_var_179 Goedel.Languages.LNN)) (CaseMatch gen_var_309) (CaseBranches (Lambda gen_var_311 (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App Goedel.fol.existH Goedel.Languages.LNN (App Goedel.folProp.newVar (App cons nat O (App Coq.Init.Datatypes.app nat (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213))))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) (App S O) (App var Goedel.Languages.LNN (App Goedel.folProp.newVar (App cons nat O (App Coq.Init.Datatypes.app nat (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213))))))) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (Lambda gen_var_312 (App Coq.Init.Logic.not (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (App Goedel.fol.existH Goedel.Languages.LNN (App S O) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))))) (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))))) (Lambda gen_var_313 (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App Coq.Init.Logic.False_ind (App Goedel.LNN.SysPrf (App Coq.Sets.Ensembles.Add (App gen_var_179 Goedel.Languages.LNN) Goedel.NN.NN (App Goedel.fol.existH Goedel.Languages.LNN (App Goedel.folProp.newVar (App cons nat O (App Coq.Init.Datatypes.app nat (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213))))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) (App S O) (App var Goedel.Languages.LNN (App Goedel.folProp.newVar (App cons nat O (App Coq.Init.Datatypes.app nat (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213))))))) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))))) (App Goedel.LNN.closedNatToTerm gen_var_251 (App S O) gen_var_313))) (Lambda gen_var_314 (App Coq.Init.Logic.not (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (App Goedel.LNN.existSys Goedel.NN.NN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))) (App S O) (App Goedel.NN.closedNN (App S O)) (Cast (Lambda gen_var_315 (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))))) (App Coq.Init.Logic.False_ind False (App Goedel.ListExt.In_list_remove2 nat Coq.Arith.PeanoNat.Nat.eq_dec (App S O) (App S O) (App (Fix (Functions (App gen_var_316 0 (Prod gen_var_317 (App gen_var_179 Goedel.Languages.LNN) (App list nat)) (Lambda gen_var_328 (App gen_var_179 Goedel.Languages.LNN) (Case 1 (Lambda gen_var_319 (App gen_var_179 Goedel.Languages.LNN) (App list nat)) (CaseMatch gen_var_319) (CaseBranches (Lambda gen_var_320 (App gen_var_182 Goedel.Languages.LNN) (Lambda gen_var_321 (App gen_var_182 Goedel.Languages.LNN) (App Coq.Init.Datatypes.app nat (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN gen_var_320) (App Goedel.folProp.freeVarTerm Goedel.Languages.LNN gen_var_321)))) (Lambda gen_var_322 (App Goedel.fol.Relations Goedel.Languages.LNN) (Lambda gen_var_323 (App gen_var_183 Goedel.Languages.LNN (App Goedel.fol.arity Goedel.Languages.LNN (App inl (App Goedel.fol.Relations Goedel.Languages.LNN) (App Goedel.fol.Functions Goedel.Languages.LNN) gen_var_322))) (App Goedel.folProp.freeVarTerms Goedel.Languages.LNN (App Goedel.fol.arity Goedel.Languages.LNN (App inl (App Goedel.fol.Relations Goedel.Languages.LNN) (App Goedel.fol.Functions Goedel.Languages.LNN) gen_var_322)) gen_var_323))) (Lambda gen_var_324 (App gen_var_179 Goedel.Languages.LNN) (Lambda gen_var_325 (App gen_var_179 Goedel.Languages.LNN) (App Coq.Init.Datatypes.app nat (App gen_var_316 gen_var_324) (App gen_var_316 gen_var_325)))) (Lambda gen_var_326 (App gen_var_179 Goedel.Languages.LNN) (App gen_var_316 gen_var_326)) (Lambda gen_var_327 nat (Lambda gen_var_328 (App gen_var_179 Goedel.Languages.LNN) (App Goedel.ListExt.list_remove nat Coq.Arith.PeanoNat.Nat.eq_dec gen_var_327 (App gen_var_316 gen_var_328))))))))) 0) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) gen_var_315 (App eq_refl nat (App S O))))) REVERTcast (App Coq.Init.Logic.not (App Coq.Lists.List.In nat (App S O) (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))))))) (App Goedel.LNN.existSimp (App Coq.Sets.Ensembles.Add (App gen_var_179 Goedel.Languages.LNN) Goedel.NN.NN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))) (App S O) (App Goedel.LNN.nnI (App Coq.Sets.Ensembles.Add (App gen_var_179 Goedel.Languages.LNN) Goedel.NN.NN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App Goedel.LNN.Axm (App Coq.Sets.Ensembles.Add (App gen_var_179 Goedel.Languages.LNN) Goedel.NN.NN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App Union_intror (App gen_var_179 Goedel.Languages.LNN) Goedel.NN.NN (App Singleton (App gen_var_179 Goedel.Languages.LNN) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App In_singleton (App gen_var_179 Goedel.Languages.LNN) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))))))))) gen_var_321))) gen_var_321)) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.fol.existH Goedel.Languages.LNN (App S O) (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App Goedel.folProp.subFormulaExist Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) (App S O) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App notH Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213))) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App Goedel.folProp.subFormulaNot Goedel.Languages.LNN (App Goedel.LNN.existH (App S O) (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) REVERTcast (App Goedel.LNN.SysPrf gen_var_210 (App Goedel.LNN.impH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.LNN.existH (App S O) (App Goedel.codeSysPrf.codeSysPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR Goedel.Languages.codeArityLNTFIsPR Goedel.Languages.codeArityLNNRIsPR gen_var_212 gen_var_213))) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)))))))) REVERTcast (App Goedel.LNN.SysPrf gen_var_210 (App Goedel.LNN.impH (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App Goedel.LNN.existH (App S O) (App Goedel.LNN.notH gen_var_252))))) (App Goedel.LNN.impE gen_var_210 (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App Goedel.LNN.notH gen_var_310) (App Goedel.LNN.cp2 gen_var_210 gen_var_310 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App Goedel.LNN.iffE2 gen_var_210 gen_var_310 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App Goedel.LNN.sysExtend Goedel.NN.NN gen_var_210 (App Goedel.LNN.iffH gen_var_310 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.goedel1.codeSysPf gen_var_212 gen_var_213)) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) gen_var_211 gen_var_247))) gen_var_250))) (App ex nat (Lambda gen_var_329 nat (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_210 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN gen_var_252 (App S O) (App Goedel.LNN.natToTerm gen_var_329)))))) (App Coq.Init.Logic.ex_ind nat (Lambda gen_var_330 nat (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_210 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN gen_var_252 (App S O) (App Goedel.LNN.natToTerm gen_var_330))))) False (Lambda gen_var_414 nat (Lambda gen_var_332 (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_210 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN gen_var_252 (App S O) (App Goedel.LNN.natToTerm gen_var_331)))) (LetIn gen_var_334 (App Coq.Arith.PeanoNat.Nat.eq_dec (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_310) gen_var_331) O) (App sumbool (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_310) gen_var_331) O) (App Coq.Init.Logic.not (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_310) gen_var_331) O))) (App Coq.Init.Specif.sumbool_ind (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_310) gen_var_331) O) (App Coq.Init.Logic.not (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_310) gen_var_331) O)) (Lambda gen_var_334 (App sumbool (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_310) gen_var_331) O) (App Coq.Init.Logic.not (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_310) gen_var_331) O))) False) (Lambda gen_var_343 (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_310) gen_var_331) O) (App gen_var_332 (App Coq.Init.Logic.eq_ind_r (App gen_var_179 Goedel.Languages.LNN) (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App S O) (App Goedel.LNN.natToTerm gen_var_331))) (Lambda gen_var_336 (App gen_var_179 Goedel.Languages.LNN) (App Goedel.LNN.SysPrf gen_var_210 gen_var_336)) (Cast (App Goedel.goedel1.codeSysPrfCorrect3 gen_var_210 gen_var_211 gen_var_212 gen_var_213 gen_var_310 gen_var_331 (Cast (Lambda gen_var_337 (App list (App gen_var_179 Goedel.Languages.LNN)) (Lambda gen_var_338 (App Prf Goedel.Languages.LNN gen_var_337 gen_var_310) (Lambda gen_var_339 (App eq nat gen_var_331 (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_337 gen_var_310 gen_var_338)) (LetIn gen_var_341 (App Goedel.checkPrf.checkPrfCorrect1 Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR Goedel.Languages.codeArityLNTFIsCorrect1 Goedel.Languages.codeArityLNNRIsCorrect1 gen_var_337 gen_var_310 gen_var_338) (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_310) (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_337 gen_var_310 gen_var_338)) (App S (App Goedel.cPair.codeList (App Coq.Lists.List.map (App gen_var_179 Goedel.Languages.LNN) nat Goedel.goedel1.codeFormula gen_var_337)))) (LetIn gen_var_341 (App Coq.Init.Logic.eq_ind_r nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_337 gen_var_310 gen_var_338) (Lambda gen_var_342 nat (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_310) gen_var_342) (App S (App Goedel.cPair.codeList (App Coq.Lists.List.map (App gen_var_179 Goedel.Languages.LNN) nat Goedel.goedel1.codeFormula gen_var_337))))) gen_var_341 gen_var_331 gen_var_339) (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_310) gen_var_331) (App S (App Goedel.cPair.codeList (App Coq.Lists.List.map (App gen_var_179 Goedel.Languages.LNN) nat Goedel.goedel1.codeFormula gen_var_337)))) (LetIn gen_var_343 (App Coq.Init.Logic.eq_ind nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_310) gen_var_331) (Lambda gen_var_344 nat (App eq nat gen_var_344 O)) gen_var_343 (App S (App Goedel.cPair.codeList (App Coq.Lists.List.map (App gen_var_179 Goedel.Languages.LNN) nat Goedel.goedel1.codeFormula gen_var_337))) gen_var_341) (App eq nat (App S (App Goedel.cPair.codeList (App Coq.Lists.List.map (App gen_var_179 Goedel.Languages.LNN) nat Goedel.goedel1.codeFormula gen_var_337))) O) (LetIn gen_var_345 (App Coq.Init.Logic.eq_ind nat (App S (App Goedel.cPair.codeList (App Coq.Lists.List.map (App gen_var_179 Goedel.Languages.LNN) nat Goedel.goedel1.codeFormula gen_var_337))) (Lambda gen_var_346 nat (Case 0 (Lambda gen_var_347 nat (Sort Prop)) (CaseMatch gen_var_346) (CaseBranches False (Lambda Anonymous nat True)))) I O gen_var_343) False (App Coq.Init.Logic.False_ind False gen_var_345)))))))) REVERTcast (Prod gen_var_349 (App list (App gen_var_179 Goedel.Languages.LNN)) (Prod gen_var_350 (App Prf Goedel.Languages.LNN gen_var_349 gen_var_310) (App Coq.Init.Logic.not (App eq nat gen_var_331 (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_349 gen_var_310 gen_var_350))))))) REVERTcast (App Goedel.LNN.SysPrf gen_var_210 (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App S O) (App Goedel.LNN.natToTerm gen_var_331))))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App S O) (App Goedel.LNN.natToTerm gen_var_331)) (App Goedel.folProp.subFormulaNot Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App S O) (App Goedel.LNN.natToTerm gen_var_331))))) (Lambda gen_var_351 (App Coq.Init.Logic.not (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_310) gen_var_331) O)) (LetIn gen_var_352 gen_var_351 (App Coq.Init.Logic.not (App eq nat (App Goedel.checkPrf.checkPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR (App Goedel.goedel1.codeFormula gen_var_310) gen_var_331) O)) (LetIn gen_var_438 (App Goedel.checkPrf.checkPrfCorrect2 Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR Goedel.Languages.codeArityLNTFIsCorrect1 Goedel.Languages.codeArityLNTFIsCorrect2 Goedel.Languages.codeArityLNNRIsCorrect1 Goedel.Languages.codeArityLNNRIsCorrect2 Goedel.Languages.codeLNTFunctionInj Goedel.Languages.codeLNNRelationInj (App Goedel.goedel1.codeFormula gen_var_310) gen_var_331 gen_var_352) (App ex (App gen_var_179 Goedel.Languages.LNN) (Lambda gen_var_354 (App gen_var_179 Goedel.Languages.LNN) (App and (App eq nat (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_354) (App Goedel.goedel1.codeFormula gen_var_310)) (App ex (App list (App gen_var_179 Goedel.Languages.LNN)) (Lambda gen_var_355 (App list (App gen_var_179 Goedel.Languages.LNN)) (App ex (App Prf Goedel.Languages.LNN gen_var_355 gen_var_354) (Lambda gen_var_356 (App Prf Goedel.Languages.LNN gen_var_355 gen_var_354) (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_355 gen_var_354 gen_var_356) gen_var_331)))))))) (App (Lambda gen_var_357 (App ex (App gen_var_179 Goedel.Languages.LNN) (Lambda gen_var_358 (App gen_var_179 Goedel.Languages.LNN) (App and (App eq nat (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_358) (App Goedel.goedel1.codeFormula gen_var_310)) (App ex (App list (App gen_var_179 Goedel.Languages.LNN)) (Lambda gen_var_359 (App list (App gen_var_179 Goedel.Languages.LNN)) (App ex (App Prf Goedel.Languages.LNN gen_var_359 gen_var_358) (Lambda gen_var_360 (App Prf Goedel.Languages.LNN gen_var_359 gen_var_358) (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_359 gen_var_358 gen_var_360) gen_var_331)))))))) (App Coq.Init.Logic.ex_ind (App gen_var_179 Goedel.Languages.LNN) (Lambda gen_var_361 (App gen_var_179 Goedel.Languages.LNN) (App and (App eq nat (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_361) (App Goedel.goedel1.codeFormula gen_var_310)) (App ex (App list (App gen_var_179 Goedel.Languages.LNN)) (Lambda gen_var_362 (App list (App gen_var_179 Goedel.Languages.LNN)) (App ex (App Prf Goedel.Languages.LNN gen_var_362 gen_var_361) (Lambda gen_var_363 (App Prf Goedel.Languages.LNN gen_var_362 gen_var_361) (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_362 gen_var_361 gen_var_363) gen_var_331))))))) False (Lambda gen_var_450 (App gen_var_179 Goedel.Languages.LNN) (Lambda gen_var_438 (App and (App eq nat (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_364) (App Goedel.goedel1.codeFormula gen_var_310)) (App ex (App list (App gen_var_179 Goedel.Languages.LNN)) (Lambda gen_var_366 (App list (App gen_var_179 Goedel.Languages.LNN)) (App ex (App Prf Goedel.Languages.LNN gen_var_366 gen_var_364) (Lambda gen_var_367 (App Prf Goedel.Languages.LNN gen_var_366 gen_var_364) (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_366 gen_var_364 gen_var_367) gen_var_331)))))) (App Coq.Init.Logic.and_ind (App eq nat (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_364) (App Goedel.goedel1.codeFormula gen_var_310)) (App ex (App list (App gen_var_179 Goedel.Languages.LNN)) (Lambda gen_var_368 (App list (App gen_var_179 Goedel.Languages.LNN)) (App ex (App Prf Goedel.Languages.LNN gen_var_368 gen_var_364) (Lambda gen_var_369 (App Prf Goedel.Languages.LNN gen_var_368 gen_var_364) (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_368 gen_var_364 gen_var_369) gen_var_331))))) False (Lambda gen_var_441 (App eq nat (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_364) (App Goedel.goedel1.codeFormula gen_var_310)) (Lambda gen_var_458 (App ex (App list (App gen_var_179 Goedel.Languages.LNN)) (Lambda gen_var_372 (App list (App gen_var_179 Goedel.Languages.LNN)) (App ex (App Prf Goedel.Languages.LNN gen_var_372 gen_var_364) (Lambda gen_var_373 (App Prf Goedel.Languages.LNN gen_var_372 gen_var_364) (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_372 gen_var_364 gen_var_373) gen_var_331))))) (App Coq.Init.Logic.ex_ind (App list (App gen_var_179 Goedel.Languages.LNN)) (Lambda gen_var_374 (App list (App gen_var_179 Goedel.Languages.LNN)) (App ex (App Prf Goedel.Languages.LNN gen_var_374 gen_var_364) (Lambda gen_var_375 (App Prf Goedel.Languages.LNN gen_var_374 gen_var_364) (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_374 gen_var_364 gen_var_375) gen_var_331)))) False (Lambda gen_var_431 (App list (App gen_var_179 Goedel.Languages.LNN)) (Lambda gen_var_438 (App ex (App Prf Goedel.Languages.LNN gen_var_376 gen_var_364) (Lambda gen_var_378 (App Prf Goedel.Languages.LNN gen_var_376 gen_var_364) (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_376 gen_var_364 gen_var_378) gen_var_331))) (App Coq.Init.Logic.ex_ind (App Prf Goedel.Languages.LNN gen_var_376 gen_var_364) (Lambda gen_var_379 (App Prf Goedel.Languages.LNN gen_var_376 gen_var_364) (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_376 gen_var_364 gen_var_379) gen_var_331)) False (Lambda gen_var_385 (App Prf Goedel.Languages.LNN gen_var_376 gen_var_364) (Lambda gen_var_458 (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_376 gen_var_364 gen_var_380) gen_var_331) (LetIn gen_var_438 (App Goedel.code.codeFormulaInj Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeLNTFunctionInj Goedel.Languages.codeLNNRelationInj gen_var_364 gen_var_310 gen_var_370) (App eq (App gen_var_179 Goedel.Languages.LNN) gen_var_364 gen_var_310) (LetIn gen_var_470 gen_var_381 (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_376 gen_var_364 gen_var_380) gen_var_331) (App Coq.Init.Logic.eq_ind_r (App gen_var_179 Goedel.Languages.LNN) gen_var_310 (Lambda gen_var_384 (App gen_var_179 Goedel.Languages.LNN) (Prod gen_var_385 (App Prf Goedel.Languages.LNN gen_var_376 gen_var_384) (Prod Anonymous (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_376 gen_var_384 gen_var_385) gen_var_331) False))) (Lambda gen_var_387 (App Prf Goedel.Languages.LNN gen_var_376 gen_var_310) (Lambda gen_var_470 (App eq nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_376 gen_var_310 gen_var_387) gen_var_331) (LetIn gen_var_438 (Cast (Lambda gen_var_390 (Prod gen_var_391 (App gen_var_179 Goedel.Languages.LNN) (Prod Anonymous (App Coq.Lists.List.In (App gen_var_179 Goedel.Languages.LNN) gen_var_391 gen_var_376) (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_391))) (LetIn gen_var_402 (Cast (App ex_intro (App Goedel.fol.Formulas Goedel.Languages.LNN) (Lambda gen_var_394 (App Goedel.fol.Formulas Goedel.Languages.LNN) (App ex (App Prf Goedel.Languages.LNN gen_var_394 gen_var_310) (Lambda gen_var_395 (App Prf Goedel.Languages.LNN gen_var_394 gen_var_310) (Prod gen_var_396 (App gen_var_179 Goedel.Languages.LNN) (Prod Anonymous (App Coq.Lists.List.In (App gen_var_179 Goedel.Languages.LNN) gen_var_396 gen_var_394) (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_396)))))) gen_var_376 (App ex_intro (App Prf Goedel.Languages.LNN gen_var_376 gen_var_310) (Lambda gen_var_398 (App Prf Goedel.Languages.LNN gen_var_376 gen_var_310) (Prod gen_var_399 (App gen_var_179 Goedel.Languages.LNN) (Prod Anonymous (App Coq.Lists.List.In (App gen_var_179 Goedel.Languages.LNN) gen_var_399 gen_var_376) (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_399)))) gen_var_387 (Lambda gen_var_401 (App gen_var_179 Goedel.Languages.LNN) (Lambda gen_var_402 (App Coq.Lists.List.In (App gen_var_179 Goedel.Languages.LNN) gen_var_401 gen_var_376) (App gen_var_390 gen_var_401 gen_var_402))))) REVERTcast (App Goedel.LNN.SysPrf gen_var_210 gen_var_310)) (App Goedel.LNN.SysPrf gen_var_210 gen_var_310) (App gen_var_221 (Cast (Lambda gen_var_403 Goedel.LNN.Formula (App Goedel.LNN.contradiction gen_var_210 gen_var_310 gen_var_403 gen_var_402 gen_var_250)) REVERTcast (Prod gen_var_404 Goedel.LNN.Formula (App Goedel.LNN.SysPrf gen_var_210 gen_var_404)))))) REVERTcast (App Coq.Init.Logic.not (Prod gen_var_405 (App gen_var_179 Goedel.Languages.LNN) (Prod Anonymous (App Coq.Lists.List.In (App gen_var_179 Goedel.Languages.LNN) gen_var_405 gen_var_376) (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_405))))) (App Coq.Init.Logic.not (Prod gen_var_407 (App gen_var_179 Goedel.Languages.LNN) (Prod Anonymous (App Coq.Lists.List.In (App gen_var_179 Goedel.Languages.LNN) gen_var_407 gen_var_376) (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_407)))) (LetIn gen_var_441 (Cast (Lambda gen_var_410 (App ex Goedel.LNN.Formula (Lambda gen_var_411 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_411 gen_var_376) (Prod Anonymous (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_411) False)))) (App gen_var_332 (App Coq.Init.Logic.eq_ind_r (App gen_var_179 Goedel.Languages.LNN) (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App S O) (App Goedel.LNN.natToTerm gen_var_331))) (Lambda gen_var_413 (App gen_var_179 Goedel.Languages.LNN) (App Goedel.LNN.SysPrf gen_var_210 gen_var_413)) (Cast (App Coq.Init.Logic.eq_ind nat (App Goedel.code.codePrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_376 gen_var_310 gen_var_387) (Lambda gen_var_414 nat (App Goedel.LNN.SysPrf gen_var_210 (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.codeSysPrf.codeSysPrf Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation Goedel.Languages.codeArityLNTF Goedel.Languages.codeArityLNNR Goedel.Languages.codeArityLNTFIsPR Goedel.Languages.codeArityLNNRIsPR gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN (App Goedel.code.codeFormula Goedel.Languages.LNN Goedel.Languages.codeLNTFunction Goedel.Languages.codeLNNRelation gen_var_310))) (App S O) (App Goedel.LNN.natToTerm gen_var_414))))) (App Goedel.goedel1.codeSysPrfCorrect2 gen_var_210 gen_var_211 gen_var_212 gen_var_213 gen_var_214 gen_var_217 gen_var_310 gen_var_376 gen_var_410 gen_var_387) gen_var_414 gen_var_388) REVERTcast (App Goedel.LNN.SysPrf gen_var_210 (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App S O) (App Goedel.LNN.natToTerm gen_var_414))))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App notH Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251))) (App S O) (App Goedel.LNN.natToTerm gen_var_414)) (App Goedel.folProp.subFormulaNot Goedel.Languages.LNN (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.goedel1.codeSysPrf gen_var_212 gen_var_213) O (App Goedel.codeNatToTerm.natToTermLNN gen_var_251)) (App S O) (App Goedel.LNN.natToTerm gen_var_414))))) REVERTcast (App Coq.Init.Logic.not (App ex Goedel.LNN.Formula (Lambda gen_var_415 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_415 gen_var_376) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_415))))))) (App Coq.Init.Logic.not (App ex Goedel.LNN.Formula (Lambda gen_var_416 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_416 gen_var_376) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_416)))))) (App Coq.Init.Datatypes.list_ind (App gen_var_179 Goedel.Languages.LNN) (Lambda gen_var_417 (App list (App gen_var_179 Goedel.Languages.LNN)) (Prod gen_var_418 (App Coq.Init.Logic.not (Prod gen_var_419 (App gen_var_179 Goedel.Languages.LNN) (Prod Anonymous (App Coq.Lists.List.In (App gen_var_179 Goedel.Languages.LNN) gen_var_419 gen_var_417) (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_419)))) (Prod gen_var_421 (App Coq.Init.Logic.not (App ex Goedel.LNN.Formula (Lambda gen_var_422 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_422 gen_var_417) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_422)))))) False))) (Lambda gen_var_423 (App Coq.Init.Logic.not (Prod gen_var_424 (App gen_var_179 Goedel.Languages.LNN) (Prod Anonymous (App Coq.Lists.List.In (App gen_var_179 Goedel.Languages.LNN) gen_var_424 (App nil (App gen_var_179 Goedel.Languages.LNN))) (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_424)))) (Lambda gen_var_426 (App Coq.Init.Logic.not (App ex Goedel.LNN.Formula (Lambda gen_var_427 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_427 (App nil (App gen_var_179 Goedel.Languages.LNN))) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_427)))))) (App gen_var_423 (Lambda gen_var_428 (App gen_var_179 Goedel.Languages.LNN) (Lambda gen_var_429 (App Coq.Lists.List.In (App gen_var_179 Goedel.Languages.LNN) gen_var_428 (App nil (App gen_var_179 Goedel.Languages.LNN))) (App Coq.Init.Logic.False_ind (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_428) gen_var_429)))))) (Lambda gen_var_430 (App gen_var_179 Goedel.Languages.LNN) (Lambda gen_var_431 (App list (App gen_var_179 Goedel.Languages.LNN)) (Lambda gen_var_432 (Prod gen_var_433 (App Coq.Init.Logic.not (Prod gen_var_434 (App gen_var_179 Goedel.Languages.LNN) (Prod Anonymous (App Coq.Lists.List.In (App gen_var_179 Goedel.Languages.LNN) gen_var_434 gen_var_431) (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_434)))) (Prod gen_var_436 (App Coq.Init.Logic.not (App ex Goedel.LNN.Formula (Lambda gen_var_437 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_437 gen_var_431) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_437)))))) False)) (Lambda gen_var_438 (App Coq.Init.Logic.not (Prod gen_var_439 (App gen_var_179 Goedel.Languages.LNN) (Prod Anonymous (App Coq.Lists.List.In (App gen_var_179 Goedel.Languages.LNN) gen_var_439 (App cons (App gen_var_179 Goedel.Languages.LNN) gen_var_430 gen_var_431)) (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_439)))) (Lambda gen_var_441 (App Coq.Init.Logic.not (App ex Goedel.LNN.Formula (Lambda gen_var_442 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_442 (App cons (App gen_var_179 Goedel.Languages.LNN) gen_var_430 gen_var_431)) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_442)))))) (LetIn gen_var_458 (Cast (Lambda gen_var_458 (App ex Goedel.LNN.Formula (Lambda gen_var_445 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_445 gen_var_431) (Prod Anonymous (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_445) False)))) (App gen_var_441 (App Coq.Init.Logic.ex_ind Goedel.LNN.Formula (Lambda gen_var_447 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_447 gen_var_431) (Prod Anonymous (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_447) False))) (App ex Goedel.LNN.Formula (Lambda gen_var_449 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_449 (App cons (App gen_var_179 Goedel.Languages.LNN) gen_var_430 gen_var_431)) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_449))))) (Lambda gen_var_450 Goedel.LNN.Formula (Lambda gen_var_458 (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_450 gen_var_431) (Prod Anonymous (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_450) False)) (App ex_intro Goedel.LNN.Formula (Lambda gen_var_453 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_453 (App cons (App gen_var_179 Goedel.Languages.LNN) gen_var_430 gen_var_431)) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_453)))) gen_var_450 (Cast (App Coq.Init.Logic.and_ind (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_450 gen_var_431) (Prod Anonymous (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_450) False) (App and (App or (App eq Goedel.LNN.Formula gen_var_430 gen_var_450) (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_450 gen_var_431)) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_450))) (Lambda gen_var_455 (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_450 gen_var_431) (Lambda gen_var_456 (Prod Anonymous (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_450) False) (App conj (App or (App eq Goedel.LNN.Formula gen_var_430 gen_var_450) (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_450 gen_var_431)) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_450)) (App or_intror (App eq Goedel.LNN.Formula gen_var_430 gen_var_450) (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_450 gen_var_431) gen_var_455) (Cast (Lambda gen_var_458 (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_450) (LetIn gen_var_459 (App gen_var_456 gen_var_458) False (App Coq.Init.Logic.False_ind False gen_var_459))) REVERTcast (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_450)))))) gen_var_458) REVERTcast (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_450 (App cons (App gen_var_179 Goedel.Languages.LNN) gen_var_430 gen_var_431)) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_450))))))) gen_var_458))) REVERTcast (App Coq.Init.Logic.not (App ex Goedel.LNN.Formula (Lambda gen_var_460 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_460 gen_var_431) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_460))))))) (App Coq.Init.Logic.not (App ex Goedel.LNN.Formula (Lambda gen_var_461 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_461 gen_var_431) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_461)))))) (LetIn gen_var_470 (Cast (Lambda gen_var_470 (App Coq.Init.Logic.not (App or (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430)))) (LetIn gen_var_465 (Lambda gen_var_465 (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430) (App gen_var_463 (App or_introl (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430)) gen_var_465))) (Prod Anonymous (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430) False) (LetIn gen_var_468 (Lambda gen_var_468 (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430)) (App gen_var_463 (App or_intror (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430)) gen_var_468))) (Prod Anonymous (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430)) False) (LetIn gen_var_470 (App gen_var_468 gen_var_465) False (App Coq.Init.Logic.False_ind False gen_var_470))))) REVERTcast (App Coq.Init.Logic.not (App Coq.Init.Logic.not (App or (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430)))))) (App Coq.Init.Logic.not (App Coq.Init.Logic.not (App or (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430))))) (App gen_var_470 (Cast (Lambda gen_var_485 (App or (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430) (Prod Anonymous (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430) False)) (App Coq.Init.Logic.or_ind (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430) (Prod Anonymous (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430) False) False (Lambda gen_var_474 (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430) (App gen_var_432 (Cast (Lambda gen_var_475 (Prod gen_var_476 (App gen_var_179 Goedel.Languages.LNN) (Prod Anonymous (App Coq.Lists.List.In (App gen_var_179 Goedel.Languages.LNN) gen_var_476 gen_var_431) (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_476))) (App gen_var_438 (Lambda gen_var_481 (App gen_var_179 Goedel.Languages.LNN) (Lambda gen_var_482 (App Coq.Lists.List.In (App gen_var_179 Goedel.Languages.LNN) gen_var_478 (App cons (App gen_var_179 Goedel.Languages.LNN) gen_var_430 gen_var_431)) (App Coq.Init.Logic.or_ind (App eq (App gen_var_179 Goedel.Languages.LNN) gen_var_430 gen_var_478) (App Coq.Lists.List.In (App gen_var_179 Goedel.Languages.LNN) gen_var_478 gen_var_431) (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_478) (Lambda gen_var_480 (App eq (App gen_var_179 Goedel.Languages.LNN) gen_var_430 gen_var_478) (App Coq.Init.Logic.eq_ind (App gen_var_179 Goedel.Languages.LNN) gen_var_430 (Lambda gen_var_481 (App gen_var_179 Goedel.Languages.LNN) (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_481)) gen_var_474 gen_var_481 gen_var_480)) (Lambda gen_var_482 (App Coq.Lists.List.In (App gen_var_179 Goedel.Languages.LNN) gen_var_481 gen_var_431) (App gen_var_475 gen_var_481 gen_var_482)) gen_var_482))))) REVERTcast (App Coq.Init.Logic.not (Prod gen_var_483 (App gen_var_179 Goedel.Languages.LNN) (Prod Anonymous (App Coq.Lists.List.In (App gen_var_179 Goedel.Languages.LNN) gen_var_483 gen_var_431) (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_483))))) gen_var_458)) (Lambda gen_var_485 (Prod Anonymous (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430) False) (App gen_var_441 (App ex_intro Goedel.LNN.Formula (Lambda gen_var_487 Goedel.LNN.Formula (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_487 (App cons (App gen_var_179 Goedel.Languages.LNN) gen_var_430 gen_var_431)) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_487)))) gen_var_430 (Cast (App conj (App or (App eq Goedel.LNN.Formula gen_var_430 gen_var_430) (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_430 gen_var_431)) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430)) (App or_introl (App eq Goedel.LNN.Formula gen_var_430 gen_var_430) (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_430 gen_var_431) (App eq_refl Goedel.LNN.Formula gen_var_430)) gen_var_485) REVERTcast (App and (App Coq.Lists.List.In Goedel.LNN.Formula gen_var_430 (App cons (App gen_var_179 Goedel.Languages.LNN) gen_var_430 gen_var_431)) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430))))))) gen_var_485)) REVERTcast (App Coq.Init.Logic.not (App or (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430) (App Coq.Init.Logic.not (App Goedel.fol.mem (App gen_var_179 Goedel.Languages.LNN) gen_var_210 gen_var_430))))))))))))) gen_var_431 gen_var_438 gen_var_441))))) gen_var_450 gen_var_438 gen_var_385 gen_var_470))))) gen_var_438))) gen_var_458))) gen_var_438))) gen_var_357)) gen_var_438)))) gen_var_334)))) gen_var_346)))))) REVERTcast (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_210 (App Goedel.LNN.notH gen_var_310))))))))))))) REVERTcast (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_210 (App Goedel.LNN.notH (App Goedel.goedel1.G gen_var_212 gen_var_213)))))))))))))) (Definition Goedel.wConsistent.wCon2Con (Lambda gen_var_492 Goedel.LNN.System (Lambda gen_var_493 (App Goedel.wConsistent.wConsistent gen_var_492) (Cast (LetIn gen_var_494 (App Goedel.LNN.existSimp gen_var_492 (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.LNN.equal (App Goedel.LNN.var O) (App Goedel.LNN.var O)))) O (App Goedel.LNN.nnI gen_var_492 (App Goedel.LNN.equal (App Goedel.LNN.var O) (App Goedel.LNN.var O)) (App Goedel.LNN.eqRefl gen_var_492 (App Goedel.LNN.var O)))) (App Goedel.LNN.SysPrf gen_var_492 (App Goedel.LNN.existH O (App Goedel.LNN.notH (App Goedel.LNN.notH (App Goedel.LNN.equal (App Goedel.LNN.var O) (App Goedel.LNN.var O)))))) (LetIn gen_var_503 (Lambda gen_var_502 nat (Lambda gen_var_503 (App Coq.Lists.List.In nat gen_var_496 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.LNN.equal (App Goedel.LNN.var O) (App Goedel.LNN.var O))))) (App Coq.Init.Logic.or_ind (App eq nat O gen_var_496) (App or (App eq nat O gen_var_496) False) (App eq nat O gen_var_496) (Lambda gen_var_498 (App eq nat O gen_var_496) (App Coq.Init.Logic.eq_ind nat O (Lambda gen_var_499 nat (App eq nat O gen_var_499)) (App eq_refl nat O) gen_var_499 gen_var_498)) (Lambda gen_var_503 (App or (App eq nat O gen_var_499) False) (App Coq.Init.Logic.or_ind (App eq nat O gen_var_499) False (App eq nat O gen_var_499) (Lambda gen_var_501 (App eq nat O gen_var_499) (App Coq.Init.Logic.eq_ind nat O (Lambda gen_var_502 nat (App eq nat O gen_var_502)) (App eq_refl nat O) gen_var_502 gen_var_501)) (Lambda gen_var_503 False (App Coq.Init.Logic.False_ind (App eq nat O gen_var_502) gen_var_503)) gen_var_503)) gen_var_503))) (Prod gen_var_504 nat (Prod Anonymous (App Coq.Lists.List.In nat gen_var_504 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.LNN.equal (App Goedel.LNN.var O) (App Goedel.LNN.var O))))) (App eq nat O gen_var_504))) (LetIn gen_var_506 (App gen_var_493 (App Goedel.LNN.notH (App Goedel.LNN.equal (App Goedel.LNN.var O) (App Goedel.LNN.var O))) O gen_var_503 gen_var_494) (App ex nat (Lambda gen_var_507 nat (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_492 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.LNN.equal (App Goedel.LNN.var O) (App Goedel.LNN.var O))) O (App Goedel.LNN.natToTerm gen_var_507)))))) (App Coq.Init.Logic.ex_ind nat (Lambda gen_var_508 nat (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_492 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.LNN.equal (App Goedel.LNN.var O) (App Goedel.LNN.var O))) O (App Goedel.LNN.natToTerm gen_var_508))))) (App ex (App gen_var_179 Goedel.Languages.LNN) (Lambda gen_var_509 (App gen_var_179 Goedel.Languages.LNN) (App Coq.Init.Logic.not (App Goedel.folProof.SysPrf Goedel.Languages.LNN gen_var_492 gen_var_509)))) (Lambda gen_var_510 nat (Lambda gen_var_511 (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_492 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.LNN.equal (App Goedel.LNN.var O) (App Goedel.LNN.var O))) O (App Goedel.LNN.natToTerm gen_var_510)))) (App ex_intro (App gen_var_179 Goedel.Languages.LNN) (Lambda gen_var_512 (App gen_var_179 Goedel.Languages.LNN) (App Coq.Init.Logic.not (App Goedel.folProof.SysPrf Goedel.Languages.LNN gen_var_492 gen_var_512))) (App Goedel.folProp.substituteFormula Goedel.Languages.LNN (App Goedel.LNN.notH (App Goedel.LNN.equal (App Goedel.LNN.var O) (App Goedel.LNN.var O))) O (App Goedel.LNN.natToTerm gen_var_510)) gen_var_511))) gen_var_506)))) REVERTcast (App Goedel.folProof.Consistent Goedel.Languages.LNN gen_var_492))))) (Definition Goedel.folProof.Consistent (Lambda gen_var_513 Language (LetIn gen_var_514 (App gen_var_514 gen_var_513) (Sort Set) (LetIn gen_var_515 (App Goedel.fol.Formulas gen_var_513) (Sort Set) (LetIn gen_var_516 (App Goedel.fol.System gen_var_513) (Sort Type) (LetIn gen_var_517 (App gen_var_517 gen_var_513) (Sort Set) (LetIn gen_var_518 (App gen_var_518 gen_var_513) (Prod Anonymous nat (Sort Set)) (LetIn gen_var_520 (App var gen_var_513) (Prod Anonymous nat (App gen_var_517 gen_var_513)) (LetIn gen_var_522 (App apply gen_var_513) (Prod gen_var_523 (App Goedel.fol.Functions gen_var_513) (Prod Anonymous (App gen_var_518 gen_var_513 (App Goedel.fol.arity gen_var_513 (App inr (App Goedel.fol.Relations gen_var_513) (App Goedel.fol.Functions gen_var_513) gen_var_523))) (App gen_var_517 gen_var_513))) (LetIn gen_var_525 (App equal gen_var_513) (Prod Anonymous (App gen_var_517 gen_var_513) (Prod Anonymous (App gen_var_517 gen_var_513) (App gen_var_514 gen_var_513))) (LetIn gen_var_528 (App atomic gen_var_513) (Prod gen_var_529 (App Goedel.fol.Relations gen_var_513) (Prod Anonymous (App gen_var_518 gen_var_513 (App Goedel.fol.arity gen_var_513 (App inl (App Goedel.fol.Relations gen_var_513) (App Goedel.fol.Functions gen_var_513) gen_var_529))) (App gen_var_514 gen_var_513))) (LetIn gen_var_531 (App impH gen_var_513) (Prod Anonymous (App gen_var_514 gen_var_513) (Prod Anonymous (App gen_var_514 gen_var_513) (App gen_var_514 gen_var_513))) (LetIn gen_var_534 (App notH gen_var_513) (Prod Anonymous (App gen_var_514 gen_var_513) (App gen_var_514 gen_var_513)) (LetIn gen_var_536 (App Goedel.fol.iffH gen_var_513) (Prod gen_var_537 (App gen_var_514 gen_var_513) (Prod gen_var_538 (App gen_var_514 gen_var_513) (App gen_var_514 gen_var_513))) (LetIn gen_var_539 (App forallH gen_var_513) (Prod Anonymous nat (Prod Anonymous (App gen_var_514 gen_var_513) (App gen_var_514 gen_var_513))) (Lambda gen_var_542 gen_var_516 (App ex gen_var_514 (Lambda gen_var_543 gen_var_514 (App Coq.Init.Logic.not (App Goedel.folProof.SysPrf gen_var_513 gen_var_542 gen_var_543)))))))))))))))))))) (Definition Goedel.folProof.SysPrf (Lambda gen_var_546 Language (LetIn gen_var_547 (App gen_var_547 gen_var_546) (Sort Set) (LetIn gen_var_548 (App Goedel.fol.Formulas gen_var_546) (Sort Set) (LetIn gen_var_549 (App Goedel.fol.System gen_var_546) (Sort Type) (LetIn gen_var_550 (App gen_var_550 gen_var_546) (Sort Set) (LetIn gen_var_551 (App gen_var_551 gen_var_546) (Prod Anonymous nat (Sort Set)) (LetIn gen_var_553 (App var gen_var_546) (Prod Anonymous nat (App gen_var_550 gen_var_546)) (LetIn gen_var_555 (App apply gen_var_546) (Prod gen_var_556 (App Goedel.fol.Functions gen_var_546) (Prod Anonymous (App gen_var_551 gen_var_546 (App Goedel.fol.arity gen_var_546 (App inr (App Goedel.fol.Relations gen_var_546) (App Goedel.fol.Functions gen_var_546) gen_var_556))) (App gen_var_550 gen_var_546))) (LetIn gen_var_558 (App equal gen_var_546) (Prod Anonymous (App gen_var_550 gen_var_546) (Prod Anonymous (App gen_var_550 gen_var_546) (App gen_var_547 gen_var_546))) (LetIn gen_var_561 (App atomic gen_var_546) (Prod gen_var_562 (App Goedel.fol.Relations gen_var_546) (Prod Anonymous (App gen_var_551 gen_var_546 (App Goedel.fol.arity gen_var_546 (App inl (App Goedel.fol.Relations gen_var_546) (App Goedel.fol.Functions gen_var_546) gen_var_562))) (App gen_var_547 gen_var_546))) (LetIn gen_var_564 (App impH gen_var_546) (Prod Anonymous (App gen_var_547 gen_var_546) (Prod Anonymous (App gen_var_547 gen_var_546) (App gen_var_547 gen_var_546))) (LetIn gen_var_567 (App notH gen_var_546) (Prod Anonymous (App gen_var_547 gen_var_546) (App gen_var_547 gen_var_546)) (LetIn gen_var_569 (App Goedel.fol.iffH gen_var_546) (Prod gen_var_570 (App gen_var_547 gen_var_546) (Prod gen_var_571 (App gen_var_547 gen_var_546) (App gen_var_547 gen_var_546))) (LetIn gen_var_572 (App forallH gen_var_546) (Prod Anonymous nat (Prod Anonymous (App gen_var_547 gen_var_546) (App gen_var_547 gen_var_546))) (Lambda gen_var_575 gen_var_549 (Lambda gen_var_576 gen_var_547 (App ex gen_var_548 (Lambda gen_var_577 gen_var_548 (App ex (App Prf gen_var_546 gen_var_577 gen_var_576) (Lambda gen_var_578 (App Prf gen_var_546 gen_var_577 gen_var_576) (Prod gen_var_579 gen_var_547 (Prod Anonymous (App Coq.Lists.List.In gen_var_547 gen_var_579 gen_var_577) (App Goedel.fol.mem (App gen_var_547 gen_var_546) gen_var_575 gen_var_579)))))))))))))))))))))))) (Definition Coq.Init.Logic.False_ind (Lambda gen_var_588 (Sort Prop) (Lambda gen_var_589 False (Case 0 (Lambda Anonymous False gen_var_588) (CaseMatch gen_var_589) (CaseBranches))))) (Definition Goedel.goedel1.Goedel'sIncompleteness1st (Lambda gen_var_575 Goedel.LNN.System (Lambda gen_var_211 (App Coq.Sets.Ensembles.Included (App Formula Goedel.Languages.LNN) Goedel.NN.NN gen_var_1) (Lambda gen_var_212 Goedel.LNN.Formula (Lambda gen_var_213 nat (Lambda gen_var_214 (Prod gen_var_34 nat (Prod Anonymous (App Coq.Lists.List.In nat gen_var_11 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_8)) (App eq nat gen_var_34 gen_var_9))) (Lambda gen_var_148 (Prod gen_var_62 Goedel.LNN.Formula (Prod Anonymous (App Goedel.fol.mem (App Formula Goedel.Languages.LNN) gen_var_1 gen_var_37) (App Goedel.LNN.SysPrf gen_var_1 (App Goedel.folProp.substituteFormula Goedel.Languages.LNN gen_var_8 gen_var_9 (App Goedel.LNN.natToTerm (App Goedel.goedel1.codeFormula gen_var_62)))))) (Lambda gen_var_217 (Prod gen_var_72 Goedel.LNN.Formula (Prod Anonymous (App Coq.Init.Logic.not (App Goedel.fol.mem (App Formula Goedel.Languages.LNN) gen_var_1 gen_var_72)) (App Goedel.LNN.SysPrf gen_var_1 (App Goedel.LNN.notH (App Goedel.folProp.substituteFormula Goedel.Languages.LNN gen_var_8 gen_var_9 (App Goedel.LNN.natToTerm (App Goedel.goedel1.codeFormula gen_var_72))))))) (Lambda gen_var_493 (App Goedel.wConsistent.wConsistent gen_var_77) (App ex_intro Goedel.LNN.Formula (Lambda gen_var_85 Goedel.LNN.Formula (App and (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_77 gen_var_85)) (App and (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_77 (App Goedel.LNN.notH gen_var_85))) (Prod gen_var_86 nat (App Coq.Init.Logic.not (App Coq.Lists.List.In nat gen_var_86 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN gen_var_85))))))) (App Goedel.goedel1.G gen_var_87 gen_var_88) (LetIn gen_var_508 (App Goedel.goedel1.freeVarG gen_var_96 gen_var_97 gen_var_98) (Prod gen_var_139 nat (App Coq.Init.Logic.not (App Coq.Lists.List.In nat gen_var_139 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.G gen_var_96 gen_var_97))))) (LetIn gen_var_311 (App Goedel.goedel1.FirstIncompletenessA gen_var_141 gen_var_142 gen_var_143 gen_var_144 gen_var_145 gen_var_148) (Prod Anonymous (App Goedel.LNN.SysPrf gen_var_141 (App Goedel.goedel1.G gen_var_143 gen_var_144)) (App Goedel.folProof.Inconsistent Goedel.Languages.LNN gen_var_207)) (LetIn gen_var_209 (App Goedel.goedel1.FirstIncompletenessB gen_var_210 gen_var_211 gen_var_212 gen_var_213 gen_var_214 gen_var_217) (Prod Anonymous (App Goedel.wConsistent.wConsistent gen_var_210) (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_210 (App Goedel.LNN.notH (App Goedel.goedel1.G gen_var_212 gen_var_213))))) (LetIn gen_var_494 (Cast (Lambda gen_var_494 (App Goedel.folProof.Inconsistent Goedel.Languages.LNN gen_var_210) (LetIn gen_var_491 (App Goedel.wConsistent.wCon2Con gen_var_492 gen_var_493) (App Goedel.folProof.Consistent Goedel.Languages.LNN gen_var_542) (Case 2 (Lambda Anonymous (App ex (App gen_var_514 Goedel.Languages.LNN) (Lambda gen_var_576 (App gen_var_514 Goedel.Languages.LNN) (App Coq.Init.Logic.not (App Goedel.folProof.SysPrf Goedel.Languages.LNN gen_var_575 gen_var_576)))) False) (CaseMatch gen_var_491) (CaseBranches (Lambda gen_var_581 (App gen_var_547 Goedel.Languages.LNN) (Lambda gen_var_582 (App Coq.Init.Logic.not (App Goedel.folProof.SysPrf Goedel.Languages.LNN gen_var_575 gen_var_581)) (App gen_var_582 (App gen_var_494 gen_var_581)))))))) REVERTcast (App Coq.Init.Logic.not (App Goedel.folProof.Inconsistent Goedel.Languages.LNN gen_var_575))) (App Coq.Init.Logic.not (App Goedel.folProof.Inconsistent Goedel.Languages.LNN gen_var_575)) (LetIn gen_var_583 (App gen_var_209 gen_var_493) (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_575 (App Goedel.LNN.notH (App Goedel.goedel1.G gen_var_212 gen_var_213)))) (App conj (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_575 (App Goedel.goedel1.G gen_var_212 gen_var_213))) (App and (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_575 (App Goedel.LNN.notH (App Goedel.goedel1.G gen_var_212 gen_var_213)))) (Prod gen_var_584 nat (App Coq.Init.Logic.not (App Coq.Lists.List.In nat gen_var_584 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.G gen_var_212 gen_var_213)))))) (Cast (Lambda gen_var_585 (App Goedel.LNN.SysPrf gen_var_575 (App Goedel.goedel1.G gen_var_212 gen_var_213)) (LetIn gen_var_586 (App gen_var_311 gen_var_585) (App Goedel.folProof.Inconsistent Goedel.Languages.LNN gen_var_575) (LetIn gen_var_587 (App gen_var_494 gen_var_586) False (App Coq.Init.Logic.False_ind False gen_var_587)))) REVERTcast (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_575 (App Goedel.goedel1.G gen_var_212 gen_var_213)))) (App conj (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_575 (App Goedel.LNN.notH (App Goedel.goedel1.G gen_var_212 gen_var_213)))) (Prod gen_var_591 nat (App Coq.Init.Logic.not (App Coq.Lists.List.In nat gen_var_591 (App Goedel.folProp.freeVarFormula Goedel.Languages.LNN (App Goedel.goedel1.G gen_var_212 gen_var_213))))) (Cast (Lambda gen_var_592 (App Goedel.LNN.SysPrf gen_var_575 (App Goedel.LNN.notH (App Goedel.goedel1.G gen_var_212 gen_var_213))) (LetIn gen_var_593 (App gen_var_583 gen_var_592) False (App Coq.Init.Logic.False_ind False gen_var_593))) REVERTcast (App Coq.Init.Logic.not (App Goedel.LNN.SysPrf gen_var_575 (App Goedel.LNN.notH (App Goedel.goedel1.G gen_var_212 gen_var_213))))) gen_var_508))))))))))))))))) 