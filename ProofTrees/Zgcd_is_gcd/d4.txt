(Definition Coq.ZArith.BinIntDef.Z.abs (Lambda z_22222 Z (Case 0 (Lambda z_222222 Z Z) (CaseMatch z_22222) (CaseBranches Z0 (Lambda p_222222 positive (App Zpos p_222222)) (Lambda p_222222 positive (App Zpos p_222222)))))) (Definition Coq.PArith.BinPosDef.Pos.gcdn (Fix (Functions (App gcdn 0 (Prod n_222222221 nat (Prod a_2222222211 positive (Prod b_22222222111 positive positive))) (Lambda n_222222222 nat (Lambda a_2222222222 positive (Lambda b_22222222222 positive (Case 0 (Lambda n_222222222222 nat positive) (CaseMatch n_222222222) (CaseBranches xH (Lambda n_222222222222 nat (Case 0 (Lambda a_2222222222222 positive positive) (CaseMatch a_2222222222) (CaseBranches (Lambda a'_2222222222222 positive (Case 0 (Lambda b_22222222222222 positive positive) (CaseMatch b_22222222222) (CaseBranches (Lambda b'_22222222222222 positive (Case 0 (Lambda x_222222222222222 comparison positive) (CaseMatch (App Coq.PArith.BinPosDef.Pos.compare a'_2222222222222 b'_22222222222222)) (CaseBranches a_2222222222 (App gcdn n_222222222222 (App Coq.PArith.BinPosDef.Pos.sub b'_22222222222222 a'_2222222222222) a_2222222222) (App gcdn n_222222222222 (App Coq.PArith.BinPosDef.Pos.sub a'_2222222222222 b'_22222222222222) b_22222222222)))) (Lambda b_22222222222222 positive (App gcdn n_222222222222 a_2222222222 b_22222222222222)) xH))) (Lambda a_2222222222222 positive (Case 0 (Lambda b_22222222222222 positive positive) (CaseMatch b_22222222222) (CaseBranches (Lambda p_22222222222222 positive (App gcdn n_222222222222 a_2222222222222 b_22222222222)) (Lambda b_22222222222222 positive (App xO (App gcdn n_222222222222 a_2222222222222 b_22222222222222))) xH))) xH)))))))))) 0)) (Definition Coq.Init.Nat.add (Fix (Functions (App add 0 (Prod n_222222221 nat (Prod m_2222222211 nat nat)) (Lambda n_222222222 nat (Lambda m_2222222222 nat (Case 0 (Lambda n_22222222222 nat nat) (CaseMatch n_222222222) (CaseBranches m_2222222222 (Lambda p_22222222222 nat (App S (App add p_22222222222 m_2222222222))))))))) 0)) (Definition Coq.PArith.BinPosDef.Pos.size_nat (Fix (Functions (App size_nat 0 (Prod p_222222221 positive nat) (Lambda p_222222222 positive (Case 0 (Lambda p_2222222222 positive nat) (CaseMatch p_222222222) (CaseBranches (Lambda p_2222222222 positive (App S (App size_nat p_2222222222))) (Lambda p_2222222222 positive (App S (App size_nat p_2222222222))) (App S O)))))) 0)) (Definition Coq.PArith.BinPosDef.Pos.gcd (Lambda a_2222222 positive (Lambda b_22222222 positive (App Coq.PArith.BinPosDef.Pos.gcdn (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222) (App Coq.PArith.BinPosDef.Pos.size_nat b_22222222)) a_2222222 b_22222222)))) (Definition Coq.ZArith.BinIntDef.Z.gcd (Lambda a_222 Z (Lambda b_2222 Z (Case 0 (Lambda a_22222 Z Z) (CaseMatch a_222) (CaseBranches (App Coq.ZArith.BinIntDef.Z.abs b_2222) (Lambda a_22222 positive (Case 0 (Lambda b_222222 Z Z) (CaseMatch b_2222) (CaseBranches (App Coq.ZArith.BinIntDef.Z.abs a_222) (Lambda b_222222 positive (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd a_22222 b_222222))) (Lambda b_222222 positive (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd a_22222 b_222222)))))) (Lambda a_22222 positive (Case 0 (Lambda b_222222 Z Z) (CaseMatch b_2222) (CaseBranches (App Coq.ZArith.BinIntDef.Z.abs a_222) (Lambda b_222222 positive (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd a_22222 b_222222))) (Lambda b_222222 positive (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd a_22222 b_222222))))))))))) (Definition Coq.Init.Logic.eq_ind (Lambda A_22222 (Sort Type) (Lambda x_222222 A_22222 (Lambda P_2222222 (Prod out_2222221 A_22222 (Sort Prop)) (Lambda f_22222222 (App P_2222222 x_222222) (Lambda y_222222222 A_22222 (Lambda e_2222222222 (App eq A_22222 x_222222 y_222222222) (Case 2 (Lambda y_22222222222 A_22222 (Lambda out_222222222222 (App eq A_22222 x_222222 y_22222222222) (App P_2222222 y_22222222222))) (CaseMatch e_2222222222) (CaseBranches f_22222222))))))))) (Definition Coq.Init.Datatypes.fst (Lambda A_22222 (Sort Type) (Lambda B_222222 (Sort Type) (Lambda p_2222222 (App prod A_22222 B_222222) (Case 2 (Lambda p_22222222 (App prod A_22222 B_222222) A_22222) (CaseMatch p_2222222) (CaseBranches (Lambda x_22222222 A_22222 (Lambda y_222222222 B_222222 x_22222222)))))))) (Definition Coq.ZArith.BinIntDef.Z.sgn (Lambda z_2222222 Z (Case 0 (Lambda z_22222222 Z Z) (CaseMatch z_2222222) (CaseBranches Z0 (Lambda p_22222222 positive (App Zpos xH)) (Lambda p_22222222 positive (App Zneg xH)))))) (Definition Coq.PArith.BinPosDef.Pos.ggcd (Lambda a_222222222 positive (Lambda b_2222222222 positive (App Coq.PArith.BinPosDef.Pos.ggcdn (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_222222222) (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222)) a_222222222 b_2222222222)))) (Definition Coq.ZArith.BinIntDef.Z.ggcd (Lambda a_22222 Z (Lambda b_222222 Z (Case 0 (Lambda a_2222222 Z (App prod Z (App prod Z Z))) (CaseMatch a_22222) (CaseBranches (App pair Z (App prod Z Z) (App Coq.ZArith.BinIntDef.Z.abs b_222222) (App pair Z Z Z0 (App Coq.ZArith.BinIntDef.Z.sgn b_222222))) (Lambda a_2222222 positive (Case 0 (Lambda b_22222222 Z (App prod Z (App prod Z Z))) (CaseMatch b_222222) (CaseBranches (App pair Z (App prod Z Z) (App Coq.ZArith.BinIntDef.Z.abs a_22222) (App pair Z Z (App Coq.ZArith.BinIntDef.Z.sgn a_22222) Z0)) (Lambda b_22222222 positive (Case 2 (Lambda x_222222222 (App prod positive (App prod positive positive)) (App prod Z (App prod Z Z))) (CaseMatch (App Coq.PArith.BinPosDef.Pos.ggcd a_2222222 b_22222222)) (CaseBranches (Lambda g_222222222 positive (Lambda p_2222222222 (App prod positive positive) (Case 2 (Lambda p_22222222222 (App prod positive positive) (App prod Z (App prod Z Z))) (CaseMatch p_2222222222) (CaseBranches (Lambda aa_22222222222 positive (Lambda bb_222222222222 positive (App pair Z (App prod Z Z) (App Zpos g_222222222) (App pair Z Z (App Zpos aa_22222222222) (App Zpos bb_222222222222)))))))))))) (Lambda b_22222222 positive (Case 2 (Lambda x_222222222 (App prod positive (App prod positive positive)) (App prod Z (App prod Z Z))) (CaseMatch (App Coq.PArith.BinPosDef.Pos.ggcd a_2222222 b_22222222)) (CaseBranches (Lambda g_222222222 positive (Lambda p_2222222222 (App prod positive positive) (Case 2 (Lambda p_22222222222 (App prod positive positive) (App prod Z (App prod Z Z))) (CaseMatch p_2222222222) (CaseBranches (Lambda aa_22222222222 positive (Lambda bb_222222222222 positive (App pair Z (App prod Z Z) (App Zpos g_222222222) (App pair Z Z (App Zpos aa_22222222222) (App Zneg bb_222222222222))))))))))))))) (Lambda a_2222222 positive (Case 0 (Lambda b_22222222 Z (App prod Z (App prod Z Z))) (CaseMatch b_222222) (CaseBranches (App pair Z (App prod Z Z) (App Coq.ZArith.BinIntDef.Z.abs a_22222) (App pair Z Z (App Coq.ZArith.BinIntDef.Z.sgn a_22222) Z0)) (Lambda b_22222222 positive (Case 2 (Lambda x_222222222 (App prod positive (App prod positive positive)) (App prod Z (App prod Z Z))) (CaseMatch (App Coq.PArith.BinPosDef.Pos.ggcd a_2222222 b_22222222)) (CaseBranches (Lambda g_222222222 positive (Lambda p_2222222222 (App prod positive positive) (Case 2 (Lambda p_22222222222 (App prod positive positive) (App prod Z (App prod Z Z))) (CaseMatch p_2222222222) (CaseBranches (Lambda aa_22222222222 positive (Lambda bb_222222222222 positive (App pair Z (App prod Z Z) (App Zpos g_222222222) (App pair Z Z (App Zneg aa_22222222222) (App Zpos bb_222222222222)))))))))))) (Lambda b_22222222 positive (Case 2 (Lambda x_222222222 (App prod positive (App prod positive positive)) (App prod Z (App prod Z Z))) (CaseMatch (App Coq.PArith.BinPosDef.Pos.ggcd a_2222222 b_22222222)) (CaseBranches (Lambda g_222222222 positive (Lambda p_2222222222 (App prod positive positive) (Case 2 (Lambda p_22222222222 (App prod positive positive) (App prod Z (App prod Z Z))) (CaseMatch p_2222222222) (CaseBranches (Lambda aa_22222222222 positive (Lambda bb_222222222222 positive (App pair Z (App prod Z Z) (App Zpos g_222222222) (App pair Z Z (App Zneg aa_22222222222) (App Zneg bb_222222222222)))))))))))))))))))) (Definition Coq.ZArith.BinIntDef.Z.mul (Lambda x_222222222 Z (Lambda y_2222222222 Z (Case 0 (Lambda x_22222222222 Z Z) (CaseMatch x_222222222) (CaseBranches Z0 (Lambda x'_22222222222 positive (Case 0 (Lambda y_222222222222 Z Z) (CaseMatch y_2222222222) (CaseBranches Z0 (Lambda y'_222222222222 positive (App Zpos (App Coq.PArith.BinPosDef.Pos.mul x'_22222222222 y'_222222222222))) (Lambda y'_222222222222 positive (App Zneg (App Coq.PArith.BinPosDef.Pos.mul x'_22222222222 y'_222222222222)))))) (Lambda x'_22222222222 positive (Case 0 (Lambda y_222222222222 Z Z) (CaseMatch y_2222222222) (CaseBranches Z0 (Lambda y'_222222222222 positive (App Zneg (App Coq.PArith.BinPosDef.Pos.mul x'_22222222222 y'_222222222222))) (Lambda y'_222222222222 positive (App Zpos (App Coq.PArith.BinPosDef.Pos.mul x'_22222222222 y'_222222222222))))))))))) (Definition Coq.ZArith.BinInt.Z.divide (Lambda x_222222 Z (Lambda y_2222222 Z (App ex Z (Lambda z_22222222 Z (App eq Z y_2222222 (App Coq.ZArith.BinIntDef.Z.mul z_22222222 x_222222))))))) (Definition Coq.Init.Logic.eq_sym (Lambda A_2222322222222222222 (Sort Type) (Lambda x_22223222222222222222 A_2222322222222222222 (Lambda y_222232222222222222222 A_2222322222222222222 (Lambda H_2222322222222222222222 (App eq A_2222322222222222222 x_22223222222222222222 y_222232222222222222222) (Case 2 (Lambda y_22223222222222222222222 A_2222322222222222222 (Lambda out_222232222222222222222222 (App eq A_2222322222222222222 x_22223222222222222222 y_22223222222222222222222) (App eq A_2222322222222222222 y_22223222222222222222222 x_22223222222222222222))) (CaseMatch H_2222322222222222222222) (CaseBranches (App eq_refl A_2222322222222222222 x_22223222222222222222)))))))) (Definition Coq.Init.Logic.eq_ind_r (Lambda A_2222322222222 (Sort Type) (Lambda x_22223222222222 A_2222322222222 (Lambda P_222232222222222 (Prod out_222232222222221 A_2222322222222 (Sort Prop)) (Lambda H_2222322222222222 (App P_222232222222222 x_22223222222222) (Lambda y_22223222222222222 A_2222322222222 (Lambda H0_222232222222222222 (App eq A_2222322222222 y_22223222222222222 x_22223222222222) (App Coq.Init.Logic.eq_ind A_2222322222222 x_22223222222222 (Lambda y_2222322222222222222 A_2222322222222 (App P_222232222222222 y_2222322222222222222)) H_2222322222222222 y_22223222222222222 (App Coq.Init.Logic.eq_sym A_2222322222222 y_22223222222222222 x_22223222222222 H0_222232222222222222))))))))) (Definition Coq.ZArith.BinInt.Z.bi_induction (Lambda P_222232222222222 (Prod out_222232222222221 Z (Sort Prop)) (Lambda _tmp_2222322222222222 (App Coq.Classes.Morphisms.Proper (Prod out_2222322222222221 Z (Sort Prop)) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) Coq.ZArith.BinInt.Z.eq Coq.Init.Logic.iff) P_222232222222222) (Lambda H0_22223222222222222 (App P_222232222222222 Z0) (Lambda Hs_222232222222222222 (Prod x_222232222222222221 Z (App Coq.Init.Logic.iff (App P_222232222222222 x_222232222222222221) (App P_222232222222222 (App Coq.ZArith.BinIntDef.Z.succ x_222232222222222221)))) (Lambda z_2222322222222222222 Z (App Coq.ZArith.BinInt.Z.peano_ind (Lambda z_22223222222222222222 Z (App P_222232222222222 z_22223222222222222222)) H0_22223222222222222 (Lambda z_22223222222222222222 Z (Lambda IHz_222232222222222222222 (App P_222232222222222 z_22223222222222222222) (LetIn H_2222322222222222222223 Hs_222232222222222222 (Prod x_2222322222222222222221 Z (App Coq.Init.Logic.iff (App P_222232222222222 x_2222322222222222222221) (App P_222232222222222 (App Coq.ZArith.BinIntDef.Z.succ x_2222322222222222222221)))) (LetIn a_22223222222222222222233 z_22223222222222222222 Z (LetIn H1_222232222222222222222333 (App H_2222322222222222222223 a_22223222222222222222233) (App Coq.Init.Logic.iff (App P_222232222222222 a_22223222222222222222233) (App P_222232222222222 (App Coq.ZArith.BinIntDef.Z.succ a_22223222222222222222233))) (Case 2 (Lambda out_2222322222222222222223332 (App and (Prod out_2222322222222222222223331 (App P_222232222222222 z_22223222222222222222) (App P_222232222222222 (App Coq.ZArith.BinIntDef.Z.succ z_22223222222222222222))) (Prod out_2222322222222222222223331 (App P_222232222222222 (App Coq.ZArith.BinIntDef.Z.succ z_22223222222222222222)) (App P_222232222222222 z_22223222222222222222))) (App P_222232222222222 (App Coq.ZArith.BinIntDef.Z.succ z_22223222222222222222))) (CaseMatch H1_222232222222222222222333) (CaseBranches (Lambda H_2222322222222222222223332 (Prod out_2222322222222222222223331 (App P_222232222222222 z_22223222222222222222) (App P_222232222222222 (App Coq.ZArith.BinIntDef.Z.succ z_22223222222222222222))) (Lambda _tmp_22223222222222222222233322 (Prod out_22223222222222222222233321 (App P_222232222222222 (App Coq.ZArith.BinIntDef.Z.succ z_22223222222222222222)) (App P_222232222222222 z_22223222222222222222)) (App H_2222322222222222222223332 IHz_222232222222222222222)))))))))) (Lambda z_22223222222222222222 Z (Lambda IHz_222232222222222222222 (App P_222232222222222 z_22223222222222222222) (LetIn H_2222322222222222222223 (Lambda x_2222322222222222222222 Z (Case 2 (Lambda out_22223222222222222222222 (App and (Prod out_22223222222222222222221 (App P_222232222222222 x_2222322222222222222222) (App P_222232222222222 (App Coq.ZArith.BinIntDef.Z.succ x_2222322222222222222222))) (Prod out_22223222222222222222221 (App P_222232222222222 (App Coq.ZArith.BinIntDef.Z.succ x_2222322222222222222222)) (App P_222232222222222 x_2222322222222222222222))) (Prod out_222232222222222222222221 (App P_222232222222222 (App Coq.ZArith.BinIntDef.Z.succ x_2222322222222222222222)) (App P_222232222222222 x_2222322222222222222222))) (CaseMatch (App Hs_222232222222222222 x_2222322222222222222222)) (CaseBranches (Lambda out_22223222222222222222222 (Prod out_22223222222222222222221 (App P_222232222222222 x_2222322222222222222222) (App P_222232222222222 (App Coq.ZArith.BinIntDef.Z.succ x_2222322222222222222222))) (Lambda out_222232222222222222222222 (Prod out_222232222222222222222221 (App P_222232222222222 (App Coq.ZArith.BinIntDef.Z.succ x_2222322222222222222222)) (App P_222232222222222 x_2222322222222222222222)) out_222232222222222222222222))))) (Prod x_2222322222222222222221 Z (Prod out_22223222222222222222211 (App P_222232222222222 (App Coq.ZArith.BinIntDef.Z.succ x_2222322222222222222221)) (App P_222232222222222 x_2222322222222222222221))) (App H_2222322222222222222223 (App Coq.ZArith.BinIntDef.Z.pred z_22223222222222222222) (App Coq.Init.Logic.eq_ind_r Z z_22223222222222222222 (Lambda z_22223222222222222222232 Z (App P_222232222222222 z_22223222222222222222232)) IHz_222232222222222222222 (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.pred z_22223222222222222222)) (App Coq.ZArith.BinInt.Z.succ_pred z_22223222222222222222)))))) z_2222322222222222222))))))) (Definition Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (LetIn U_222232222222222223 (Sort Type) (Sort Type) (Lambda A_2222322222222222232 U_222232222222222223 (Lambda R_22223222222222222322 (App Coq.Relations.Relation_Definitions.relation A_2222322222222222232) (Lambda H_222232222222222223222 (App Coq.Classes.RelationClasses.Transitive A_2222322222222222232 R_22223222222222222322) (App (Lambda R_2222322222222222232222 (App Coq.Relations.Relation_Definitions.relation A_2222322222222222232) (Lambda H_22223222222222222322222 (App Coq.Classes.RelationClasses.Transitive A_2222322222222222232 R_2222322222222222232222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1 A_2222322222222222232 R_2222322222222222232222 H_22223222222222222322222))) R_22223222222222222322 H_222232222222222223222)))))) (Definition Coq.Init.Logic.iff (Lambda A_222232222222222222 (Sort Prop) (Lambda B_2222322222222222222 (Sort Prop) (App and (Prod out_22223222222222222221 A_222232222222222222 B_2222322222222222222) (Prod out_22223222222222222221 B_2222322222222222222 A_222232222222222222))))) (Definition Coq.Classes.RelationClasses.iff_Transitive Coq.Init.Logic.iff_trans) (Definition Coq.Classes.Morphisms.PER_morphism (LetIn U_222232222222222223 (Sort Type) (Sort Type) (Lambda A_2222322222222222232 U_222232222222222223 (Lambda R_22223222222222222322 (App Coq.Relations.Relation_Definitions.relation A_2222322222222222232) (Lambda H_222232222222222223222 (App PER A_2222322222222222232 R_22223222222222222322) (App (Lambda R_2222322222222222232222 (App Coq.Relations.Relation_Definitions.relation A_2222322222222222232) (Lambda H_22223222222222222322222 (App PER A_2222322222222222232 R_2222322222222222232222) (App Coq.Classes.Morphisms.PER_morphism_obligation_1 A_2222322222222222232 R_2222322222222222232222 H_22223222222222222322222))) R_22223222222222222322 H_222232222222222223222)))))) (Definition Coq.Classes.RelationClasses.Equivalence_PER (Lambda A_222232222222222222 (Sort Type) (Lambda R_2222322222222222222 (App Coq.Relations.Relation_Definitions.relation A_222232222222222222) (Lambda E_22223222222222222222 (App Equivalence A_222232222222222222 R_2222322222222222222) (App Build_PER A_222232222222222222 R_2222322222222222222 (App Coq.Classes.RelationClasses.Equivalence_Symmetric A_222232222222222222 R_2222322222222222222 E_22223222222222222222) (App Coq.Classes.RelationClasses.Equivalence_Transitive A_222232222222222222 R_2222322222222222222 E_22223222222222222222)))))) (Definition Coq.ZArith.BinInt.Z.eq_equiv (App Coq.Classes.RelationClasses.eq_equivalence Z)) (Definition Coq.ZArith.BinInt.Z.mul_wd (App Coq.Classes.Morphisms.reflexive_proper (Prod out_222232222222222221 Z (Prod out_2222322222222222211 Z Z)) (App Coq.Classes.Morphisms.respectful Z (Prod out_222232222222222221 Z Z) Coq.ZArith.BinInt.Z.eq (App Coq.Classes.Morphisms.respectful Z Z Coq.ZArith.BinInt.Z.eq Coq.ZArith.BinInt.Z.eq)) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive Z (Prod out_222232222222222221 Z Z) (App Coq.Classes.Morphisms.respectful Z Z Coq.ZArith.BinInt.Z.eq Coq.ZArith.BinInt.Z.eq) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive Z Z Coq.ZArith.BinInt.Z.eq (App Coq.Classes.RelationClasses.eq_Reflexive Z))) Coq.ZArith.BinIntDef.Z.mul)) (Definition Coq.Classes.Morphisms.reflexive_proper_proxy (LetIn U_222232222222222223 (Sort Type) (Sort Type) (Lambda A_2222322222222222232 U_222232222222222223 (Lambda R_22223222222222222322 (App Coq.Relations.Relation_Definitions.relation A_2222322222222222232) (Lambda H_222232222222222223222 (App Coq.Classes.RelationClasses.Reflexive A_2222322222222222232 R_22223222222222222322) (Lambda x_2222322222222222232222 A_2222322222222222232 (App (Lambda H0_22223222222222222322222 (App R_22223222222222222322 x_2222322222222222232222 x_2222322222222222232222) H0_22223222222222222322222) (App H_222232222222222223222 x_2222322222222222232222)))))))) (Definition Coq.Classes.RelationClasses.Equivalence_Reflexive (Lambda A_222232222222222222 (Sort Type) (Lambda R_2222322222222222222 (App Coq.Relations.Relation_Definitions.relation A_222232222222222222) (Lambda Equivalence_22223222222222222222 (App Equivalence A_222232222222222222 R_2222322222222222222) (Case 2 (Lambda Equivalence_222232222222222222222 (App Equivalence A_222232222222222222 R_2222322222222222222) (App Coq.Classes.RelationClasses.Reflexive A_222232222222222222 R_2222322222222222222)) (CaseMatch Equivalence_22223222222222222222) (CaseBranches (Lambda Equivalence_Reflexive_222232222222222222222 (App Coq.Classes.RelationClasses.Reflexive A_222232222222222222 R_2222322222222222222) (Lambda Equivalence_Symmetric_2222322222222222222222 (App Coq.Classes.RelationClasses.Symmetric A_222232222222222222 R_2222322222222222222) (Lambda Equivalence_Transitive_22223222222222222222222 (App Coq.Classes.RelationClasses.Transitive A_222232222222222222 R_2222322222222222222) Equivalence_Reflexive_222232222222222222222))))))))) (Definition Coq.Classes.Morphisms.Reflexive_partial_app_morphism (LetIn U_222232222222222223 (Sort Type) (Sort Type) (Lambda A_2222322222222222232 U_222232222222222223 (Lambda B_22223222222222222322 U_222232222222222223 (Lambda R_222232222222222223222 (App Coq.Relations.Relation_Definitions.relation A_2222322222222222232) (Lambda R'_2222322222222222232222 (App Coq.Relations.Relation_Definitions.relation B_22223222222222222322) (Lambda m_22223222222222222322222 (Prod out_22223222222222222322221 A_2222322222222222232 B_22223222222222222322) (Lambda H_222232222222222223222222 (App Coq.Classes.Morphisms.Proper (Prod out_222232222222222223222221 A_2222322222222222232 B_22223222222222222322) (App Coq.Classes.Morphisms.respectful A_2222322222222222232 B_22223222222222222322 R_222232222222222223222 R'_2222322222222222232222) m_22223222222222222322222) (Lambda x_2222322222222222232222222 A_2222322222222222232 (Lambda H0_22223222222222222322222222 (App Coq.Classes.Morphisms.ProperProxy A_2222322222222222232 R_222232222222222223222 x_2222322222222222232222222) (Cast (Cast (Cast (Cast (App H_222232222222222223222222 x_2222322222222222232222222 x_2222322222222222232222222 H0_22223222222222222322222222) REVERTcast (App R'_2222322222222222232222 (App m_22223222222222222322222 x_2222322222222222232222222) (App m_22223222222222222322222 x_2222322222222222232222222))) REVERTcast (App R'_2222322222222222232222 (App m_22223222222222222322222 x_2222322222222222232222222) (App m_22223222222222222322222 x_2222322222222222232222222))) REVERTcast (App Coq.Classes.Morphisms.Proper B_22223222222222222322 R'_2222322222222222232222 (App m_22223222222222222322222 x_2222322222222222232222222))) REVERTcast (App Coq.Classes.Morphisms.Proper B_22223222222222222322 R'_2222322222222222232222 (App m_22223222222222222322222 x_2222322222222222232222222))))))))))))) (Definition Coq.Classes.Morphisms.respectful (LetIn U_222232222222222223 (Sort Type) (Sort Type) (Lambda A_2222322222222222232 U_222232222222222223 (Lambda B_22223222222222222322 U_222232222222222223 (Lambda R_222232222222222223222 (App Coq.Relations.Relation_Definitions.relation A_2222322222222222232) (Lambda R'_2222322222222222232222 (App Coq.Relations.Relation_Definitions.relation B_22223222222222222322) (Lambda f_22223222222222222322222 (Prod x_22223222222222222322221 A_2222322222222222232 B_22223222222222222322) (Lambda g_222232222222222223222222 (Prod x_222232222222222223222221 A_2222322222222222232 B_22223222222222222322) (Prod x_2222322222222222232222221 A_2222322222222222232 (Prod y_22223222222222222322222211 A_2222322222222222232 (Prod out_222232222222222223222222111 (App R_222232222222222223222 x_2222322222222222232222221 y_22223222222222222322222211) (App R'_2222322222222222232222 (App f_22223222222222222322222 x_2222322222222222232222221) (App g_222232222222222223222222 y_22223222222222222322222211))))))))))))) (Definition Coq.Classes.Morphisms.eq_proper_proxy (LetIn U_222232222222222223 (Sort Type) (Sort Type) (Lambda A_2222322222222222232 U_222232222222222223 (Lambda x_22223222222222222322 A_2222322222222222232 (App eq_refl A_2222322222222222232 x_22223222222222222322))))) (Definition Coq.Classes.RelationClasses.reflexivity (Lambda A_222232222222222222 (Sort Type) (Lambda R_2222322222222222222 (App Coq.Relations.Relation_Definitions.relation A_222232222222222222) (Lambda Reflexive_22223222222222222222 (App Coq.Classes.RelationClasses.Reflexive A_222232222222222222 R_2222322222222222222) Reflexive_22223222222222222222)))) (Definition Coq.Classes.RelationClasses.iff_Reflexive Coq.Init.Logic.iff_refl) (Definition Coq.Classes.Morphisms.Proper (LetIn U_222232222222223 (Sort Type) (Sort Type) (Lambda A_2222322222222232 U_222232222222223 (Lambda R_22223222222222322 (App Coq.Relations.Relation_Definitions.relation A_2222322222222232) (Lambda m_222232222222223222 A_2222322222222232 (App R_22223222222222322 m_222232222222223222 m_222232222222223222)))))) (Definition Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (LetIn U_2222322222222223 (Sort Type) (Sort Type) (Lambda A_22223222222222232 U_2222322222222223 (Lambda R_222232222222222322 (App Coq.Relations.Relation_Definitions.relation A_22223222222222232) (Lambda H_2222322222222223222 (App PER A_22223222222222232 R_222232222222222322) (Lambda x_22223222222222232222 A_22223222222222232 (App (Lambda R_222232222222222322222 (App Coq.Relations.Relation_Definitions.relation A_22223222222222232) (Lambda H_2222322222222223222222 (App PER A_22223222222222232 R_222232222222222322222) (Lambda x_22223222222222232222222 A_22223222222222232 (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1 A_22223222222222232 R_222232222222222322222 H_2222322222222223222222 x_22223222222222232222222)))) R_222232222222222322 H_2222322222222223222 x_22223222222222232222))))))) (Definition Coq.ZArith.BinInt.Z.mul_0_r (Lambda n_222232222222222 Z (Cast (App Coq.ZArith.BinInt.Z.bi_induction (Lambda t_2222322222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul t_2222322222222222 Z0) Z0)) (Cast (Cast (Lambda x_2222322222222222 Z (Lambda y_22223222222222222 Z (Lambda H_222232222222222222 (App eq Z x_2222322222222222 y_22223222222222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App eq Z (App Coq.ZArith.BinIntDef.Z.mul x_2222322222222222 Z0) Z0) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_22223222222222222 Z0) Z0) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul x_2222322222222222 Z0) (App Coq.ZArith.BinIntDef.Z.mul y_22223222222222222 Z0) (App Coq.ZArith.BinInt.Z.mul_wd x_2222322222222222 y_22223222222222222 H_222232222222222222 Z0 Z0 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) Z0)) Z0 Z0 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) Z0)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_22223222222222222 Z0) Z0) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_22223222222222222 Z0) Z0) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_22223222222222222 Z0) Z0)) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_22223222222222222 Z0) Z0)))))) REVERTcast (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff (Lambda t_2222322222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul t_2222322222222222 Z0) Z0)) (Lambda t_2222322222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul t_2222322222222222 Z0) Z0)))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_2222322222222221 Z (Sort Prop)) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff) (Lambda t_2222322222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul t_2222322222222222 Z0) Z0)))) (App (Lambda lemma_2222322222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul Z0 Z0) Z0) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Transitive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul Z0 Z0) Z0 lemma_2222322222222222 Z0 Z0 (App Coq.Classes.Morphisms.eq_proper_proxy Z Z0))) (App Coq.ZArith.BinInt.Z.mul_0_l Z0) (App Coq.Classes.RelationClasses.reflexivity Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) Z0)) (Lambda n_2222322222222222 Z (App (Lambda lemma_22223222222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_2222322222222222) Z0) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_2222322222222222 Z0) Z0)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_2222322222222222 Z0) Z0) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_2222322222222222) Z0) Z0) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_2222322222222222 Z0) Z0) Z0) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_2222322222222222) Z0) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_2222322222222222 Z0) Z0) lemma_22223222222222222 Z0 Z0 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) Z0)))) (App Coq.ZArith.BinInt.Z.mul_succ_l n_2222322222222222 Z0) (App (Lambda lemma_22223222222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_2222322222222222 Z0) Z0) (App Coq.ZArith.BinIntDef.Z.mul n_2222322222222222 Z0)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_2222322222222222 Z0) Z0) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_2222322222222222 Z0) Z0) Z0) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_2222322222222222 Z0) Z0) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_2222322222222222 Z0) Z0) (App Coq.ZArith.BinIntDef.Z.mul n_2222322222222222 Z0) lemma_22223222222222222 Z0 Z0 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) Z0)))) (App Coq.ZArith.BinInt.Z.add_0_r (App Coq.ZArith.BinIntDef.Z.mul n_2222322222222222 Z0)) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_2222322222222222 Z0) Z0))))) n_222232222222222) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222 Z0) Z0)))) (Definition Coq.Classes.RelationClasses.Equivalence_Transitive (Lambda A_2222322222222222 (Sort Type) (Lambda R_22223222222222222 (App Coq.Relations.Relation_Definitions.relation A_2222322222222222) (Lambda Equivalence_222232222222222222 (App Equivalence A_2222322222222222 R_22223222222222222) (Case 2 (Lambda Equivalence_2222322222222222222 (App Equivalence A_2222322222222222 R_22223222222222222) (App Coq.Classes.RelationClasses.Transitive A_2222322222222222 R_22223222222222222)) (CaseMatch Equivalence_222232222222222222) (CaseBranches (Lambda Equivalence_Reflexive_2222322222222222222 (App Coq.Classes.RelationClasses.Reflexive A_2222322222222222 R_22223222222222222) (Lambda Equivalence_Symmetric_22223222222222222222 (App Coq.Classes.RelationClasses.Symmetric A_2222322222222222 R_22223222222222222) (Lambda Equivalence_Transitive_222232222222222222222 (App Coq.Classes.RelationClasses.Transitive A_2222322222222222 R_22223222222222222) Equivalence_Transitive_222232222222222222222))))))))) (Definition Coq.ZArith.BinInt.Z.mul_0_l (Lambda n_222232222222222 Z (App eq_refl Z Z0))) (Definition Coq.ZArith.BinIntDef.Z.succ (Lambda x_2222322222222222 Z (App Coq.ZArith.BinIntDef.Z.add x_2222322222222222 (App Zpos xH)))) (Definition Coq.ZArith.BinIntDef.Z.add (Lambda x_2222322222222222 Z (Lambda y_22223222222222222 Z (Case 0 (Lambda x_222232222222222222 Z Z) (CaseMatch x_2222322222222222) (CaseBranches y_22223222222222222 (Lambda x'_222232222222222222 positive (Case 0 (Lambda y_2222322222222222222 Z Z) (CaseMatch y_22223222222222222) (CaseBranches x_2222322222222222 (Lambda y'_2222322222222222222 positive (App Zpos (App Coq.PArith.BinPosDef.Pos.add x'_222232222222222222 y'_2222322222222222222))) (Lambda y'_2222322222222222222 positive (App Coq.ZArith.BinIntDef.Z.pos_sub x'_222232222222222222 y'_2222322222222222222))))) (Lambda x'_222232222222222222 positive (Case 0 (Lambda y_2222322222222222222 Z Z) (CaseMatch y_22223222222222222) (CaseBranches x_2222322222222222 (Lambda y'_2222322222222222222 positive (App Coq.ZArith.BinIntDef.Z.pos_sub y'_2222322222222222222 x'_222232222222222222)) (Lambda y'_2222322222222222222 positive (App Zneg (App Coq.PArith.BinPosDef.Pos.add x'_222232222222222222 y'_2222322222222222222))))))))))) (Definition Coq.Classes.RelationClasses.iff_equivalence (App Build_Equivalence (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive Coq.Classes.RelationClasses.iff_Symmetric Coq.Classes.RelationClasses.iff_Transitive)) (Definition Coq.Classes.Morphisms.per_partial_app_morphism (LetIn U_22223222222222223 (Sort Type) (Sort Type) (Lambda A_222232222222222232 U_22223222222222223 (Lambda R_2222322222222222322 (App Coq.Relations.Relation_Definitions.relation A_222232222222222232) (Lambda H_22223222222222223222 (App PER A_222232222222222232 R_2222322222222222322) (Lambda x_222232222222222232222 A_222232222222222232 (App (Lambda R_2222322222222222322222 (App Coq.Relations.Relation_Definitions.relation A_222232222222222232) (Lambda H_22223222222222223222222 (App PER A_222232222222222232 R_2222322222222222322222) (Lambda x_222232222222222232222222 A_222232222222222232 (App Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1 A_222232222222222232 R_2222322222222222322222 H_22223222222222223222222 x_222232222222222232222222)))) R_2222322222222222322 H_22223222222222223222 x_222232222222222232222))))))) (Definition Coq.ZArith.BinInt.Z.mul_succ_r (Lambda n_2222322222222222 Z (Lambda m_22223222222222222 Z (Cast (App Coq.ZArith.BinInt.Z.bi_induction (Lambda t_222232222222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul t_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul t_222232222222222222 m_22223222222222222) t_222232222222222222))) (Cast (Cast (Lambda x_222232222222222222 Z (Lambda y_2222322222222222222 Z (Lambda H_22223222222222222222 (App eq Z x_222232222222222222 y_2222322222222222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App eq Z (App Coq.ZArith.BinIntDef.Z.mul x_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_222232222222222222 m_22223222222222222) x_222232222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_2222322222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul y_2222322222222222222 m_22223222222222222) y_2222322222222222222)) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul x_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.mul y_2222322222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinInt.Z.mul_wd x_222232222222222222 y_2222322222222222222 H_22223222222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_222232222222222222 m_22223222222222222) x_222232222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul y_2222322222222222222 m_22223222222222222) y_2222322222222222222) (App Coq.ZArith.BinInt.Z.add_wd (App Coq.ZArith.BinIntDef.Z.mul x_222232222222222222 m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.mul y_2222322222222222222 m_22223222222222222) (App Coq.ZArith.BinInt.Z.mul_wd x_222232222222222222 y_2222322222222222222 H_22223222222222222222 m_22223222222222222 m_22223222222222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) m_22223222222222222)) x_222232222222222222 y_2222322222222222222 H_22223222222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_2222322222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul y_2222322222222222222 m_22223222222222222) y_2222322222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_2222322222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul y_2222322222222222222 m_22223222222222222) y_2222322222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_2222322222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul y_2222322222222222222 m_22223222222222222) y_2222322222222222222))) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_2222322222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul y_2222322222222222222 m_22223222222222222) y_2222322222222222222))))))) REVERTcast (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff (Lambda t_222232222222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul t_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul t_222232222222222222 m_22223222222222222) t_222232222222222222))) (Lambda t_222232222222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul t_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul t_222232222222222222 m_22223222222222222) t_222232222222222222))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_222232222222222221 Z (Sort Prop)) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff) (Lambda t_222232222222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul t_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul t_222232222222222222 m_22223222222222222) t_222232222222222222))))) (App (Lambda lemma_222232222222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul Z0 m_22223222222222222) Z0) (App Coq.ZArith.BinIntDef.Z.mul Z0 m_22223222222222222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul Z0 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul Z0 m_22223222222222222) Z0) (App Coq.ZArith.BinIntDef.Z.mul Z0 m_22223222222222222) lemma_222232222222222222)) (App Coq.ZArith.BinInt.Z.add_0_r (App Coq.ZArith.BinIntDef.Z.mul Z0 m_22223222222222222)) (App (Lambda lemma_222232222222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul Z0 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) Z0) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Transitive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul Z0 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) Z0 lemma_222232222222222222 (App Coq.ZArith.BinIntDef.Z.mul Z0 m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.mul Z0 m_22223222222222222) (App Coq.Classes.Morphisms.eq_proper_proxy Z (App Coq.ZArith.BinIntDef.Z.mul Z0 m_22223222222222222)))) (App Coq.ZArith.BinInt.Z.mul_0_l (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App (Lambda lemma_222232222222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul Z0 m_22223222222222222) Z0) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) Z0 (App Coq.ZArith.BinIntDef.Z.mul Z0 m_22223222222222222) Z0 lemma_222232222222222222)) (App Coq.ZArith.BinInt.Z.mul_0_l m_22223222222222222) (App Coq.Classes.RelationClasses.reflexivity Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) Z0)))) (Lambda n_222232222222222222 Z (App (Lambda lemma_2222322222222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) m_22223222222222222) n_222232222222222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) n_222232222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) m_22223222222222222) n_222232222222222222))) (App Coq.Classes.Morphisms.per_partial_app_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) m_22223222222222222) n_222232222222222222)) lemma_2222322222222222222))) (App Coq.ZArith.BinInt.Z.add_succ_r (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) m_22223222222222222) n_222232222222222222) (App (Lambda lemma_2222322222222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) n_222232222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) m_22223222222222222) n_222232222222222222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) m_22223222222222222) n_222232222222222222))) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) lemma_2222322222222222222 (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) m_22223222222222222) n_222232222222222222)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) m_22223222222222222) n_222232222222222222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) m_22223222222222222) n_222232222222222222)))))) (App Coq.ZArith.BinInt.Z.mul_succ_l n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App (Lambda lemma_2222322222222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) m_22223222222222222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) n_222232222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) m_22223222222222222) n_222232222222222222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) m_22223222222222222) n_222232222222222222))) (App Coq.Classes.Morphisms.per_partial_app_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) m_22223222222222222) n_222232222222222222)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) m_22223222222222222) n_222232222222222222)) (App Coq.ZArith.BinInt.Z.succ_wd (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) m_22223222222222222) n_222232222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) m_22223222222222222) n_222232222222222222) (App Coq.ZArith.BinInt.Z.add_wd (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222222) m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) m_22223222222222222) lemma_2222322222222222222 n_222232222222222222 n_222232222222222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) n_222232222222222222)))))) (App Coq.ZArith.BinInt.Z.mul_succ_l n_222232222222222222 m_22223222222222222) (App (Lambda lemma_2222322222222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) m_22223222222222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) n_222232222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) m_22223222222222222) n_222232222222222222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) m_22223222222222222) n_222232222222222222))) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) m_22223222222222222)) lemma_2222322222222222222 (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) m_22223222222222222) n_222232222222222222)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) m_22223222222222222) n_222232222222222222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) m_22223222222222222) n_222232222222222222)))))) (App Coq.ZArith.BinInt.Z.add_succ_r (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) m_22223222222222222) (App (Lambda lemma_2222322222222222222 (App Coq.Init.Logic.iff (App eq Z (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) m_22223222222222222) n_222232222222222222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) m_22223222222222222) n_222232222222222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) n_222232222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) m_22223222222222222) n_222232222222222222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) m_22223222222222222) n_222232222222222222)) lemma_2222322222222222222)) (App Coq.ZArith.BinInt.Z.succ_inj_wd (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) m_22223222222222222) n_222232222222222222)) (App (Lambda lemma_2222322222222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add m_22223222222222222 n_222232222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) m_22223222222222222) n_222232222222222222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) n_222232222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) m_22223222222222222) n_222232222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add m_22223222222222222 n_222232222222222222))) (App Coq.Classes.Morphisms.per_partial_app_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) m_22223222222222222) n_222232222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add m_22223222222222222 n_222232222222222222)) (App Coq.Classes.RelationClasses.symmetry Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Symmetric Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add m_22223222222222222 n_222232222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) m_22223222222222222) n_222232222222222222) lemma_2222322222222222222)))) (App Coq.ZArith.BinInt.Z.add_assoc (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) m_22223222222222222 n_222232222222222222) (App (Lambda lemma_2222322222222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add m_22223222222222222 n_222232222222222222) (App Coq.ZArith.BinIntDef.Z.add n_222232222222222222 m_22223222222222222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) n_222232222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add m_22223222222222222 n_222232222222222222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add n_222232222222222222 m_22223222222222222))) (App Coq.Classes.Morphisms.per_partial_app_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add m_22223222222222222 n_222232222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add n_222232222222222222 m_22223222222222222)) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism Z (Prod out_22223222222222222221 Z Z) (App eq Z) (App Coq.Classes.Morphisms.respectful Z Z (App eq Z) (App eq Z)) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinInt.Z.add_wd (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add m_22223222222222222 n_222232222222222222) (App Coq.ZArith.BinIntDef.Z.add n_222232222222222222 m_22223222222222222) lemma_2222322222222222222)))) (App Coq.ZArith.BinInt.Z.add_comm m_22223222222222222 n_222232222222222222) (App (Lambda lemma_2222322222222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add n_222232222222222222 m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) n_222232222222222222) m_22223222222222222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) n_222232222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add n_222232222222222222 m_22223222222222222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) n_222232222222222222) m_22223222222222222)) (App Coq.Classes.Morphisms.per_partial_app_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add n_222232222222222222 m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) n_222232222222222222) m_22223222222222222) lemma_2222322222222222222))) (App Coq.ZArith.BinInt.Z.add_assoc (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) n_222232222222222222 m_22223222222222222) (App (Lambda lemma_2222322222222222222 (App Coq.Init.Logic.iff (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) n_222232222222222222) m_22223222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) n_222232222222222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) n_222232222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) n_222232222222222222) m_22223222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) n_222232222222222222)) lemma_2222322222222222222)) (App Coq.ZArith.BinInt.Z.add_cancel_r (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) n_222232222222222222) m_22223222222222222) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222222 m_22223222222222222) n_222232222222222222))))))))))))) n_2222322222222222) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_2222322222222222 (App Coq.ZArith.BinIntDef.Z.succ m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_2222322222222222 m_22223222222222222) n_2222322222222222)))))) (Definition Coq.ZArith.BinInt.Z.mul_succ_l (Lambda n_2222322222222222 Z (Lambda m_22223222222222222 Z (Cast (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_2222322222222222 m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.mul (App Zpos xH) m_22223222222222222)) (Lambda z_222232222222222222 Z (App eq Z z_222232222222222222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_2222322222222222 m_22223222222222222) m_22223222222222222))) (App Coq.Init.Logic.eq_ind_r Z m_22223222222222222 (Lambda z_222232222222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_2222322222222222 m_22223222222222222) z_222232222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_2222322222222222 m_22223222222222222) m_22223222222222222))) (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_2222322222222222 m_22223222222222222) m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.mul (App Zpos xH) m_22223222222222222) (App Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l m_22223222222222222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_2222322222222222 (App Zpos xH)) m_22223222222222222) (App Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r n_2222322222222222 (App Zpos xH) m_22223222222222222)) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_2222322222222222) m_22223222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_2222322222222222 m_22223222222222222) m_22223222222222222)))))) (Definition Coq.ZArith.BinInt.Z.add_cancel_r (Lambda n_2222322222222222 Z (Lambda m_22223222222222222 Z (Lambda p_222232222222222222 Z (App (Lambda lemma_2222322222222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_2222322222222222 p_222232222222222222) (App Coq.ZArith.BinIntDef.Z.add p_222232222222222222 n_2222322222222222)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_2222322222222222 p_222232222222222222) (App Coq.ZArith.BinIntDef.Z.add m_22223222222222222 p_222232222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add p_222232222222222222 n_2222322222222222) (App Coq.ZArith.BinIntDef.Z.add m_22223222222222222 p_222232222222222222)) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add n_2222322222222222 p_222232222222222222) (App Coq.ZArith.BinIntDef.Z.add p_222232222222222222 n_2222322222222222) lemma_2222322222222222222 (App Coq.ZArith.BinIntDef.Z.add m_22223222222222222 p_222232222222222222) (App Coq.ZArith.BinIntDef.Z.add m_22223222222222222 p_222232222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add m_22223222222222222 p_222232222222222222))) (App eq Z n_2222322222222222 m_22223222222222222) (App eq Z n_2222322222222222 m_22223222222222222) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App eq Z n_2222322222222222 m_22223222222222222)))) (App Coq.ZArith.BinInt.Z.add_comm n_2222322222222222 p_222232222222222222) (App (Lambda lemma_2222322222222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add m_22223222222222222 p_222232222222222222) (App Coq.ZArith.BinIntDef.Z.add p_222232222222222222 m_22223222222222222)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App eq Z (App Coq.ZArith.BinIntDef.Z.add p_222232222222222222 n_2222322222222222) (App Coq.ZArith.BinIntDef.Z.add m_22223222222222222 p_222232222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add p_222232222222222222 n_2222322222222222) (App Coq.ZArith.BinIntDef.Z.add p_222232222222222222 m_22223222222222222)) (App Coq.Classes.Morphisms.per_partial_app_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add p_222232222222222222 n_2222322222222222) (App Coq.ZArith.BinIntDef.Z.add m_22223222222222222 p_222232222222222222) (App Coq.ZArith.BinIntDef.Z.add p_222232222222222222 m_22223222222222222) lemma_2222322222222222222) (App eq Z n_2222322222222222 m_22223222222222222) (App eq Z n_2222322222222222 m_22223222222222222) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App eq Z n_2222322222222222 m_22223222222222222)))) (App Coq.ZArith.BinInt.Z.add_comm m_22223222222222222 p_222232222222222222) (App Coq.ZArith.BinInt.Z.add_cancel_l n_2222322222222222 m_22223222222222222 p_222232222222222222))))))) (Definition Coq.ZArith.BinInt.Z.mul_comm (Lambda n_2222322222222 Z (Lambda m_22223222222222 Z (Cast (App Coq.ZArith.BinInt.Z.bi_induction (Lambda t_222232222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul t_222232222222222 m_22223222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 t_222232222222222))) (Cast (Cast (Lambda x_222232222222222 Z (Lambda y_2222322222222222 Z (Lambda H_22223222222222222 (App eq Z x_222232222222222 y_2222322222222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App eq Z (App Coq.ZArith.BinIntDef.Z.mul x_222232222222222 m_22223222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 x_222232222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_2222322222222222 m_22223222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 y_2222322222222222)) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul x_222232222222222 m_22223222222222) (App Coq.ZArith.BinIntDef.Z.mul y_2222322222222222 m_22223222222222) (App Coq.ZArith.BinInt.Z.mul_wd x_222232222222222 y_2222322222222222 H_22223222222222222 m_22223222222222 m_22223222222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) m_22223222222222)) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 x_222232222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 y_2222322222222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism Z (Prod out_222232222222222221 Z Z) (App eq Z) (App Coq.Classes.Morphisms.respectful Z Z (App eq Z) (App eq Z)) Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinInt.Z.mul_wd m_22223222222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) m_22223222222222) x_222232222222222 y_2222322222222222 H_22223222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_2222322222222222 m_22223222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 y_2222322222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_2222322222222222 m_22223222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 y_2222322222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_2222322222222222 m_22223222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 y_2222322222222222))) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_2222322222222222 m_22223222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 y_2222322222222222))))))) REVERTcast (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff (Lambda t_222232222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul t_222232222222222 m_22223222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 t_222232222222222))) (Lambda t_222232222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul t_222232222222222 m_22223222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 t_222232222222222))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_222232222222221 Z (Sort Prop)) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff) (Lambda t_222232222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul t_222232222222222 m_22223222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 t_222232222222222))))) (App (Lambda lemma_222232222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 Z0) Z0) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul Z0 m_22223222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 Z0) Z0 lemma_222232222222222)) (App Coq.ZArith.BinInt.Z.mul_0_r m_22223222222222) (App (Lambda lemma_222232222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul Z0 m_22223222222222) Z0) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Transitive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul Z0 m_22223222222222) Z0 lemma_222232222222222 Z0 Z0 (App Coq.Classes.Morphisms.eq_proper_proxy Z Z0))) (App Coq.ZArith.BinInt.Z.mul_0_l m_22223222222222) (App Coq.Classes.RelationClasses.reflexivity Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) Z0))) (Lambda n_222232222222222 Z (App (Lambda lemma_2222322222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 n_222232222222222) m_22223222222222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222 m_22223222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 n_222232222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222) m_22223222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222) m_22223222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 n_222232222222222) m_22223222222222)) (App Coq.Classes.Morphisms.per_partial_app_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222) m_22223222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 n_222232222222222) m_22223222222222) lemma_2222322222222222))) (App Coq.ZArith.BinInt.Z.mul_succ_r m_22223222222222 n_222232222222222) (App (Lambda lemma_2222322222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222) m_22223222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222 m_22223222222222) m_22223222222222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222 m_22223222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 n_222232222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222) m_22223222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 n_222232222222222) m_22223222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222 m_22223222222222) m_22223222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 n_222232222222222) m_22223222222222)) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_222232222222222) m_22223222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222 m_22223222222222) m_22223222222222) lemma_2222322222222222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 n_222232222222222) m_22223222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 n_222232222222222) m_22223222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 n_222232222222222) m_22223222222222))))) (App Coq.ZArith.BinInt.Z.mul_succ_l n_222232222222222 m_22223222222222) (App (Lambda lemma_2222322222222222 (App Coq.Init.Logic.iff (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222 m_22223222222222) m_22223222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 n_222232222222222) m_22223222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222 m_22223222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 n_222232222222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222 m_22223222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 n_222232222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222 m_22223222222222) m_22223222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 n_222232222222222) m_22223222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222 m_22223222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 n_222232222222222)) lemma_2222322222222222)) (App Coq.ZArith.BinInt.Z.add_cancel_r (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222 m_22223222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 n_222232222222222) m_22223222222222) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_222232222222222 m_22223222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 n_222232222222222))))))) n_2222322222222) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_2222322222222 m_22223222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22223222222222 n_2222322222222)))))) (Definition Coq.PArith.BinPosDef.Pos.mul (Fix (Functions (App mul 0 (Prod x_22222221 positive (Prod y_222222211 positive positive)) (Lambda x_22222222 positive (Lambda y_222222222 positive (Case 0 (Lambda x_2222222222 positive positive) (CaseMatch x_22222222) (CaseBranches (Lambda p_2222222222 positive (App Coq.PArith.BinPosDef.Pos.add y_222222222 (App xO (App mul p_2222222222 y_222222222)))) (Lambda p_2222222222 positive (App xO (App mul p_2222222222 y_222222222))) y_222222222)))))) 0)) (Definition Coq.PArith.BinPos.Pos.mul_1_r (Lambda p_22222222 positive (App Coq.Numbers.BinNums.positive_ind (Lambda p_222222222 positive (App eq positive (App Coq.PArith.BinPosDef.Pos.mul p_222222222 xH) p_222222222)) (Lambda p_222222222 positive (Lambda IHp_2222222222 (App eq positive (App Coq.PArith.BinPosDef.Pos.mul p_222222222 xH) p_222222222) (Cast (LetIn H_22222222223 IHp_2222222222 (App eq positive (App Coq.PArith.BinPosDef.Pos.mul p_222222222 xH) p_222222222) (App (Lambda H_222222222232 (App eq positive (App Coq.PArith.BinPosDef.Pos.mul p_222222222 xH) p_222222222) (App Coq.Init.Logic.eq_trans positive (App xI (App Coq.PArith.BinPosDef.Pos.mul p_222222222 xH)) (App xI (App Coq.PArith.BinPosDef.Pos.mul p_222222222 xH)) (App xI p_222222222) (App Coq.Init.Logic.f_equal (Prod out_2222222222321 positive positive) positive (Lambda f_2222222222322 (Prod out_2222222222321 positive positive) (App f_2222222222322 (App Coq.PArith.BinPosDef.Pos.mul p_222222222 xH))) xI xI (App eq_refl (Prod out_2222222222321 positive positive) xI)) (App Coq.Init.Logic.f_equal positive positive xI (App Coq.PArith.BinPosDef.Pos.mul p_222222222 xH) p_222222222 H_222222222232))) H_22222222223)) REVERTcast (App eq positive (App Coq.PArith.BinPosDef.Pos.mul (App xI p_222222222) xH) (App xI p_222222222))))) (Lambda p_222222222 positive (Lambda IHp_2222222222 (App eq positive (App Coq.PArith.BinPosDef.Pos.mul p_222222222 xH) p_222222222) (Cast (LetIn H_22222222223 IHp_2222222222 (App eq positive (App Coq.PArith.BinPosDef.Pos.mul p_222222222 xH) p_222222222) (App (Lambda H_222222222232 (App eq positive (App Coq.PArith.BinPosDef.Pos.mul p_222222222 xH) p_222222222) (App Coq.Init.Logic.eq_trans positive (App xO (App Coq.PArith.BinPosDef.Pos.mul p_222222222 xH)) (App xO (App Coq.PArith.BinPosDef.Pos.mul p_222222222 xH)) (App xO p_222222222) (App Coq.Init.Logic.f_equal (Prod out_2222222222321 positive positive) positive (Lambda f_2222222222322 (Prod out_2222222222321 positive positive) (App f_2222222222322 (App Coq.PArith.BinPosDef.Pos.mul p_222222222 xH))) xO xO (App eq_refl (Prod out_2222222222321 positive positive) xO)) (App Coq.Init.Logic.f_equal positive positive xO (App Coq.PArith.BinPosDef.Pos.mul p_222222222 xH) p_222222222 H_222222222232))) H_22222222223)) REVERTcast (App eq positive (App Coq.PArith.BinPosDef.Pos.mul (App xO p_222222222) xH) (App xO p_222222222))))) (Cast (App eq_refl positive xH) REVERTcast (App eq positive (App Coq.PArith.BinPosDef.Pos.mul xH xH) xH)) p_22222222))) (Definition Coq.PArith.BinPos.Pos.ggcd_correct_divisors (Cast (Lambda a_222222222 positive (Lambda b_2222222222 positive (App Coq.PArith.BinPos.Pos.ggcdn_correct_divisors (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_222222222) (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222)) a_222222222 b_2222222222))) REVERTcast (Prod a_222222221 positive (Prod b_2222222211 positive (Case 2 (Lambda x_22222222112 (App prod positive (App prod positive positive)) (Sort Prop)) (CaseMatch (App Coq.PArith.BinPosDef.Pos.ggcd a_222222221 b_2222222211)) (CaseBranches (Lambda g_22222222112 positive (Lambda p_222222221122 (App prod positive positive) (Case 2 (Lambda p_2222222211222 (App prod positive positive) (Sort Prop)) (CaseMatch p_222222221122) (CaseBranches (Lambda aa_2222222211222 positive (Lambda bb_22222222112222 positive (App and (App eq positive a_222222221 (App Coq.PArith.BinPosDef.Pos.mul g_22222222112 aa_2222222211222)) (App eq positive b_2222222211 (App Coq.PArith.BinPosDef.Pos.mul g_22222222112 bb_22222222112222))))))))))))))) (Definition Coq.ZArith.BinInt.Z.ggcd_correct_divisors (Lambda a_22222 Z (Lambda b_222222 Z (Case 0 (Lambda z_2222222 Z (Case 2 (Lambda x_22222222 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.ggcd z_2222222 b_222222)) (CaseBranches (Lambda g_22222222 Z (Lambda p_222222222 (App prod Z Z) (Case 2 (Lambda p_2222222222 (App prod Z Z) (Sort Prop)) (CaseMatch p_222222222) (CaseBranches (Lambda aa_2222222222 Z (Lambda bb_22222222222 Z (App and (App eq Z z_2222222 (App Coq.ZArith.BinIntDef.Z.mul g_22222222 aa_2222222222)) (App eq Z b_222222 (App Coq.ZArith.BinIntDef.Z.mul g_22222222 bb_22222222222)))))))))))) (CaseMatch a_22222) (CaseBranches (Case 0 (Lambda z_2222222 Z (Case 2 (Lambda x_22222222 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.ggcd Z0 z_2222222)) (CaseBranches (Lambda g_22222222 Z (Lambda p_222222222 (App prod Z Z) (Case 2 (Lambda p_2222222222 (App prod Z Z) (Sort Prop)) (CaseMatch p_222222222) (CaseBranches (Lambda aa_2222222222 Z (Lambda bb_22222222222 Z (App and (App eq Z Z0 (App Coq.ZArith.BinIntDef.Z.mul g_22222222 aa_2222222222)) (App eq Z z_2222222 (App Coq.ZArith.BinIntDef.Z.mul g_22222222 bb_22222222222)))))))))))) (CaseMatch b_222222) (CaseBranches (Cast (App conj (App eq Z Z0 Z0) (App eq Z Z0 Z0) (App eq_refl Z Z0) (App eq_refl Z Z0)) REVERTcast (Case 2 (Lambda x_2222222 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.ggcd Z0 Z0)) (CaseBranches (Lambda g_2222222 Z (Lambda p_22222222 (App prod Z Z) (Case 2 (Lambda p_222222222 (App prod Z Z) (Sort Prop)) (CaseMatch p_22222222) (CaseBranches (Lambda aa_222222222 Z (Lambda bb_2222222222 Z (App and (App eq Z Z0 (App Coq.ZArith.BinIntDef.Z.mul g_2222222 aa_222222222)) (App eq Z Z0 (App Coq.ZArith.BinIntDef.Z.mul g_2222222 bb_2222222222)))))))))))) (Lambda q_2222222 positive (Cast (App Coq.Init.Logic.eq_ind_r positive q_2222222 (Lambda p_22222222 positive (App and (App eq Z Z0 Z0) (App eq Z (App Zpos q_2222222) (App Zpos p_22222222)))) (App conj (App eq Z Z0 Z0) (App eq Z (App Zpos q_2222222) (App Zpos q_2222222)) (App eq_refl Z Z0) (App eq_refl Z (App Zpos q_2222222))) (App Coq.PArith.BinPosDef.Pos.mul q_2222222 xH) (App Coq.PArith.BinPos.Pos.mul_1_r q_2222222)) REVERTcast (Case 2 (Lambda x_22222222 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.ggcd Z0 (App Zpos q_2222222))) (CaseBranches (Lambda g_22222222 Z (Lambda p_222222222 (App prod Z Z) (Case 2 (Lambda p_2222222222 (App prod Z Z) (Sort Prop)) (CaseMatch p_222222222) (CaseBranches (Lambda aa_2222222222 Z (Lambda bb_22222222222 Z (App and (App eq Z Z0 (App Coq.ZArith.BinIntDef.Z.mul g_22222222 aa_2222222222)) (App eq Z (App Zpos q_2222222) (App Coq.ZArith.BinIntDef.Z.mul g_22222222 bb_22222222222))))))))))))) (Lambda q_2222222 positive (Cast (App Coq.Init.Logic.eq_ind_r positive q_2222222 (Lambda p_22222222 positive (App and (App eq Z Z0 Z0) (App eq Z (App Zneg q_2222222) (App Zneg p_22222222)))) (App conj (App eq Z Z0 Z0) (App eq Z (App Zneg q_2222222) (App Zneg q_2222222)) (App eq_refl Z Z0) (App eq_refl Z (App Zneg q_2222222))) (App Coq.PArith.BinPosDef.Pos.mul q_2222222 xH) (App Coq.PArith.BinPos.Pos.mul_1_r q_2222222)) REVERTcast (Case 2 (Lambda x_22222222 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.ggcd Z0 (App Zneg q_2222222))) (CaseBranches (Lambda g_22222222 Z (Lambda p_222222222 (App prod Z Z) (Case 2 (Lambda p_2222222222 (App prod Z Z) (Sort Prop)) (CaseMatch p_222222222) (CaseBranches (Lambda aa_2222222222 Z (Lambda bb_22222222222 Z (App and (App eq Z Z0 (App Coq.ZArith.BinIntDef.Z.mul g_22222222 aa_2222222222)) (App eq Z (App Zneg q_2222222) (App Coq.ZArith.BinIntDef.Z.mul g_22222222 bb_22222222222))))))))))))))) (Lambda p_2222222 positive (Case 0 (Lambda z_22222222 Z (Case 2 (Lambda x_222222222 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.ggcd (App Zpos p_2222222) z_22222222)) (CaseBranches (Lambda g_222222222 Z (Lambda p_2222222222 (App prod Z Z) (Case 2 (Lambda p_22222222222 (App prod Z Z) (Sort Prop)) (CaseMatch p_2222222222) (CaseBranches (Lambda aa_22222222222 Z (Lambda bb_222222222222 Z (App and (App eq Z (App Zpos p_2222222) (App Coq.ZArith.BinIntDef.Z.mul g_222222222 aa_22222222222)) (App eq Z z_22222222 (App Coq.ZArith.BinIntDef.Z.mul g_222222222 bb_222222222222)))))))))))) (CaseMatch b_222222) (CaseBranches (Cast (App Coq.Init.Logic.eq_ind_r positive p_2222222 (Lambda p_22222222 positive (App and (App eq Z (App Zpos p_2222222) (App Zpos p_22222222)) (App eq Z Z0 Z0))) (App conj (App eq Z (App Zpos p_2222222) (App Zpos p_2222222)) (App eq Z Z0 Z0) (App eq_refl Z (App Zpos p_2222222)) (App eq_refl Z Z0)) (App Coq.PArith.BinPosDef.Pos.mul p_2222222 xH) (App Coq.PArith.BinPos.Pos.mul_1_r p_2222222)) REVERTcast (Case 2 (Lambda x_22222222 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.ggcd (App Zpos p_2222222) Z0)) (CaseBranches (Lambda g_22222222 Z (Lambda p_222222222 (App prod Z Z) (Case 2 (Lambda p_2222222222 (App prod Z Z) (Sort Prop)) (CaseMatch p_222222222) (CaseBranches (Lambda aa_2222222222 Z (Lambda bb_22222222222 Z (App and (App eq Z (App Zpos p_2222222) (App Coq.ZArith.BinIntDef.Z.mul g_22222222 aa_2222222222)) (App eq Z Z0 (App Coq.ZArith.BinIntDef.Z.mul g_22222222 bb_22222222222)))))))))))) (Lambda q_22222222 positive (Cast (App (LetIn p0_222222223 (App Coq.PArith.BinPosDef.Pos.ggcd p_2222222 q_22222222) (App prod positive (App prod positive positive)) (Case 2 (Lambda p_2222222232 (App prod positive (App prod positive positive)) (Prod out_22222222321 (Case 2 (Lambda x_22222222322 (App prod positive (App prod positive positive)) (Sort Prop)) (CaseMatch p_2222222232) (CaseBranches (Lambda g_22222222322 positive (Lambda p_222222223222 (App prod positive positive) (Case 2 (Lambda p_2222222232222 (App prod positive positive) (Sort Prop)) (CaseMatch p_222222223222) (CaseBranches (Lambda aa_2222222232222 positive (Lambda bb_22222222322222 positive (App and (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_22222222322 aa_2222222232222)) (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_22222222322 bb_22222222322222))))))))))) (Case 2 (Lambda x_222222223212 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch (Case 2 (Lambda x_222222223212 (App prod positive (App prod positive positive)) (App prod Z (App prod Z Z))) (CaseMatch p_2222222232) (CaseBranches (Lambda g_222222223212 positive (Lambda p_2222222232122 (App prod positive positive) (Case 2 (Lambda p_22222222321222 (App prod positive positive) (App prod Z (App prod Z Z))) (CaseMatch p_2222222232122) (CaseBranches (Lambda aa_22222222321222 positive (Lambda bb_222222223212222 positive (App pair Z (App prod Z Z) (App Zpos g_222222223212) (App pair Z Z (App Zpos aa_22222222321222) (App Zpos bb_222222223212222)))))))))))) (CaseBranches (Lambda g_222222223212 Z (Lambda p_2222222232122 (App prod Z Z) (Case 2 (Lambda p_22222222321222 (App prod Z Z) (Sort Prop)) (CaseMatch p_2222222232122) (CaseBranches (Lambda aa_22222222321222 Z (Lambda bb_222222223212222 Z (App and (App eq Z (App Zpos p_2222222) (App Coq.ZArith.BinIntDef.Z.mul g_222222223212 aa_22222222321222)) (App eq Z (App Zpos q_22222222) (App Coq.ZArith.BinIntDef.Z.mul g_222222223212 bb_222222223212222))))))))))))) (CaseMatch p0_222222223) (CaseBranches (Lambda g_2222222232 positive (Lambda p0_22222222322 (App prod positive positive) (Case 2 (Lambda p_222222223222 (App prod positive positive) (Prod out_2222222232221 (Case 2 (Lambda p_2222222232222 (App prod positive positive) (Sort Prop)) (CaseMatch p_222222223222) (CaseBranches (Lambda aa_2222222232222 positive (Lambda bb_22222222322222 positive (App and (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_2222222232222)) (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_22222222322222))))))) (Case 2 (Lambda x_22222222322212 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch (Case 2 (Lambda p_22222222322212 (App prod positive positive) (App prod Z (App prod Z Z))) (CaseMatch p_222222223222) (CaseBranches (Lambda aa_22222222322212 positive (Lambda bb_222222223222122 positive (App pair Z (App prod Z Z) (App Zpos g_2222222232) (App pair Z Z (App Zpos aa_22222222322212) (App Zpos bb_222222223222122)))))))) (CaseBranches (Lambda g_22222222322212 Z (Lambda p_222222223222122 (App prod Z Z) (Case 2 (Lambda p_2222222232221222 (App prod Z Z) (Sort Prop)) (CaseMatch p_222222223222122) (CaseBranches (Lambda aa_2222222232221222 Z (Lambda bb_22222222322212222 Z (App and (App eq Z (App Zpos p_2222222) (App Coq.ZArith.BinIntDef.Z.mul g_22222222322212 aa_2222222232221222)) (App eq Z (App Zpos q_22222222) (App Coq.ZArith.BinIntDef.Z.mul g_22222222322212 bb_22222222322212222))))))))))))) (CaseMatch p0_22222222322) (CaseBranches (Lambda aa_222222223222 positive (Lambda bb_2222222232222 positive (Cast (Lambda H_22222222322222 (App and (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))) (Case 2 (Lambda out_222222223222222 (App and (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))) (App and (App eq Z (App Zpos p_2222222) (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222))) (App eq Z (App Zpos q_22222222) (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))))) (CaseMatch H_22222222322222) (CaseBranches (Lambda H_222222223222222 (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (Lambda H0_2222222232222222 (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222)) (App Coq.Init.Logic.eq_ind_r positive (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222) (Lambda p_22222222322222222 positive (App and (App eq Z (App Zpos p_22222222322222222) (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222))) (App eq Z (App Zpos q_22222222) (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))))) (App Coq.Init.Logic.eq_ind_r positive (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222) (Lambda q_22222222322222222 positive (App and (App eq Z (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222))) (App eq Z (App Zpos q_22222222322222222) (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))))) (App conj (App eq Z (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222))) (App eq Z (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222)) (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))) (App eq_refl Z (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222))) (App eq_refl Z (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222)))) q_22222222 H0_2222222232222222) p_2222222 H_222222223222222)))))) REVERTcast (Prod out_22222222322221 (App and (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))) (App and (App eq Z (App Zpos p_2222222) (App Coq.ZArith.BinIntDef.Z.mul (App Zpos g_2222222232) (App Zpos aa_222222223222))) (App eq Z (App Zpos q_22222222) (App Coq.ZArith.BinIntDef.Z.mul (App Zpos g_2222222232) (App Zpos bb_2222222232222))))))))))))))) (App Coq.PArith.BinPos.Pos.ggcd_correct_divisors p_2222222 q_22222222)) REVERTcast (Case 2 (Lambda x_222222222 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.ggcd (App Zpos p_2222222) (App Zpos q_22222222))) (CaseBranches (Lambda g_222222222 Z (Lambda p_2222222222 (App prod Z Z) (Case 2 (Lambda p_22222222222 (App prod Z Z) (Sort Prop)) (CaseMatch p_2222222222) (CaseBranches (Lambda aa_22222222222 Z (Lambda bb_222222222222 Z (App and (App eq Z (App Zpos p_2222222) (App Coq.ZArith.BinIntDef.Z.mul g_222222222 aa_22222222222)) (App eq Z (App Zpos q_22222222) (App Coq.ZArith.BinIntDef.Z.mul g_222222222 bb_222222222222))))))))))))) (Lambda q_22222222 positive (Cast (App (LetIn p0_222222223 (App Coq.PArith.BinPosDef.Pos.ggcd p_2222222 q_22222222) (App prod positive (App prod positive positive)) (Case 2 (Lambda p_2222222232 (App prod positive (App prod positive positive)) (Prod out_22222222321 (Case 2 (Lambda x_22222222322 (App prod positive (App prod positive positive)) (Sort Prop)) (CaseMatch p_2222222232) (CaseBranches (Lambda g_22222222322 positive (Lambda p_222222223222 (App prod positive positive) (Case 2 (Lambda p_2222222232222 (App prod positive positive) (Sort Prop)) (CaseMatch p_222222223222) (CaseBranches (Lambda aa_2222222232222 positive (Lambda bb_22222222322222 positive (App and (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_22222222322 aa_2222222232222)) (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_22222222322 bb_22222222322222))))))))))) (Case 2 (Lambda x_222222223212 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch (Case 2 (Lambda x_222222223212 (App prod positive (App prod positive positive)) (App prod Z (App prod Z Z))) (CaseMatch p_2222222232) (CaseBranches (Lambda g_222222223212 positive (Lambda p_2222222232122 (App prod positive positive) (Case 2 (Lambda p_22222222321222 (App prod positive positive) (App prod Z (App prod Z Z))) (CaseMatch p_2222222232122) (CaseBranches (Lambda aa_22222222321222 positive (Lambda bb_222222223212222 positive (App pair Z (App prod Z Z) (App Zpos g_222222223212) (App pair Z Z (App Zpos aa_22222222321222) (App Zneg bb_222222223212222)))))))))))) (CaseBranches (Lambda g_222222223212 Z (Lambda p_2222222232122 (App prod Z Z) (Case 2 (Lambda p_22222222321222 (App prod Z Z) (Sort Prop)) (CaseMatch p_2222222232122) (CaseBranches (Lambda aa_22222222321222 Z (Lambda bb_222222223212222 Z (App and (App eq Z (App Zpos p_2222222) (App Coq.ZArith.BinIntDef.Z.mul g_222222223212 aa_22222222321222)) (App eq Z (App Zneg q_22222222) (App Coq.ZArith.BinIntDef.Z.mul g_222222223212 bb_222222223212222))))))))))))) (CaseMatch p0_222222223) (CaseBranches (Lambda g_2222222232 positive (Lambda p0_22222222322 (App prod positive positive) (Case 2 (Lambda p_222222223222 (App prod positive positive) (Prod out_2222222232221 (Case 2 (Lambda p_2222222232222 (App prod positive positive) (Sort Prop)) (CaseMatch p_222222223222) (CaseBranches (Lambda aa_2222222232222 positive (Lambda bb_22222222322222 positive (App and (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_2222222232222)) (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_22222222322222))))))) (Case 2 (Lambda x_22222222322212 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch (Case 2 (Lambda p_22222222322212 (App prod positive positive) (App prod Z (App prod Z Z))) (CaseMatch p_222222223222) (CaseBranches (Lambda aa_22222222322212 positive (Lambda bb_222222223222122 positive (App pair Z (App prod Z Z) (App Zpos g_2222222232) (App pair Z Z (App Zpos aa_22222222322212) (App Zneg bb_222222223222122)))))))) (CaseBranches (Lambda g_22222222322212 Z (Lambda p_222222223222122 (App prod Z Z) (Case 2 (Lambda p_2222222232221222 (App prod Z Z) (Sort Prop)) (CaseMatch p_222222223222122) (CaseBranches (Lambda aa_2222222232221222 Z (Lambda bb_22222222322212222 Z (App and (App eq Z (App Zpos p_2222222) (App Coq.ZArith.BinIntDef.Z.mul g_22222222322212 aa_2222222232221222)) (App eq Z (App Zneg q_22222222) (App Coq.ZArith.BinIntDef.Z.mul g_22222222322212 bb_22222222322212222))))))))))))) (CaseMatch p0_22222222322) (CaseBranches (Lambda aa_222222223222 positive (Lambda bb_2222222232222 positive (Cast (Lambda H_22222222322222 (App and (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))) (Case 2 (Lambda out_222222223222222 (App and (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))) (App and (App eq Z (App Zpos p_2222222) (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222))) (App eq Z (App Zneg q_22222222) (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))))) (CaseMatch H_22222222322222) (CaseBranches (Lambda H_222222223222222 (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (Lambda H0_2222222232222222 (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222)) (App Coq.Init.Logic.eq_ind_r positive (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222) (Lambda p_22222222322222222 positive (App and (App eq Z (App Zpos p_22222222322222222) (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222))) (App eq Z (App Zneg q_22222222) (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))))) (App Coq.Init.Logic.eq_ind_r positive (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222) (Lambda q_22222222322222222 positive (App and (App eq Z (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222))) (App eq Z (App Zneg q_22222222322222222) (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))))) (App conj (App eq Z (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222))) (App eq Z (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222)) (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))) (App eq_refl Z (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222))) (App eq_refl Z (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222)))) q_22222222 H0_2222222232222222) p_2222222 H_222222223222222)))))) REVERTcast (Prod out_22222222322221 (App and (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))) (App and (App eq Z (App Zpos p_2222222) (App Coq.ZArith.BinIntDef.Z.mul (App Zpos g_2222222232) (App Zpos aa_222222223222))) (App eq Z (App Zneg q_22222222) (App Coq.ZArith.BinIntDef.Z.mul (App Zpos g_2222222232) (App Zneg bb_2222222232222))))))))))))))) (App Coq.PArith.BinPos.Pos.ggcd_correct_divisors p_2222222 q_22222222)) REVERTcast (Case 2 (Lambda x_222222222 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.ggcd (App Zpos p_2222222) (App Zneg q_22222222))) (CaseBranches (Lambda g_222222222 Z (Lambda p_2222222222 (App prod Z Z) (Case 2 (Lambda p_22222222222 (App prod Z Z) (Sort Prop)) (CaseMatch p_2222222222) (CaseBranches (Lambda aa_22222222222 Z (Lambda bb_222222222222 Z (App and (App eq Z (App Zpos p_2222222) (App Coq.ZArith.BinIntDef.Z.mul g_222222222 aa_22222222222)) (App eq Z (App Zneg q_22222222) (App Coq.ZArith.BinIntDef.Z.mul g_222222222 bb_222222222222)))))))))))))))) (Lambda p_2222222 positive (Case 0 (Lambda z_22222222 Z (Case 2 (Lambda x_222222222 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.ggcd (App Zneg p_2222222) z_22222222)) (CaseBranches (Lambda g_222222222 Z (Lambda p_2222222222 (App prod Z Z) (Case 2 (Lambda p_22222222222 (App prod Z Z) (Sort Prop)) (CaseMatch p_2222222222) (CaseBranches (Lambda aa_22222222222 Z (Lambda bb_222222222222 Z (App and (App eq Z (App Zneg p_2222222) (App Coq.ZArith.BinIntDef.Z.mul g_222222222 aa_22222222222)) (App eq Z z_22222222 (App Coq.ZArith.BinIntDef.Z.mul g_222222222 bb_222222222222)))))))))))) (CaseMatch b_222222) (CaseBranches (Cast (App Coq.Init.Logic.eq_ind_r positive p_2222222 (Lambda p_22222222 positive (App and (App eq Z (App Zneg p_2222222) (App Zneg p_22222222)) (App eq Z Z0 Z0))) (App conj (App eq Z (App Zneg p_2222222) (App Zneg p_2222222)) (App eq Z Z0 Z0) (App eq_refl Z (App Zneg p_2222222)) (App eq_refl Z Z0)) (App Coq.PArith.BinPosDef.Pos.mul p_2222222 xH) (App Coq.PArith.BinPos.Pos.mul_1_r p_2222222)) REVERTcast (Case 2 (Lambda x_22222222 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.ggcd (App Zneg p_2222222) Z0)) (CaseBranches (Lambda g_22222222 Z (Lambda p_222222222 (App prod Z Z) (Case 2 (Lambda p_2222222222 (App prod Z Z) (Sort Prop)) (CaseMatch p_222222222) (CaseBranches (Lambda aa_2222222222 Z (Lambda bb_22222222222 Z (App and (App eq Z (App Zneg p_2222222) (App Coq.ZArith.BinIntDef.Z.mul g_22222222 aa_2222222222)) (App eq Z Z0 (App Coq.ZArith.BinIntDef.Z.mul g_22222222 bb_22222222222)))))))))))) (Lambda q_22222222 positive (Cast (App (LetIn p0_222222223 (App Coq.PArith.BinPosDef.Pos.ggcd p_2222222 q_22222222) (App prod positive (App prod positive positive)) (Case 2 (Lambda p_2222222232 (App prod positive (App prod positive positive)) (Prod out_22222222321 (Case 2 (Lambda x_22222222322 (App prod positive (App prod positive positive)) (Sort Prop)) (CaseMatch p_2222222232) (CaseBranches (Lambda g_22222222322 positive (Lambda p_222222223222 (App prod positive positive) (Case 2 (Lambda p_2222222232222 (App prod positive positive) (Sort Prop)) (CaseMatch p_222222223222) (CaseBranches (Lambda aa_2222222232222 positive (Lambda bb_22222222322222 positive (App and (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_22222222322 aa_2222222232222)) (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_22222222322 bb_22222222322222))))))))))) (Case 2 (Lambda x_222222223212 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch (Case 2 (Lambda x_222222223212 (App prod positive (App prod positive positive)) (App prod Z (App prod Z Z))) (CaseMatch p_2222222232) (CaseBranches (Lambda g_222222223212 positive (Lambda p_2222222232122 (App prod positive positive) (Case 2 (Lambda p_22222222321222 (App prod positive positive) (App prod Z (App prod Z Z))) (CaseMatch p_2222222232122) (CaseBranches (Lambda aa_22222222321222 positive (Lambda bb_222222223212222 positive (App pair Z (App prod Z Z) (App Zpos g_222222223212) (App pair Z Z (App Zneg aa_22222222321222) (App Zpos bb_222222223212222)))))))))))) (CaseBranches (Lambda g_222222223212 Z (Lambda p_2222222232122 (App prod Z Z) (Case 2 (Lambda p_22222222321222 (App prod Z Z) (Sort Prop)) (CaseMatch p_2222222232122) (CaseBranches (Lambda aa_22222222321222 Z (Lambda bb_222222223212222 Z (App and (App eq Z (App Zneg p_2222222) (App Coq.ZArith.BinIntDef.Z.mul g_222222223212 aa_22222222321222)) (App eq Z (App Zpos q_22222222) (App Coq.ZArith.BinIntDef.Z.mul g_222222223212 bb_222222223212222))))))))))))) (CaseMatch p0_222222223) (CaseBranches (Lambda g_2222222232 positive (Lambda p0_22222222322 (App prod positive positive) (Case 2 (Lambda p_222222223222 (App prod positive positive) (Prod out_2222222232221 (Case 2 (Lambda p_2222222232222 (App prod positive positive) (Sort Prop)) (CaseMatch p_222222223222) (CaseBranches (Lambda aa_2222222232222 positive (Lambda bb_22222222322222 positive (App and (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_2222222232222)) (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_22222222322222))))))) (Case 2 (Lambda x_22222222322212 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch (Case 2 (Lambda p_22222222322212 (App prod positive positive) (App prod Z (App prod Z Z))) (CaseMatch p_222222223222) (CaseBranches (Lambda aa_22222222322212 positive (Lambda bb_222222223222122 positive (App pair Z (App prod Z Z) (App Zpos g_2222222232) (App pair Z Z (App Zneg aa_22222222322212) (App Zpos bb_222222223222122)))))))) (CaseBranches (Lambda g_22222222322212 Z (Lambda p_222222223222122 (App prod Z Z) (Case 2 (Lambda p_2222222232221222 (App prod Z Z) (Sort Prop)) (CaseMatch p_222222223222122) (CaseBranches (Lambda aa_2222222232221222 Z (Lambda bb_22222222322212222 Z (App and (App eq Z (App Zneg p_2222222) (App Coq.ZArith.BinIntDef.Z.mul g_22222222322212 aa_2222222232221222)) (App eq Z (App Zpos q_22222222) (App Coq.ZArith.BinIntDef.Z.mul g_22222222322212 bb_22222222322212222))))))))))))) (CaseMatch p0_22222222322) (CaseBranches (Lambda aa_222222223222 positive (Lambda bb_2222222232222 positive (Cast (Lambda H_22222222322222 (App and (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))) (Case 2 (Lambda out_222222223222222 (App and (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))) (App and (App eq Z (App Zneg p_2222222) (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222))) (App eq Z (App Zpos q_22222222) (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))))) (CaseMatch H_22222222322222) (CaseBranches (Lambda H_222222223222222 (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (Lambda H0_2222222232222222 (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222)) (App Coq.Init.Logic.eq_ind_r positive (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222) (Lambda p_22222222322222222 positive (App and (App eq Z (App Zneg p_22222222322222222) (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222))) (App eq Z (App Zpos q_22222222) (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))))) (App Coq.Init.Logic.eq_ind_r positive (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222) (Lambda q_22222222322222222 positive (App and (App eq Z (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222))) (App eq Z (App Zpos q_22222222322222222) (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))))) (App conj (App eq Z (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222))) (App eq Z (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222)) (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))) (App eq_refl Z (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222))) (App eq_refl Z (App Zpos (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222)))) q_22222222 H0_2222222232222222) p_2222222 H_222222223222222)))))) REVERTcast (Prod out_22222222322221 (App and (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))) (App and (App eq Z (App Zneg p_2222222) (App Coq.ZArith.BinIntDef.Z.mul (App Zpos g_2222222232) (App Zneg aa_222222223222))) (App eq Z (App Zpos q_22222222) (App Coq.ZArith.BinIntDef.Z.mul (App Zpos g_2222222232) (App Zpos bb_2222222232222))))))))))))))) (App Coq.PArith.BinPos.Pos.ggcd_correct_divisors p_2222222 q_22222222)) REVERTcast (Case 2 (Lambda x_222222222 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.ggcd (App Zneg p_2222222) (App Zpos q_22222222))) (CaseBranches (Lambda g_222222222 Z (Lambda p_2222222222 (App prod Z Z) (Case 2 (Lambda p_22222222222 (App prod Z Z) (Sort Prop)) (CaseMatch p_2222222222) (CaseBranches (Lambda aa_22222222222 Z (Lambda bb_222222222222 Z (App and (App eq Z (App Zneg p_2222222) (App Coq.ZArith.BinIntDef.Z.mul g_222222222 aa_22222222222)) (App eq Z (App Zpos q_22222222) (App Coq.ZArith.BinIntDef.Z.mul g_222222222 bb_222222222222))))))))))))) (Lambda q_22222222 positive (Cast (App (LetIn p0_222222223 (App Coq.PArith.BinPosDef.Pos.ggcd p_2222222 q_22222222) (App prod positive (App prod positive positive)) (Case 2 (Lambda p_2222222232 (App prod positive (App prod positive positive)) (Prod out_22222222321 (Case 2 (Lambda x_22222222322 (App prod positive (App prod positive positive)) (Sort Prop)) (CaseMatch p_2222222232) (CaseBranches (Lambda g_22222222322 positive (Lambda p_222222223222 (App prod positive positive) (Case 2 (Lambda p_2222222232222 (App prod positive positive) (Sort Prop)) (CaseMatch p_222222223222) (CaseBranches (Lambda aa_2222222232222 positive (Lambda bb_22222222322222 positive (App and (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_22222222322 aa_2222222232222)) (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_22222222322 bb_22222222322222))))))))))) (Case 2 (Lambda x_222222223212 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch (Case 2 (Lambda x_222222223212 (App prod positive (App prod positive positive)) (App prod Z (App prod Z Z))) (CaseMatch p_2222222232) (CaseBranches (Lambda g_222222223212 positive (Lambda p_2222222232122 (App prod positive positive) (Case 2 (Lambda p_22222222321222 (App prod positive positive) (App prod Z (App prod Z Z))) (CaseMatch p_2222222232122) (CaseBranches (Lambda aa_22222222321222 positive (Lambda bb_222222223212222 positive (App pair Z (App prod Z Z) (App Zpos g_222222223212) (App pair Z Z (App Zneg aa_22222222321222) (App Zneg bb_222222223212222)))))))))))) (CaseBranches (Lambda g_222222223212 Z (Lambda p_2222222232122 (App prod Z Z) (Case 2 (Lambda p_22222222321222 (App prod Z Z) (Sort Prop)) (CaseMatch p_2222222232122) (CaseBranches (Lambda aa_22222222321222 Z (Lambda bb_222222223212222 Z (App and (App eq Z (App Zneg p_2222222) (App Coq.ZArith.BinIntDef.Z.mul g_222222223212 aa_22222222321222)) (App eq Z (App Zneg q_22222222) (App Coq.ZArith.BinIntDef.Z.mul g_222222223212 bb_222222223212222))))))))))))) (CaseMatch p0_222222223) (CaseBranches (Lambda g_2222222232 positive (Lambda p0_22222222322 (App prod positive positive) (Case 2 (Lambda p_222222223222 (App prod positive positive) (Prod out_2222222232221 (Case 2 (Lambda p_2222222232222 (App prod positive positive) (Sort Prop)) (CaseMatch p_222222223222) (CaseBranches (Lambda aa_2222222232222 positive (Lambda bb_22222222322222 positive (App and (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_2222222232222)) (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_22222222322222))))))) (Case 2 (Lambda x_22222222322212 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch (Case 2 (Lambda p_22222222322212 (App prod positive positive) (App prod Z (App prod Z Z))) (CaseMatch p_222222223222) (CaseBranches (Lambda aa_22222222322212 positive (Lambda bb_222222223222122 positive (App pair Z (App prod Z Z) (App Zpos g_2222222232) (App pair Z Z (App Zneg aa_22222222322212) (App Zneg bb_222222223222122)))))))) (CaseBranches (Lambda g_22222222322212 Z (Lambda p_222222223222122 (App prod Z Z) (Case 2 (Lambda p_2222222232221222 (App prod Z Z) (Sort Prop)) (CaseMatch p_222222223222122) (CaseBranches (Lambda aa_2222222232221222 Z (Lambda bb_22222222322212222 Z (App and (App eq Z (App Zneg p_2222222) (App Coq.ZArith.BinIntDef.Z.mul g_22222222322212 aa_2222222232221222)) (App eq Z (App Zneg q_22222222) (App Coq.ZArith.BinIntDef.Z.mul g_22222222322212 bb_22222222322212222))))))))))))) (CaseMatch p0_22222222322) (CaseBranches (Lambda aa_222222223222 positive (Lambda bb_2222222232222 positive (Cast (Lambda H_22222222322222 (App and (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))) (Case 2 (Lambda out_222222223222222 (App and (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))) (App and (App eq Z (App Zneg p_2222222) (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222))) (App eq Z (App Zneg q_22222222) (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))))) (CaseMatch H_22222222322222) (CaseBranches (Lambda H_222222223222222 (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (Lambda H0_2222222232222222 (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222)) (App Coq.Init.Logic.eq_ind_r positive (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222) (Lambda p_22222222322222222 positive (App and (App eq Z (App Zneg p_22222222322222222) (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222))) (App eq Z (App Zneg q_22222222) (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))))) (App Coq.Init.Logic.eq_ind_r positive (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222) (Lambda q_22222222322222222 positive (App and (App eq Z (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222))) (App eq Z (App Zneg q_22222222322222222) (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))))) (App conj (App eq Z (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222))) (App eq Z (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222)) (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))) (App eq_refl Z (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222))) (App eq_refl Z (App Zneg (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222)))) q_22222222 H0_2222222232222222) p_2222222 H_222222223222222)))))) REVERTcast (Prod out_22222222322221 (App and (App eq positive p_2222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 aa_222222223222)) (App eq positive q_22222222 (App Coq.PArith.BinPosDef.Pos.mul g_2222222232 bb_2222222232222))) (App and (App eq Z (App Zneg p_2222222) (App Coq.ZArith.BinIntDef.Z.mul (App Zpos g_2222222232) (App Zneg aa_222222223222))) (App eq Z (App Zneg q_22222222) (App Coq.ZArith.BinIntDef.Z.mul (App Zpos g_2222222232) (App Zneg bb_2222222232222))))))))))))))) (App Coq.PArith.BinPos.Pos.ggcd_correct_divisors p_2222222 q_22222222)) REVERTcast (Case 2 (Lambda x_222222222 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.ggcd (App Zneg p_2222222) (App Zneg q_22222222))) (CaseBranches (Lambda g_222222222 Z (Lambda p_2222222222 (App prod Z Z) (Case 2 (Lambda p_22222222222 (App prod Z Z) (Sort Prop)) (CaseMatch p_2222222222) (CaseBranches (Lambda aa_22222222222 Z (Lambda bb_222222222222 Z (App and (App eq Z (App Zneg p_2222222) (App Coq.ZArith.BinIntDef.Z.mul g_222222222 aa_22222222222)) (App eq Z (App Zneg q_22222222) (App Coq.ZArith.BinIntDef.Z.mul g_222222222 bb_222222222222))))))))))))))))))))) (Definition Coq.Init.Logic.eq_trans (Lambda A_222222223222222 (Sort Type) (Lambda x_2222222232222222 A_222222223222222 (Lambda y_22222222322222222 A_222222223222222 (Lambda z_222222223222222222 A_222222223222222 (Lambda H_2222222232222222222 (App eq A_222222223222222 x_2222222232222222 y_22222222322222222) (Lambda H0_22222222322222222222 (App eq A_222222223222222 y_22222222322222222 z_222222223222222222) (Case 2 (Lambda y_222222223222222222222 A_222222223222222 (Lambda out_2222222232222222222222 (App eq A_222222223222222 y_22222222322222222 y_222222223222222222222) (App eq A_222222223222222 x_2222222232222222 y_222222223222222222222))) (CaseMatch H0_22222222322222222222) (CaseBranches H_2222222232222222222))))))))) (Definition Coq.Init.Logic.f_equal (Lambda A_222222223222222 (Sort Type) (Lambda B_2222222232222222 (Sort Type) (Lambda f_22222222322222222 (Prod out_22222222322222221 A_222222223222222 B_2222222232222222) (Lambda x_222222223222222222 A_222222223222222 (Lambda y_2222222232222222222 A_222222223222222 (Lambda H_22222222322222222222 (App eq A_222222223222222 x_222222223222222222 y_2222222232222222222) (Case 2 (Lambda y_222222223222222222222 A_222222223222222 (Lambda out_2222222232222222222222 (App eq A_222222223222222 x_222222223222222222 y_222222223222222222222) (App eq B_2222222232222222 (App f_22222222322222222 x_222222223222222222) (App f_22222222322222222 y_222222223222222222222)))) (CaseMatch H_22222222322222222222) (CaseBranches (App eq_refl B_2222222232222222 (App f_22222222322222222 x_222222223222222222))))))))))) (Definition Coq.PArith.BinPos.Pos.ggcd_gcd (Cast (Lambda a_222222222 positive (Lambda b_2222222222 positive (App Coq.PArith.BinPos.Pos.ggcdn_gcdn (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_222222222) (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222)) a_222222222 b_2222222222))) REVERTcast (Prod a_222222221 positive (Prod b_2222222211 positive (App eq positive (App Coq.Init.Datatypes.fst positive (App prod positive positive) (App Coq.PArith.BinPosDef.Pos.ggcd a_222222221 b_2222222211)) (App Coq.PArith.BinPosDef.Pos.gcd a_222222221 b_2222222211)))))) (Definition Coq.ZArith.BinInt.Z.ggcd_gcd (Lambda a_22222 Z (Lambda b_222222 Z (Case 0 (Lambda z_2222222 Z (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App Coq.ZArith.BinIntDef.Z.ggcd z_2222222 b_222222)) (App Coq.ZArith.BinIntDef.Z.gcd z_2222222 b_222222))) (CaseMatch a_22222) (CaseBranches (Case 0 (Lambda z_2222222 Z (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App Coq.ZArith.BinIntDef.Z.ggcd Z0 z_2222222)) (App Coq.ZArith.BinIntDef.Z.gcd Z0 z_2222222))) (CaseMatch b_222222) (CaseBranches (Cast (App eq_refl Z Z0) REVERTcast (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App Coq.ZArith.BinIntDef.Z.ggcd Z0 Z0)) (App Coq.ZArith.BinIntDef.Z.gcd Z0 Z0))) (Lambda q_2222222 positive (Cast (App eq_refl Z (App Zpos q_2222222)) REVERTcast (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App Coq.ZArith.BinIntDef.Z.ggcd Z0 (App Zpos q_2222222))) (App Coq.ZArith.BinIntDef.Z.gcd Z0 (App Zpos q_2222222))))) (Lambda q_2222222 positive (Cast (App eq_refl Z (App Zpos q_2222222)) REVERTcast (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App Coq.ZArith.BinIntDef.Z.ggcd Z0 (App Zneg q_2222222))) (App Coq.ZArith.BinIntDef.Z.gcd Z0 (App Zneg q_2222222))))))) (Lambda p_2222222 positive (Case 0 (Lambda z_22222222 Z (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App Coq.ZArith.BinIntDef.Z.ggcd (App Zpos p_2222222) z_22222222)) (App Coq.ZArith.BinIntDef.Z.gcd (App Zpos p_2222222) z_22222222))) (CaseMatch b_222222) (CaseBranches (Cast (App eq_refl Z (App Zpos p_2222222)) REVERTcast (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App Coq.ZArith.BinIntDef.Z.ggcd (App Zpos p_2222222) Z0)) (App Coq.ZArith.BinIntDef.Z.gcd (App Zpos p_2222222) Z0))) (Lambda q_22222222 positive (Cast (App (LetIn p0_222222223 (App Coq.PArith.BinPosDef.Pos.ggcd p_2222222 q_22222222) (App prod positive (App prod positive positive)) (Case 2 (Lambda p_2222222232 (App prod positive (App prod positive positive)) (Prod out_22222222321 (App eq positive (App Coq.Init.Datatypes.fst positive (App prod positive positive) p_2222222232) (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)) (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (Case 2 (Lambda x_222222223212 (App prod positive (App prod positive positive)) (App prod Z (App prod Z Z))) (CaseMatch p_2222222232) (CaseBranches (Lambda g_222222223212 positive (Lambda p_2222222232122 (App prod positive positive) (Case 2 (Lambda p_22222222321222 (App prod positive positive) (App prod Z (App prod Z Z))) (CaseMatch p_2222222232122) (CaseBranches (Lambda aa_22222222321222 positive (Lambda bb_222222223212222 positive (App pair Z (App prod Z Z) (App Zpos g_222222223212) (App pair Z Z (App Zpos aa_22222222321222) (App Zpos bb_222222223212222)))))))))))) (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222))))) (CaseMatch p0_222222223) (CaseBranches (Lambda g_2222222232 positive (Lambda p0_22222222322 (App prod positive positive) (Case 2 (Lambda p_222222223222 (App prod positive positive) (Prod out_2222222232221 (App eq positive (App Coq.Init.Datatypes.fst positive (App prod positive positive) (App pair positive (App prod positive positive) g_2222222232 p_222222223222)) (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)) (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (Case 2 (Lambda p_22222222322212 (App prod positive positive) (App prod Z (App prod Z Z))) (CaseMatch p_222222223222) (CaseBranches (Lambda aa_22222222322212 positive (Lambda bb_222222223222122 positive (App pair Z (App prod Z Z) (App Zpos g_2222222232) (App pair Z Z (App Zpos aa_22222222322212) (App Zpos bb_222222223222122)))))))) (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222))))) (CaseMatch p0_22222222322) (CaseBranches (Lambda aa_222222223222 positive (Lambda bb_2222222232222 positive (Cast (Lambda H_22222222322222 (App eq positive g_2222222232 (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)) (App Coq.Init.Logic.eq_trans Z (App Zpos g_2222222232) (App Zpos g_2222222232) (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)) (App Coq.Init.Logic.f_equal (Prod out_222222223222221 positive Z) Z (Lambda f_222222223222222 (Prod out_222222223222221 positive Z) (App f_222222223222222 g_2222222232)) Zpos Zpos (App eq_refl (Prod out_222222223222221 positive Z) Zpos)) (App Coq.Init.Logic.f_equal positive Z Zpos g_2222222232 (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222) H_22222222322222))) REVERTcast (Prod out_22222222322221 (App eq positive (App Coq.Init.Datatypes.fst positive (App prod positive positive) (App pair positive (App prod positive positive) g_2222222232 (App pair positive positive aa_222222223222 bb_2222222232222))) (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)) (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App pair Z (App prod Z Z) (App Zpos g_2222222232) (App pair Z Z (App Zpos aa_222222223222) (App Zpos bb_2222222232222)))) (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)))))))))))))) (App Coq.PArith.BinPos.Pos.ggcd_gcd p_2222222 q_22222222)) REVERTcast (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App Coq.ZArith.BinIntDef.Z.ggcd (App Zpos p_2222222) (App Zpos q_22222222))) (App Coq.ZArith.BinIntDef.Z.gcd (App Zpos p_2222222) (App Zpos q_22222222))))) (Lambda q_22222222 positive (Cast (App (LetIn p0_222222223 (App Coq.PArith.BinPosDef.Pos.ggcd p_2222222 q_22222222) (App prod positive (App prod positive positive)) (Case 2 (Lambda p_2222222232 (App prod positive (App prod positive positive)) (Prod out_22222222321 (App eq positive (App Coq.Init.Datatypes.fst positive (App prod positive positive) p_2222222232) (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)) (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (Case 2 (Lambda x_222222223212 (App prod positive (App prod positive positive)) (App prod Z (App prod Z Z))) (CaseMatch p_2222222232) (CaseBranches (Lambda g_222222223212 positive (Lambda p_2222222232122 (App prod positive positive) (Case 2 (Lambda p_22222222321222 (App prod positive positive) (App prod Z (App prod Z Z))) (CaseMatch p_2222222232122) (CaseBranches (Lambda aa_22222222321222 positive (Lambda bb_222222223212222 positive (App pair Z (App prod Z Z) (App Zpos g_222222223212) (App pair Z Z (App Zpos aa_22222222321222) (App Zneg bb_222222223212222)))))))))))) (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222))))) (CaseMatch p0_222222223) (CaseBranches (Lambda g_2222222232 positive (Lambda p0_22222222322 (App prod positive positive) (Case 2 (Lambda p_222222223222 (App prod positive positive) (Prod out_2222222232221 (App eq positive (App Coq.Init.Datatypes.fst positive (App prod positive positive) (App pair positive (App prod positive positive) g_2222222232 p_222222223222)) (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)) (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (Case 2 (Lambda p_22222222322212 (App prod positive positive) (App prod Z (App prod Z Z))) (CaseMatch p_222222223222) (CaseBranches (Lambda aa_22222222322212 positive (Lambda bb_222222223222122 positive (App pair Z (App prod Z Z) (App Zpos g_2222222232) (App pair Z Z (App Zpos aa_22222222322212) (App Zneg bb_222222223222122)))))))) (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222))))) (CaseMatch p0_22222222322) (CaseBranches (Lambda aa_222222223222 positive (Lambda bb_2222222232222 positive (Cast (Lambda H_22222222322222 (App eq positive g_2222222232 (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)) (App Coq.Init.Logic.eq_trans Z (App Zpos g_2222222232) (App Zpos g_2222222232) (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)) (App Coq.Init.Logic.f_equal (Prod out_222222223222221 positive Z) Z (Lambda f_222222223222222 (Prod out_222222223222221 positive Z) (App f_222222223222222 g_2222222232)) Zpos Zpos (App eq_refl (Prod out_222222223222221 positive Z) Zpos)) (App Coq.Init.Logic.f_equal positive Z Zpos g_2222222232 (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222) H_22222222322222))) REVERTcast (Prod out_22222222322221 (App eq positive (App Coq.Init.Datatypes.fst positive (App prod positive positive) (App pair positive (App prod positive positive) g_2222222232 (App pair positive positive aa_222222223222 bb_2222222232222))) (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)) (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App pair Z (App prod Z Z) (App Zpos g_2222222232) (App pair Z Z (App Zpos aa_222222223222) (App Zneg bb_2222222232222)))) (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)))))))))))))) (App Coq.PArith.BinPos.Pos.ggcd_gcd p_2222222 q_22222222)) REVERTcast (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App Coq.ZArith.BinIntDef.Z.ggcd (App Zpos p_2222222) (App Zneg q_22222222))) (App Coq.ZArith.BinIntDef.Z.gcd (App Zpos p_2222222) (App Zneg q_22222222)))))))) (Lambda p_2222222 positive (Case 0 (Lambda z_22222222 Z (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App Coq.ZArith.BinIntDef.Z.ggcd (App Zneg p_2222222) z_22222222)) (App Coq.ZArith.BinIntDef.Z.gcd (App Zneg p_2222222) z_22222222))) (CaseMatch b_222222) (CaseBranches (Cast (App eq_refl Z (App Zpos p_2222222)) REVERTcast (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App Coq.ZArith.BinIntDef.Z.ggcd (App Zneg p_2222222) Z0)) (App Coq.ZArith.BinIntDef.Z.gcd (App Zneg p_2222222) Z0))) (Lambda q_22222222 positive (Cast (App (LetIn p0_222222223 (App Coq.PArith.BinPosDef.Pos.ggcd p_2222222 q_22222222) (App prod positive (App prod positive positive)) (Case 2 (Lambda p_2222222232 (App prod positive (App prod positive positive)) (Prod out_22222222321 (App eq positive (App Coq.Init.Datatypes.fst positive (App prod positive positive) p_2222222232) (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)) (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (Case 2 (Lambda x_222222223212 (App prod positive (App prod positive positive)) (App prod Z (App prod Z Z))) (CaseMatch p_2222222232) (CaseBranches (Lambda g_222222223212 positive (Lambda p_2222222232122 (App prod positive positive) (Case 2 (Lambda p_22222222321222 (App prod positive positive) (App prod Z (App prod Z Z))) (CaseMatch p_2222222232122) (CaseBranches (Lambda aa_22222222321222 positive (Lambda bb_222222223212222 positive (App pair Z (App prod Z Z) (App Zpos g_222222223212) (App pair Z Z (App Zneg aa_22222222321222) (App Zpos bb_222222223212222)))))))))))) (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222))))) (CaseMatch p0_222222223) (CaseBranches (Lambda g_2222222232 positive (Lambda p0_22222222322 (App prod positive positive) (Case 2 (Lambda p_222222223222 (App prod positive positive) (Prod out_2222222232221 (App eq positive (App Coq.Init.Datatypes.fst positive (App prod positive positive) (App pair positive (App prod positive positive) g_2222222232 p_222222223222)) (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)) (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (Case 2 (Lambda p_22222222322212 (App prod positive positive) (App prod Z (App prod Z Z))) (CaseMatch p_222222223222) (CaseBranches (Lambda aa_22222222322212 positive (Lambda bb_222222223222122 positive (App pair Z (App prod Z Z) (App Zpos g_2222222232) (App pair Z Z (App Zneg aa_22222222322212) (App Zpos bb_222222223222122)))))))) (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222))))) (CaseMatch p0_22222222322) (CaseBranches (Lambda aa_222222223222 positive (Lambda bb_2222222232222 positive (Cast (Lambda H_22222222322222 (App eq positive g_2222222232 (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)) (App Coq.Init.Logic.eq_trans Z (App Zpos g_2222222232) (App Zpos g_2222222232) (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)) (App Coq.Init.Logic.f_equal (Prod out_222222223222221 positive Z) Z (Lambda f_222222223222222 (Prod out_222222223222221 positive Z) (App f_222222223222222 g_2222222232)) Zpos Zpos (App eq_refl (Prod out_222222223222221 positive Z) Zpos)) (App Coq.Init.Logic.f_equal positive Z Zpos g_2222222232 (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222) H_22222222322222))) REVERTcast (Prod out_22222222322221 (App eq positive (App Coq.Init.Datatypes.fst positive (App prod positive positive) (App pair positive (App prod positive positive) g_2222222232 (App pair positive positive aa_222222223222 bb_2222222232222))) (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)) (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App pair Z (App prod Z Z) (App Zpos g_2222222232) (App pair Z Z (App Zneg aa_222222223222) (App Zpos bb_2222222232222)))) (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)))))))))))))) (App Coq.PArith.BinPos.Pos.ggcd_gcd p_2222222 q_22222222)) REVERTcast (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App Coq.ZArith.BinIntDef.Z.ggcd (App Zneg p_2222222) (App Zpos q_22222222))) (App Coq.ZArith.BinIntDef.Z.gcd (App Zneg p_2222222) (App Zpos q_22222222))))) (Lambda q_22222222 positive (Cast (App (LetIn p0_222222223 (App Coq.PArith.BinPosDef.Pos.ggcd p_2222222 q_22222222) (App prod positive (App prod positive positive)) (Case 2 (Lambda p_2222222232 (App prod positive (App prod positive positive)) (Prod out_22222222321 (App eq positive (App Coq.Init.Datatypes.fst positive (App prod positive positive) p_2222222232) (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)) (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (Case 2 (Lambda x_222222223212 (App prod positive (App prod positive positive)) (App prod Z (App prod Z Z))) (CaseMatch p_2222222232) (CaseBranches (Lambda g_222222223212 positive (Lambda p_2222222232122 (App prod positive positive) (Case 2 (Lambda p_22222222321222 (App prod positive positive) (App prod Z (App prod Z Z))) (CaseMatch p_2222222232122) (CaseBranches (Lambda aa_22222222321222 positive (Lambda bb_222222223212222 positive (App pair Z (App prod Z Z) (App Zpos g_222222223212) (App pair Z Z (App Zneg aa_22222222321222) (App Zneg bb_222222223212222)))))))))))) (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222))))) (CaseMatch p0_222222223) (CaseBranches (Lambda g_2222222232 positive (Lambda p0_22222222322 (App prod positive positive) (Case 2 (Lambda p_222222223222 (App prod positive positive) (Prod out_2222222232221 (App eq positive (App Coq.Init.Datatypes.fst positive (App prod positive positive) (App pair positive (App prod positive positive) g_2222222232 p_222222223222)) (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)) (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (Case 2 (Lambda p_22222222322212 (App prod positive positive) (App prod Z (App prod Z Z))) (CaseMatch p_222222223222) (CaseBranches (Lambda aa_22222222322212 positive (Lambda bb_222222223222122 positive (App pair Z (App prod Z Z) (App Zpos g_2222222232) (App pair Z Z (App Zneg aa_22222222322212) (App Zneg bb_222222223222122)))))))) (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222))))) (CaseMatch p0_22222222322) (CaseBranches (Lambda aa_222222223222 positive (Lambda bb_2222222232222 positive (Cast (Lambda H_22222222322222 (App eq positive g_2222222232 (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)) (App Coq.Init.Logic.eq_trans Z (App Zpos g_2222222232) (App Zpos g_2222222232) (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)) (App Coq.Init.Logic.f_equal (Prod out_222222223222221 positive Z) Z (Lambda f_222222223222222 (Prod out_222222223222221 positive Z) (App f_222222223222222 g_2222222232)) Zpos Zpos (App eq_refl (Prod out_222222223222221 positive Z) Zpos)) (App Coq.Init.Logic.f_equal positive Z Zpos g_2222222232 (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222) H_22222222322222))) REVERTcast (Prod out_22222222322221 (App eq positive (App Coq.Init.Datatypes.fst positive (App prod positive positive) (App pair positive (App prod positive positive) g_2222222232 (App pair positive positive aa_222222223222 bb_2222222232222))) (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)) (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App pair Z (App prod Z Z) (App Zpos g_2222222232) (App pair Z Z (App Zneg aa_222222223222) (App Zneg bb_2222222232222)))) (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_2222222 q_22222222)))))))))))))) (App Coq.PArith.BinPos.Pos.ggcd_gcd p_2222222 q_22222222)) REVERTcast (App eq Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App Coq.ZArith.BinIntDef.Z.ggcd (App Zneg p_2222222) (App Zneg q_22222222))) (App Coq.ZArith.BinIntDef.Z.gcd (App Zneg p_2222222) (App Zneg q_22222222))))))))))))) (Definition Coq.ZArith.BinInt.Z.gcd_divide_l (Lambda a_222 Z (Lambda b_2222 Z (App Coq.Init.Logic.eq_ind Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App Coq.ZArith.BinIntDef.Z.ggcd a_222 b_2222)) (Lambda z_22222 Z (App Coq.ZArith.BinInt.Z.divide z_22222 a_222)) (App (LetIn p_22223 (App Coq.ZArith.BinIntDef.Z.ggcd a_222 b_2222) (App prod Z (App prod Z Z)) (Case 2 (Lambda p_222232 (App prod Z (App prod Z Z)) (Prod out_2222321 (Case 2 (Lambda x_2222322 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch p_222232) (CaseBranches (Lambda g_2222322 Z (Lambda p_22223222 (App prod Z Z) (Case 2 (Lambda p_222232222 (App prod Z Z) (Sort Prop)) (CaseMatch p_22223222) (CaseBranches (Lambda aa_222232222 Z (Lambda bb_2222322222 Z (App and (App eq Z a_222 (App Coq.ZArith.BinIntDef.Z.mul g_2222322 aa_222232222)) (App eq Z b_2222 (App Coq.ZArith.BinIntDef.Z.mul g_2222322 bb_2222322222))))))))))) (App Coq.ZArith.BinInt.Z.divide (App Coq.Init.Datatypes.fst Z (App prod Z Z) p_222232) a_222))) (CaseMatch p_22223) (CaseBranches (Lambda g_222232 Z (Lambda p_2222322 (App prod Z Z) (Case 2 (Lambda p_22223222 (App prod Z Z) (Prod out_222232221 (Case 2 (Lambda p_222232222 (App prod Z Z) (Sort Prop)) (CaseMatch p_22223222) (CaseBranches (Lambda aa_222232222 Z (Lambda bb_2222322222 Z (App and (App eq Z a_222 (App Coq.ZArith.BinIntDef.Z.mul g_222232 aa_222232222)) (App eq Z b_2222 (App Coq.ZArith.BinIntDef.Z.mul g_222232 bb_2222322222))))))) (App Coq.ZArith.BinInt.Z.divide (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App pair Z (App prod Z Z) g_222232 p_22223222)) a_222))) (CaseMatch p_2222322) (CaseBranches (Lambda aa_22223222 Z (Lambda bb_222232222 Z (Cast (Lambda H0_2222322222 (App and (App eq Z a_222 (App Coq.ZArith.BinIntDef.Z.mul g_222232 aa_22223222)) (App eq Z b_2222 (App Coq.ZArith.BinIntDef.Z.mul g_222232 bb_222232222))) (Case 2 (Lambda out_22223222222 (App and (App eq Z a_222 (App Coq.ZArith.BinIntDef.Z.mul g_222232 aa_22223222)) (App eq Z b_2222 (App Coq.ZArith.BinIntDef.Z.mul g_222232 bb_222232222))) (App Coq.ZArith.BinInt.Z.divide g_222232 a_222)) (CaseMatch H0_2222322222) (CaseBranches (Lambda H_22223222222 (App eq Z a_222 (App Coq.ZArith.BinIntDef.Z.mul g_222232 aa_22223222)) (Lambda _tmp_222232222222 (App eq Z b_2222 (App Coq.ZArith.BinIntDef.Z.mul g_222232 bb_222232222)) (App ex_intro Z (Lambda z_2222322222222 Z (App eq Z a_222 (App Coq.ZArith.BinIntDef.Z.mul z_2222322222222 g_222232))) aa_22223222 (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul g_222232 aa_22223222) (Lambda z_2222322222222 Z (App eq Z a_222 z_2222322222222)) H_22223222222 (App Coq.ZArith.BinIntDef.Z.mul aa_22223222 g_222232) (App Coq.ZArith.BinInt.Z.mul_comm aa_22223222 g_222232)))))))) REVERTcast (Prod out_2222322221 (App and (App eq Z a_222 (App Coq.ZArith.BinIntDef.Z.mul g_222232 aa_22223222)) (App eq Z b_2222 (App Coq.ZArith.BinIntDef.Z.mul g_222232 bb_222232222))) (App Coq.ZArith.BinInt.Z.divide (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App pair Z (App prod Z Z) g_222232 (App pair Z Z aa_22223222 bb_222232222))) a_222)))))))))))) (App Coq.ZArith.BinInt.Z.ggcd_correct_divisors a_222 b_2222)) (App Coq.ZArith.BinIntDef.Z.gcd a_222 b_2222) (App Coq.ZArith.BinInt.Z.ggcd_gcd a_222 b_2222))))) (Definition Coq.ZArith.BinInt.Z.gcd_divide_r (Lambda a_222 Z (Lambda b_2222 Z (App Coq.Init.Logic.eq_ind Z (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App Coq.ZArith.BinIntDef.Z.ggcd a_222 b_2222)) (Lambda z_22222 Z (App Coq.ZArith.BinInt.Z.divide z_22222 b_2222)) (App (LetIn p_22223 (App Coq.ZArith.BinIntDef.Z.ggcd a_222 b_2222) (App prod Z (App prod Z Z)) (Case 2 (Lambda p_222232 (App prod Z (App prod Z Z)) (Prod out_2222321 (Case 2 (Lambda x_2222322 (App prod Z (App prod Z Z)) (Sort Prop)) (CaseMatch p_222232) (CaseBranches (Lambda g_2222322 Z (Lambda p_22223222 (App prod Z Z) (Case 2 (Lambda p_222232222 (App prod Z Z) (Sort Prop)) (CaseMatch p_22223222) (CaseBranches (Lambda aa_222232222 Z (Lambda bb_2222322222 Z (App and (App eq Z a_222 (App Coq.ZArith.BinIntDef.Z.mul g_2222322 aa_222232222)) (App eq Z b_2222 (App Coq.ZArith.BinIntDef.Z.mul g_2222322 bb_2222322222))))))))))) (App Coq.ZArith.BinInt.Z.divide (App Coq.Init.Datatypes.fst Z (App prod Z Z) p_222232) b_2222))) (CaseMatch p_22223) (CaseBranches (Lambda g_222232 Z (Lambda p_2222322 (App prod Z Z) (Case 2 (Lambda p_22223222 (App prod Z Z) (Prod out_222232221 (Case 2 (Lambda p_222232222 (App prod Z Z) (Sort Prop)) (CaseMatch p_22223222) (CaseBranches (Lambda aa_222232222 Z (Lambda bb_2222322222 Z (App and (App eq Z a_222 (App Coq.ZArith.BinIntDef.Z.mul g_222232 aa_222232222)) (App eq Z b_2222 (App Coq.ZArith.BinIntDef.Z.mul g_222232 bb_2222322222))))))) (App Coq.ZArith.BinInt.Z.divide (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App pair Z (App prod Z Z) g_222232 p_22223222)) b_2222))) (CaseMatch p_2222322) (CaseBranches (Lambda aa_22223222 Z (Lambda bb_222232222 Z (Cast (Lambda H0_2222322222 (App and (App eq Z a_222 (App Coq.ZArith.BinIntDef.Z.mul g_222232 aa_22223222)) (App eq Z b_2222 (App Coq.ZArith.BinIntDef.Z.mul g_222232 bb_222232222))) (Case 2 (Lambda out_22223222222 (App and (App eq Z a_222 (App Coq.ZArith.BinIntDef.Z.mul g_222232 aa_22223222)) (App eq Z b_2222 (App Coq.ZArith.BinIntDef.Z.mul g_222232 bb_222232222))) (App Coq.ZArith.BinInt.Z.divide g_222232 b_2222)) (CaseMatch H0_2222322222) (CaseBranches (Lambda _tmp_22223222222 (App eq Z a_222 (App Coq.ZArith.BinIntDef.Z.mul g_222232 aa_22223222)) (Lambda H_222232222222 (App eq Z b_2222 (App Coq.ZArith.BinIntDef.Z.mul g_222232 bb_222232222)) (App ex_intro Z (Lambda z_2222322222222 Z (App eq Z b_2222 (App Coq.ZArith.BinIntDef.Z.mul z_2222322222222 g_222232))) bb_222232222 (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul g_222232 bb_222232222) (Lambda z_2222322222222 Z (App eq Z b_2222 z_2222322222222)) H_222232222222 (App Coq.ZArith.BinIntDef.Z.mul bb_222232222 g_222232) (App Coq.ZArith.BinInt.Z.mul_comm bb_222232222 g_222232)))))))) REVERTcast (Prod out_2222322221 (App and (App eq Z a_222 (App Coq.ZArith.BinIntDef.Z.mul g_222232 aa_22223222)) (App eq Z b_2222 (App Coq.ZArith.BinIntDef.Z.mul g_222232 bb_222232222))) (App Coq.ZArith.BinInt.Z.divide (App Coq.Init.Datatypes.fst Z (App prod Z Z) (App pair Z (App prod Z Z) g_222232 (App pair Z Z aa_22223222 bb_222232222))) b_2222)))))))))))) (App Coq.ZArith.BinInt.Z.ggcd_correct_divisors a_222 b_2222)) (App Coq.ZArith.BinIntDef.Z.gcd a_222 b_2222) (App Coq.ZArith.BinInt.Z.ggcd_gcd a_222 b_2222))))) (Definition Coq.Init.Logic.False_ind (Lambda P_22222222222232232 (Sort Prop) (Lambda f_222222222222322322 False (Case 0 (Lambda out_2222222222223223222 False P_22222222222232232) (CaseMatch f_222222222222322322) (CaseBranches))))) (Definition Coq.PArith.BinPosDef.Pos.divide (Lambda p_222222222222212 positive (Lambda q_2222222222222122 positive (App ex positive (Lambda r_22222222222221222 positive (App eq positive q_2222222222222122 (App Coq.PArith.BinPosDef.Pos.mul r_22222222222221222 p_222222222222212))))))) (Definition Coq.ZArith.BinInt.Z.divide_Zpos (Lambda p_22222222222222 positive (Lambda q_222222222222222 positive (App conj (Prod out_2222222222222221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_22222222222222) (App Zpos q_222222222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222222 q_222222222222222)) (Prod out_2222222222222221 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222222 q_222222222222222) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_22222222222222) (App Zpos q_222222222222222))) (Lambda H0_2222222222222222 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_22222222222222) (App Zpos q_222222222222222)) (Case 2 (Lambda out_22222222222222222 (App ex Z (Lambda z_22222222222222222 Z (App eq Z (App Zpos q_222222222222222) (App Coq.ZArith.BinIntDef.Z.mul z_22222222222222222 (App Zpos p_22222222222222))))) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222222 q_222222222222222)) (CaseMatch H0_2222222222222222) (CaseBranches (Lambda x_22222222222222222 Z (Case 0 (Lambda z_222222222222222222 Z (Prod out_2222222222222222221 (App eq Z (App Zpos q_222222222222222) (App Coq.ZArith.BinIntDef.Z.mul z_222222222222222222 (App Zpos p_22222222222222))) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222222 q_222222222222222))) (CaseMatch x_22222222222222222) (CaseBranches (Lambda H_222222222222222222 (App eq Z (App Zpos q_222222222222222) (App Coq.ZArith.BinIntDef.Z.mul Z0 (App Zpos p_22222222222222))) (Cast (LetIn H0_2222222222222222223 (App Coq.Init.Logic.eq_ind Z (App Zpos q_222222222222222) (Lambda e_2222222222222222222 Z (Case 0 (Lambda z_22222222222222222222 Z (Sort Prop)) (CaseMatch e_2222222222222222222) (CaseBranches False (Lambda out_22222222222222222222 positive True) (Lambda out_22222222222222222222 positive False)))) I Z0 H_222222222222222222) False (App Coq.Init.Logic.False_ind (App Coq.PArith.BinPosDef.Pos.divide p_22222222222222 q_222222222222222) H0_2222222222222222223)) REVERTcast (App Coq.PArith.BinPosDef.Pos.divide p_22222222222222 q_222222222222222))) (Lambda r_222222222222222222 positive (Lambda H_2222222222222222222 (App eq Z (App Zpos q_222222222222222) (App Coq.ZArith.BinIntDef.Z.mul (App Zpos r_222222222222222222) (App Zpos p_22222222222222))) (Cast (LetIn H0_22222222222222222223 (App Coq.Init.Logic.f_equal Z positive (Lambda e_22222222222222222222 Z (Case 0 (Lambda z_222222222222222222222 Z positive) (CaseMatch e_22222222222222222222) (CaseBranches q_222222222222222 (Lambda p_222222222222222222222 positive p_222222222222222222222) (Lambda p_222222222222222222222 positive q_222222222222222)))) (App Zpos q_222222222222222) (App Zpos (App Coq.PArith.BinPosDef.Pos.mul r_222222222222222222 p_22222222222222)) H_2222222222222222222) (App eq positive q_222222222222222 (App Coq.PArith.BinPosDef.Pos.mul r_222222222222222222 p_22222222222222)) (App (Lambda H_222222222222222222232 (App eq positive q_222222222222222 (App Coq.PArith.BinPosDef.Pos.mul r_222222222222222222 p_22222222222222)) (App ex_intro positive (Lambda r_2222222222222222222322 positive (App eq positive q_222222222222222 (App Coq.PArith.BinPosDef.Pos.mul r_2222222222222222222322 p_22222222222222))) r_222222222222222222 H_222222222222222222232)) H0_22222222222222222223)) REVERTcast (App Coq.PArith.BinPosDef.Pos.divide p_22222222222222 q_222222222222222)))) (Lambda r_222222222222222222 positive (Lambda H_2222222222222222222 (App eq Z (App Zpos q_222222222222222) (App Coq.ZArith.BinIntDef.Z.mul (App Zneg r_222222222222222222) (App Zpos p_22222222222222))) (Cast (LetIn H0_22222222222222222223 (App Coq.Init.Logic.eq_ind Z (App Zpos q_222222222222222) (Lambda e_22222222222222222222 Z (Case 0 (Lambda z_222222222222222222222 Z (Sort Prop)) (CaseMatch e_22222222222222222222) (CaseBranches False (Lambda out_222222222222222222222 positive True) (Lambda out_222222222222222222222 positive False)))) I (App Zneg (App Coq.PArith.BinPosDef.Pos.mul r_222222222222222222 p_22222222222222)) H_2222222222222222222) False (App Coq.Init.Logic.False_ind (App Coq.PArith.BinPosDef.Pos.divide p_22222222222222 q_222222222222222) H0_22222222222222222223)) REVERTcast (App Coq.PArith.BinPosDef.Pos.divide p_22222222222222 q_222222222222222)))))))))) (Lambda H0_2222222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222222 q_222222222222222) (Case 2 (Lambda out_22222222222222222 (App ex positive (Lambda r_22222222222222222 positive (App eq positive q_222222222222222 (App Coq.PArith.BinPosDef.Pos.mul r_22222222222222222 p_22222222222222)))) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_22222222222222) (App Zpos q_222222222222222))) (CaseMatch H0_2222222222222222) (CaseBranches (Lambda r_22222222222222222 positive (Lambda H_222222222222222222 (App eq positive q_222222222222222 (App Coq.PArith.BinPosDef.Pos.mul r_22222222222222222 p_22222222222222)) (App ex_intro Z (Lambda z_2222222222222222222 Z (App eq Z (App Zpos q_222222222222222) (App Coq.ZArith.BinIntDef.Z.mul z_2222222222222222222 (App Zpos p_22222222222222)))) (App Zpos r_22222222222222222) (Cast (LetIn H0_2222222222222222223 H_222222222222222222 (App eq positive q_222222222222222 (App Coq.PArith.BinPosDef.Pos.mul r_22222222222222222 p_22222222222222)) (App (Lambda H0_22222222222222222232 (App eq positive q_222222222222222 (App Coq.PArith.BinPosDef.Pos.mul r_22222222222222222 p_22222222222222)) (App Coq.Init.Logic.eq_trans Z (App Zpos q_222222222222222) (App Zpos q_222222222222222) (App Zpos (App Coq.PArith.BinPosDef.Pos.mul r_22222222222222222 p_22222222222222)) (App Coq.Init.Logic.f_equal (Prod out_222222222222222222321 positive Z) Z (Lambda f_222222222222222222322 (Prod out_222222222222222222321 positive Z) (App f_222222222222222222322 q_222222222222222)) Zpos Zpos (App eq_refl (Prod out_222222222222222222321 positive Z) Zpos)) (App Coq.Init.Logic.f_equal positive Z Zpos q_222222222222222 (App Coq.PArith.BinPosDef.Pos.mul r_22222222222222222 p_22222222222222) H0_22222222222222222232))) H0_2222222222222222223)) REVERTcast (App eq Z (App Zpos q_222222222222222) (App Coq.ZArith.BinIntDef.Z.mul (App Zpos r_22222222222222222) (App Zpos p_22222222222222)))))))))))))) (Definition Coq.PArith.BinPos.Pos.gcdn_greatest (Lambda n_222222222223222222 nat (App Coq.Init.Datatypes.nat_ind (Lambda n_2222222222232222222 nat (Prod a_22222222222322222221 positive (Prod b_222222222223222222211 positive (Prod out_2222222222232222222111 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222221) (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222211)) n_2222222222232222222) (Prod p_22222222222322222221111 positive (Prod out_222222222223222222211111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222221111 a_22222222222322222221) (Prod out_2222222222232222222111111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222221111 b_222222222223222222211) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222221111 (App Coq.PArith.BinPosDef.Pos.gcdn n_2222222222232222222 a_22222222222322222221 b_222222222223222222211))))))))) (Lambda a_2222222222232222222 positive (Case 0 (Lambda p_22222222222322222222 positive (Prod b_222222222223222222221 positive (Prod out_2222222222232222222211 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat p_22222222222322222222) (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222221)) O) (Prod p_22222222222322222222111 positive (Prod out_222222222223222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222111 p_22222222222322222222) (Prod out_2222222222232222222211111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222111 b_222222222223222222221) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222111 (App Coq.PArith.BinPosDef.Pos.gcdn O p_22222222222322222222 b_222222222223222222221)))))))) (CaseMatch a_2222222222232222222) (CaseBranches (Lambda a_22222222222322222222 positive (Lambda b_222222222223222222222 positive (Case 0 (Lambda p_2222222222232222222222 positive (Prod out_22222222222322222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App xI a_22222222222322222222)) (App Coq.PArith.BinPosDef.Pos.size_nat p_2222222222232222222222)) O) (Prod p_222222222223222222222211 positive (Prod out_2222222222232222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 (App xI a_22222222222322222222)) (Prod out_22222222222322222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 p_2222222222232222222222) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 (App Coq.PArith.BinPosDef.Pos.gcdn O (App xI a_22222222222322222222) p_2222222222232222222222))))))) (CaseMatch b_222222222223222222222) (CaseBranches (Lambda b_2222222222232222222222 positive (Cast (Lambda H_22222222222322222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) O) (LetIn H0_222222222223222222222223 (Case 1 (Lambda n_222222222223222222222222 nat (Lambda out_2222222222232222222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) n_222222222223222222222222) (Prod out_22222222222322222222222221 (App eq nat n_222222222223222222222222 O) (Prod p_222222222223222222222222211 positive (Prod out_2222222222232222222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222211 (App xI a_22222222222322222222)) (Prod out_22222222222322222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222211 (App xI b_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222211 xH))))))) (CaseMatch H_22222222222322222222222) (CaseBranches (Lambda H0_222222222223222222222222 (App eq nat (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) O) (App (Lambda H0_2222222222232222222222222 (App eq nat (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) O) (LetIn H1_22222222222322222222222223 (App Coq.Init.Logic.eq_ind nat (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) (Lambda e_22222222222322222222222222 nat (Case 0 (Lambda n_222222222223222222222222222 nat (Sort Prop)) (CaseMatch e_22222222222322222222222222) (CaseBranches False (Lambda out_222222222223222222222222222 nat True)))) I O H0_2222222222232222222222222) False (App Coq.Init.Logic.False_ind (Prod p_222222222223222222222222231 positive (Prod out_2222222222232222222222222311 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222231 (App xI a_22222222222322222222)) (Prod out_22222222222322222222222223111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222231 (App xI b_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222231 xH)))) H1_22222222222322222222222223))) H0_222222222223222222222222)) (Lambda m_222222222223222222222222 nat (Lambda H0_2222222222232222222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) m_222222222223222222222222) (Lambda H1_22222222222322222222222222 (App eq nat (App S m_222222222223222222222222) O) (App (Lambda H1_222222222223222222222222222 (App eq nat (App S m_222222222223222222222222) O) (LetIn H0_2222222222232222222222222223 (App Coq.Init.Logic.eq_ind nat (App S m_222222222223222222222222) (Lambda e_2222222222232222222222222222 nat (Case 0 (Lambda n_22222222222322222222222222222 nat (Sort Prop)) (CaseMatch e_2222222222232222222222222222) (CaseBranches False (Lambda out_22222222222322222222222222222 nat True)))) I O H1_222222222223222222222222222) False (App Coq.Init.Logic.False_ind (Prod H0_22222222222322222222222222231 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) m_222222222223222222222222) (Prod p_222222222223222222222222222311 positive (Prod out_2222222222232222222222222223111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222311 (App xI a_22222222222322222222)) (Prod out_22222222222322222222222222231111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222311 (App xI b_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222311 xH))))) H0_2222222222232222222222222223))) H1_22222222222322222222222222 H0_2222222222232222222222222)))))) (Prod out_222222222223222222222221 (App eq nat O O) (Prod p_2222222222232222222222211 positive (Prod out_22222222222322222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 (App xI a_22222222222322222222)) (Prod out_222222222223222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 (App xI b_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 xH))))) (App H0_222222222223222222222223 (App eq_refl nat O)))) REVERTcast (Prod out_22222222222322222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App xI a_22222222222322222222)) (App Coq.PArith.BinPosDef.Pos.size_nat (App xI b_2222222222232222222222))) O) (Prod p_222222222223222222222211 positive (Prod out_2222222222232222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 (App xI a_22222222222322222222)) (Prod out_22222222222322222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 (App xI b_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 (App Coq.PArith.BinPosDef.Pos.gcdn O (App xI a_22222222222322222222) (App xI b_2222222222232222222222))))))))) (Lambda b_2222222222232222222222 positive (Cast (Lambda H_22222222222322222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) O) (LetIn H0_222222222223222222222223 (Case 1 (Lambda n_222222222223222222222222 nat (Lambda out_2222222222232222222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) n_222222222223222222222222) (Prod out_22222222222322222222222221 (App eq nat n_222222222223222222222222 O) (Prod p_222222222223222222222222211 positive (Prod out_2222222222232222222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222211 (App xI a_22222222222322222222)) (Prod out_22222222222322222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222211 (App xO b_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222211 xH))))))) (CaseMatch H_22222222222322222222222) (CaseBranches (Lambda H0_222222222223222222222222 (App eq nat (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) O) (App (Lambda H0_2222222222232222222222222 (App eq nat (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) O) (LetIn H1_22222222222322222222222223 (App Coq.Init.Logic.eq_ind nat (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) (Lambda e_22222222222322222222222222 nat (Case 0 (Lambda n_222222222223222222222222222 nat (Sort Prop)) (CaseMatch e_22222222222322222222222222) (CaseBranches False (Lambda out_222222222223222222222222222 nat True)))) I O H0_2222222222232222222222222) False (App Coq.Init.Logic.False_ind (Prod p_222222222223222222222222231 positive (Prod out_2222222222232222222222222311 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222231 (App xI a_22222222222322222222)) (Prod out_22222222222322222222222223111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222231 (App xO b_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222231 xH)))) H1_22222222222322222222222223))) H0_222222222223222222222222)) (Lambda m_222222222223222222222222 nat (Lambda H0_2222222222232222222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) m_222222222223222222222222) (Lambda H1_22222222222322222222222222 (App eq nat (App S m_222222222223222222222222) O) (App (Lambda H1_222222222223222222222222222 (App eq nat (App S m_222222222223222222222222) O) (LetIn H0_2222222222232222222222222223 (App Coq.Init.Logic.eq_ind nat (App S m_222222222223222222222222) (Lambda e_2222222222232222222222222222 nat (Case 0 (Lambda n_22222222222322222222222222222 nat (Sort Prop)) (CaseMatch e_2222222222232222222222222222) (CaseBranches False (Lambda out_22222222222322222222222222222 nat True)))) I O H1_222222222223222222222222222) False (App Coq.Init.Logic.False_ind (Prod H0_22222222222322222222222222231 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) m_222222222223222222222222) (Prod p_222222222223222222222222222311 positive (Prod out_2222222222232222222222222223111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222311 (App xI a_22222222222322222222)) (Prod out_22222222222322222222222222231111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222311 (App xO b_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222311 xH))))) H0_2222222222232222222222222223))) H1_22222222222322222222222222 H0_2222222222232222222222222)))))) (Prod out_222222222223222222222221 (App eq nat O O) (Prod p_2222222222232222222222211 positive (Prod out_22222222222322222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 (App xI a_22222222222322222222)) (Prod out_222222222223222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 (App xO b_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 xH))))) (App H0_222222222223222222222223 (App eq_refl nat O)))) REVERTcast (Prod out_22222222222322222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App xI a_22222222222322222222)) (App Coq.PArith.BinPosDef.Pos.size_nat (App xO b_2222222222232222222222))) O) (Prod p_222222222223222222222211 positive (Prod out_2222222222232222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 (App xI a_22222222222322222222)) (Prod out_22222222222322222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 (App xO b_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 (App Coq.PArith.BinPosDef.Pos.gcdn O (App xI a_22222222222322222222) (App xO b_2222222222232222222222))))))))) (Cast (Lambda H_2222222222232222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S O))) O) (LetIn H0_22222222222322222222223 (Case 1 (Lambda n_22222222222322222222222 nat (Lambda out_222222222223222222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S O))) n_22222222222322222222222) (Prod out_2222222222232222222222221 (App eq nat n_22222222222322222222222 O) (Prod p_22222222222322222222222211 positive (Prod out_222222222223222222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App xI a_22222222222322222222)) (Prod out_2222222222232222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 xH) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 xH))))))) (CaseMatch H_2222222222232222222222) (CaseBranches (Lambda H0_22222222222322222222222 (App eq nat (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S O))) O) (App (Lambda H0_222222222223222222222222 (App eq nat (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S O))) O) (LetIn H1_2222222222232222222222223 (App Coq.Init.Logic.eq_ind nat (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S O))) (Lambda e_2222222222232222222222222 nat (Case 0 (Lambda n_22222222222322222222222222 nat (Sort Prop)) (CaseMatch e_2222222222232222222222222) (CaseBranches False (Lambda out_22222222222322222222222222 nat True)))) I O H0_222222222223222222222222) False (App Coq.Init.Logic.False_ind (Prod p_22222222222322222222222231 positive (Prod out_222222222223222222222222311 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222231 (App xI a_22222222222322222222)) (Prod out_2222222222232222222222223111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222231 xH) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222231 xH)))) H1_2222222222232222222222223))) H0_22222222222322222222222)) (Lambda m_22222222222322222222222 nat (Lambda H0_222222222223222222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S O))) m_22222222222322222222222) (Lambda H1_2222222222232222222222222 (App eq nat (App S m_22222222222322222222222) O) (App (Lambda H1_22222222222322222222222222 (App eq nat (App S m_22222222222322222222222) O) (LetIn H0_222222222223222222222222223 (App Coq.Init.Logic.eq_ind nat (App S m_22222222222322222222222) (Lambda e_222222222223222222222222222 nat (Case 0 (Lambda n_2222222222232222222222222222 nat (Sort Prop)) (CaseMatch e_222222222223222222222222222) (CaseBranches False (Lambda out_2222222222232222222222222222 nat True)))) I O H1_22222222222322222222222222) False (App Coq.Init.Logic.False_ind (Prod H0_2222222222232222222222222231 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S O))) m_22222222222322222222222) (Prod p_22222222222322222222222222311 positive (Prod out_222222222223222222222222223111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222311 (App xI a_22222222222322222222)) (Prod out_2222222222232222222222222231111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222311 xH) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222311 xH))))) H0_222222222223222222222222223))) H1_2222222222232222222222222 H0_222222222223222222222222)))))) (Prod out_22222222222322222222221 (App eq nat O O) (Prod p_222222222223222222222211 positive (Prod out_2222222222232222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 (App xI a_22222222222322222222)) (Prod out_22222222222322222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 xH) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 xH))))) (App H0_22222222222322222222223 (App eq_refl nat O)))) REVERTcast (Prod out_2222222222232222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App xI a_22222222222322222222)) (App Coq.PArith.BinPosDef.Pos.size_nat xH)) O) (Prod p_22222222222322222222211 positive (Prod out_222222222223222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222211 (App xI a_22222222222322222222)) (Prod out_2222222222232222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222211 xH) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222211 (App Coq.PArith.BinPosDef.Pos.gcdn O (App xI a_22222222222322222222) xH))))))))))) (Lambda a_22222222222322222222 positive (Lambda b_222222222223222222222 positive (Case 0 (Lambda p_2222222222232222222222 positive (Prod out_22222222222322222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App xO a_22222222222322222222)) (App Coq.PArith.BinPosDef.Pos.size_nat p_2222222222232222222222)) O) (Prod p_222222222223222222222211 positive (Prod out_2222222222232222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 (App xO a_22222222222322222222)) (Prod out_22222222222322222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 p_2222222222232222222222) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 (App Coq.PArith.BinPosDef.Pos.gcdn O (App xO a_22222222222322222222) p_2222222222232222222222))))))) (CaseMatch b_222222222223222222222) (CaseBranches (Lambda b_2222222222232222222222 positive (Cast (Lambda H_22222222222322222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) O) (LetIn H0_222222222223222222222223 (Case 1 (Lambda n_222222222223222222222222 nat (Lambda out_2222222222232222222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) n_222222222223222222222222) (Prod out_22222222222322222222222221 (App eq nat n_222222222223222222222222 O) (Prod p_222222222223222222222222211 positive (Prod out_2222222222232222222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222211 (App xO a_22222222222322222222)) (Prod out_22222222222322222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222211 (App xI b_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222211 xH))))))) (CaseMatch H_22222222222322222222222) (CaseBranches (Lambda H0_222222222223222222222222 (App eq nat (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) O) (App (Lambda H0_2222222222232222222222222 (App eq nat (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) O) (LetIn H1_22222222222322222222222223 (App Coq.Init.Logic.eq_ind nat (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) (Lambda e_22222222222322222222222222 nat (Case 0 (Lambda n_222222222223222222222222222 nat (Sort Prop)) (CaseMatch e_22222222222322222222222222) (CaseBranches False (Lambda out_222222222223222222222222222 nat True)))) I O H0_2222222222232222222222222) False (App Coq.Init.Logic.False_ind (Prod p_222222222223222222222222231 positive (Prod out_2222222222232222222222222311 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222231 (App xO a_22222222222322222222)) (Prod out_22222222222322222222222223111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222231 (App xI b_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222231 xH)))) H1_22222222222322222222222223))) H0_222222222223222222222222)) (Lambda m_222222222223222222222222 nat (Lambda H0_2222222222232222222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) m_222222222223222222222222) (Lambda H1_22222222222322222222222222 (App eq nat (App S m_222222222223222222222222) O) (App (Lambda H1_222222222223222222222222222 (App eq nat (App S m_222222222223222222222222) O) (LetIn H0_2222222222232222222222222223 (App Coq.Init.Logic.eq_ind nat (App S m_222222222223222222222222) (Lambda e_2222222222232222222222222222 nat (Case 0 (Lambda n_22222222222322222222222222222 nat (Sort Prop)) (CaseMatch e_2222222222232222222222222222) (CaseBranches False (Lambda out_22222222222322222222222222222 nat True)))) I O H1_222222222223222222222222222) False (App Coq.Init.Logic.False_ind (Prod H0_22222222222322222222222222231 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) m_222222222223222222222222) (Prod p_222222222223222222222222222311 positive (Prod out_2222222222232222222222222223111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222311 (App xO a_22222222222322222222)) (Prod out_22222222222322222222222222231111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222311 (App xI b_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222311 xH))))) H0_2222222222232222222222222223))) H1_22222222222322222222222222 H0_2222222222232222222222222)))))) (Prod out_222222222223222222222221 (App eq nat O O) (Prod p_2222222222232222222222211 positive (Prod out_22222222222322222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 (App xO a_22222222222322222222)) (Prod out_222222222223222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 (App xI b_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 xH))))) (App H0_222222222223222222222223 (App eq_refl nat O)))) REVERTcast (Prod out_22222222222322222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App xO a_22222222222322222222)) (App Coq.PArith.BinPosDef.Pos.size_nat (App xI b_2222222222232222222222))) O) (Prod p_222222222223222222222211 positive (Prod out_2222222222232222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 (App xO a_22222222222322222222)) (Prod out_22222222222322222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 (App xI b_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 (App Coq.PArith.BinPosDef.Pos.gcdn O (App xO a_22222222222322222222) (App xI b_2222222222232222222222))))))))) (Lambda b_2222222222232222222222 positive (Cast (Lambda H_22222222222322222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) O) (LetIn H0_222222222223222222222223 (Case 1 (Lambda n_222222222223222222222222 nat (Lambda out_2222222222232222222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) n_222222222223222222222222) (Prod out_22222222222322222222222221 (App eq nat n_222222222223222222222222 O) (Prod p_222222222223222222222222211 positive (Prod out_2222222222232222222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222211 (App xO a_22222222222322222222)) (Prod out_22222222222322222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222211 (App xO b_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222211 xH))))))) (CaseMatch H_22222222222322222222222) (CaseBranches (Lambda H0_222222222223222222222222 (App eq nat (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) O) (App (Lambda H0_2222222222232222222222222 (App eq nat (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) O) (LetIn H1_22222222222322222222222223 (App Coq.Init.Logic.eq_ind nat (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) (Lambda e_22222222222322222222222222 nat (Case 0 (Lambda n_222222222223222222222222222 nat (Sort Prop)) (CaseMatch e_22222222222322222222222222) (CaseBranches False (Lambda out_222222222223222222222222222 nat True)))) I O H0_2222222222232222222222222) False (App Coq.Init.Logic.False_ind (Prod p_222222222223222222222222231 positive (Prod out_2222222222232222222222222311 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222231 (App xO a_22222222222322222222)) (Prod out_22222222222322222222222223111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222231 (App xO b_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222231 xH)))) H1_22222222222322222222222223))) H0_222222222223222222222222)) (Lambda m_222222222223222222222222 nat (Lambda H0_2222222222232222222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) m_222222222223222222222222) (Lambda H1_22222222222322222222222222 (App eq nat (App S m_222222222223222222222222) O) (App (Lambda H1_222222222223222222222222222 (App eq nat (App S m_222222222223222222222222) O) (LetIn H0_2222222222232222222222222223 (App Coq.Init.Logic.eq_ind nat (App S m_222222222223222222222222) (Lambda e_2222222222232222222222222222 nat (Case 0 (Lambda n_22222222222322222222222222222 nat (Sort Prop)) (CaseMatch e_2222222222232222222222222222) (CaseBranches False (Lambda out_22222222222322222222222222222 nat True)))) I O H1_222222222223222222222222222) False (App Coq.Init.Logic.False_ind (Prod H0_22222222222322222222222222231 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_2222222222232222222222)))) m_222222222223222222222222) (Prod p_222222222223222222222222222311 positive (Prod out_2222222222232222222222222223111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222311 (App xO a_22222222222322222222)) (Prod out_22222222222322222222222222231111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222311 (App xO b_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222311 xH))))) H0_2222222222232222222222222223))) H1_22222222222322222222222222 H0_2222222222232222222222222)))))) (Prod out_222222222223222222222221 (App eq nat O O) (Prod p_2222222222232222222222211 positive (Prod out_22222222222322222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 (App xO a_22222222222322222222)) (Prod out_222222222223222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 (App xO b_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 xH))))) (App H0_222222222223222222222223 (App eq_refl nat O)))) REVERTcast (Prod out_22222222222322222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App xO a_22222222222322222222)) (App Coq.PArith.BinPosDef.Pos.size_nat (App xO b_2222222222232222222222))) O) (Prod p_222222222223222222222211 positive (Prod out_2222222222232222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 (App xO a_22222222222322222222)) (Prod out_22222222222322222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 (App xO b_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 (App Coq.PArith.BinPosDef.Pos.gcdn O (App xO a_22222222222322222222) (App xO b_2222222222232222222222))))))))) (Cast (Lambda H_2222222222232222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S O))) O) (LetIn H0_22222222222322222222223 (Case 1 (Lambda n_22222222222322222222222 nat (Lambda out_222222222223222222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S O))) n_22222222222322222222222) (Prod out_2222222222232222222222221 (App eq nat n_22222222222322222222222 O) (Prod p_22222222222322222222222211 positive (Prod out_222222222223222222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App xO a_22222222222322222222)) (Prod out_2222222222232222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 xH) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 xH))))))) (CaseMatch H_2222222222232222222222) (CaseBranches (Lambda H0_22222222222322222222222 (App eq nat (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S O))) O) (App (Lambda H0_222222222223222222222222 (App eq nat (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S O))) O) (LetIn H1_2222222222232222222222223 (App Coq.Init.Logic.eq_ind nat (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S O))) (Lambda e_2222222222232222222222222 nat (Case 0 (Lambda n_22222222222322222222222222 nat (Sort Prop)) (CaseMatch e_2222222222232222222222222) (CaseBranches False (Lambda out_22222222222322222222222222 nat True)))) I O H0_222222222223222222222222) False (App Coq.Init.Logic.False_ind (Prod p_22222222222322222222222231 positive (Prod out_222222222223222222222222311 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222231 (App xO a_22222222222322222222)) (Prod out_2222222222232222222222223111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222231 xH) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222231 xH)))) H1_2222222222232222222222223))) H0_22222222222322222222222)) (Lambda m_22222222222322222222222 nat (Lambda H0_222222222223222222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S O))) m_22222222222322222222222) (Lambda H1_2222222222232222222222222 (App eq nat (App S m_22222222222322222222222) O) (App (Lambda H1_22222222222322222222222222 (App eq nat (App S m_22222222222322222222222) O) (LetIn H0_222222222223222222222222223 (App Coq.Init.Logic.eq_ind nat (App S m_22222222222322222222222) (Lambda e_222222222223222222222222222 nat (Case 0 (Lambda n_2222222222232222222222222222 nat (Sort Prop)) (CaseMatch e_222222222223222222222222222) (CaseBranches False (Lambda out_2222222222232222222222222222 nat True)))) I O H1_22222222222322222222222222) False (App Coq.Init.Logic.False_ind (Prod H0_2222222222232222222222222231 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222222) (App S O))) m_22222222222322222222222) (Prod p_22222222222322222222222222311 positive (Prod out_222222222223222222222222223111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222311 (App xO a_22222222222322222222)) (Prod out_2222222222232222222222222231111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222311 xH) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222311 xH))))) H0_222222222223222222222222223))) H1_2222222222232222222222222 H0_222222222223222222222222)))))) (Prod out_22222222222322222222221 (App eq nat O O) (Prod p_222222222223222222222211 positive (Prod out_2222222222232222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 (App xO a_22222222222322222222)) (Prod out_22222222222322222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 xH) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 xH))))) (App H0_22222222222322222222223 (App eq_refl nat O)))) REVERTcast (Prod out_2222222222232222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App xO a_22222222222322222222)) (App Coq.PArith.BinPosDef.Pos.size_nat xH)) O) (Prod p_22222222222322222222211 positive (Prod out_222222222223222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222211 (App xO a_22222222222322222222)) (Prod out_2222222222232222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222211 xH) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222211 (App Coq.PArith.BinPosDef.Pos.gcdn O (App xO a_22222222222322222222) xH))))))))))) (Lambda b_22222222222322222222 positive (Case 0 (Lambda p_222222222223222222222 positive (Prod out_2222222222232222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat xH) (App Coq.PArith.BinPosDef.Pos.size_nat p_222222222223222222222)) O) (Prod p_22222222222322222222211 positive (Prod out_222222222223222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222211 xH) (Prod out_2222222222232222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222211 p_222222222223222222222) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222211 (App Coq.PArith.BinPosDef.Pos.gcdn O xH p_222222222223222222222))))))) (CaseMatch b_22222222222322222222) (CaseBranches (Lambda b_222222222223222222222 positive (Cast (Lambda H_2222222222232222222222 (App le (App S (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222))) O) (LetIn H0_22222222222322222222223 (Case 1 (Lambda n_22222222222322222222222 nat (Lambda out_222222222223222222222222 (App le (App S (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222))) n_22222222222322222222222) (Prod out_2222222222232222222222221 (App eq nat n_22222222222322222222222 O) (Prod p_22222222222322222222222211 positive (Prod out_222222222223222222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 xH) (Prod out_2222222222232222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App xI b_222222222223222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 xH))))))) (CaseMatch H_2222222222232222222222) (CaseBranches (Lambda H0_22222222222322222222222 (App eq nat (App S (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222))) O) (App (Lambda H0_222222222223222222222222 (App eq nat (App S (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222))) O) (LetIn H1_2222222222232222222222223 (App Coq.Init.Logic.eq_ind nat (App S (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222))) (Lambda e_2222222222232222222222222 nat (Case 0 (Lambda n_22222222222322222222222222 nat (Sort Prop)) (CaseMatch e_2222222222232222222222222) (CaseBranches False (Lambda out_22222222222322222222222222 nat True)))) I O H0_222222222223222222222222) False (App Coq.Init.Logic.False_ind (Prod p_22222222222322222222222231 positive (Prod out_222222222223222222222222311 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222231 xH) (Prod out_2222222222232222222222223111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222231 (App xI b_222222222223222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222231 xH)))) H1_2222222222232222222222223))) H0_22222222222322222222222)) (Lambda m_22222222222322222222222 nat (Lambda H0_222222222223222222222222 (App le (App S (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222))) m_22222222222322222222222) (Lambda H1_2222222222232222222222222 (App eq nat (App S m_22222222222322222222222) O) (App (Lambda H1_22222222222322222222222222 (App eq nat (App S m_22222222222322222222222) O) (LetIn H0_222222222223222222222222223 (App Coq.Init.Logic.eq_ind nat (App S m_22222222222322222222222) (Lambda e_222222222223222222222222222 nat (Case 0 (Lambda n_2222222222232222222222222222 nat (Sort Prop)) (CaseMatch e_222222222223222222222222222) (CaseBranches False (Lambda out_2222222222232222222222222222 nat True)))) I O H1_22222222222322222222222222) False (App Coq.Init.Logic.False_ind (Prod H0_2222222222232222222222222231 (App le (App S (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222))) m_22222222222322222222222) (Prod p_22222222222322222222222222311 positive (Prod out_222222222223222222222222223111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222311 xH) (Prod out_2222222222232222222222222231111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222311 (App xI b_222222222223222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222311 xH))))) H0_222222222223222222222222223))) H1_2222222222232222222222222 H0_222222222223222222222222)))))) (Prod out_22222222222322222222221 (App eq nat O O) (Prod p_222222222223222222222211 positive (Prod out_2222222222232222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 xH) (Prod out_22222222222322222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 (App xI b_222222222223222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 xH))))) (App H0_22222222222322222222223 (App eq_refl nat O)))) REVERTcast (Prod out_2222222222232222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat xH) (App Coq.PArith.BinPosDef.Pos.size_nat (App xI b_222222222223222222222))) O) (Prod p_22222222222322222222211 positive (Prod out_222222222223222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222211 xH) (Prod out_2222222222232222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222211 (App xI b_222222222223222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222211 (App Coq.PArith.BinPosDef.Pos.gcdn O xH (App xI b_222222222223222222222))))))))) (Lambda b_222222222223222222222 positive (Cast (Lambda H_2222222222232222222222 (App le (App S (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222))) O) (LetIn H0_22222222222322222222223 (Case 1 (Lambda n_22222222222322222222222 nat (Lambda out_222222222223222222222222 (App le (App S (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222))) n_22222222222322222222222) (Prod out_2222222222232222222222221 (App eq nat n_22222222222322222222222 O) (Prod p_22222222222322222222222211 positive (Prod out_222222222223222222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 xH) (Prod out_2222222222232222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App xO b_222222222223222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 xH))))))) (CaseMatch H_2222222222232222222222) (CaseBranches (Lambda H0_22222222222322222222222 (App eq nat (App S (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222))) O) (App (Lambda H0_222222222223222222222222 (App eq nat (App S (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222))) O) (LetIn H1_2222222222232222222222223 (App Coq.Init.Logic.eq_ind nat (App S (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222))) (Lambda e_2222222222232222222222222 nat (Case 0 (Lambda n_22222222222322222222222222 nat (Sort Prop)) (CaseMatch e_2222222222232222222222222) (CaseBranches False (Lambda out_22222222222322222222222222 nat True)))) I O H0_222222222223222222222222) False (App Coq.Init.Logic.False_ind (Prod p_22222222222322222222222231 positive (Prod out_222222222223222222222222311 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222231 xH) (Prod out_2222222222232222222222223111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222231 (App xO b_222222222223222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222231 xH)))) H1_2222222222232222222222223))) H0_22222222222322222222222)) (Lambda m_22222222222322222222222 nat (Lambda H0_222222222223222222222222 (App le (App S (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222))) m_22222222222322222222222) (Lambda H1_2222222222232222222222222 (App eq nat (App S m_22222222222322222222222) O) (App (Lambda H1_22222222222322222222222222 (App eq nat (App S m_22222222222322222222222) O) (LetIn H0_222222222223222222222222223 (App Coq.Init.Logic.eq_ind nat (App S m_22222222222322222222222) (Lambda e_222222222223222222222222222 nat (Case 0 (Lambda n_2222222222232222222222222222 nat (Sort Prop)) (CaseMatch e_222222222223222222222222222) (CaseBranches False (Lambda out_2222222222232222222222222222 nat True)))) I O H1_22222222222322222222222222) False (App Coq.Init.Logic.False_ind (Prod H0_2222222222232222222222222231 (App le (App S (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222))) m_22222222222322222222222) (Prod p_22222222222322222222222222311 positive (Prod out_222222222223222222222222223111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222311 xH) (Prod out_2222222222232222222222222231111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222311 (App xO b_222222222223222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222311 xH))))) H0_222222222223222222222222223))) H1_2222222222232222222222222 H0_222222222223222222222222)))))) (Prod out_22222222222322222222221 (App eq nat O O) (Prod p_222222222223222222222211 positive (Prod out_2222222222232222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 xH) (Prod out_22222222222322222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 (App xO b_222222222223222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 xH))))) (App H0_22222222222322222222223 (App eq_refl nat O)))) REVERTcast (Prod out_2222222222232222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat xH) (App Coq.PArith.BinPosDef.Pos.size_nat (App xO b_222222222223222222222))) O) (Prod p_22222222222322222222211 positive (Prod out_222222222223222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222211 xH) (Prod out_2222222222232222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222211 (App xO b_222222222223222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222211 (App Coq.PArith.BinPosDef.Pos.gcdn O xH (App xO b_222222222223222222222))))))))) (Cast (Lambda H_222222222223222222222 (App le (App S (App S O)) O) (LetIn H0_2222222222232222222223 (Case 1 (Lambda n_2222222222232222222222 nat (Lambda out_22222222222322222222222 (App le (App S (App S O)) n_2222222222232222222222) (Prod out_222222222223222222222221 (App eq nat n_2222222222232222222222 O) (Prod p_2222222222232222222222211 positive (Prod out_22222222222322222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 xH) (Prod out_222222222223222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 xH) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 xH))))))) (CaseMatch H_222222222223222222222) (CaseBranches (Lambda H0_2222222222232222222222 (App eq nat (App S (App S O)) O) (App (Lambda H0_22222222222322222222222 (App eq nat (App S (App S O)) O) (LetIn H1_222222222223222222222223 (App Coq.Init.Logic.eq_ind nat (App S (App S O)) (Lambda e_222222222223222222222222 nat (Case 0 (Lambda n_2222222222232222222222222 nat (Sort Prop)) (CaseMatch e_222222222223222222222222) (CaseBranches False (Lambda out_2222222222232222222222222 nat True)))) I O H0_22222222222322222222222) False (App Coq.Init.Logic.False_ind (Prod p_2222222222232222222222231 positive (Prod out_22222222222322222222222311 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222231 xH) (Prod out_222222222223222222222223111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222231 xH) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222231 xH)))) H1_222222222223222222222223))) H0_2222222222232222222222)) (Lambda m_2222222222232222222222 nat (Lambda H0_22222222222322222222222 (App le (App S (App S O)) m_2222222222232222222222) (Lambda H1_222222222223222222222222 (App eq nat (App S m_2222222222232222222222) O) (App (Lambda H1_2222222222232222222222222 (App eq nat (App S m_2222222222232222222222) O) (LetIn H0_22222222222322222222222223 (App Coq.Init.Logic.eq_ind nat (App S m_2222222222232222222222) (Lambda e_22222222222322222222222222 nat (Case 0 (Lambda n_222222222223222222222222222 nat (Sort Prop)) (CaseMatch e_22222222222322222222222222) (CaseBranches False (Lambda out_222222222223222222222222222 nat True)))) I O H1_2222222222232222222222222) False (App Coq.Init.Logic.False_ind (Prod H0_222222222223222222222222231 (App le (App S (App S O)) m_2222222222232222222222) (Prod p_2222222222232222222222222311 positive (Prod out_22222222222322222222222223111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222222311 xH) (Prod out_222222222223222222222222231111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222222311 xH) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222222311 xH))))) H0_22222222222322222222222223))) H1_222222222223222222222222 H0_22222222222322222222222)))))) (Prod out_2222222222232222222221 (App eq nat O O) (Prod p_22222222222322222222211 positive (Prod out_222222222223222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222211 xH) (Prod out_2222222222232222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222211 xH) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222211 xH))))) (App H0_2222222222232222222223 (App eq_refl nat O)))) REVERTcast (Prod out_222222222223222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat xH) (App Coq.PArith.BinPosDef.Pos.size_nat xH)) O) (Prod p_2222222222232222222211 positive (Prod out_22222222222322222222111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222211 xH) (Prod out_222222222223222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222211 xH) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222211 (App Coq.PArith.BinPosDef.Pos.gcdn O xH xH))))))))))))) (Lambda n_2222222222232222222 nat (Lambda IHn_22222222222322222222 (Prod a_22222222222322222221 positive (Prod b_222222222223222222211 positive (Prod out_2222222222232222222111 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_22222222222322222221) (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222211)) n_2222222222232222222) (Prod p_22222222222322222221111 positive (Prod out_222222222223222222211111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222221111 a_22222222222322222221) (Prod out_2222222222232222222111111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222221111 b_222222222223222222211) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222221111 (App Coq.PArith.BinPosDef.Pos.gcdn n_2222222222232222222 a_22222222222322222221 b_222222222223222222211)))))))) (Lambda a_222222222223222222222 positive (Case 0 (Lambda p_2222222222232222222222 positive (Prod b_22222222222322222222221 positive (Prod out_222222222223222222222211 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat p_2222222222232222222222) (App Coq.PArith.BinPosDef.Pos.size_nat b_22222222222322222222221)) (App S n_2222222222232222222)) (Prod p_2222222222232222222222111 positive (Prod out_22222222222322222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222111 p_2222222222232222222222) (Prod out_222222222223222222222211111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222111 b_22222222222322222222221) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222111 (App Coq.PArith.BinPosDef.Pos.gcdn (App S n_2222222222232222222) p_2222222222232222222222 b_22222222222322222222221)))))))) (CaseMatch a_222222222223222222222) (CaseBranches (Lambda a_2222222222232222222222 positive (Lambda b_22222222222322222222222 positive (Case 0 (Lambda p_222222222223222222222222 positive (Prod out_2222222222232222222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App xI a_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.size_nat p_222222222223222222222222)) (App S n_2222222222232222222)) (Prod p_22222222222322222222222211 positive (Prod out_222222222223222222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App xI a_2222222222232222222222)) (Prod out_2222222222232222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 p_222222222223222222222222) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App Coq.PArith.BinPosDef.Pos.gcdn (App S n_2222222222232222222) (App xI a_2222222222232222222222) p_222222222223222222222222))))))) (CaseMatch b_22222222222322222222222) (CaseBranches (Lambda b_222222222223222222222222 positive (Cast (Case 3 (Lambda c_2222222222232222222222222 comparison (Lambda out_22222222222322222222222222 (App CompareSpec (App eq positive a_2222222222232222222222 b_222222222223222222222222) (App Coq.PArith.BinPos.Pos.lt a_2222222222232222222222 b_222222222223222222222222) (App Coq.PArith.BinPos.Pos.lt b_222222222223222222222222 a_2222222222232222222222) c_2222222222232222222222222) (Prod out_222222222223222222222222221 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222)))) (App S n_2222222222232222222)) (Prod p_2222222222232222222222222211 positive (Prod out_22222222222322222222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222222211 (App xI a_2222222222232222222222)) (Prod out_222222222223222222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222222211 (App xI b_222222222223222222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222222211 (Case 0 (Lambda x_2222222222232222222222222211112 comparison positive) (CaseMatch c_2222222222232222222222222) (CaseBranches (App xI a_2222222222232222222222) (App Coq.PArith.BinPosDef.Pos.gcdn n_2222222222232222222 (App Coq.PArith.BinPosDef.Pos.sub b_222222222223222222222222 a_2222222222232222222222) (App xI a_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.gcdn n_2222222222232222222 (App Coq.PArith.BinPosDef.Pos.sub a_2222222222232222222222 b_222222222223222222222222) (App xI b_222222222223222222222222))))))))))) (CaseMatch (App Coq.PArith.BinPos.Pos.compare_spec a_2222222222232222222222 b_222222222223222222222222)) (CaseBranches (Cast (Lambda H_2222222222232222222222222 (App eq positive a_2222222222232222222222 b_222222222223222222222222) (Lambda H0_22222222222322222222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222)))) (App S n_2222222222232222222)) (Lambda p_222222222223222222222222222 positive (Lambda H1_2222222222232222222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222 (App xI a_2222222222232222222222)) (Lambda H2_22222222222322222222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222 (App xI b_222222222223222222222222)) H1_2222222222232222222222222222))))) REVERTcast (Prod out_2222222222232222222222221 (App eq positive a_2222222222232222222222 b_222222222223222222222222) (Prod out_22222222222322222222222211 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222)))) (App S n_2222222222232222222)) (Prod p_222222222223222222222222111 positive (Prod out_2222222222232222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222111 (App xI a_2222222222232222222222)) (Prod out_22222222222322222222222211111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222111 (App xI b_222222222223222222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222111 (App xI a_2222222222232222222222)))))))) (Cast (Lambda LT_2222222222232222222222222 (App Coq.PArith.BinPos.Pos.lt a_2222222222232222222222 b_222222222223222222222222) (Lambda LE_22222222222322222222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222)))) (App S n_2222222222232222222)) (Lambda p_222222222223222222222222222 positive (Lambda Hp1_2222222222232222222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222 (App xI a_2222222222232222222222)) (Lambda Hp2_22222222222322222222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222 (App xI b_222222222223222222222222)) (App IHn_22222222222322222222 (App Coq.PArith.BinPosDef.Pos.sub b_222222222223222222222222 a_2222222222232222222222) (App xI a_2222222222232222222222) (LetIn LE_222222222223222222222222222223 (App Coq.Arith.Le.le_S_n (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) n_2222222222232222222 LE_22222222222322222222222222) (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) n_2222222222232222222) (App Coq.Arith.PeanoNat.Nat.le_trans (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App Coq.PArith.BinPosDef.Pos.sub b_222222222223222222222222 a_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.size_nat (App xI a_2222222222232222222222))) (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) n_2222222222232222222 (App Coq.Init.Logic.eq_ind_r nat (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App xI a_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.size_nat (App Coq.PArith.BinPosDef.Pos.sub b_222222222223222222222222 a_2222222222232222222222))) (Lambda n_2222222222232222222222222222232 nat (App le n_2222222222232222222222222222232 (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))))) (App Coq.Init.Logic.eq_ind nat (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) (Lambda n_2222222222232222222222222222232 nat (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App xI a_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.size_nat (App Coq.PArith.BinPosDef.Pos.sub b_222222222223222222222222 a_2222222222232222222222))) n_2222222222232222222222222222232)) (App Coq.Init.Logic.eq_ind nat (App Coq.Init.Nat.add (App S (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222)) (Lambda n_2222222222232222222222222222232 nat (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App xI a_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.size_nat (App Coq.PArith.BinPosDef.Pos.sub b_222222222223222222222222 a_2222222222232222222222))) n_2222222222232222222222222222232)) (App Coq.Arith.Plus.plus_le_compat (App Coq.PArith.BinPosDef.Pos.size_nat (App xI a_2222222222232222222222)) (App S (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.size_nat (App Coq.PArith.BinPosDef.Pos.sub b_222222222223222222222222 a_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222) (App le_n (App S (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222))) (App Coq.PArith.BinPos.Pos.size_nat_monotone (App Coq.PArith.BinPosDef.Pos.sub b_222222222223222222222222 a_2222222222232222222222) b_222222222223222222222222 (App Coq.PArith.BinPos.Pos.sub_decr b_222222222223222222222222 a_2222222222232222222222 LT_2222222222232222222222222))) (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) (App Coq.Init.Peano.plus_Sn_m (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) (App Coq.Init.Peano.plus_n_Sm (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App Coq.PArith.BinPosDef.Pos.sub b_222222222223222222222222 a_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.size_nat (App xI a_2222222222232222222222))) (App Coq.Arith.PeanoNat.Nat.add_comm (App Coq.PArith.BinPosDef.Pos.size_nat (App Coq.PArith.BinPosDef.Pos.sub b_222222222223222222222222 a_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.size_nat (App xI a_2222222222232222222222)))) LE_222222222223222222222222222223)) p_222222222223222222222222222 (App Coq.PArith.BinPos.Pos.divide_xO_xI p_222222222223222222222222222 (App Coq.PArith.BinPosDef.Pos.sub b_222222222223222222222222 a_2222222222232222222222) a_2222222222232222222222 (App Coq.PArith.BinPos.Pos.divide_add_cancel_l p_222222222223222222222222222 (App xO (App Coq.PArith.BinPosDef.Pos.sub b_222222222223222222222222 a_2222222222232222222222)) (App xI a_2222222222232222222222) Hp1_2222222222232222222222222222 (App Coq.Init.Logic.eq_ind positive (App Coq.PArith.BinPosDef.Pos.sub (App xI b_222222222223222222222222) (App xI a_2222222222232222222222)) (Lambda p_222222222223222222222222222222 positive (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222 (App Coq.PArith.BinPosDef.Pos.add p_222222222223222222222222222222 (App xI a_2222222222232222222222)))) (App Coq.Init.Logic.eq_ind_r positive (App xI b_222222222223222222222222) (Lambda p_222222222223222222222222222222 positive (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222 p_222222222223222222222222222222)) Hp2_22222222222322222222222222222 (App Coq.PArith.BinPosDef.Pos.add (App Coq.PArith.BinPosDef.Pos.sub (App xI b_222222222223222222222222) (App xI a_2222222222232222222222)) (App xI a_2222222222232222222222)) (App Coq.PArith.BinPos.Pos.sub_add (App xI b_222222222223222222222222) (App xI a_2222222222232222222222) LT_2222222222232222222222222)) (App xO (App Coq.PArith.BinPosDef.Pos.sub b_222222222223222222222222 a_2222222222232222222222)) (App Coq.PArith.BinPos.Pos.sub_xI_xI b_222222222223222222222222 a_2222222222232222222222 LT_2222222222232222222222222))) Hp1_2222222222232222222222222222) Hp1_2222222222232222222222222222)))))) REVERTcast (Prod out_2222222222232222222222221 (App Coq.PArith.BinPos.Pos.lt a_2222222222232222222222 b_222222222223222222222222) (Prod out_22222222222322222222222211 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222)))) (App S n_2222222222232222222)) (Prod p_222222222223222222222222111 positive (Prod out_2222222222232222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222111 (App xI a_2222222222232222222222)) (Prod out_22222222222322222222222211111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222111 (App xI b_222222222223222222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222111 (App Coq.PArith.BinPosDef.Pos.gcdn n_2222222222232222222 (App Coq.PArith.BinPosDef.Pos.sub b_222222222223222222222222 a_2222222222232222222222) (App xI a_2222222222232222222222))))))))) (Cast (Lambda LT_2222222222232222222222222 (App Coq.PArith.BinPos.Pos.lt b_222222222223222222222222 a_2222222222232222222222) (Lambda LE_22222222222322222222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222)))) (App S n_2222222222232222222)) (Lambda p_222222222223222222222222222 positive (Lambda Hp1_2222222222232222222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222 (App xI a_2222222222232222222222)) (Lambda Hp2_22222222222322222222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222 (App xI b_222222222223222222222222)) (App IHn_22222222222322222222 (App Coq.PArith.BinPosDef.Pos.sub a_2222222222232222222222 b_222222222223222222222222) (App xI b_222222222223222222222222) (LetIn LE_222222222223222222222222222223 (App Coq.Arith.Le.le_S_n (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) n_2222222222232222222 LE_22222222222322222222222222) (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) n_2222222222232222222) (App Coq.Arith.PeanoNat.Nat.le_trans (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App Coq.PArith.BinPosDef.Pos.sub a_2222222222232222222222 b_222222222223222222222222)) (App Coq.PArith.BinPosDef.Pos.size_nat (App xI b_222222222223222222222222))) (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) n_2222222222232222222 (App Coq.Arith.Plus.plus_le_compat (App Coq.PArith.BinPosDef.Pos.size_nat (App Coq.PArith.BinPosDef.Pos.sub a_2222222222232222222222 b_222222222223222222222222)) (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App Coq.PArith.BinPosDef.Pos.size_nat (App xI b_222222222223222222222222)) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222)) (App Coq.PArith.BinPos.Pos.size_nat_monotone (App Coq.PArith.BinPosDef.Pos.sub a_2222222222232222222222 b_222222222223222222222222) a_2222222222232222222222 (App Coq.PArith.BinPos.Pos.sub_decr a_2222222222232222222222 b_222222222223222222222222 LT_2222222222232222222222222)) (App le_n (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222)))) LE_222222222223222222222222222223)) p_222222222223222222222222222 (App Coq.PArith.BinPos.Pos.divide_xO_xI p_222222222223222222222222222 (App Coq.PArith.BinPosDef.Pos.sub a_2222222222232222222222 b_222222222223222222222222) b_222222222223222222222222 (App Coq.PArith.BinPos.Pos.divide_add_cancel_l p_222222222223222222222222222 (App xO (App Coq.PArith.BinPosDef.Pos.sub a_2222222222232222222222 b_222222222223222222222222)) (App xI b_222222222223222222222222) Hp2_22222222222322222222222222222 (App Coq.Init.Logic.eq_ind positive (App Coq.PArith.BinPosDef.Pos.sub (App xI a_2222222222232222222222) (App xI b_222222222223222222222222)) (Lambda p_222222222223222222222222222222 positive (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222 (App Coq.PArith.BinPosDef.Pos.add p_222222222223222222222222222222 (App xI b_222222222223222222222222)))) (App Coq.Init.Logic.eq_ind_r positive (App xI a_2222222222232222222222) (Lambda p_222222222223222222222222222222 positive (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222 p_222222222223222222222222222222)) Hp1_2222222222232222222222222222 (App Coq.PArith.BinPosDef.Pos.add (App Coq.PArith.BinPosDef.Pos.sub (App xI a_2222222222232222222222) (App xI b_222222222223222222222222)) (App xI b_222222222223222222222222)) (App Coq.PArith.BinPos.Pos.sub_add (App xI a_2222222222232222222222) (App xI b_222222222223222222222222) LT_2222222222232222222222222)) (App xO (App Coq.PArith.BinPosDef.Pos.sub a_2222222222232222222222 b_222222222223222222222222)) (App Coq.PArith.BinPos.Pos.sub_xI_xI a_2222222222232222222222 b_222222222223222222222222 LT_2222222222232222222222222))) Hp2_22222222222322222222222222222) Hp2_22222222222322222222222222222)))))) REVERTcast (Prod out_2222222222232222222222221 (App Coq.PArith.BinPos.Pos.lt b_222222222223222222222222 a_2222222222232222222222) (Prod out_22222222222322222222222211 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222)))) (App S n_2222222222232222222)) (Prod p_222222222223222222222222111 positive (Prod out_2222222222232222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222111 (App xI a_2222222222232222222222)) (Prod out_22222222222322222222222211111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222111 (App xI b_222222222223222222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222111 (App Coq.PArith.BinPosDef.Pos.gcdn n_2222222222232222222 (App Coq.PArith.BinPosDef.Pos.sub a_2222222222232222222222 b_222222222223222222222222) (App xI b_222222222223222222222222))))))))))) REVERTcast (Prod out_2222222222232222222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App xI a_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.size_nat (App xI b_222222222223222222222222))) (App S n_2222222222232222222)) (Prod p_22222222222322222222222211 positive (Prod out_222222222223222222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App xI a_2222222222232222222222)) (Prod out_2222222222232222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App xI b_222222222223222222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App Coq.PArith.BinPosDef.Pos.gcdn (App S n_2222222222232222222) (App xI a_2222222222232222222222) (App xI b_222222222223222222222222))))))))) (Lambda b_222222222223222222222222 positive (Cast (Cast (Lambda LE_2222222222232222222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222)))) (App S n_2222222222232222222)) (Lambda p_22222222222322222222222222 positive (Lambda Hp1_222222222223222222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222 (App xI a_2222222222232222222222)) (Lambda Hp2_2222222222232222222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222 (App xO b_222222222223222222222222)) (App IHn_22222222222322222222 (App xI a_2222222222232222222222) b_222222222223222222222222 (LetIn LE_22222222222322222222222222223 (App Coq.Arith.Le.le_S_n (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) n_2222222222232222222 LE_2222222222232222222222222) (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) n_2222222222232222222) (Cast (App Coq.Init.Logic.eq_ind_r nat (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) (Lambda n_222222222223222222222222222232 nat (App le n_222222222223222222222222222232 n_2222222222232222222)) LE_22222222222322222222222222223 (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) (App Coq.Init.Peano.plus_n_Sm (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) REVERTcast (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App xI a_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222)) n_2222222222232222222))) p_22222222222322222222222222 Hp1_222222222223222222222222222 (App Coq.PArith.BinPos.Pos.divide_xO_xI p_22222222222322222222222222 b_222222222223222222222222 a_2222222222232222222222 Hp2_2222222222232222222222222222 Hp1_222222222223222222222222222)))))) REVERTcast (Prod out_2222222222232222222222221 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222)))) (App S n_2222222222232222222)) (Prod p_22222222222322222222222211 positive (Prod out_222222222223222222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App xI a_2222222222232222222222)) (Prod out_2222222222232222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App xO b_222222222223222222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App Coq.PArith.BinPosDef.Pos.gcdn n_2222222222232222222 (App xI a_2222222222232222222222) b_222222222223222222222222))))))) REVERTcast (Prod out_2222222222232222222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App xI a_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.size_nat (App xO b_222222222223222222222222))) (App S n_2222222222232222222)) (Prod p_22222222222322222222222211 positive (Prod out_222222222223222222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App xI a_2222222222232222222222)) (Prod out_2222222222232222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App xO b_222222222223222222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App Coq.PArith.BinPosDef.Pos.gcdn (App S n_2222222222232222222) (App xI a_2222222222232222222222) (App xO b_222222222223222222222222))))))))) (Cast (Cast (Lambda H_222222222223222222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S O))) (App S n_2222222222232222222)) (Lambda p_2222222222232222222222222 positive (Lambda H0_22222222222322222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222222 (App xI a_2222222222232222222222)) (Lambda H1_222222222223222222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222222 xH) H1_222222222223222222222222222)))) REVERTcast (Prod out_222222222223222222222221 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S O))) (App S n_2222222222232222222)) (Prod p_2222222222232222222222211 positive (Prod out_22222222222322222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 (App xI a_2222222222232222222222)) (Prod out_222222222223222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 xH) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 xH)))))) REVERTcast (Prod out_222222222223222222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App xI a_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.size_nat xH)) (App S n_2222222222232222222)) (Prod p_2222222222232222222222211 positive (Prod out_22222222222322222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 (App xI a_2222222222232222222222)) (Prod out_222222222223222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 xH) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 (App Coq.PArith.BinPosDef.Pos.gcdn (App S n_2222222222232222222) (App xI a_2222222222232222222222) xH))))))))))) (Lambda a_2222222222232222222222 positive (Lambda b_22222222222322222222222 positive (Case 0 (Lambda p_222222222223222222222222 positive (Prod out_2222222222232222222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App xO a_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.size_nat p_222222222223222222222222)) (App S n_2222222222232222222)) (Prod p_22222222222322222222222211 positive (Prod out_222222222223222222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App xO a_2222222222232222222222)) (Prod out_2222222222232222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 p_222222222223222222222222) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App Coq.PArith.BinPosDef.Pos.gcdn (App S n_2222222222232222222) (App xO a_2222222222232222222222) p_222222222223222222222222))))))) (CaseMatch b_22222222222322222222222) (CaseBranches (Lambda b_222222222223222222222222 positive (Cast (Cast (Lambda LE_2222222222232222222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222)))) (App S n_2222222222232222222)) (Lambda p_22222222222322222222222222 positive (Lambda Hp1_222222222223222222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222 (App xO a_2222222222232222222222)) (Lambda Hp2_2222222222232222222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222 (App xI b_222222222223222222222222)) (App IHn_22222222222322222222 a_2222222222232222222222 (App xI b_222222222223222222222222) (Cast (App Coq.Arith.Le.le_S_n (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) n_2222222222232222222 LE_2222222222232222222222222) REVERTcast (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App Coq.PArith.BinPosDef.Pos.size_nat (App xI b_222222222223222222222222))) n_2222222222232222222)) p_22222222222322222222222222 (App Coq.PArith.BinPos.Pos.divide_xO_xI p_22222222222322222222222222 a_2222222222232222222222 b_222222222223222222222222 Hp1_222222222223222222222222222 Hp2_2222222222232222222222222222) Hp2_2222222222232222222222222222))))) REVERTcast (Prod out_2222222222232222222222221 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222)))) (App S n_2222222222232222222)) (Prod p_22222222222322222222222211 positive (Prod out_222222222223222222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App xO a_2222222222232222222222)) (Prod out_2222222222232222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App xI b_222222222223222222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App Coq.PArith.BinPosDef.Pos.gcdn n_2222222222232222222 a_2222222222232222222222 (App xI b_222222222223222222222222)))))))) REVERTcast (Prod out_2222222222232222222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App xO a_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.size_nat (App xI b_222222222223222222222222))) (App S n_2222222222232222222)) (Prod p_22222222222322222222222211 positive (Prod out_222222222223222222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App xO a_2222222222232222222222)) (Prod out_2222222222232222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App xI b_222222222223222222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App Coq.PArith.BinPosDef.Pos.gcdn (App S n_2222222222232222222) (App xO a_2222222222232222222222) (App xI b_222222222223222222222222))))))))) (Lambda b_222222222223222222222222 positive (Cast (Cast (Lambda LE_2222222222232222222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222)))) (App S n_2222222222232222222)) (Lambda p_22222222222322222222222222 positive (Lambda Hp1_222222222223222222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222 (App xO a_2222222222232222222222)) (Lambda Hp2_2222222222232222222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222 (App xO b_222222222223222222222222)) (App (Case 0 (Lambda p_22222222222322222222222222222 positive (Prod Hp1_222222222223222222222222222221 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222222 (App xO a_2222222222232222222222)) (Prod Hp2_2222222222232222222222222222211 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222222 (App xO b_222222222223222222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222222 (App xO (App Coq.PArith.BinPosDef.Pos.gcdn n_2222222222232222222 a_2222222222232222222222 b_222222222223222222222222)))))) (CaseMatch p_22222222222322222222222222) (CaseBranches (Lambda p_22222222222322222222222222222 positive (Lambda Hp1_222222222223222222222222222222 (App Coq.PArith.BinPosDef.Pos.divide (App xI p_22222222222322222222222222222) (App xO a_2222222222232222222222)) (Lambda Hp2_2222222222232222222222222222222 (App Coq.PArith.BinPosDef.Pos.divide (App xI p_22222222222322222222222222222) (App xO b_222222222223222222222222)) (App Coq.PArith.BinPos.Pos.divide_mul_r (App xI p_22222222222322222222222222222) (App xO xH) (App Coq.PArith.BinPosDef.Pos.gcdn n_2222222222232222222 a_2222222222232222222222 b_222222222223222222222222) (App IHn_22222222222322222222 a_2222222222232222222222 b_222222222223222222222222 (LetIn LE_22222222222322222222222222222223 (App Coq.Arith.Le.le_S_n (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) n_2222222222232222222 LE_2222222222232222222222222) (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) n_2222222222232222222) (App Coq.Arith.Le.le_Sn_le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222)) n_2222222222232222222 (App Coq.Init.Logic.eq_ind_r nat (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) (Lambda n_222222222223222222222222222222232 nat (App le n_222222222223222222222222222222232 n_2222222222232222222)) LE_22222222222322222222222222222223 (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) (App Coq.Init.Peano.plus_n_Sm (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))))) (App xI p_22222222222322222222222222222) (App Coq.PArith.BinPos.Pos.divide_xO_xI (App xI p_22222222222322222222222222222) a_2222222222232222222222 p_22222222222322222222222222222 Hp1_222222222223222222222222222222 (App ex_intro positive (Lambda r_22222222222322222222222222222222 positive (App eq positive (App xI p_22222222222322222222222222222) (App Coq.PArith.BinPosDef.Pos.mul r_22222222222322222222222222222222 (App xI p_22222222222322222222222222222)))) xH (App eq_refl positive (App Coq.PArith.BinPosDef.Pos.mul xH (App xI p_22222222222322222222222222222))))) (App Coq.PArith.BinPos.Pos.divide_xO_xI (App xI p_22222222222322222222222222222) b_222222222223222222222222 p_22222222222322222222222222222 Hp2_2222222222232222222222222222222 (App ex_intro positive (Lambda r_22222222222322222222222222222222 positive (App eq positive (App xI p_22222222222322222222222222222) (App Coq.PArith.BinPosDef.Pos.mul r_22222222222322222222222222222222 (App xI p_22222222222322222222222222222)))) xH (App eq_refl positive (App Coq.PArith.BinPosDef.Pos.mul xH (App xI p_22222222222322222222222222222)))))))))) (Lambda p_22222222222322222222222222222 positive (Lambda Hp1_222222222223222222222222222222 (App Coq.PArith.BinPosDef.Pos.divide (App xO p_22222222222322222222222222222) (App xO a_2222222222232222222222)) (Lambda Hp2_2222222222232222222222222222222 (App Coq.PArith.BinPosDef.Pos.divide (App xO p_22222222222322222222222222222) (App xO b_222222222223222222222222)) (LetIn H_22222222222322222222222222222223 (Lambda p_22222222222322222222222222222222 positive (Lambda q_222222222223222222222222222222222 positive (Case 2 (Lambda out_2222222222232222222222222222222222 (App and (Prod out_2222222222232222222222222222222221 (App Coq.PArith.BinPosDef.Pos.divide (App xO p_22222222222322222222222222222222) (App xO q_222222222223222222222222222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222222222 q_222222222223222222222222222222222)) (Prod out_2222222222232222222222222222222221 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222222222 q_222222222223222222222222222222222) (App Coq.PArith.BinPosDef.Pos.divide (App xO p_22222222222322222222222222222222) (App xO q_222222222223222222222222222222222)))) (Prod out_22222222222322222222222222222222221 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222222222 q_222222222223222222222222222222222) (App Coq.PArith.BinPosDef.Pos.divide (App xO p_22222222222322222222222222222222) (App xO q_222222222223222222222222222222222)))) (CaseMatch (App Coq.PArith.BinPos.Pos.divide_xO_xO p_22222222222322222222222222222222 q_222222222223222222222222222222222)) (CaseBranches (Lambda out_2222222222232222222222222222222222 (Prod out_2222222222232222222222222222222221 (App Coq.PArith.BinPosDef.Pos.divide (App xO p_22222222222322222222222222222222) (App xO q_222222222223222222222222222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222222222 q_222222222223222222222222222222222)) (Lambda out_22222222222322222222222222222222222 (Prod out_22222222222322222222222222222222221 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222222222 q_222222222223222222222222222222222) (App Coq.PArith.BinPosDef.Pos.divide (App xO p_22222222222322222222222222222222) (App xO q_222222222223222222222222222222222))) out_22222222222322222222222222222222222)))))) (Prod p_22222222222322222222222222222221 positive (Prod q_222222222223222222222222222222211 positive (Prod out_2222222222232222222222222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222222222221 q_222222222223222222222222222222211) (App Coq.PArith.BinPosDef.Pos.divide (App xO p_22222222222322222222222222222221) (App xO q_222222222223222222222222222222211))))) (App H_22222222222322222222222222222223 p_22222222222322222222222222222 (App Coq.PArith.BinPosDef.Pos.gcdn n_2222222222232222222 a_2222222222232222222222 b_222222222223222222222222) (App IHn_22222222222322222222 a_2222222222232222222222 b_222222222223222222222222 (LetIn LE_222222222223222222222222222222233 (App Coq.Arith.Le.le_S_n (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) n_2222222222232222222 LE_2222222222232222222222222) (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) n_2222222222232222222) (App Coq.Arith.Le.le_Sn_le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222)) n_2222222222232222222 (App Coq.Init.Logic.eq_ind_r nat (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) (Lambda n_2222222222232222222222222222222332 nat (App le n_2222222222232222222222222222222332 n_2222222222232222222)) LE_222222222223222222222222222222233 (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))) (App Coq.Init.Peano.plus_n_Sm (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222))))) p_22222222222322222222222222222 (LetIn H_222222222223222222222222222222233 (Lambda p_222222222223222222222222222222232 positive (Lambda q_2222222222232222222222222222222322 positive (Case 2 (Lambda out_22222222222322222222222222222223222 (App and (Prod out_22222222222322222222222222222223221 (App Coq.PArith.BinPosDef.Pos.divide (App xO p_222222222223222222222222222222232) (App xO q_2222222222232222222222222222222322)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222222232 q_2222222222232222222222222222222322)) (Prod out_22222222222322222222222222222223221 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222222232 q_2222222222232222222222222222222322) (App Coq.PArith.BinPosDef.Pos.divide (App xO p_222222222223222222222222222222232) (App xO q_2222222222232222222222222222222322)))) (Prod out_222222222223222222222222222222232221 (App Coq.PArith.BinPosDef.Pos.divide (App xO p_222222222223222222222222222222232) (App xO q_2222222222232222222222222222222322)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222222232 q_2222222222232222222222222222222322))) (CaseMatch (App Coq.PArith.BinPos.Pos.divide_xO_xO p_222222222223222222222222222222232 q_2222222222232222222222222222222322)) (CaseBranches (Lambda out_22222222222322222222222222222223222 (Prod out_22222222222322222222222222222223221 (App Coq.PArith.BinPosDef.Pos.divide (App xO p_222222222223222222222222222222232) (App xO q_2222222222232222222222222222222322)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222222232 q_2222222222232222222222222222222322)) (Lambda out_222222222223222222222222222222232222 (Prod out_222222222223222222222222222222232221 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222222232 q_2222222222232222222222222222222322) (App Coq.PArith.BinPosDef.Pos.divide (App xO p_222222222223222222222222222222232) (App xO q_2222222222232222222222222222222322))) out_22222222222322222222222222222223222)))))) (Prod p_222222222223222222222222222222231 positive (Prod q_2222222222232222222222222222222311 positive (Prod out_22222222222322222222222222222223111 (App Coq.PArith.BinPosDef.Pos.divide (App xO p_222222222223222222222222222222231) (App xO q_2222222222232222222222222222222311)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222222231 q_2222222222232222222222222222222311)))) (App H_222222222223222222222222222222233 p_22222222222322222222222222222 a_2222222222232222222222 Hp1_222222222223222222222222222222)) (LetIn H_222222222223222222222222222222233 (Lambda p_222222222223222222222222222222232 positive (Lambda q_2222222222232222222222222222222322 positive (Case 2 (Lambda out_22222222222322222222222222222223222 (App and (Prod out_22222222222322222222222222222223221 (App Coq.PArith.BinPosDef.Pos.divide (App xO p_222222222223222222222222222222232) (App xO q_2222222222232222222222222222222322)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222222232 q_2222222222232222222222222222222322)) (Prod out_22222222222322222222222222222223221 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222222232 q_2222222222232222222222222222222322) (App Coq.PArith.BinPosDef.Pos.divide (App xO p_222222222223222222222222222222232) (App xO q_2222222222232222222222222222222322)))) (Prod out_222222222223222222222222222222232221 (App Coq.PArith.BinPosDef.Pos.divide (App xO p_222222222223222222222222222222232) (App xO q_2222222222232222222222222222222322)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222222232 q_2222222222232222222222222222222322))) (CaseMatch (App Coq.PArith.BinPos.Pos.divide_xO_xO p_222222222223222222222222222222232 q_2222222222232222222222222222222322)) (CaseBranches (Lambda out_22222222222322222222222222222223222 (Prod out_22222222222322222222222222222223221 (App Coq.PArith.BinPosDef.Pos.divide (App xO p_222222222223222222222222222222232) (App xO q_2222222222232222222222222222222322)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222222232 q_2222222222232222222222222222222322)) (Lambda out_222222222223222222222222222222232222 (Prod out_222222222223222222222222222222232221 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222222232 q_2222222222232222222222222222222322) (App Coq.PArith.BinPosDef.Pos.divide (App xO p_222222222223222222222222222222232) (App xO q_2222222222232222222222222222222322))) out_22222222222322222222222222222223222)))))) (Prod p_222222222223222222222222222222231 positive (Prod q_2222222222232222222222222222222311 positive (Prod out_22222222222322222222222222222223111 (App Coq.PArith.BinPosDef.Pos.divide (App xO p_222222222223222222222222222222231) (App xO q_2222222222232222222222222222222311)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222222222231 q_2222222222232222222222222222222311)))) (App H_222222222223222222222222222222233 p_22222222222322222222222222222 b_222222222223222222222222 Hp2_2222222222232222222222222222222)))))))) (Lambda Hp1_22222222222322222222222222222 (App Coq.PArith.BinPosDef.Pos.divide xH (App xO a_2222222222232222222222)) (Lambda Hp2_222222222223222222222222222222 (App Coq.PArith.BinPosDef.Pos.divide xH (App xO b_222222222223222222222222)) (App ex_intro positive (Lambda r_2222222222232222222222222222222 positive (App eq positive (App xO (App Coq.PArith.BinPosDef.Pos.gcdn n_2222222222232222222 a_2222222222232222222222 b_222222222223222222222222)) (App Coq.PArith.BinPosDef.Pos.mul r_2222222222232222222222222222222 xH))) (App xO (App Coq.PArith.BinPosDef.Pos.gcdn n_2222222222232222222 a_2222222222232222222222 b_222222222223222222222222)) (App Coq.Init.Logic.eq_ind_r positive (App xO (App Coq.PArith.BinPosDef.Pos.gcdn n_2222222222232222222 a_2222222222232222222222 b_222222222223222222222222)) (Lambda p_2222222222232222222222222222222 positive (App eq positive (App xO (App Coq.PArith.BinPosDef.Pos.gcdn n_2222222222232222222 a_2222222222232222222222 b_222222222223222222222222)) p_2222222222232222222222222222222)) (App eq_refl positive (App xO (App Coq.PArith.BinPosDef.Pos.gcdn n_2222222222232222222 a_2222222222232222222222 b_222222222223222222222222))) (App Coq.PArith.BinPosDef.Pos.mul (App xO (App Coq.PArith.BinPosDef.Pos.gcdn n_2222222222232222222 a_2222222222232222222222 b_222222222223222222222222)) xH) (App Coq.PArith.BinPos.Pos.mul_1_r (App xO (App Coq.PArith.BinPosDef.Pos.gcdn n_2222222222232222222 a_2222222222232222222222 b_222222222223222222222222))))))))) Hp1_222222222223222222222222222 Hp2_2222222222232222222222222222))))) REVERTcast (Prod out_2222222222232222222222221 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_222222222223222222222222)))) (App S n_2222222222232222222)) (Prod p_22222222222322222222222211 positive (Prod out_222222222223222222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App xO a_2222222222232222222222)) (Prod out_2222222222232222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App xO b_222222222223222222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App xO (App Coq.PArith.BinPosDef.Pos.gcdn n_2222222222232222222 a_2222222222232222222222 b_222222222223222222222222)))))))) REVERTcast (Prod out_2222222222232222222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App xO a_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.size_nat (App xO b_222222222223222222222222))) (App S n_2222222222232222222)) (Prod p_22222222222322222222222211 positive (Prod out_222222222223222222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App xO a_2222222222232222222222)) (Prod out_2222222222232222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App xO b_222222222223222222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222322222222222211 (App Coq.PArith.BinPosDef.Pos.gcdn (App S n_2222222222232222222) (App xO a_2222222222232222222222) (App xO b_222222222223222222222222))))))))) (Cast (Cast (Lambda H_222222222223222222222222 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S O))) (App S n_2222222222232222222)) (Lambda p_2222222222232222222222222 positive (Lambda H0_22222222222322222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222222 (App xO a_2222222222232222222222)) (Lambda H1_222222222223222222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222222 xH) H1_222222222223222222222222222)))) REVERTcast (Prod out_222222222223222222222221 (App le (App S (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232222222222) (App S O))) (App S n_2222222222232222222)) (Prod p_2222222222232222222222211 positive (Prod out_22222222222322222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 (App xO a_2222222222232222222222)) (Prod out_222222222223222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 xH) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 xH)))))) REVERTcast (Prod out_222222222223222222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat (App xO a_2222222222232222222222)) (App Coq.PArith.BinPosDef.Pos.size_nat xH)) (App S n_2222222222232222222)) (Prod p_2222222222232222222222211 positive (Prod out_22222222222322222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 (App xO a_2222222222232222222222)) (Prod out_222222222223222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 xH) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 (App Coq.PArith.BinPosDef.Pos.gcdn (App S n_2222222222232222222) (App xO a_2222222222232222222222) xH))))))))))) (Lambda b_2222222222232222222222 positive (Case 0 (Lambda p_22222222222322222222222 positive (Prod out_222222222223222222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat xH) (App Coq.PArith.BinPosDef.Pos.size_nat p_22222222222322222222222)) (App S n_2222222222232222222)) (Prod p_2222222222232222222222211 positive (Prod out_22222222222322222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 xH) (Prod out_222222222223222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 p_22222222222322222222222) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 (App Coq.PArith.BinPosDef.Pos.gcdn (App S n_2222222222232222222) xH p_22222222222322222222222))))))) (CaseMatch b_2222222222232222222222) (CaseBranches (Lambda b_22222222222322222222222 positive (Cast (Cast (Lambda H_222222222223222222222222 (App le (App S (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_22222222222322222222222))) (App S n_2222222222232222222)) (Lambda p_2222222222232222222222222 positive (Lambda H0_22222222222322222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222222 xH) (Lambda H1_222222222223222222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222222 (App xI b_22222222222322222222222)) H0_22222222222322222222222222)))) REVERTcast (Prod out_222222222223222222222221 (App le (App S (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_22222222222322222222222))) (App S n_2222222222232222222)) (Prod p_2222222222232222222222211 positive (Prod out_22222222222322222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 xH) (Prod out_222222222223222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 (App xI b_22222222222322222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 xH)))))) REVERTcast (Prod out_222222222223222222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat xH) (App Coq.PArith.BinPosDef.Pos.size_nat (App xI b_22222222222322222222222))) (App S n_2222222222232222222)) (Prod p_2222222222232222222222211 positive (Prod out_22222222222322222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 xH) (Prod out_222222222223222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 (App xI b_22222222222322222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 (App Coq.PArith.BinPosDef.Pos.gcdn (App S n_2222222222232222222) xH (App xI b_22222222222322222222222))))))))) (Lambda b_22222222222322222222222 positive (Cast (Cast (Lambda H_222222222223222222222222 (App le (App S (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_22222222222322222222222))) (App S n_2222222222232222222)) (Lambda p_2222222222232222222222222 positive (Lambda H0_22222222222322222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222222 xH) (Lambda H1_222222222223222222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222222 (App xO b_22222222222322222222222)) H0_22222222222322222222222222)))) REVERTcast (Prod out_222222222223222222222221 (App le (App S (App S (App Coq.PArith.BinPosDef.Pos.size_nat b_22222222222322222222222))) (App S n_2222222222232222222)) (Prod p_2222222222232222222222211 positive (Prod out_22222222222322222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 xH) (Prod out_222222222223222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 (App xO b_22222222222322222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 xH)))))) REVERTcast (Prod out_222222222223222222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat xH) (App Coq.PArith.BinPosDef.Pos.size_nat (App xO b_22222222222322222222222))) (App S n_2222222222232222222)) (Prod p_2222222222232222222222211 positive (Prod out_22222222222322222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 xH) (Prod out_222222222223222222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 (App xO b_22222222222322222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232222222222211 (App Coq.PArith.BinPosDef.Pos.gcdn (App S n_2222222222232222222) xH (App xO b_22222222222322222222222))))))))) (Cast (Cast (Lambda H_22222222222322222222222 (App le (App S (App S O)) (App S n_2222222222232222222)) (Lambda p_222222222223222222222222 positive (Lambda H0_2222222222232222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222 xH) (Lambda H1_22222222222322222222222222 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222222 xH) H1_22222222222322222222222222)))) REVERTcast (Prod out_22222222222322222222221 (App le (App S (App S O)) (App S n_2222222222232222222)) (Prod p_222222222223222222222211 positive (Prod out_2222222222232222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 xH) (Prod out_22222222222322222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 xH) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 xH)))))) REVERTcast (Prod out_22222222222322222222221 (App le (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat xH) (App Coq.PArith.BinPosDef.Pos.size_nat xH)) (App S n_2222222222232222222)) (Prod p_222222222223222222222211 positive (Prod out_2222222222232222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 xH) (Prod out_22222222222322222222221111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 xH) (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222222222211 (App Coq.PArith.BinPosDef.Pos.gcdn (App S n_2222222222232222222) xH xH))))))))))))))) n_222222222223222222))) (Definition Coq.PArith.BinPos.Pos.gcd_greatest (Lambda a_2222222222232 positive (Lambda b_22222222222322 positive (Lambda p_222222222223222 positive (Lambda H_2222222222232222 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222 a_2222222222232) (Lambda H0_22222222222322222 (App Coq.PArith.BinPosDef.Pos.divide p_222222222223222 b_22222222222322) (App Coq.PArith.BinPos.Pos.gcdn_greatest (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232) (App Coq.PArith.BinPosDef.Pos.size_nat b_22222222222322)) a_2222222222232 b_22222222222322 (App le_n (App Coq.Init.Nat.add (App Coq.PArith.BinPosDef.Pos.size_nat a_2222222222232) (App Coq.PArith.BinPosDef.Pos.size_nat b_22222222222322))) p_222222222223222 H_2222222222232222 H0_22222222222322222))))))) (Definition Coq.ZArith.BinIntDef.Z.opp (Lambda x_2222222222222222222 Z (Case 0 (Lambda x_22222222222222222222 Z Z) (CaseMatch x_2222222222222222222) (CaseBranches Z0 (Lambda x_22222222222222222222 positive (App Zneg x_22222222222222222222)) (Lambda x_22222222222222222222 positive (App Zpos x_22222222222222222222)))))) (Definition Coq.ZArith.BinInt.Z.mul_opp_r (Lambda n_2222222222222222222 Z (Lambda m_22222222222222222222 Z (App (Lambda lemma_222222222222222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_2222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222) n_2222222222222222222)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Transitive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul n_2222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222) n_2222222222222222222) lemma_222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul n_2222222222222222222 m_22222222222222222222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul n_2222222222222222222 m_22222222222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul n_2222222222222222222 m_22222222222222222222))))) (App Coq.ZArith.BinInt.Z.mul_comm n_2222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222)) (App (Lambda lemma_222222222222222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_2222222222222222222 m_22222222222222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22222222222222222222 n_2222222222222222222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222) n_2222222222222222222) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul n_2222222222222222222 m_22222222222222222222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul m_22222222222222222222 n_2222222222222222222)) (App Coq.ZArith.BinInt.Z.opp_wd (App Coq.ZArith.BinIntDef.Z.mul n_2222222222222222222 m_22222222222222222222) (App Coq.ZArith.BinIntDef.Z.mul m_22222222222222222222 n_2222222222222222222) lemma_222222222222222222222))) (App Coq.ZArith.BinInt.Z.mul_comm n_2222222222222222222 m_22222222222222222222) (App Coq.ZArith.BinInt.Z.mul_opp_l m_22222222222222222222 n_2222222222222222222)))))) (Definition Coq.ZArith.BinInt.Z.mul_opp_l (Lambda n_2222222222222222222 Z (Lambda m_22222222222222222222 Z (LetIn H_222222222222222222223 (Lambda n_222222222222222222222 Z (Lambda m_2222222222222222222222 Z (Case 2 (Lambda out_22222222222222222222222 (App and (Prod out_22222222222222222222221 (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_222222222222222222222 m_2222222222222222222222) Z0) (App eq Z n_222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_2222222222222222222222))) (Prod out_22222222222222222222221 (App eq Z n_222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_2222222222222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_222222222222222222222 m_2222222222222222222222) Z0))) (Prod out_222222222222222222222221 (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_222222222222222222222 m_2222222222222222222222) Z0) (App eq Z n_222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_2222222222222222222222)))) (CaseMatch (App Coq.ZArith.BinInt.Z.add_move_0_r n_222222222222222222222 m_2222222222222222222222)) (CaseBranches (Lambda out_22222222222222222222222 (Prod out_22222222222222222222221 (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_222222222222222222222 m_2222222222222222222222) Z0) (App eq Z n_222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_2222222222222222222222))) (Lambda out_222222222222222222222222 (Prod out_222222222222222222222221 (App eq Z n_222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_2222222222222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_222222222222222222222 m_2222222222222222222222) Z0)) out_22222222222222222222222)))))) (Prod n_222222222222222222221 Z (Prod m_2222222222222222222211 Z (Prod out_22222222222222222222111 (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_222222222222222222221 m_2222222222222222222211) Z0) (App eq Z n_222222222222222222221 (App Coq.ZArith.BinIntDef.Z.opp m_2222222222222222222211))))) (App H_222222222222222222223 (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp n_2222222222222222222) m_22222222222222222222) (App Coq.ZArith.BinIntDef.Z.mul n_2222222222222222222 m_22222222222222222222) (App (Lambda lemma_2222222222222222222232 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.opp n_2222222222222222222) n_2222222222222222222) m_22222222222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp n_2222222222222222222) m_22222222222222222222) (App Coq.ZArith.BinIntDef.Z.mul n_2222222222222222222 m_22222222222222222222))) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Transitive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp n_2222222222222222222) m_22222222222222222222) (App Coq.ZArith.BinIntDef.Z.mul n_2222222222222222222 m_22222222222222222222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.opp n_2222222222222222222) n_2222222222222222222) m_22222222222222222222) (App Coq.Classes.RelationClasses.symmetry Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Symmetric Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.opp n_2222222222222222222) n_2222222222222222222) m_22222222222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp n_2222222222222222222) m_22222222222222222222) (App Coq.ZArith.BinIntDef.Z.mul n_2222222222222222222 m_22222222222222222222)) lemma_2222222222222222222232) Z0 Z0 (App Coq.Classes.Morphisms.eq_proper_proxy Z Z0))) (App Coq.ZArith.BinInt.Z.mul_add_distr_r (App Coq.ZArith.BinIntDef.Z.opp n_2222222222222222222) n_2222222222222222222 m_22222222222222222222) (App (Lambda lemma_2222222222222222222232 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.opp n_2222222222222222222) n_2222222222222222222) Z0) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Transitive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.opp n_2222222222222222222) n_2222222222222222222) m_22222222222222222222) (App Coq.ZArith.BinIntDef.Z.mul Z0 m_22222222222222222222) (App Coq.ZArith.BinInt.Z.mul_wd (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.opp n_2222222222222222222) n_2222222222222222222) Z0 lemma_2222222222222222222232 m_22222222222222222222 m_22222222222222222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) m_22222222222222222222)) Z0 Z0 (App Coq.Classes.Morphisms.eq_proper_proxy Z Z0))) (App Coq.ZArith.BinInt.Z.add_opp_diag_l n_2222222222222222222) (App (Lambda lemma_2222222222222222222232 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul Z0 m_22222222222222222222) Z0) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Transitive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul Z0 m_22222222222222222222) Z0 lemma_2222222222222222222232 Z0 Z0 (App Coq.Classes.Morphisms.eq_proper_proxy Z Z0))) (App Coq.ZArith.BinInt.Z.mul_0_l m_22222222222222222222) (App Coq.Classes.RelationClasses.reflexivity Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) Z0))))))))) (Definition Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l (Lambda n_22222222222222 Z (Lambda p_222222222222222 positive (App conj (Prod out_2222222222222221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_222222222222222) n_22222222222222) (App Coq.ZArith.BinInt.Z.divide (App Zneg p_222222222222222) n_22222222222222)) (Prod out_2222222222222221 (App Coq.ZArith.BinInt.Z.divide (App Zneg p_222222222222222) n_22222222222222) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_222222222222222) n_22222222222222)) (Lambda H0_2222222222222222 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_222222222222222) n_22222222222222) (Case 2 (Lambda out_22222222222222222 (App ex Z (Lambda z_22222222222222222 Z (App eq Z n_22222222222222 (App Coq.ZArith.BinIntDef.Z.mul z_22222222222222222 (App Zpos p_222222222222222))))) (App Coq.ZArith.BinInt.Z.divide (App Zneg p_222222222222222) n_22222222222222)) (CaseMatch H0_2222222222222222) (CaseBranches (Lambda m_22222222222222222 Z (Lambda H_222222222222222222 (App eq Z n_22222222222222 (App Coq.ZArith.BinIntDef.Z.mul m_22222222222222222 (App Zpos p_222222222222222))) (App ex_intro Z (Lambda z_2222222222222222222 Z (App eq Z n_22222222222222 (App Coq.ZArith.BinIntDef.Z.mul z_2222222222222222222 (App Zneg p_222222222222222)))) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul m_22222222222222222 (App Zneg p_222222222222222))) (Lambda z_2222222222222222222 Z (App eq Z n_22222222222222 z_2222222222222222222)) (App Coq.Init.Logic.eq_ind Z (App Coq.ZArith.BinIntDef.Z.mul m_22222222222222222 (App Coq.ZArith.BinIntDef.Z.opp (App Zneg p_222222222222222))) (Lambda z_2222222222222222222 Z (App eq Z n_22222222222222 z_2222222222222222222)) H_222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul m_22222222222222222 (App Zneg p_222222222222222))) (App Coq.ZArith.BinInt.Z.mul_opp_r m_22222222222222222 (App Zneg p_222222222222222))) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222) (App Zneg p_222222222222222)) (App Coq.ZArith.BinInt.Z.mul_opp_l m_22222222222222222 (App Zneg p_222222222222222))))))))) (Lambda H0_2222222222222222 (App Coq.ZArith.BinInt.Z.divide (App Zneg p_222222222222222) n_22222222222222) (Case 2 (Lambda out_22222222222222222 (App ex Z (Lambda z_22222222222222222 Z (App eq Z n_22222222222222 (App Coq.ZArith.BinIntDef.Z.mul z_22222222222222222 (App Zneg p_222222222222222))))) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_222222222222222) n_22222222222222)) (CaseMatch H0_2222222222222222) (CaseBranches (Lambda m_22222222222222222 Z (Lambda H_222222222222222222 (App eq Z n_22222222222222 (App Coq.ZArith.BinIntDef.Z.mul m_22222222222222222 (App Zneg p_222222222222222))) (App ex_intro Z (Lambda z_2222222222222222222 Z (App eq Z n_22222222222222 (App Coq.ZArith.BinIntDef.Z.mul z_2222222222222222222 (App Zpos p_222222222222222)))) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul m_22222222222222222 (App Zpos p_222222222222222))) (Lambda z_2222222222222222222 Z (App eq Z n_22222222222222 z_2222222222222222222)) (App Coq.Init.Logic.eq_ind Z (App Coq.ZArith.BinIntDef.Z.mul m_22222222222222222 (App Coq.ZArith.BinIntDef.Z.opp (App Zpos p_222222222222222))) (Lambda z_2222222222222222222 Z (App eq Z n_22222222222222 z_2222222222222222222)) H_222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul m_22222222222222222 (App Zpos p_222222222222222))) (App Coq.ZArith.BinInt.Z.mul_opp_r m_22222222222222222 (App Zpos p_222222222222222))) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222) (App Zpos p_222222222222222)) (App Coq.ZArith.BinInt.Z.mul_opp_l m_22222222222222222 (App Zpos p_222222222222222))))))))))))) (Definition Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r (Lambda n_222223222222 Z (Lambda p_2222232222222 positive (App conj (Prod out_22222322222221 (App Coq.ZArith.BinInt.Z.divide n_222223222222 (App Zpos p_2222232222222)) (App Coq.ZArith.BinInt.Z.divide n_222223222222 (App Zneg p_2222232222222))) (Prod out_22222322222221 (App Coq.ZArith.BinInt.Z.divide n_222223222222 (App Zneg p_2222232222222)) (App Coq.ZArith.BinInt.Z.divide n_222223222222 (App Zpos p_2222232222222))) (Lambda H0_22222322222222 (App Coq.ZArith.BinInt.Z.divide n_222223222222 (App Zpos p_2222232222222)) (Case 2 (Lambda out_222223222222222 (App ex Z (Lambda z_222223222222222 Z (App eq Z (App Zpos p_2222232222222) (App Coq.ZArith.BinIntDef.Z.mul z_222223222222222 n_222223222222)))) (App Coq.ZArith.BinInt.Z.divide n_222223222222 (App Zneg p_2222232222222))) (CaseMatch H0_22222322222222) (CaseBranches (Lambda m_222223222222222 Z (Lambda H_2222232222222222 (App eq Z (App Zpos p_2222232222222) (App Coq.ZArith.BinIntDef.Z.mul m_222223222222222 n_222223222222)) (App ex_intro Z (Lambda z_22222322222222222 Z (App eq Z (App Zneg p_2222232222222) (App Coq.ZArith.BinIntDef.Z.mul z_22222322222222222 n_222223222222))) (App Coq.ZArith.BinIntDef.Z.opp m_222223222222222) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul m_222223222222222 n_222223222222)) (Lambda z_22222322222222222 Z (App eq Z (App Zneg p_2222232222222) z_22222322222222222)) (App Coq.Init.Logic.eq_ind Z (App Zpos p_2222232222222) (Lambda z_22222322222222222 Z (App eq Z (App Zneg p_2222232222222) (App Coq.ZArith.BinIntDef.Z.opp z_22222322222222222))) (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.opp (App Zpos p_2222232222222))) (App Coq.ZArith.BinIntDef.Z.mul m_222223222222222 n_222223222222) H_2222232222222222) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp m_222223222222222) n_222223222222) (App Coq.ZArith.BinInt.Z.mul_opp_l m_222223222222222 n_222223222222)))))))) (Lambda H0_22222322222222 (App Coq.ZArith.BinInt.Z.divide n_222223222222 (App Zneg p_2222232222222)) (Case 2 (Lambda out_222223222222222 (App ex Z (Lambda z_222223222222222 Z (App eq Z (App Zneg p_2222232222222) (App Coq.ZArith.BinIntDef.Z.mul z_222223222222222 n_222223222222)))) (App Coq.ZArith.BinInt.Z.divide n_222223222222 (App Zpos p_2222232222222))) (CaseMatch H0_22222322222222) (CaseBranches (Lambda m_222223222222222 Z (Lambda H_2222232222222222 (App eq Z (App Zneg p_2222232222222) (App Coq.ZArith.BinIntDef.Z.mul m_222223222222222 n_222223222222)) (App ex_intro Z (Lambda z_22222322222222222 Z (App eq Z (App Zpos p_2222232222222) (App Coq.ZArith.BinIntDef.Z.mul z_22222322222222222 n_222223222222))) (App Coq.ZArith.BinIntDef.Z.opp m_222223222222222) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul m_222223222222222 n_222223222222)) (Lambda z_22222322222222222 Z (App eq Z (App Zpos p_2222232222222) z_22222322222222222)) (App Coq.Init.Logic.eq_ind Z (App Zneg p_2222232222222) (Lambda z_22222322222222222 Z (App eq Z (App Zpos p_2222232222222) (App Coq.ZArith.BinIntDef.Z.opp z_22222322222222222))) (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.opp (App Zneg p_2222232222222))) (App Coq.ZArith.BinIntDef.Z.mul m_222223222222222 n_222223222222) H_2222232222222222) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp m_222223222222222) n_222223222222) (App Coq.ZArith.BinInt.Z.mul_opp_l m_222223222222222 n_222223222222)))))))))))) (Definition Coq.ZArith.BinInt.Z.gcd_greatest (Lambda a_222 Z (Lambda b_2222 Z (Lambda c_22222 Z (LetIn H_222223 (Lambda p_222222 positive (Lambda q_2222222 positive (Lambda r0_22222222 Z (Case 0 (Lambda z_222222222 Z (Prod out_2222222221 (App Coq.ZArith.BinInt.Z.divide z_222222222 (App Zpos p_222222)) (Prod out_22222222211 (App Coq.ZArith.BinInt.Z.divide z_222222222 (App Zpos q_2222222)) (App Coq.ZArith.BinInt.Z.divide z_222222222 (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_222222 q_2222222)))))) (CaseMatch r0_22222222) (CaseBranches (Lambda H_222222222 (App Coq.ZArith.BinInt.Z.divide Z0 (App Zpos p_222222)) (Lambda H'_2222222222 (App Coq.ZArith.BinInt.Z.divide Z0 (App Zpos q_2222222)) (Case 2 (Lambda out_22222222222 (App ex Z (Lambda z_22222222222 Z (App eq Z (App Zpos p_222222) (App Coq.ZArith.BinIntDef.Z.mul z_22222222222 Z0)))) (App Coq.ZArith.BinInt.Z.divide Z0 (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_222222 q_2222222)))) (CaseMatch H_222222222) (CaseBranches (Lambda x_22222222222 Z (Lambda H_222222222222 (App eq Z (App Zpos p_222222) (App Coq.ZArith.BinIntDef.Z.mul x_22222222222 Z0)) (LetIn H_2222222222223 (App Coq.Init.Logic.eq_ind Z (App Coq.ZArith.BinIntDef.Z.mul x_22222222222 Z0) (Lambda z_2222222222222 Z (App eq Z (App Zpos p_222222) z_2222222222222)) H_222222222222 (App Coq.ZArith.BinIntDef.Z.mul Z0 x_22222222222) (App Coq.ZArith.BinInt.Z.mul_comm x_22222222222 Z0)) (App eq Z (App Zpos p_222222) (App Coq.ZArith.BinIntDef.Z.mul Z0 x_22222222222)) (LetIn H0_22222222222233 (Case 2 (Lambda y_22222222222232 Z (Lambda out_222222222222322 (App eq Z (App Zpos p_222222) y_22222222222232) (Prod out_2222222222223221 (App eq Z y_22222222222232 (App Coq.ZArith.BinIntDef.Z.mul Z0 x_22222222222)) (App Coq.ZArith.BinInt.Z.divide Z0 (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_222222 q_2222222)))))) (CaseMatch H_2222222222223) (CaseBranches (Lambda H0_22222222222232 (App eq Z (App Zpos p_222222) (App Coq.ZArith.BinIntDef.Z.mul Z0 x_22222222222)) (App (Lambda H0_222222222222322 (App eq Z (App Zpos p_222222) (App Coq.ZArith.BinIntDef.Z.mul Z0 x_22222222222)) (LetIn H1_2222222222223223 (App Coq.Init.Logic.eq_ind Z (App Zpos p_222222) (Lambda e_2222222222223222 Z (Case 0 (Lambda z_22222222222232222 Z (Sort Prop)) (CaseMatch e_2222222222223222) (CaseBranches False (Lambda out_22222222222232222 positive True) (Lambda out_22222222222232222 positive False)))) I (App Coq.ZArith.BinIntDef.Z.mul Z0 x_22222222222) H0_222222222222322) False (App Coq.Init.Logic.False_ind (App Coq.ZArith.BinInt.Z.divide Z0 (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_222222 q_2222222))) H1_2222222222223223))) H0_22222222222232)))) (Prod out_22222222222231 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul Z0 x_22222222222) (App Coq.ZArith.BinIntDef.Z.mul Z0 x_22222222222)) (App Coq.ZArith.BinInt.Z.divide Z0 (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_222222 q_2222222)))) (App H0_22222222222233 (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.mul Z0 x_22222222222))))))))))) (Lambda r_222222222 positive (Lambda H_2222222222 (App Coq.ZArith.BinInt.Z.divide (App Zpos r_222222222) (App Zpos p_222222)) (Lambda H'_22222222222 (App Coq.ZArith.BinInt.Z.divide (App Zpos r_222222222) (App Zpos q_2222222)) (LetIn H0_222222222223 (Lambda p_222222222222 positive (Lambda q_2222222222222 positive (Case 2 (Lambda out_22222222222222 (App and (Prod out_22222222222221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_222222222222) (App Zpos q_2222222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222222 q_2222222222222)) (Prod out_22222222222221 (App Coq.PArith.BinPosDef.Pos.divide p_222222222222 q_2222222222222) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_222222222222) (App Zpos q_2222222222222)))) (Prod out_222222222222221 (App Coq.PArith.BinPosDef.Pos.divide p_222222222222 q_2222222222222) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_222222222222) (App Zpos q_2222222222222)))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_Zpos p_222222222222 q_2222222222222)) (CaseBranches (Lambda out_22222222222222 (Prod out_22222222222221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_222222222222) (App Zpos q_2222222222222)) (App Coq.PArith.BinPosDef.Pos.divide p_222222222222 q_2222222222222)) (Lambda out_222222222222222 (Prod out_222222222222221 (App Coq.PArith.BinPosDef.Pos.divide p_222222222222 q_2222222222222) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_222222222222) (App Zpos q_2222222222222))) out_222222222222222)))))) (Prod p_222222222221 positive (Prod q_2222222222211 positive (Prod out_22222222222111 (App Coq.PArith.BinPosDef.Pos.divide p_222222222221 q_2222222222211) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_222222222221) (App Zpos q_2222222222211))))) (App H0_222222222223 r_222222222 (App Coq.PArith.BinPosDef.Pos.gcd p_222222 q_2222222) (App Coq.PArith.BinPos.Pos.gcd_greatest p_222222 q_2222222 r_222222222 (LetIn H0_2222222222233 (Lambda p_2222222222232 positive (Lambda q_22222222222322 positive (Case 2 (Lambda out_222222222223222 (App and (Prod out_222222222223221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222232) (App Zpos q_22222222222322)) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232 q_22222222222322)) (Prod out_222222222223221 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232 q_22222222222322) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222232) (App Zpos q_22222222222322)))) (Prod out_2222222222232221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222232) (App Zpos q_22222222222322)) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232 q_22222222222322))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_Zpos p_2222222222232 q_22222222222322)) (CaseBranches (Lambda out_222222222223222 (Prod out_222222222223221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222232) (App Zpos q_22222222222322)) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232 q_22222222222322)) (Lambda out_2222222222232222 (Prod out_2222222222232221 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232 q_22222222222322) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222232) (App Zpos q_22222222222322))) out_222222222223222)))))) (Prod p_2222222222231 positive (Prod q_22222222222311 positive (Prod out_222222222223111 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222231) (App Zpos q_22222222222311)) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222231 q_22222222222311)))) (App H0_2222222222233 r_222222222 p_222222 H_2222222222)) (LetIn H0_2222222222233 (Lambda p_2222222222232 positive (Lambda q_22222222222322 positive (Case 2 (Lambda out_222222222223222 (App and (Prod out_222222222223221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222232) (App Zpos q_22222222222322)) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232 q_22222222222322)) (Prod out_222222222223221 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232 q_22222222222322) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222232) (App Zpos q_22222222222322)))) (Prod out_2222222222232221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222232) (App Zpos q_22222222222322)) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232 q_22222222222322))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_Zpos p_2222222222232 q_22222222222322)) (CaseBranches (Lambda out_222222222223222 (Prod out_222222222223221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222232) (App Zpos q_22222222222322)) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232 q_22222222222322)) (Lambda out_2222222222232222 (Prod out_2222222222232221 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232 q_22222222222322) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222232) (App Zpos q_22222222222322))) out_222222222223222)))))) (Prod p_2222222222231 positive (Prod q_22222222222311 positive (Prod out_222222222223111 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222231) (App Zpos q_22222222222311)) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222231 q_22222222222311)))) (App H0_2222222222233 r_222222222 q_2222222 H'_22222222222)))))))) (Lambda r_222222222 positive (Lambda H_2222222222 (App Coq.ZArith.BinInt.Z.divide (App Zneg r_222222222) (App Zpos p_222222)) (Lambda H'_22222222222 (App Coq.ZArith.BinInt.Z.divide (App Zneg r_222222222) (App Zpos q_2222222)) (LetIn H0_222222222223 (Lambda n_222222222222 Z (Lambda p_2222222222222 positive (Case 2 (Lambda out_22222222222222 (App and (Prod out_22222222222221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222222) n_222222222222) (App Coq.ZArith.BinInt.Z.divide (App Zneg p_2222222222222) n_222222222222)) (Prod out_22222222222221 (App Coq.ZArith.BinInt.Z.divide (App Zneg p_2222222222222) n_222222222222) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222222) n_222222222222))) (Prod out_222222222222221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222222) n_222222222222) (App Coq.ZArith.BinInt.Z.divide (App Zneg p_2222222222222) n_222222222222))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l n_222222222222 p_2222222222222)) (CaseBranches (Lambda out_22222222222222 (Prod out_22222222222221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222222) n_222222222222) (App Coq.ZArith.BinInt.Z.divide (App Zneg p_2222222222222) n_222222222222)) (Lambda out_222222222222222 (Prod out_222222222222221 (App Coq.ZArith.BinInt.Z.divide (App Zneg p_2222222222222) n_222222222222) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222222) n_222222222222)) out_22222222222222)))))) (Prod n_222222222221 Z (Prod p_2222222222211 positive (Prod out_22222222222111 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222211) n_222222222221) (App Coq.ZArith.BinInt.Z.divide (App Zneg p_2222222222211) n_222222222221)))) (App H0_222222222223 (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_222222 q_2222222)) r_222222222 (LetIn H0_2222222222233 (Lambda p_2222222222232 positive (Lambda q_22222222222322 positive (Case 2 (Lambda out_222222222223222 (App and (Prod out_222222222223221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222232) (App Zpos q_22222222222322)) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232 q_22222222222322)) (Prod out_222222222223221 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232 q_22222222222322) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222232) (App Zpos q_22222222222322)))) (Prod out_2222222222232221 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232 q_22222222222322) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222232) (App Zpos q_22222222222322)))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_Zpos p_2222222222232 q_22222222222322)) (CaseBranches (Lambda out_222222222223222 (Prod out_222222222223221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222232) (App Zpos q_22222222222322)) (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232 q_22222222222322)) (Lambda out_2222222222232222 (Prod out_2222222222232221 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222232 q_22222222222322) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222232) (App Zpos q_22222222222322))) out_2222222222232222)))))) (Prod p_2222222222231 positive (Prod q_22222222222311 positive (Prod out_222222222223111 (App Coq.PArith.BinPosDef.Pos.divide p_2222222222231 q_22222222222311) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222231) (App Zpos q_22222222222311))))) (App H0_2222222222233 r_222222222 (App Coq.PArith.BinPosDef.Pos.gcd p_222222 q_2222222) (App Coq.PArith.BinPos.Pos.gcd_greatest p_222222 q_2222222 r_222222222 (LetIn H0_22222222222333 (Lambda p_22222222222332 positive (Lambda q_222222222223322 positive (Case 2 (Lambda out_2222222222233222 (App and (Prod out_2222222222233221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_22222222222332) (App Zpos q_222222222223322)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222332 q_222222222223322)) (Prod out_2222222222233221 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222332 q_222222222223322) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_22222222222332) (App Zpos q_222222222223322)))) (Prod out_22222222222332221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_22222222222332) (App Zpos q_222222222223322)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222332 q_222222222223322))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_Zpos p_22222222222332 q_222222222223322)) (CaseBranches (Lambda out_2222222222233222 (Prod out_2222222222233221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_22222222222332) (App Zpos q_222222222223322)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222332 q_222222222223322)) (Lambda out_22222222222332222 (Prod out_22222222222332221 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222332 q_222222222223322) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_22222222222332) (App Zpos q_222222222223322))) out_2222222222233222)))))) (Prod p_22222222222331 positive (Prod q_222222222223311 positive (Prod out_2222222222233111 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_22222222222331) (App Zpos q_222222222223311)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222331 q_222222222223311)))) (App H0_22222222222333 r_222222222 p_222222 (LetIn H0_222222222223333 (Lambda n_222222222223332 Z (Lambda p_2222222222233322 positive (Case 2 (Lambda out_22222222222333222 (App and (Prod out_22222222222333221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222233322) n_222222222223332) (App Coq.ZArith.BinInt.Z.divide (App Zneg p_2222222222233322) n_222222222223332)) (Prod out_22222222222333221 (App Coq.ZArith.BinInt.Z.divide (App Zneg p_2222222222233322) n_222222222223332) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222233322) n_222222222223332))) (Prod out_222222222223332221 (App Coq.ZArith.BinInt.Z.divide (App Zneg p_2222222222233322) n_222222222223332) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222233322) n_222222222223332))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l n_222222222223332 p_2222222222233322)) (CaseBranches (Lambda out_22222222222333222 (Prod out_22222222222333221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222233322) n_222222222223332) (App Coq.ZArith.BinInt.Z.divide (App Zneg p_2222222222233322) n_222222222223332)) (Lambda out_222222222223332222 (Prod out_222222222223332221 (App Coq.ZArith.BinInt.Z.divide (App Zneg p_2222222222233322) n_222222222223332) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222233322) n_222222222223332)) out_222222222223332222)))))) (Prod n_222222222223331 Z (Prod p_2222222222233311 positive (Prod out_22222222222333111 (App Coq.ZArith.BinInt.Z.divide (App Zneg p_2222222222233311) n_222222222223331) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222233311) n_222222222223331)))) (App H0_222222222223333 (App Zpos p_222222) r_222222222 H_2222222222)))) (LetIn H0_22222222222333 (Lambda p_22222222222332 positive (Lambda q_222222222223322 positive (Case 2 (Lambda out_2222222222233222 (App and (Prod out_2222222222233221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_22222222222332) (App Zpos q_222222222223322)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222332 q_222222222223322)) (Prod out_2222222222233221 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222332 q_222222222223322) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_22222222222332) (App Zpos q_222222222223322)))) (Prod out_22222222222332221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_22222222222332) (App Zpos q_222222222223322)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222332 q_222222222223322))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_Zpos p_22222222222332 q_222222222223322)) (CaseBranches (Lambda out_2222222222233222 (Prod out_2222222222233221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_22222222222332) (App Zpos q_222222222223322)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222332 q_222222222223322)) (Lambda out_22222222222332222 (Prod out_22222222222332221 (App Coq.PArith.BinPosDef.Pos.divide p_22222222222332 q_222222222223322) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_22222222222332) (App Zpos q_222222222223322))) out_2222222222233222)))))) (Prod p_22222222222331 positive (Prod q_222222222223311 positive (Prod out_2222222222233111 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_22222222222331) (App Zpos q_222222222223311)) (App Coq.PArith.BinPosDef.Pos.divide p_22222222222331 q_222222222223311)))) (App H0_22222222222333 r_222222222 q_2222222 (LetIn H0_222222222223333 (Lambda n_222222222223332 Z (Lambda p_2222222222233322 positive (Case 2 (Lambda out_22222222222333222 (App and (Prod out_22222222222333221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222233322) n_222222222223332) (App Coq.ZArith.BinInt.Z.divide (App Zneg p_2222222222233322) n_222222222223332)) (Prod out_22222222222333221 (App Coq.ZArith.BinInt.Z.divide (App Zneg p_2222222222233322) n_222222222223332) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222233322) n_222222222223332))) (Prod out_222222222223332221 (App Coq.ZArith.BinInt.Z.divide (App Zneg p_2222222222233322) n_222222222223332) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222233322) n_222222222223332))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l n_222222222223332 p_2222222222233322)) (CaseBranches (Lambda out_22222222222333222 (Prod out_22222222222333221 (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222233322) n_222222222223332) (App Coq.ZArith.BinInt.Z.divide (App Zneg p_2222222222233322) n_222222222223332)) (Lambda out_222222222223332222 (Prod out_222222222223332221 (App Coq.ZArith.BinInt.Z.divide (App Zneg p_2222222222233322) n_222222222223332) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222233322) n_222222222223332)) out_222222222223332222)))))) (Prod n_222222222223331 Z (Prod p_2222222222233311 positive (Prod out_22222222222333111 (App Coq.ZArith.BinInt.Z.divide (App Zneg p_2222222222233311) n_222222222223331) (App Coq.ZArith.BinInt.Z.divide (App Zpos p_2222222222233311) n_222222222223331)))) (App H0_222222222223333 (App Zpos q_2222222) r_222222222 H'_22222222222))))))))))))))))) (Prod p_222221 positive (Prod q_2222211 positive (Prod r_22222111 Z (Prod out_222221111 (App Coq.ZArith.BinInt.Z.divide r_22222111 (App Zpos p_222221)) (Prod out_2222211111 (App Coq.ZArith.BinInt.Z.divide r_22222111 (App Zpos q_2222211)) (App Coq.ZArith.BinInt.Z.divide r_22222111 (App Zpos (App Coq.PArith.BinPosDef.Pos.gcd p_222221 q_2222211)))))))) (Case 0 (Lambda z_2222232 Z (Prod out_22222321 (App Coq.ZArith.BinInt.Z.divide c_22222 z_2222232) (Prod out_222223211 (App Coq.ZArith.BinInt.Z.divide c_22222 b_2222) (App Coq.ZArith.BinInt.Z.divide c_22222 (App Coq.ZArith.BinIntDef.Z.gcd z_2222232 b_2222))))) (CaseMatch a_222) (CaseBranches (Case 0 (Lambda z_2222232 Z (Prod out_22222321 (App Coq.ZArith.BinInt.Z.divide c_22222 Z0) (Prod out_222223211 (App Coq.ZArith.BinInt.Z.divide c_22222 z_2222232) (App Coq.ZArith.BinInt.Z.divide c_22222 (App Coq.ZArith.BinIntDef.Z.gcd Z0 z_2222232))))) (CaseMatch b_2222) (CaseBranches (Cast (Lambda H0_2222232 (App Coq.ZArith.BinInt.Z.divide c_22222 Z0) (Lambda H1_22222322 (App Coq.ZArith.BinInt.Z.divide c_22222 Z0) H1_22222322)) REVERTcast (Prod out_2222231 (App Coq.ZArith.BinInt.Z.divide c_22222 Z0) (Prod out_22222311 (App Coq.ZArith.BinInt.Z.divide c_22222 Z0) (App Coq.ZArith.BinInt.Z.divide c_22222 (App Coq.ZArith.BinIntDef.Z.gcd Z0 Z0))))) (Lambda p_2222232 positive (Cast (Lambda H0_22222322 (App Coq.ZArith.BinInt.Z.divide c_22222 Z0) (Lambda H1_222223222 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zpos p_2222232)) H1_222223222)) REVERTcast (Prod out_22222321 (App Coq.ZArith.BinInt.Z.divide c_22222 Z0) (Prod out_222223211 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zpos p_2222232)) (App Coq.ZArith.BinInt.Z.divide c_22222 (App Coq.ZArith.BinIntDef.Z.gcd Z0 (App Zpos p_2222232))))))) (Lambda p_2222232 positive (Cast (Lambda H0_22222322 (App Coq.ZArith.BinInt.Z.divide c_22222 Z0) (Lambda H1_222223222 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zneg p_2222232)) (LetIn H2_2222232223 (Lambda n_2222232222 Z (Lambda p_22222322222 positive (Case 2 (Lambda out_222223222222 (App and (Prod out_222223222221 (App Coq.ZArith.BinInt.Z.divide n_2222232222 (App Zpos p_22222322222)) (App Coq.ZArith.BinInt.Z.divide n_2222232222 (App Zneg p_22222322222))) (Prod out_222223222221 (App Coq.ZArith.BinInt.Z.divide n_2222232222 (App Zneg p_22222322222)) (App Coq.ZArith.BinInt.Z.divide n_2222232222 (App Zpos p_22222322222)))) (Prod out_2222232222221 (App Coq.ZArith.BinInt.Z.divide n_2222232222 (App Zneg p_22222322222)) (App Coq.ZArith.BinInt.Z.divide n_2222232222 (App Zpos p_22222322222)))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r n_2222232222 p_22222322222)) (CaseBranches (Lambda out_222223222222 (Prod out_222223222221 (App Coq.ZArith.BinInt.Z.divide n_2222232222 (App Zpos p_22222322222)) (App Coq.ZArith.BinInt.Z.divide n_2222232222 (App Zneg p_22222322222))) (Lambda out_2222232222222 (Prod out_2222232222221 (App Coq.ZArith.BinInt.Z.divide n_2222232222 (App Zneg p_22222322222)) (App Coq.ZArith.BinInt.Z.divide n_2222232222 (App Zpos p_22222322222))) out_2222232222222)))))) (Prod n_2222232221 Z (Prod p_22222322211 positive (Prod out_222223222111 (App Coq.ZArith.BinInt.Z.divide n_2222232221 (App Zneg p_22222322211)) (App Coq.ZArith.BinInt.Z.divide n_2222232221 (App Zpos p_22222322211))))) (App H2_2222232223 c_22222 p_2222232 H1_222223222)))) REVERTcast (Prod out_22222321 (App Coq.ZArith.BinInt.Z.divide c_22222 Z0) (Prod out_222223211 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zneg p_2222232)) (App Coq.ZArith.BinInt.Z.divide c_22222 (App Coq.ZArith.BinIntDef.Z.gcd Z0 (App Zneg p_2222232))))))))) (Lambda p_2222232 positive (Case 0 (Lambda z_22222322 Z (Prod out_222223221 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zpos p_2222232)) (Prod out_2222232211 (App Coq.ZArith.BinInt.Z.divide c_22222 z_22222322) (App Coq.ZArith.BinInt.Z.divide c_22222 (App Coq.ZArith.BinIntDef.Z.gcd (App Zpos p_2222232) z_22222322))))) (CaseMatch b_2222) (CaseBranches (Cast (Lambda H0_22222322 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zpos p_2222232)) (Lambda H1_222223222 (App Coq.ZArith.BinInt.Z.divide c_22222 Z0) H0_22222322)) REVERTcast (Prod out_22222321 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zpos p_2222232)) (Prod out_222223211 (App Coq.ZArith.BinInt.Z.divide c_22222 Z0) (App Coq.ZArith.BinInt.Z.divide c_22222 (App Coq.ZArith.BinIntDef.Z.gcd (App Zpos p_2222232) Z0))))) (Lambda p0_22222322 positive (Cast (Lambda H0_222223222 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zpos p_2222232)) (Lambda H1_2222232222 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zpos p0_22222322)) (App H_222223 p_2222232 p0_22222322 c_22222 H0_222223222 H1_2222232222))) REVERTcast (Prod out_222223221 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zpos p_2222232)) (Prod out_2222232211 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zpos p0_22222322)) (App Coq.ZArith.BinInt.Z.divide c_22222 (App Coq.ZArith.BinIntDef.Z.gcd (App Zpos p_2222232) (App Zpos p0_22222322))))))) (Lambda p0_22222322 positive (Cast (Lambda H0_222223222 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zpos p_2222232)) (Lambda H1_2222232222 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zneg p0_22222322)) (App H_222223 p_2222232 p0_22222322 c_22222 H0_222223222 (LetIn H2_22222322223 (Lambda n_22222322222 Z (Lambda p_222223222222 positive (Case 2 (Lambda out_2222232222222 (App and (Prod out_2222232222221 (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zpos p_222223222222)) (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zneg p_222223222222))) (Prod out_2222232222221 (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zneg p_222223222222)) (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zpos p_222223222222)))) (Prod out_22222322222221 (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zneg p_222223222222)) (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zpos p_222223222222)))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r n_22222322222 p_222223222222)) (CaseBranches (Lambda out_2222232222222 (Prod out_2222232222221 (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zpos p_222223222222)) (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zneg p_222223222222))) (Lambda out_22222322222222 (Prod out_22222322222221 (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zneg p_222223222222)) (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zpos p_222223222222))) out_22222322222222)))))) (Prod n_22222322221 Z (Prod p_222223222211 positive (Prod out_2222232222111 (App Coq.ZArith.BinInt.Z.divide n_22222322221 (App Zneg p_222223222211)) (App Coq.ZArith.BinInt.Z.divide n_22222322221 (App Zpos p_222223222211))))) (App H2_22222322223 c_22222 p0_22222322 H1_2222232222))))) REVERTcast (Prod out_222223221 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zpos p_2222232)) (Prod out_2222232211 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zneg p0_22222322)) (App Coq.ZArith.BinInt.Z.divide c_22222 (App Coq.ZArith.BinIntDef.Z.gcd (App Zpos p_2222232) (App Zneg p0_22222322)))))))))) (Lambda p_2222232 positive (Case 0 (Lambda z_22222322 Z (Prod out_222223221 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zneg p_2222232)) (Prod out_2222232211 (App Coq.ZArith.BinInt.Z.divide c_22222 z_22222322) (App Coq.ZArith.BinInt.Z.divide c_22222 (App Coq.ZArith.BinIntDef.Z.gcd (App Zneg p_2222232) z_22222322))))) (CaseMatch b_2222) (CaseBranches (Cast (Lambda H0_22222322 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zneg p_2222232)) (Lambda H1_222223222 (App Coq.ZArith.BinInt.Z.divide c_22222 Z0) (LetIn H2_2222232223 (Lambda n_2222232222 Z (Lambda p_22222322222 positive (Case 2 (Lambda out_222223222222 (App and (Prod out_222223222221 (App Coq.ZArith.BinInt.Z.divide n_2222232222 (App Zpos p_22222322222)) (App Coq.ZArith.BinInt.Z.divide n_2222232222 (App Zneg p_22222322222))) (Prod out_222223222221 (App Coq.ZArith.BinInt.Z.divide n_2222232222 (App Zneg p_22222322222)) (App Coq.ZArith.BinInt.Z.divide n_2222232222 (App Zpos p_22222322222)))) (Prod out_2222232222221 (App Coq.ZArith.BinInt.Z.divide n_2222232222 (App Zneg p_22222322222)) (App Coq.ZArith.BinInt.Z.divide n_2222232222 (App Zpos p_22222322222)))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r n_2222232222 p_22222322222)) (CaseBranches (Lambda out_222223222222 (Prod out_222223222221 (App Coq.ZArith.BinInt.Z.divide n_2222232222 (App Zpos p_22222322222)) (App Coq.ZArith.BinInt.Z.divide n_2222232222 (App Zneg p_22222322222))) (Lambda out_2222232222222 (Prod out_2222232222221 (App Coq.ZArith.BinInt.Z.divide n_2222232222 (App Zneg p_22222322222)) (App Coq.ZArith.BinInt.Z.divide n_2222232222 (App Zpos p_22222322222))) out_2222232222222)))))) (Prod n_2222232221 Z (Prod p_22222322211 positive (Prod out_222223222111 (App Coq.ZArith.BinInt.Z.divide n_2222232221 (App Zneg p_22222322211)) (App Coq.ZArith.BinInt.Z.divide n_2222232221 (App Zpos p_22222322211))))) (App H2_2222232223 c_22222 p_2222232 H0_22222322)))) REVERTcast (Prod out_22222321 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zneg p_2222232)) (Prod out_222223211 (App Coq.ZArith.BinInt.Z.divide c_22222 Z0) (App Coq.ZArith.BinInt.Z.divide c_22222 (App Coq.ZArith.BinIntDef.Z.gcd (App Zneg p_2222232) Z0))))) (Lambda p0_22222322 positive (Cast (Lambda H0_222223222 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zneg p_2222232)) (Lambda H1_2222232222 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zpos p0_22222322)) (App H_222223 p_2222232 p0_22222322 c_22222 (LetIn H2_22222322223 (Lambda n_22222322222 Z (Lambda p_222223222222 positive (Case 2 (Lambda out_2222232222222 (App and (Prod out_2222232222221 (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zpos p_222223222222)) (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zneg p_222223222222))) (Prod out_2222232222221 (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zneg p_222223222222)) (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zpos p_222223222222)))) (Prod out_22222322222221 (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zneg p_222223222222)) (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zpos p_222223222222)))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r n_22222322222 p_222223222222)) (CaseBranches (Lambda out_2222232222222 (Prod out_2222232222221 (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zpos p_222223222222)) (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zneg p_222223222222))) (Lambda out_22222322222222 (Prod out_22222322222221 (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zneg p_222223222222)) (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zpos p_222223222222))) out_22222322222222)))))) (Prod n_22222322221 Z (Prod p_222223222211 positive (Prod out_2222232222111 (App Coq.ZArith.BinInt.Z.divide n_22222322221 (App Zneg p_222223222211)) (App Coq.ZArith.BinInt.Z.divide n_22222322221 (App Zpos p_222223222211))))) (App H2_22222322223 c_22222 p_2222232 H0_222223222)) H1_2222232222))) REVERTcast (Prod out_222223221 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zneg p_2222232)) (Prod out_2222232211 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zpos p0_22222322)) (App Coq.ZArith.BinInt.Z.divide c_22222 (App Coq.ZArith.BinIntDef.Z.gcd (App Zneg p_2222232) (App Zpos p0_22222322))))))) (Lambda p0_22222322 positive (Cast (Lambda H0_222223222 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zneg p_2222232)) (Lambda H1_2222232222 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zneg p0_22222322)) (App H_222223 p_2222232 p0_22222322 c_22222 (LetIn H2_22222322223 (Lambda n_22222322222 Z (Lambda p_222223222222 positive (Case 2 (Lambda out_2222232222222 (App and (Prod out_2222232222221 (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zpos p_222223222222)) (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zneg p_222223222222))) (Prod out_2222232222221 (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zneg p_222223222222)) (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zpos p_222223222222)))) (Prod out_22222322222221 (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zneg p_222223222222)) (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zpos p_222223222222)))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r n_22222322222 p_222223222222)) (CaseBranches (Lambda out_2222232222222 (Prod out_2222232222221 (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zpos p_222223222222)) (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zneg p_222223222222))) (Lambda out_22222322222222 (Prod out_22222322222221 (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zneg p_222223222222)) (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zpos p_222223222222))) out_22222322222222)))))) (Prod n_22222322221 Z (Prod p_222223222211 positive (Prod out_2222232222111 (App Coq.ZArith.BinInt.Z.divide n_22222322221 (App Zneg p_222223222211)) (App Coq.ZArith.BinInt.Z.divide n_22222322221 (App Zpos p_222223222211))))) (App H2_22222322223 c_22222 p_2222232 H0_222223222)) (LetIn H2_22222322223 (Lambda n_22222322222 Z (Lambda p_222223222222 positive (Case 2 (Lambda out_2222232222222 (App and (Prod out_2222232222221 (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zpos p_222223222222)) (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zneg p_222223222222))) (Prod out_2222232222221 (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zneg p_222223222222)) (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zpos p_222223222222)))) (Prod out_22222322222221 (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zneg p_222223222222)) (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zpos p_222223222222)))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r n_22222322222 p_222223222222)) (CaseBranches (Lambda out_2222232222222 (Prod out_2222232222221 (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zpos p_222223222222)) (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zneg p_222223222222))) (Lambda out_22222322222222 (Prod out_22222322222221 (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zneg p_222223222222)) (App Coq.ZArith.BinInt.Z.divide n_22222322222 (App Zpos p_222223222222))) out_22222322222222)))))) (Prod n_22222322221 Z (Prod p_222223222211 positive (Prod out_2222232222111 (App Coq.ZArith.BinInt.Z.divide n_22222322221 (App Zneg p_222223222211)) (App Coq.ZArith.BinInt.Z.divide n_22222322221 (App Zpos p_222223222211))))) (App H2_22222322223 c_22222 p0_22222322 H1_2222232222))))) REVERTcast (Prod out_222223221 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zneg p_2222232)) (Prod out_2222232211 (App Coq.ZArith.BinInt.Z.divide c_22222 (App Zneg p0_22222322)) (App Coq.ZArith.BinInt.Z.divide c_22222 (App Coq.ZArith.BinIntDef.Z.gcd (App Zneg p_2222232) (App Zneg p0_22222322))))))))))))))))) (Definition Coq.ZArith.Znumtheory.Zgcd_is_gcd (Lambda a_2 Z (Lambda b_22 Z (App Zis_gcd_intro a_2 b_22 (App Coq.ZArith.BinIntDef.Z.gcd a_2 b_22) (App Coq.ZArith.BinInt.Z.gcd_divide_l a_2 b_22) (App Coq.ZArith.BinInt.Z.gcd_divide_r a_2 b_22) (App Coq.ZArith.BinInt.Z.gcd_greatest a_2 b_22))))) 