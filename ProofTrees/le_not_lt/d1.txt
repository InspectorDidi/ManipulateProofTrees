(Definition Coq.Arith.Lt.le_not_lt (Lambda gen_var_14 nat (Lambda gen_var_15 nat (LetIn gen_var_3 (Lambda gen_var_4 nat (Lambda gen_var_5 nat (Case 2 (Lambda Anonymous (App and (Prod Anonymous (App le gen_var_4 gen_var_5) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt gen_var_5 gen_var_4))) (Prod Anonymous (App Coq.Init.Logic.not (App Coq.Init.Peano.lt gen_var_5 gen_var_4)) (App le gen_var_4 gen_var_5))) (Prod Anonymous (App le gen_var_4 gen_var_5) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt gen_var_5 gen_var_4)))) (CaseMatch (App Coq.Arith.PeanoNat.Nat.le_ngt gen_var_4 gen_var_5)) (CaseBranches (Lambda Anonymous (Prod Anonymous (App le gen_var_4 gen_var_5) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt gen_var_5 gen_var_4))) (Lambda Anonymous (Prod Anonymous (App Coq.Init.Logic.not (App Coq.Init.Peano.lt gen_var_5 gen_var_4)) (App le gen_var_4 gen_var_5)) Anonymous)))))) (Prod gen_var_14 nat (Prod gen_var_15 nat (Prod Anonymous (App le gen_var_14 gen_var_15) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt gen_var_15 gen_var_14))))) (App gen_var_3 gen_var_14 gen_var_15))))) 