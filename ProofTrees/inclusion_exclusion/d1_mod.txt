(Definition ExportProof.inclusion_exclusion (Lambda gen_var_1613 (App list ExportProof.set) (LetIn gen_var_2 (Lambda gen_var_3 (App list ExportProof.set) (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection gen_var_3)) (App ExportProof.alternating_sign (App Coq.Init.Nat.add (App S O) (App Coq.Init.Datatypes.length ExportProof.set gen_var_3))))) (Prod gen_var_4 (App list ExportProof.set) Z) (LetIn gen_var_1602 (App Coq.Init.Datatypes.length ExportProof.set gen_var_1) nat (LetIn gen_var_27 (App eq_refl nat gen_var_5) (App eq nat gen_var_5 (App Coq.Init.Datatypes.length ExportProof.set gen_var_1)) (App Coq.Init.Datatypes.nat_ind (Lambda gen_var_7 nat (Prod gen_var_8 (App list ExportProof.set) (Prod gen_var_9 (App eq nat gen_var_7 (App Coq.Init.Datatypes.length ExportProof.set gen_var_8)) (App eq Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_8)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_8)))))))) (Lambda gen_var_18 (App list ExportProof.set) (Lambda gen_var_19 (App eq nat O (App Coq.Init.Datatypes.length ExportProof.set gen_var_10)) (App (Case 1 (Lambda gen_var_12 (App list ExportProof.set) (Prod gen_var_13 (App eq nat O (App Coq.Init.Datatypes.length ExportProof.set gen_var_12)) (App eq Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_12)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_12))))))) (CaseMatch gen_var_12) (CaseBranches (Lambda gen_var_14 (App eq nat O (App Coq.Init.Datatypes.length ExportProof.set (App nil ExportProof.set))) (Cast (Cast (App Coq.Init.Logic.eq_ind_r Z Z0 (Lambda gen_var_15 Z (App eq Z gen_var_15 Z0)) (App eq_refl Z Z0) (App ExportProof.cardinal ExportProof.empty_set) ExportProof.cardinal_empty) REVERTcast (App eq Z (App ExportProof.cardinal (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_union ExportProof.empty_set (App nil ExportProof.set))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z (Lambda gen_var_16 (App list ExportProof.set) (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection gen_var_16)) (App ExportProof.alternating_sign (App Coq.Init.Nat.add (App S O) (App Coq.Init.Datatypes.length ExportProof.set gen_var_16))))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App nil ExportProof.set))))))) REVERTcast (App eq Z (App ExportProof.cardinal (App ExportProof.list_union (App nil ExportProof.set))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App nil ExportProof.set)))))))) (Lambda gen_var_17 ExportProof.set (Lambda gen_var_18 (App list ExportProof.set) (Lambda gen_var_19 (App eq nat O (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set gen_var_17 gen_var_18))) (LetIn gen_var_20 (App Coq.Init.Logic.eq_ind nat O (Lambda gen_var_21 nat (Case 0 (Lambda gen_var_22 nat (Sort Prop)) (CaseMatch gen_var_21) (CaseBranches True (Lambda Anonymous nat False)))) I (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set gen_var_17 gen_var_18)) gen_var_19) False (App Coq.Init.Logic.False_ind (App eq Z (App ExportProof.cardinal (App ExportProof.list_union (App cons ExportProof.set gen_var_17 gen_var_18))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App cons ExportProof.set gen_var_17 gen_var_18)))))) gen_var_20))))))) gen_var_19))) (Lambda gen_var_1602 nat (Lambda gen_var_25 (Prod gen_var_26 (App list ExportProof.set) (Prod gen_var_27 (App eq nat gen_var_24 (App Coq.Init.Datatypes.length ExportProof.set gen_var_26)) (App eq Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_26)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_26))))))) (Lambda gen_var_1613 (App list ExportProof.set) (Lambda gen_var_44 (App eq nat (App S gen_var_24) (App Coq.Init.Datatypes.length ExportProof.set gen_var_28)) (App (Case 1 (Lambda gen_var_30 (App list ExportProof.set) (Prod gen_var_31 (App eq nat (App S gen_var_24) (App Coq.Init.Datatypes.length ExportProof.set gen_var_30)) (App eq Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_30)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_30))))))) (CaseMatch gen_var_30) (CaseBranches (Lambda gen_var_32 (App eq nat (App S gen_var_24) (App Coq.Init.Datatypes.length ExportProof.set (App nil ExportProof.set))) (LetIn gen_var_33 (App Coq.Init.Logic.eq_ind nat (App S gen_var_24) (Lambda gen_var_34 nat (Case 0 (Lambda gen_var_35 nat (Sort Prop)) (CaseMatch gen_var_34) (CaseBranches False (Lambda Anonymous nat True)))) I (App Coq.Init.Datatypes.length ExportProof.set (App nil ExportProof.set)) gen_var_32) False (App Coq.Init.Logic.False_ind (App eq Z (App ExportProof.cardinal (App ExportProof.list_union (App nil ExportProof.set))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App nil ExportProof.set)))))) gen_var_33))) (Lambda gen_var_37 ExportProof.set (Lambda gen_var_1613 (App list ExportProof.set) (Lambda gen_var_44 (App eq nat (App S gen_var_35) (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set gen_var_37 gen_var_38))) (LetIn gen_var_1595 (App Coq.Init.Logic.f_equal nat nat (Lambda gen_var_41 nat (Case 0 (Lambda gen_var_42 nat nat) (CaseMatch gen_var_41) (CaseBranches gen_var_42 (Lambda gen_var_43 nat gen_var_43)))) (App S gen_var_43) (App S (App Coq.Init.Datatypes.length ExportProof.set gen_var_38)) gen_var_39) (App eq nat gen_var_43 (App Coq.Init.Datatypes.length ExportProof.set gen_var_38)) (App (Lambda gen_var_44 (App eq nat gen_var_43 (App Coq.Init.Datatypes.length ExportProof.set gen_var_38)) (Cast (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_37) (App ExportProof.cardinal (App ExportProof.list_union gen_var_38))) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_37 (App ExportProof.list_union gen_var_38)))) (Lambda gen_var_45 Z (App eq Z gen_var_45 (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Init.Datatypes.app (App list ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_38) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_46 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_46)) (App ExportProof.sublists ExportProof.set gen_var_46)))))))) (App Coq.Init.Logic.eq_ind_r (App list (App list ExportProof.set)) (App Coq.Init.Datatypes.app (App list ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_46)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_47 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_47)) (App ExportProof.sublists ExportProof.set gen_var_47)))) (Lambda gen_var_48 (App list (App list ExportProof.set)) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_37) (App ExportProof.cardinal (App ExportProof.list_union gen_var_48))) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_37 (App ExportProof.list_union gen_var_48)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 gen_var_48)))) (App Coq.Init.Logic.eq_ind_r (App list Z) (App Coq.Init.Datatypes.app Z (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_48))) (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_49 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_49)) (App ExportProof.sublists ExportProof.set gen_var_49))))) (Lambda gen_var_50 (App list Z) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_37) (App ExportProof.cardinal (App ExportProof.list_union gen_var_50))) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_37 (App ExportProof.list_union gen_var_50)))) (App ExportProof.sum gen_var_50))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_50)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_51 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_51)) (App ExportProof.sublists ExportProof.set gen_var_51)))))) (Lambda gen_var_52 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_37) (App ExportProof.cardinal (App ExportProof.list_union gen_var_51))) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_37 (App ExportProof.list_union gen_var_51)))) gen_var_52)) (App Coq.Init.Logic.eq_ind_r Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_51)))) (Lambda gen_var_53 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_37) gen_var_53) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_37 (App ExportProof.list_union gen_var_51)))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_51)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_54 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_54)) (App ExportProof.sublists ExportProof.set gen_var_54)))))))) (LetIn gen_var_55 (App Coq.Lists.List.map ExportProof.set (Prod gen_var_56 (Axiom ExportProof.X) bool) (Lambda gen_var_57 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_57)) gen_var_54) (App list (Prod gen_var_58 (Axiom ExportProof.X) bool)) (LetIn gen_var_1595 (App ExportProof.cardinal_set_eq (App ExportProof.list_union gen_var_55) (App ExportProof.binary_intersection gen_var_37 (App ExportProof.list_union gen_var_54)) (Cast (App Coq.Init.Datatypes.list_ind ExportProof.set (Lambda gen_var_60 (App list ExportProof.set) (App ExportProof.set_eq (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_61 (Axiom ExportProof.X) bool) (Lambda gen_var_62 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_62)) gen_var_60)) (App ExportProof.binary_intersection gen_var_37 (App ExportProof.list_union gen_var_60)))) (Cast (Cast (Lambda gen_var_63 (Axiom ExportProof.X) (Cast (LetIn gen_var_64 (App gen_var_37 gen_var_63) bool (Case 0 (Lambda gen_var_65 bool (App eq bool false (Case 0 (Lambda gen_var_66 bool bool) (CaseMatch gen_var_65) (CaseBranches false false)))) (CaseMatch gen_var_64) (CaseBranches (App eq_refl bool false) (App eq_refl bool false)))) REVERTcast (App eq bool (App ExportProof.empty_set gen_var_63) (App ExportProof.binary_intersection gen_var_37 ExportProof.empty_set gen_var_63)))) REVERTcast (App ExportProof.set_eq ExportProof.empty_set (App ExportProof.binary_intersection gen_var_37 ExportProof.empty_set))) REVERTcast (App ExportProof.set_eq (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_67 (Axiom ExportProof.X) bool) (Lambda gen_var_68 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_68)) (App nil ExportProof.set))) (App ExportProof.binary_intersection gen_var_37 (App ExportProof.list_union (App nil ExportProof.set))))) (Lambda gen_var_69 ExportProof.set (Lambda gen_var_254 (App list ExportProof.set) (Lambda gen_var_71 (App ExportProof.set_eq (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_72 (Axiom ExportProof.X) bool) (Lambda gen_var_73 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_73)) gen_var_70)) (App ExportProof.binary_intersection gen_var_37 (App ExportProof.list_union gen_var_70))) (Cast (App (Lambda gen_var_74 (App ExportProof.set_eq (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_75 (Axiom ExportProof.X) bool) (Lambda gen_var_76 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_76)) gen_var_70)) (App ExportProof.binary_intersection gen_var_37 (App ExportProof.list_union gen_var_70))) (App Coq.Classes.Morphisms.subrelation_proper (Prod gen_var_77 ExportProof.set (Prod gen_var_78 ExportProof.set (Sort Prop))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set (Sort Prop)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff)) ExportProof.set_eq (App Coq.Classes.Morphisms.PER_morphism ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PER ExportProof.set ExportProof.set_eq ExportProof.Set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_80 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_81 (Axiom ExportProof.X) bool) (Prod gen_var_82 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_83 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_84 (Axiom ExportProof.X) bool) (Prod gen_var_85 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_86 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Sort Prop) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App ExportProof.binary_union (App ExportProof.binary_intersection gen_var_37 gen_var_69) (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_87 (Axiom ExportProof.X) bool) (Lambda gen_var_88 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_88)) gen_var_70))) (App ExportProof.binary_union (App ExportProof.binary_intersection gen_var_37 gen_var_69) (App ExportProof.binary_intersection gen_var_37 (App ExportProof.list_union gen_var_70))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_89 ExportProof.set (Prod gen_var_90 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_91 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_92 (Axiom ExportProof.X) bool) (Prod gen_var_93 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_union (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_95 ExportProof.set (Prod gen_var_96 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_97 ExportProof.set (Prod gen_var_98 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_99 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_100 (Axiom ExportProof.X) bool) (Prod gen_var_101 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_103 ExportProof.set (Prod gen_var_104 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_106 ExportProof.set (Prod gen_var_107 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_108 ExportProof.set (Prod gen_var_109 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_110 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_111 (Axiom ExportProof.X) bool) (Prod gen_var_112 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_113 (Axiom ExportProof.X) bool) (Prod gen_var_114 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_115 ExportProof.set (Prod gen_var_116 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_117 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_118 (Axiom ExportProof.X) bool) (Prod gen_var_119 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_120 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_121 (Axiom ExportProof.X) bool) (Prod gen_var_122 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_123 (Axiom ExportProof.X) bool) (Prod gen_var_124 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_125 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_126 (Axiom ExportProof.X) bool) (Prod gen_var_127 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_128 (Axiom ExportProof.X) bool) (Prod gen_var_129 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_130 (Axiom ExportProof.X) bool) (Prod gen_var_131 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_132 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_133 (Axiom ExportProof.X) bool) (Prod gen_var_134 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_union (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_136 ExportProof.set (Prod gen_var_137 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_138 ExportProof.set (Prod gen_var_139 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_140 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_141 (Axiom ExportProof.X) bool) (Prod gen_var_142 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_143 (Axiom ExportProof.X) bool) (Prod gen_var_144 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_union (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_146 ExportProof.set (Prod gen_var_147 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_union ExportProof.union_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_149 ExportProof.set (Prod gen_var_150 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_151 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_152 (Axiom ExportProof.X) bool) (Prod gen_var_153 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_154 (Axiom ExportProof.X) bool) (Prod gen_var_155 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_156 ExportProof.set (Prod gen_var_157 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_158 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_159 (Axiom ExportProof.X) bool) (Prod gen_var_160 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_161 (Axiom ExportProof.X) bool) (Prod gen_var_162 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_163 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_164 (Axiom ExportProof.X) bool) (Prod gen_var_165 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_166 (Axiom ExportProof.X) bool) (Prod gen_var_167 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_168 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_169 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) (App ExportProof.binary_intersection gen_var_37 gen_var_69) (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) (App ExportProof.binary_intersection gen_var_37 gen_var_69)) (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_170 (Axiom ExportProof.X) bool) (Lambda gen_var_171 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_171)) gen_var_70)) (App ExportProof.binary_intersection gen_var_37 (App ExportProof.list_union gen_var_70)) gen_var_74) (App ExportProof.binary_intersection gen_var_37 (App ExportProof.binary_union gen_var_69 (App ExportProof.list_union gen_var_70))) (App ExportProof.binary_intersection gen_var_37 (App ExportProof.binary_union gen_var_69 (App ExportProof.list_union gen_var_70))) (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Reflexive (App ExportProof.binary_intersection gen_var_37 (App ExportProof.binary_union gen_var_69 (App ExportProof.list_union gen_var_70)))))) gen_var_71 (Cast (Lambda gen_var_262 (Axiom ExportProof.X) (Cast (LetIn gen_var_212 (App gen_var_37 gen_var_172) bool (Case 0 (Lambda gen_var_206 bool (App eq bool (Case 0 (Lambda gen_var_175 bool bool) (CaseMatch (Case 0 (Lambda gen_var_176 bool bool) (CaseMatch gen_var_174) (CaseBranches (App gen_var_69 gen_var_172) false))) (CaseBranches true (Case 0 (Lambda gen_var_177 bool bool) (CaseMatch gen_var_174) (CaseBranches (App (Fix (Functions (App gen_var_178 0 (Prod gen_var_179 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_184 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_184 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_184) (CaseBranches (Lambda Anonymous (Axiom ExportProof.X) false) (Lambda gen_var_188 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_190 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_192 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_193 bool bool) (CaseMatch (App gen_var_188 gen_var_192)) (CaseBranches true (App gen_var_178 gen_var_190 gen_var_192))))))))))) 0) gen_var_184 gen_var_192) false)))) (Case 0 (Lambda gen_var_194 bool bool) (CaseMatch gen_var_188) (CaseBranches (Case 0 (Lambda gen_var_195 bool bool) (CaseMatch (App gen_var_69 gen_var_192)) (CaseBranches true (App (Fix (Functions (App gen_var_196 0 (Prod gen_var_197 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_202 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_202 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_202) (CaseBranches (Lambda Anonymous (Axiom ExportProof.X) false) (Lambda gen_var_206 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_208 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_210 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_211 bool bool) (CaseMatch (App gen_var_206 gen_var_210)) (CaseBranches true (App gen_var_196 gen_var_208 gen_var_210))))))))))) 0) gen_var_202 gen_var_210))) false)))) (CaseMatch gen_var_173) (CaseBranches (LetIn gen_var_212 (App gen_var_69 gen_var_210) bool (Case 0 (Lambda gen_var_242 bool (App eq bool (Case 0 (Lambda gen_var_214 bool bool) (CaseMatch gen_var_213) (CaseBranches true (App (Fix (Functions (App gen_var_215 0 (Prod gen_var_216 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_221 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_221 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_221) (CaseBranches (Lambda Anonymous (Axiom ExportProof.X) false) (Lambda gen_var_225 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_227 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_229 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_230 bool bool) (CaseMatch (App gen_var_225 gen_var_229)) (CaseBranches true (App gen_var_215 gen_var_227 gen_var_229))))))))))) 0) gen_var_221 gen_var_229))) (Case 0 (Lambda gen_var_231 bool bool) (CaseMatch gen_var_225) (CaseBranches true (App (Fix (Functions (App gen_var_232 0 (Prod gen_var_233 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_238 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_238 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_238) (CaseBranches (Lambda Anonymous (Axiom ExportProof.X) false) (Lambda gen_var_242 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_244 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_246 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_247 bool bool) (CaseMatch (App gen_var_242 gen_var_246)) (CaseBranches true (App gen_var_232 gen_var_244 gen_var_246))))))))))) 0) gen_var_238 gen_var_246))))) (CaseMatch gen_var_212) (CaseBranches (App eq_refl bool true) (App eq_refl bool (App (Fix (Functions (App gen_var_248 0 (Prod gen_var_249 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_254 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_254 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_254) (CaseBranches (Lambda Anonymous (Axiom ExportProof.X) false) (Lambda gen_var_258 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_260 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_262 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_263 bool bool) (CaseMatch (App gen_var_258 gen_var_262)) (CaseBranches true (App gen_var_248 gen_var_260 gen_var_262))))))))))) 0) gen_var_254 gen_var_262))))) (App eq_refl bool false)))) REVERTcast (App eq bool (App ExportProof.binary_union (App ExportProof.binary_intersection gen_var_37 gen_var_69) (App ExportProof.binary_intersection gen_var_37 (App ExportProof.list_union gen_var_254)) gen_var_262) (App ExportProof.binary_intersection gen_var_37 (App ExportProof.binary_union gen_var_69 (App ExportProof.list_union gen_var_254)) gen_var_262)))) REVERTcast (App ExportProof.set_eq (App ExportProof.binary_union (App ExportProof.binary_intersection gen_var_37 gen_var_69) (App ExportProof.binary_intersection gen_var_37 (App ExportProof.list_union gen_var_254))) (App ExportProof.binary_intersection gen_var_37 (App ExportProof.binary_union gen_var_69 (App ExportProof.list_union gen_var_254)))))) REVERTcast (App ExportProof.set_eq (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_264 (Axiom ExportProof.X) bool) (Lambda gen_var_265 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_265)) (App cons ExportProof.set gen_var_69 gen_var_254))) (App ExportProof.binary_intersection gen_var_37 (App ExportProof.list_union (App cons ExportProof.set gen_var_69 gen_var_254)))))))) gen_var_254) REVERTcast (App ExportProof.set_eq (App ExportProof.list_union gen_var_55) (App ExportProof.binary_intersection gen_var_37 (App ExportProof.list_union gen_var_254))))) (App eq Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_55)) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_37 (App ExportProof.list_union gen_var_254)))) (App Coq.Init.Logic.eq_ind Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_55)) (Lambda gen_var_266 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_254))))) gen_var_266) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_254)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_267 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_267)) (App ExportProof.sublists ExportProof.set gen_var_267)))))))) (App Coq.Init.Logic.eq_ind_r Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_55)))) (Lambda gen_var_268 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_267))))) gen_var_268) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_267)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_269 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_269)) (App ExportProof.sublists ExportProof.set gen_var_269)))))))) (LetIn gen_var_1595 (Cast (App Coq.Init.Logic.eq_ind_r (App list (App list ExportProof.set)) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_271 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_271)) (App ExportProof.sublists ExportProof.set gen_var_271)) (Lambda gen_var_272 (App list (App list ExportProof.set)) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_273 (Axiom ExportProof.X) bool) (Lambda gen_var_274 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_274)) gen_var_272)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 gen_var_272)))) (App Coq.Init.Logic.eq_ind_r (App list (App list ExportProof.set)) (App cons (App list ExportProof.set) (App nil ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_272))) (Lambda gen_var_278 (App list (App list ExportProof.set)) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_276 (Axiom ExportProof.X) bool) (Lambda gen_var_277 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_277)) gen_var_275)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_278 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_278)) gen_var_278))))) (Cast (Cast (Cast (LetIn gen_var_683 (App cons Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_280 (Axiom ExportProof.X) bool) (Lambda gen_var_281 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_281)) gen_var_278)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_37) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_282 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_282)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_282)))))) (App nil Z))) (App list Z) (App (Cast (Cast (Lambda gen_var_685 (App eq (App list Z) gen_var_279 (App cons Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_284 (Axiom ExportProof.X) bool) (Lambda gen_var_285 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_285)) gen_var_282)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_37) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_286 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_286)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_286)))))) (App nil Z)))) (LetIn gen_var_687 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_688 (App nil (App prod (App prod Z Mon) (App Pol Z))) (App list (App prod (App prod Z Mon) (App Pol Z))) (LetIn gen_var_689 (Cast (App eq_refl (App list (App prod (App prod Z Mon) (App Pol Z))) gen_var_288) VMcast (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_287) gen_var_288)) (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_287) gen_var_288) (LetIn gen_var_690 (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma2 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_287 (App cons Z (App ExportProof.cardinal gen_var_37) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_291 (Axiom ExportProof.X) bool) (Lambda gen_var_292 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_292)) gen_var_286))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_293 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_293)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_293))))) (App nil Z)))) I gen_var_288 gen_var_289) (Prod gen_var_294 (App PExpr Z) (Prod gen_var_295 (App Pol Z) (Prod Anonymous (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_288 gen_var_294) gen_var_295) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal gen_var_37) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_297 (Axiom ExportProof.X) bool) (Lambda gen_var_298 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_298)) gen_var_293))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_299 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_299)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_299))))) (App nil Z)))) gen_var_294) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal gen_var_37) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_300 (Axiom ExportProof.X) bool) (Lambda gen_var_301 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_301)) gen_var_299))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_302 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_302)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_302))))) (App nil Z)))) gen_var_295))))) (LetIn gen_var_697 (App PX Z (App Pc Z (App Zpos xH)) xH (App PX Z (App Pc Z (App Zneg xH)) xH (App Pc Z Z0))) (App Pol Z) (LetIn gen_var_698 (Cast (App eq_refl (App Pol Z) gen_var_303) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_288 (App PEsub Z (App PEX Z xH) (App PEX Z (App xO xH)))) gen_var_303)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_288 (App PEsub Z (App PEX Z xH) (App PEX Z (App xO xH)))) gen_var_303) (LetIn gen_var_699 (App gen_var_290 (App PEsub Z (App PEX Z xH) (App PEX Z (App xO xH))) gen_var_303 gen_var_304) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal gen_var_37) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_306 (Axiom ExportProof.X) bool) (Lambda gen_var_307 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_307)) gen_var_302))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_308 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_308)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_308))))) (App nil Z)))) (App PEsub Z (App PEX Z xH) (App PEX Z (App xO xH)))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal gen_var_37) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_309 (Axiom ExportProof.X) bool) (Lambda gen_var_310 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_310)) gen_var_308))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_311 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_311)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_311))))) (App nil Z)))) gen_var_303)) (LetIn gen_var_704 (App PX Z (App Pc Z (App Zpos xH)) xH (App Pinj Z xH (App PX Z (App Pc Z (App Zpos xH)) xH (App Pc Z Z0)))) (App Pol Z) (LetIn gen_var_705 (Cast (App eq_refl (App Pol Z) gen_var_312) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_288 (App PEadd Z (App PEmul Z (App PEX Z xH) (App PEc Z (App Zpos xH))) (App PEX Z (App xI xH)))) gen_var_312)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_288 (App PEadd Z (App PEmul Z (App PEX Z xH) (App PEc Z (App Zpos xH))) (App PEX Z (App xI xH)))) gen_var_312) (LetIn gen_var_706 (App gen_var_290 (App PEadd Z (App PEmul Z (App PEX Z xH) (App PEc Z (App Zpos xH))) (App PEX Z (App xI xH))) gen_var_312 gen_var_313) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal gen_var_37) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_315 (Axiom ExportProof.X) bool) (Lambda gen_var_316 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_316)) gen_var_311))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_317 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_317)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_317))))) (App nil Z)))) (App PEadd Z (App PEmul Z (App PEX Z xH) (App PEc Z (App Zpos xH))) (App PEX Z (App xI xH)))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal gen_var_37) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_318 (Axiom ExportProof.X) bool) (Lambda gen_var_319 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_319)) gen_var_317))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_320 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_320)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_320))))) (App nil Z)))) gen_var_312)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_321 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_321)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_321)))))) (Lambda gen_var_322 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_323 (Axiom ExportProof.X) bool) (Lambda gen_var_324 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_324)) gen_var_321)))))) gen_var_322)) (Cast (LetIn gen_var_1539 (App Coq.Init.Logic.eq_ind_r (App list (App list ExportProof.set)) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_326 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_326))) (App ExportProof.sublists ExportProof.set gen_var_321)) (Lambda gen_var_328 (App list (App list ExportProof.set)) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_327)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_328 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_328)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_328))))))) (App (Lambda gen_var_1532 (App list (App list ExportProof.set)) (LetIn gen_var_1497 (App Coq.Init.Datatypes.list_ind (App list ExportProof.set) (Lambda gen_var_331 (App list (App list ExportProof.set)) (App eq (App list (App list (Prod gen_var_332 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_333 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_334 (Axiom ExportProof.X) bool) (Lambda gen_var_335 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_335))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_331)) (App Coq.Lists.List.filter (App list (Prod gen_var_336 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_337 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_338 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_339 (Axiom ExportProof.X) bool) (Lambda gen_var_340 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_340))) gen_var_331)))) (App eq_refl (App list (App list (Prod gen_var_341 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.filter (App list (Prod gen_var_342 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_343 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_344 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_345 (Axiom ExportProof.X) bool) (Lambda gen_var_346 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_346))) (App nil (App list ExportProof.set))))) (Lambda gen_var_597 (App list ExportProof.set) (Lambda gen_var_513 (App list (App list ExportProof.set)) (Lambda gen_var_349 (App eq (App list (App list (Prod gen_var_350 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_351 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_352 (Axiom ExportProof.X) bool) (Lambda gen_var_353 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_353))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_348)) (App Coq.Lists.List.filter (App list (Prod gen_var_354 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_355 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_356 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_357 (Axiom ExportProof.X) bool) (Lambda gen_var_358 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_358))) gen_var_348))) (Cast (Case 1 (Lambda gen_var_359 (App list ExportProof.set) (App eq (App list (App list (Prod gen_var_360 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_361 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_362 (Axiom ExportProof.X) bool) (Lambda gen_var_363 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_363))) (Case 0 (Lambda gen_var_364 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set gen_var_359)) (CaseBranches (App cons (App list ExportProof.set) gen_var_359 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_359)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_359)))) (Case 0 (Lambda gen_var_365 bool (App list (App list (Prod gen_var_366 (Axiom ExportProof.X) bool)))) (CaseMatch (App ExportProof.nonempty (Prod gen_var_367 (Axiom ExportProof.X) bool) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_368 (Axiom ExportProof.X) bool) (Lambda gen_var_369 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_369)) gen_var_359))) (CaseBranches (App cons (App list (Prod gen_var_370 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_371 (Axiom ExportProof.X) bool) (Lambda gen_var_372 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_372)) gen_var_359) (App Coq.Lists.List.filter (App list (Prod gen_var_373 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_374 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_375 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_376 (Axiom ExportProof.X) bool) (Lambda gen_var_377 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_377))) gen_var_359))) (App Coq.Lists.List.filter (App list (Prod gen_var_378 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_379 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_380 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_381 (Axiom ExportProof.X) bool) (Lambda gen_var_382 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_382))) gen_var_359)))))) (CaseMatch gen_var_382) (CaseBranches (Cast gen_var_349 REVERTcast (App eq (App list (App list (Prod gen_var_383 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_384 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_385 (Axiom ExportProof.X) bool) (Lambda gen_var_386 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_386))) (Case 0 (Lambda gen_var_387 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App nil ExportProof.set))) (CaseBranches (App cons (App list ExportProof.set) (App nil ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_359)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_359)))) (Case 0 (Lambda gen_var_388 bool (App list (App list (Prod gen_var_389 (Axiom ExportProof.X) bool)))) (CaseMatch (App ExportProof.nonempty (Prod gen_var_390 (Axiom ExportProof.X) bool) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_391 (Axiom ExportProof.X) bool) (Lambda gen_var_392 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_392)) (App nil ExportProof.set)))) (CaseBranches (App cons (App list (Prod gen_var_393 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_394 (Axiom ExportProof.X) bool) (Lambda gen_var_395 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_395)) (App nil ExportProof.set)) (App Coq.Lists.List.filter (App list (Prod gen_var_396 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_397 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_398 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_399 (Axiom ExportProof.X) bool) (Lambda gen_var_400 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_400))) gen_var_359))) (App Coq.Lists.List.filter (App list (Prod gen_var_401 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_402 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_403 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_404 (Axiom ExportProof.X) bool) (Lambda gen_var_405 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_405))) gen_var_359)))))) (Lambda gen_var_406 ExportProof.set (Lambda gen_var_588 (App list ExportProof.set) (Cast (App Coq.Init.Logic.eq_trans (App list (App list (App (Lambda gen_var_409 (Sort Set) (Lambda gen_var_409 (Sort Set) (Prod Anonymous gen_var_409 gen_var_409))) (Axiom ExportProof.X) bool))) (App cons (App list (App (Lambda gen_var_412 (Sort Set) (Lambda gen_var_412 (Sort Set) (Prod Anonymous gen_var_412 gen_var_412))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_415 (Sort Set) (Lambda gen_var_415 (Sort Set) (Prod Anonymous gen_var_415 gen_var_415))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_37 gen_var_406) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_418 (Sort Set) (Lambda gen_var_418 (Sort Set) (Prod Anonymous gen_var_418 gen_var_418))) (Axiom ExportProof.X) bool) (Lambda gen_var_420 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_420)) gen_var_420)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_422 (Sort Set) (Lambda gen_var_422 (Sort Set) (Prod Anonymous gen_var_422 gen_var_422))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_425 (Sort Set) (Lambda gen_var_425 (Sort Set) (Prod Anonymous gen_var_425 gen_var_425))) (Axiom ExportProof.X) bool) (Lambda gen_var_427 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_427))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_359))) (App cons (App list (App (Lambda gen_var_429 (Sort Set) (Lambda gen_var_429 (Sort Set) (Prod Anonymous gen_var_429 gen_var_429))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_432 (Sort Set) (Lambda gen_var_432 (Sort Set) (Prod Anonymous gen_var_432 gen_var_432))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_37 gen_var_406) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_435 (Sort Set) (Lambda gen_var_435 (Sort Set) (Prod Anonymous gen_var_435 gen_var_435))) (Axiom ExportProof.X) bool) (Lambda gen_var_437 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_437)) gen_var_437)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_439 (Sort Set) (Lambda gen_var_439 (Sort Set) (Prod Anonymous gen_var_439 gen_var_439))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_442 (Sort Set) (Lambda gen_var_442 (Sort Set) (Prod Anonymous gen_var_442 gen_var_442))) (Axiom ExportProof.X) bool) (Lambda gen_var_444 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_444))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_359))) (App cons (App list (App (Lambda gen_var_446 (Sort Set) (Lambda gen_var_446 (Sort Set) (Prod Anonymous gen_var_446 gen_var_446))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_449 (Sort Set) (Lambda gen_var_449 (Sort Set) (Prod Anonymous gen_var_449 gen_var_449))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_37 gen_var_406) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_452 (Sort Set) (Lambda gen_var_452 (Sort Set) (Prod Anonymous gen_var_452 gen_var_452))) (Axiom ExportProof.X) bool) (Lambda gen_var_454 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_454)) gen_var_454)) (App Coq.Lists.List.filter (App list (App (Lambda gen_var_456 (Sort Set) (Lambda gen_var_456 (Sort Set) (Prod Anonymous gen_var_456 gen_var_456))) (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (App (Lambda gen_var_459 (Sort Set) (Lambda gen_var_459 (Sort Set) (Prod Anonymous gen_var_459 gen_var_459))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_462 (Sort Set) (Lambda gen_var_462 (Sort Set) (Prod Anonymous gen_var_462 gen_var_462))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_465 (Sort Set) (Lambda gen_var_465 (Sort Set) (Prod Anonymous gen_var_465 gen_var_465))) (Axiom ExportProof.X) bool) (Lambda gen_var_467 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_467))) gen_var_359))) (App Coq.Init.Logic.f_equal (Prod gen_var_468 (App list (App list (App (Lambda gen_var_470 (Sort Set) (Lambda gen_var_470 (Sort Set) (Prod Anonymous gen_var_470 gen_var_470))) (Axiom ExportProof.X) bool))) (App list (App list (App (Lambda gen_var_473 (Sort Set) (Lambda gen_var_473 (Sort Set) (Prod Anonymous gen_var_473 gen_var_473))) (Axiom ExportProof.X) bool)))) (App list (App list (App (Lambda gen_var_476 (Sort Set) (Lambda gen_var_476 (Sort Set) (Prod Anonymous gen_var_476 gen_var_476))) (Axiom ExportProof.X) bool))) (Lambda gen_var_478 (Prod gen_var_479 (App list (App list (App (Lambda gen_var_481 (Sort Set) (Lambda gen_var_481 (Sort Set) (Prod Anonymous gen_var_481 gen_var_481))) (Axiom ExportProof.X) bool))) (App list (App list (App (Lambda gen_var_484 (Sort Set) (Lambda gen_var_484 (Sort Set) (Prod Anonymous gen_var_484 gen_var_484))) (Axiom ExportProof.X) bool)))) (App gen_var_478 (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_487 (Sort Set) (Lambda gen_var_487 (Sort Set) (Prod Anonymous gen_var_487 gen_var_487))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_490 (Sort Set) (Lambda gen_var_490 (Sort Set) (Prod Anonymous gen_var_490 gen_var_490))) (Axiom ExportProof.X) bool) (Lambda gen_var_492 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_492))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_479)))) (App cons (App list (App (Lambda gen_var_494 (Sort Set) (Lambda gen_var_494 (Sort Set) (Prod Anonymous gen_var_494 gen_var_494))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_497 (Sort Set) (Lambda gen_var_497 (Sort Set) (Prod Anonymous gen_var_497 gen_var_497))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_37 gen_var_406) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_500 (Sort Set) (Lambda gen_var_500 (Sort Set) (Prod Anonymous gen_var_500 gen_var_500))) (Axiom ExportProof.X) bool) (Lambda gen_var_502 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_502)) gen_var_502))) (App cons (App list (App (Lambda gen_var_504 (Sort Set) (Lambda gen_var_504 (Sort Set) (Prod Anonymous gen_var_504 gen_var_504))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_507 (Sort Set) (Lambda gen_var_507 (Sort Set) (Prod Anonymous gen_var_507 gen_var_507))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_37 gen_var_406) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_510 (Sort Set) (Lambda gen_var_510 (Sort Set) (Prod Anonymous gen_var_510 gen_var_510))) (Axiom ExportProof.X) bool) (Lambda gen_var_512 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_512)) gen_var_512))) (App eq_refl (Prod gen_var_513 (App list (App list (App (Lambda gen_var_515 (Sort Set) (Lambda gen_var_515 (Sort Set) (Prod Anonymous gen_var_515 gen_var_515))) (Axiom ExportProof.X) bool))) (App list (App list (App (Lambda gen_var_518 (Sort Set) (Lambda gen_var_518 (Sort Set) (Prod Anonymous gen_var_518 gen_var_518))) (Axiom ExportProof.X) bool)))) (App cons (App list (App (Lambda gen_var_521 (Sort Set) (Lambda gen_var_521 (Sort Set) (Prod Anonymous gen_var_521 gen_var_521))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_524 (Sort Set) (Lambda gen_var_524 (Sort Set) (Prod Anonymous gen_var_524 gen_var_524))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_37 gen_var_406) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_527 (Sort Set) (Lambda gen_var_527 (Sort Set) (Prod Anonymous gen_var_527 gen_var_527))) (Axiom ExportProof.X) bool) (Lambda gen_var_529 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_529)) gen_var_529))))) (App Coq.Init.Logic.f_equal (App list (App list (App (Lambda gen_var_531 (Sort Set) (Lambda gen_var_531 (Sort Set) (Prod Anonymous gen_var_531 gen_var_531))) (Axiom ExportProof.X) bool))) (App list (App list (App (Lambda gen_var_534 (Sort Set) (Lambda gen_var_534 (Sort Set) (Prod Anonymous gen_var_534 gen_var_534))) (Axiom ExportProof.X) bool))) (App cons (App list (App (Lambda gen_var_537 (Sort Set) (Lambda gen_var_537 (Sort Set) (Prod Anonymous gen_var_537 gen_var_537))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_540 (Sort Set) (Lambda gen_var_540 (Sort Set) (Prod Anonymous gen_var_540 gen_var_540))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_37 gen_var_406) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_543 (Sort Set) (Lambda gen_var_543 (Sort Set) (Prod Anonymous gen_var_543 gen_var_543))) (Axiom ExportProof.X) bool) (Lambda gen_var_545 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_545)) gen_var_545))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_547 (Sort Set) (Lambda gen_var_547 (Sort Set) (Prod Anonymous gen_var_547 gen_var_547))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_550 (Sort Set) (Lambda gen_var_550 (Sort Set) (Prod Anonymous gen_var_550 gen_var_550))) (Axiom ExportProof.X) bool) (Lambda gen_var_552 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_552))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_513)) (App Coq.Lists.List.filter (App list (App (Lambda gen_var_554 (Sort Set) (Lambda gen_var_554 (Sort Set) (Prod Anonymous gen_var_554 gen_var_554))) (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (App (Lambda gen_var_557 (Sort Set) (Lambda gen_var_557 (Sort Set) (Prod Anonymous gen_var_557 gen_var_557))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_560 (Sort Set) (Lambda gen_var_560 (Sort Set) (Prod Anonymous gen_var_560 gen_var_560))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_563 (Sort Set) (Lambda gen_var_563 (Sort Set) (Prod Anonymous gen_var_563 gen_var_563))) (Axiom ExportProof.X) bool) (Lambda gen_var_565 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_565))) gen_var_513)) gen_var_349)) REVERTcast (App eq (App list (App list (Prod gen_var_566 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_567 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_568 (Axiom ExportProof.X) bool) (Lambda gen_var_569 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_569))) (Case 0 (Lambda gen_var_570 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App cons ExportProof.set gen_var_406 gen_var_570))) (CaseBranches (App cons (App list ExportProof.set) (App cons ExportProof.set gen_var_406 gen_var_570) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_513)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_513)))) (Case 0 (Lambda gen_var_571 bool (App list (App list (Prod gen_var_572 (Axiom ExportProof.X) bool)))) (CaseMatch (App ExportProof.nonempty (Prod gen_var_573 (Axiom ExportProof.X) bool) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_574 (Axiom ExportProof.X) bool) (Lambda gen_var_575 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_575)) (App cons ExportProof.set gen_var_406 gen_var_575)))) (CaseBranches (App cons (App list (Prod gen_var_576 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_577 (Axiom ExportProof.X) bool) (Lambda gen_var_578 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_578)) (App cons ExportProof.set gen_var_406 gen_var_578)) (App Coq.Lists.List.filter (App list (Prod gen_var_579 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_580 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_581 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_582 (Axiom ExportProof.X) bool) (Lambda gen_var_583 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_583))) gen_var_513))) (App Coq.Lists.List.filter (App list (Prod gen_var_584 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_585 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_586 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_587 (Axiom ExportProof.X) bool) (Lambda gen_var_588 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_588))) gen_var_513)))))))))) REVERTcast (App eq (App list (App list (Prod gen_var_589 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_590 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_591 (Axiom ExportProof.X) bool) (Lambda gen_var_592 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_592))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App cons (App list ExportProof.set) gen_var_592 gen_var_513))) (App Coq.Lists.List.filter (App list (Prod gen_var_593 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_594 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_595 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_596 (Axiom ExportProof.X) bool) (Lambda gen_var_597 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_597))) (App cons (App list ExportProof.set) gen_var_597 gen_var_513)))))))) gen_var_513) (App eq (App list (App list (Prod gen_var_598 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_599 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_600 (Axiom ExportProof.X) bool) (Lambda gen_var_601 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_601))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_513)) (App Coq.Lists.List.filter (App list (Prod gen_var_602 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_603 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_604 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_605 (Axiom ExportProof.X) bool) (Lambda gen_var_606 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_606))) gen_var_513))) (App Coq.Init.Datatypes.list_ind (App list ExportProof.set) (Lambda gen_var_609 (App list (App list ExportProof.set)) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_608 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_608))) gen_var_607))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_609 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_609)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_609)))))) (App eq_refl Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_610 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_610)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App nil (App list ExportProof.set))))))) (Lambda gen_var_1531 (App list ExportProof.set) (Lambda gen_var_1532 (App list (App list ExportProof.set)) (Lambda gen_var_613 (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_614 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_614))) gen_var_612))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_615 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_615)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_615))))) (Cast (Case 1 (Lambda gen_var_622 (App list ExportProof.set) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (Case 0 (Lambda gen_var_617 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_618 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_618)) gen_var_616))) (CaseBranches (App cons (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_619 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_619)) gen_var_616) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_620 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_620))) gen_var_616))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_621 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_621))) gen_var_616))))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_622 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_622)) (Case 0 (Lambda gen_var_623 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set gen_var_622)) (CaseBranches (App cons (App list ExportProof.set) gen_var_622 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_622)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_622)))))))) (CaseMatch gen_var_623) (CaseBranches (Cast gen_var_613 REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (Case 0 (Lambda gen_var_624 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_625 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_625)) (App nil ExportProof.set)))) (CaseBranches (App cons (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_626 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_626)) (App nil ExportProof.set)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_627 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_627))) gen_var_622))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_628 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_628))) gen_var_622))))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_629 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_629)) (Case 0 (Lambda gen_var_630 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App nil ExportProof.set))) (CaseBranches (App cons (App list ExportProof.set) (App nil ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_629)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_629)))))))) (Lambda gen_var_1463 ExportProof.set (Lambda gen_var_833 (App list ExportProof.set) (Cast (App Coq.Init.Logic.eq_ind Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_633 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_633))) gen_var_629))))) (Lambda gen_var_634 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_635 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_635)) gen_var_632))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_636 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_636))) gen_var_629)))))) (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632))) gen_var_634))) (LetIn gen_var_683 (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_638 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_638)) gen_var_632))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_639 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_639))) gen_var_629)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_640 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_640))) gen_var_629)))))) (App nil Z))) (App list Z) (App (Cast (Cast (Lambda gen_var_685 (App eq (App list Z) gen_var_637 (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_642 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_642)) gen_var_632))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_643 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_643))) gen_var_629)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_644 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_644))) gen_var_629)))))) (App nil Z)))) (LetIn gen_var_687 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_688 (App nil (App prod (App prod Z Mon) (App Pol Z))) (App list (App prod (App prod Z Mon) (App Pol Z))) (LetIn gen_var_689 (Cast (App eq_refl (App list (App prod (App prod Z Mon) (App Pol Z))) gen_var_646) VMcast (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_645) gen_var_646)) (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_645) gen_var_646) (LetIn gen_var_690 (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma2 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_645 (App cons Z (App gen_var_2 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_649 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_649)) gen_var_632))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_650 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_650))) gen_var_629)))) (App cons Z (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632))) (App nil Z)))) I gen_var_646 gen_var_647) (Prod gen_var_651 (App PExpr Z) (Prod gen_var_652 (App Pol Z) (Prod Anonymous (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_646 gen_var_651) gen_var_652) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App gen_var_2 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_654 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_654)) gen_var_632))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_655 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_655))) gen_var_629)))) (App cons Z (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632))) (App nil Z)))) gen_var_651) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App gen_var_2 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_656 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_656)) gen_var_632))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_657 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_657))) gen_var_629)))) (App cons Z (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632))) (App nil Z)))) gen_var_652))))) (LetIn gen_var_697 (App PX Z (App Pc Z (App Zneg xH)) xH (App PX Z (App Pc Z (App Zneg xH)) xH (App Pc Z Z0))) (App Pol Z) (LetIn gen_var_698 (Cast (App eq_refl (App Pol Z) gen_var_658) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_646 (App PEopp Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH))))) gen_var_658)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_646 (App PEopp Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH))))) gen_var_658) (LetIn gen_var_699 (App gen_var_648 (App PEopp Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH)))) gen_var_658 gen_var_659) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App gen_var_2 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_661 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_661)) gen_var_632))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_662 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_662))) gen_var_629)))) (App cons Z (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632))) (App nil Z)))) (App PEopp Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH))))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App gen_var_2 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_663 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_663)) gen_var_632))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_664 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_664))) gen_var_629)))) (App cons Z (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632))) (App nil Z)))) gen_var_658)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_2 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_665 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_665)) gen_var_632)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_666 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_666))) gen_var_629))))) (Lambda gen_var_667 Z (App eq Z gen_var_667 (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_668 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_668))) gen_var_629)))))))) (LetIn gen_var_704 (App Pinj Z xH (App PX Z (App Pc Z (App Zneg xH)) xH (App PX Z (App Pc Z (App Zpos xH)) xH (App Pc Z Z0)))) (App Pol Z) (LetIn gen_var_705 (Cast (App eq_refl (App Pol Z) gen_var_669) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_646 (App PEadd Z (App PEX Z (App xI xH)) (App PEopp Z (App PEX Z (App xO xH))))) gen_var_669)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_646 (App PEadd Z (App PEX Z (App xI xH)) (App PEopp Z (App PEX Z (App xO xH))))) gen_var_669) (LetIn gen_var_706 (App gen_var_648 (App PEadd Z (App PEX Z (App xI xH)) (App PEopp Z (App PEX Z (App xO xH)))) gen_var_669 gen_var_670) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App gen_var_2 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_672 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_672)) gen_var_632))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_673 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_673))) gen_var_629)))) (App cons Z (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632))) (App nil Z)))) (App PEadd Z (App PEX Z (App xI xH)) (App PEopp Z (App PEX Z (App xO xH))))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App gen_var_2 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_674 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_674)) gen_var_632))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_675 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_675))) gen_var_629)))) (App cons Z (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632))) (App nil Z)))) gen_var_669)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_676 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_676))) gen_var_629))))) (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632)))) (Lambda gen_var_677 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_2 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_678 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_678)) gen_var_632)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_679 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_679))) gen_var_629))))) gen_var_677)) (LetIn gen_var_1497 (Cast (Cast (App Coq.Init.Logic.eq_ind_r nat (App Coq.Init.Datatypes.length ExportProof.set gen_var_632) (Lambda gen_var_681 nat (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_682 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_682)) gen_var_632)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign gen_var_681)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_632))))))))) (LetIn gen_var_683 (App cons Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_684 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_684)) gen_var_632)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_632))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_632))))))) (App nil Z))) (App list Z) (App (Cast (Cast (Lambda gen_var_685 (App eq (App list Z) gen_var_683 (App cons Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_686 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_686)) gen_var_632)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_632))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_632))))))) (App nil Z)))) (LetIn gen_var_687 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_688 (App nil (App prod (App prod Z Mon) (App Pol Z))) (App list (App prod (App prod Z Mon) (App Pol Z))) (LetIn gen_var_689 (Cast (App eq_refl (App list (App prod (App prod Z Mon) (App Pol Z))) gen_var_688) VMcast (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_687) gen_var_688)) (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_687) gen_var_688) (LetIn gen_var_690 (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma2 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_687 (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_691 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_691)) gen_var_632)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_632)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632)))) (App nil Z)))) I gen_var_688 gen_var_689) (Prod gen_var_692 (App PExpr Z) (Prod gen_var_693 (App Pol Z) (Prod Anonymous (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_688 gen_var_692) gen_var_693) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_695 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_695)) gen_var_632)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_632)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632)))) (App nil Z)))) gen_var_692) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_696 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_696)) gen_var_632)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_632)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632)))) (App nil Z)))) gen_var_693))))) (LetIn gen_var_697 (App PX Z (App Pinj Z xH (App PX Z (App Pc Z (App Zpos xH)) xH (App Pc Z Z0))) xH (App Pc Z Z0)) (App Pol Z) (LetIn gen_var_698 (Cast (App eq_refl (App Pol Z) gen_var_697) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_688 (App PEmul Z (App PEX Z xH) (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))) gen_var_697)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_688 (App PEmul Z (App PEX Z xH) (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))) gen_var_697) (LetIn gen_var_699 (App gen_var_690 (App PEmul Z (App PEX Z xH) (App PEopp Z (App PEopp Z (App PEX Z (App xO xH))))) gen_var_697 gen_var_698) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_700 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_700)) gen_var_632)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_632)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632)))) (App nil Z)))) (App PEmul Z (App PEX Z xH) (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_701 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_701)) gen_var_632)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_632)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632)))) (App nil Z)))) gen_var_697)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_702 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_702)) gen_var_632)))) (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_632))) (Lambda gen_var_703 Z (App eq Z gen_var_703 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_632))))))))) (LetIn gen_var_704 (App Pinj Z xH (App PX Z (App Pinj Z xH (App PX Z (App Pc Z (App Zpos xH)) xH (App Pc Z Z0))) xH (App Pc Z Z0))) (App Pol Z) (LetIn gen_var_705 (Cast (App eq_refl (App Pol Z) gen_var_704) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_688 (App PEopp Z (App PEmul Z (App PEX Z (App xI xH)) (App PEopp Z (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))))) gen_var_704)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_688 (App PEopp Z (App PEmul Z (App PEX Z (App xI xH)) (App PEopp Z (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))))) gen_var_704) (LetIn gen_var_706 (App gen_var_690 (App PEopp Z (App PEmul Z (App PEX Z (App xI xH)) (App PEopp Z (App PEopp Z (App PEopp Z (App PEX Z (App xO xH))))))) gen_var_704 gen_var_705) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_707 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_707)) gen_var_632)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_632)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632)))) (App nil Z)))) (App PEopp Z (App PEmul Z (App PEX Z (App xI xH)) (App PEopp Z (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_708 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_708)) gen_var_632)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_632)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632)))) (App nil Z)))) gen_var_704)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_632)) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_631 gen_var_632))))) (Lambda gen_var_709 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_710 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_710)) gen_var_632)))) (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_632))) gen_var_709)) (LetIn gen_var_1478 (Cast (App ExportProof.cardinal_set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_712 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_712)) gen_var_632)) (App ExportProof.binary_intersection gen_var_631 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_632)) (App Coq.Init.Datatypes.list_ind ExportProof.set (Lambda gen_var_713 (App list ExportProof.set) (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_714 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_714)) gen_var_713)) (App ExportProof.binary_intersection gen_var_631 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_713)))) (Cast (Cast (Lambda gen_var_715 (Axiom ExportProof.X) (Cast (LetIn gen_var_723 (App gen_var_37 gen_var_715) bool (Case 0 (Lambda gen_var_717 bool (App eq bool (Case 0 (Lambda gen_var_718 bool bool) (CaseMatch gen_var_717) (CaseBranches (App gen_var_631 gen_var_715) false)) (Case 0 (Lambda gen_var_719 bool bool) (CaseMatch (App gen_var_631 gen_var_715)) (CaseBranches gen_var_717 false)))) (CaseMatch gen_var_716) (CaseBranches (LetIn gen_var_720 (App gen_var_631 gen_var_715) bool (Case 0 (Lambda gen_var_721 bool (App eq bool gen_var_721 (Case 0 (Lambda gen_var_722 bool bool) (CaseMatch gen_var_721) (CaseBranches true false)))) (CaseMatch gen_var_720) (CaseBranches (App eq_refl bool true) (App eq_refl bool false)))) (LetIn gen_var_723 (App gen_var_631 gen_var_715) bool (Case 0 (Lambda gen_var_724 bool (App eq bool false (Case 0 (Lambda gen_var_725 bool bool) (CaseMatch gen_var_724) (CaseBranches false false)))) (CaseMatch gen_var_723) (CaseBranches (App eq_refl bool false) (App eq_refl bool false))))))) REVERTcast (App eq bool (App ExportProof.binary_intersection gen_var_37 gen_var_631 gen_var_715) (App ExportProof.binary_intersection gen_var_631 gen_var_37 gen_var_715)))) REVERTcast (App ExportProof.set_eq (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App ExportProof.binary_intersection gen_var_631 gen_var_37))) REVERTcast (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_726 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_726)) (App nil ExportProof.set))) (App ExportProof.binary_intersection gen_var_631 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 (App nil ExportProof.set))))) (Lambda gen_var_727 ExportProof.set (Lambda gen_var_833 (App list ExportProof.set) (Lambda gen_var_834 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_730 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_730)) gen_var_728)) (App ExportProof.binary_intersection gen_var_631 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_728))) (Cast (App (Lambda gen_var_731 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_37 gen_var_631) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_732 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_732)) gen_var_728)) (App ExportProof.binary_intersection gen_var_631 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_728))) (App Coq.Classes.Morphisms.subrelation_proper (Prod gen_var_733 ExportProof.set (Prod gen_var_734 ExportProof.set (Sort Prop))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set (Sort Prop)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff)) ExportProof.set_eq (App Coq.Classes.Morphisms.PER_morphism ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PER ExportProof.set ExportProof.set_eq ExportProof.Set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_736 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_737 (Axiom ExportProof.X) bool) (Prod gen_var_738 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_739 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_740 (Axiom ExportProof.X) bool) (Prod gen_var_741 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_742 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Sort Prop) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_37 gen_var_727) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_37 gen_var_742) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_743 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_743)) gen_var_728))) (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_37 gen_var_727) (App ExportProof.binary_intersection gen_var_742 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_728))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_744 ExportProof.set (Prod gen_var_745 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_746 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_747 (Axiom ExportProof.X) bool) (Prod gen_var_748 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_750 ExportProof.set (Prod gen_var_751 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_752 ExportProof.set (Prod gen_var_753 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_754 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_755 (Axiom ExportProof.X) bool) (Prod gen_var_756 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_758 ExportProof.set (Prod gen_var_759 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_761 ExportProof.set (Prod gen_var_762 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_763 ExportProof.set (Prod gen_var_764 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_765 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_766 (Axiom ExportProof.X) bool) (Prod gen_var_767 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_768 (Axiom ExportProof.X) bool) (Prod gen_var_769 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_770 ExportProof.set (Prod gen_var_771 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_772 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_773 (Axiom ExportProof.X) bool) (Prod gen_var_774 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_775 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_776 (Axiom ExportProof.X) bool) (Prod gen_var_777 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_778 (Axiom ExportProof.X) bool) (Prod gen_var_779 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_780 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_781 (Axiom ExportProof.X) bool) (Prod gen_var_782 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_783 (Axiom ExportProof.X) bool) (Prod gen_var_784 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_785 (Axiom ExportProof.X) bool) (Prod gen_var_786 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_787 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_788 (Axiom ExportProof.X) bool) (Prod gen_var_789 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_791 ExportProof.set (Prod gen_var_792 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_793 ExportProof.set (Prod gen_var_794 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_795 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_796 (Axiom ExportProof.X) bool) (Prod gen_var_797 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_798 (Axiom ExportProof.X) bool) (Prod gen_var_799 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_801 ExportProof.set (Prod gen_var_802 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_804 ExportProof.set (Prod gen_var_805 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_806 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_807 (Axiom ExportProof.X) bool) (Prod gen_var_808 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_809 (Axiom ExportProof.X) bool) (Prod gen_var_810 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_811 ExportProof.set (Prod gen_var_812 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_813 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_814 (Axiom ExportProof.X) bool) (Prod gen_var_815 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_816 (Axiom ExportProof.X) bool) (Prod gen_var_817 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_818 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_819 (Axiom ExportProof.X) bool) (Prod gen_var_820 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_821 (Axiom ExportProof.X) bool) (Prod gen_var_822 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_823 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_824 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) (App ExportProof.binary_intersection gen_var_37 gen_var_727) (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) (App ExportProof.binary_intersection gen_var_37 gen_var_727)) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_37 gen_var_824) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_825 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_825)) gen_var_728)) (App ExportProof.binary_intersection gen_var_824 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_728)) gen_var_731) (App ExportProof.binary_intersection gen_var_824 (App ExportProof.binary_intersection gen_var_727 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_728))) (App ExportProof.binary_intersection gen_var_824 (App ExportProof.binary_intersection gen_var_727 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_728))) (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Reflexive (App ExportProof.binary_intersection gen_var_824 (App ExportProof.binary_intersection gen_var_727 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_728)))))) gen_var_729 (LetIn gen_var_1123 (App Coq.Init.Datatypes.list_ind ExportProof.set (Lambda gen_var_827 (App list ExportProof.set) (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_827) (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_827)))) (Cast (Cast (Lambda gen_var_828 (Axiom ExportProof.X) (Cast (LetIn gen_var_829 (App gen_var_37 gen_var_828) bool (Case 0 (Lambda gen_var_830 bool (App eq bool gen_var_830 (Case 0 (Lambda gen_var_831 bool bool) (CaseMatch gen_var_830) (CaseBranches gen_var_830 false)))) (CaseMatch gen_var_829) (CaseBranches (App eq_refl bool true) (App eq_refl bool false)))) REVERTcast (App eq bool (App gen_var_37 gen_var_828) (App ExportProof.binary_intersection gen_var_37 gen_var_37 gen_var_828)))) REVERTcast (App ExportProof.set_eq gen_var_37 (App ExportProof.binary_intersection gen_var_37 gen_var_37))) REVERTcast (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 (App nil ExportProof.set)) (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 (App nil ExportProof.set))))) (Lambda gen_var_832 ExportProof.set (Lambda gen_var_833 (App list ExportProof.set) (Lambda gen_var_834 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833) (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833))) (Cast (App (Lambda gen_var_835 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833) (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833))) (App Coq.Classes.Morphisms.subrelation_proper (Prod gen_var_836 ExportProof.set (Prod gen_var_837 ExportProof.set (Sort Prop))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set (Sort Prop)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff)) ExportProof.set_eq (App Coq.Classes.Morphisms.PER_morphism ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PER ExportProof.set ExportProof.set_eq ExportProof.Set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_839 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_840 (Axiom ExportProof.X) bool) (Prod gen_var_841 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_842 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_843 (Axiom ExportProof.X) bool) (Prod gen_var_844 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_845 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Sort Prop) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App ExportProof.binary_intersection gen_var_832 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833)) (App ExportProof.binary_intersection gen_var_832 (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_846 ExportProof.set (Prod gen_var_847 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_848 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_849 (Axiom ExportProof.X) bool) (Prod gen_var_850 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_852 ExportProof.set (Prod gen_var_853 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_854 ExportProof.set (Prod gen_var_855 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_856 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_857 (Axiom ExportProof.X) bool) (Prod gen_var_858 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_860 ExportProof.set (Prod gen_var_861 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_863 ExportProof.set (Prod gen_var_864 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_865 ExportProof.set (Prod gen_var_866 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_867 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_868 (Axiom ExportProof.X) bool) (Prod gen_var_869 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_870 (Axiom ExportProof.X) bool) (Prod gen_var_871 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_872 ExportProof.set (Prod gen_var_873 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_874 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_875 (Axiom ExportProof.X) bool) (Prod gen_var_876 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_877 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_878 (Axiom ExportProof.X) bool) (Prod gen_var_879 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_880 (Axiom ExportProof.X) bool) (Prod gen_var_881 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_882 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_883 (Axiom ExportProof.X) bool) (Prod gen_var_884 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_885 (Axiom ExportProof.X) bool) (Prod gen_var_886 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_887 (Axiom ExportProof.X) bool) (Prod gen_var_888 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_889 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_890 (Axiom ExportProof.X) bool) (Prod gen_var_891 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_893 ExportProof.set (Prod gen_var_894 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_895 ExportProof.set (Prod gen_var_896 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_897 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_898 (Axiom ExportProof.X) bool) (Prod gen_var_899 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_900 (Axiom ExportProof.X) bool) (Prod gen_var_901 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_903 ExportProof.set (Prod gen_var_904 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_906 ExportProof.set (Prod gen_var_907 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_908 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_909 (Axiom ExportProof.X) bool) (Prod gen_var_910 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_911 (Axiom ExportProof.X) bool) (Prod gen_var_912 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_913 ExportProof.set (Prod gen_var_914 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_915 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_916 (Axiom ExportProof.X) bool) (Prod gen_var_917 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_918 (Axiom ExportProof.X) bool) (Prod gen_var_919 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_920 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_921 (Axiom ExportProof.X) bool) (Prod gen_var_922 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_923 (Axiom ExportProof.X) bool) (Prod gen_var_924 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_925 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_926 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) gen_var_832 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) gen_var_832) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833) (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833)) gen_var_835) (App ExportProof.binary_intersection gen_var_37 (App ExportProof.binary_intersection gen_var_832 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833))) (App ExportProof.binary_intersection gen_var_37 (App ExportProof.binary_intersection gen_var_832 (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833)))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_927 ExportProof.set (Prod gen_var_928 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_929 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_930 (Axiom ExportProof.X) bool) (Prod gen_var_931 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_933 ExportProof.set (Prod gen_var_934 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_936 ExportProof.set (Prod gen_var_937 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_938 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_939 (Axiom ExportProof.X) bool) (Prod gen_var_940 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq)) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_941 ExportProof.set (Prod gen_var_942 (Axiom ExportProof.X) bool)) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_943 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_944 (Axiom ExportProof.X) bool) (Prod gen_var_945 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_946 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_947 (Axiom ExportProof.X) bool) (Prod gen_var_948 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_949 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_950 (Axiom ExportProof.X) bool) ExportProof.set_eq)))) gen_var_37 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Reflexive gen_var_37) (App ExportProof.binary_intersection gen_var_832 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833)) (App ExportProof.binary_intersection gen_var_832 (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_951 ExportProof.set (Prod gen_var_952 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_953 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_954 (Axiom ExportProof.X) bool) (Prod gen_var_955 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_957 ExportProof.set (Prod gen_var_958 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_959 ExportProof.set (Prod gen_var_960 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_961 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_962 (Axiom ExportProof.X) bool) (Prod gen_var_963 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_965 ExportProof.set (Prod gen_var_966 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_968 ExportProof.set (Prod gen_var_969 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_970 ExportProof.set (Prod gen_var_971 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_972 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_973 (Axiom ExportProof.X) bool) (Prod gen_var_974 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_975 (Axiom ExportProof.X) bool) (Prod gen_var_976 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_977 ExportProof.set (Prod gen_var_978 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_979 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_980 (Axiom ExportProof.X) bool) (Prod gen_var_981 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_982 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_983 (Axiom ExportProof.X) bool) (Prod gen_var_984 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_985 (Axiom ExportProof.X) bool) (Prod gen_var_986 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_987 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_988 (Axiom ExportProof.X) bool) (Prod gen_var_989 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_990 (Axiom ExportProof.X) bool) (Prod gen_var_991 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_992 (Axiom ExportProof.X) bool) (Prod gen_var_993 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_994 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_995 (Axiom ExportProof.X) bool) (Prod gen_var_996 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_998 ExportProof.set (Prod gen_var_999 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1000 ExportProof.set (Prod gen_var_1001 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1002 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1003 (Axiom ExportProof.X) bool) (Prod gen_var_1004 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1005 (Axiom ExportProof.X) bool) (Prod gen_var_1006 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1008 ExportProof.set (Prod gen_var_1009 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1011 ExportProof.set (Prod gen_var_1012 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1013 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1014 (Axiom ExportProof.X) bool) (Prod gen_var_1015 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1016 (Axiom ExportProof.X) bool) (Prod gen_var_1017 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1018 ExportProof.set (Prod gen_var_1019 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1020 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1021 (Axiom ExportProof.X) bool) (Prod gen_var_1022 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1023 (Axiom ExportProof.X) bool) (Prod gen_var_1024 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1025 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1026 (Axiom ExportProof.X) bool) (Prod gen_var_1027 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1028 (Axiom ExportProof.X) bool) (Prod gen_var_1029 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_1030 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1031 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) gen_var_832 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) gen_var_832) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833) (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833)) gen_var_835)))) gen_var_834 (Cast (Lambda gen_var_1118 (Axiom ExportProof.X) (Cast (LetIn gen_var_1120 (App gen_var_832 gen_var_1032) bool (Case 0 (Lambda gen_var_1064 bool (App eq bool (Case 0 (Lambda gen_var_1035 bool bool) (CaseMatch gen_var_1034) (CaseBranches (Case 0 (Lambda gen_var_1036 bool bool) (CaseMatch (App gen_var_37 gen_var_1032)) (CaseBranches (App (Fix (Functions (App gen_var_1037 0 (Prod gen_var_1038 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1043 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1043 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1043) (CaseBranches gen_var_37 (Lambda gen_var_1046 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1048 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1050 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1051 bool bool) (CaseMatch (App gen_var_1046 gen_var_1050)) (CaseBranches (App gen_var_1037 gen_var_1048 gen_var_1050) false)))))))))) 0) gen_var_833 gen_var_1050) false)) false)) (Case 0 (Lambda gen_var_1052 bool bool) (CaseMatch (App gen_var_37 gen_var_1050)) (CaseBranches (Case 0 (Lambda gen_var_1053 bool bool) (CaseMatch gen_var_1046) (CaseBranches (Case 0 (Lambda gen_var_1054 bool bool) (CaseMatch (App gen_var_37 gen_var_1050)) (CaseBranches (App (Fix (Functions (App gen_var_1055 0 (Prod gen_var_1056 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1061 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1061 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1061) (CaseBranches gen_var_37 (Lambda gen_var_1064 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1066 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1068 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1069 bool bool) (CaseMatch (App gen_var_1064 gen_var_1068)) (CaseBranches (App gen_var_1055 gen_var_1066 gen_var_1068) false)))))))))) 0) gen_var_833 gen_var_1068) false)) false)) false)))) (CaseMatch gen_var_1033) (CaseBranches (LetIn gen_var_1070 (App gen_var_37 gen_var_1068) bool (Case 0 (Lambda gen_var_1099 bool (App eq bool (Case 0 (Lambda gen_var_1072 bool bool) (CaseMatch gen_var_1071) (CaseBranches (App (Fix (Functions (App gen_var_1073 0 (Prod gen_var_1074 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1079 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1079 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1079) (CaseBranches gen_var_37 (Lambda gen_var_1082 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1084 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1086 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1087 bool bool) (CaseMatch (App gen_var_1082 gen_var_1086)) (CaseBranches (App gen_var_1073 gen_var_1084 gen_var_1086) false)))))))))) 0) gen_var_833 gen_var_1086) false)) (Case 0 (Lambda gen_var_1088 bool bool) (CaseMatch gen_var_1082) (CaseBranches (Case 0 (Lambda gen_var_1089 bool bool) (CaseMatch gen_var_1082) (CaseBranches (App (Fix (Functions (App gen_var_1090 0 (Prod gen_var_1091 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1096 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1096 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1096) (CaseBranches gen_var_37 (Lambda gen_var_1099 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1101 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1103 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1104 bool bool) (CaseMatch (App gen_var_1099 gen_var_1103)) (CaseBranches (App gen_var_1090 gen_var_1101 gen_var_1103) false)))))))))) 0) gen_var_833 gen_var_1103) false)) false)))) (CaseMatch gen_var_1070) (CaseBranches (App eq_refl bool (App (Fix (Functions (App gen_var_1105 0 (Prod gen_var_1106 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1111 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1111 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1111) (CaseBranches gen_var_37 (Lambda gen_var_1114 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1116 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1118 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1119 bool bool) (CaseMatch (App gen_var_1114 gen_var_1118)) (CaseBranches (App gen_var_1105 gen_var_1116 gen_var_1118) false)))))))))) 0) gen_var_833 gen_var_1118)) (App eq_refl bool false)))) (LetIn gen_var_1120 (App gen_var_37 gen_var_1118) bool (Case 0 (Lambda gen_var_1121 bool (App eq bool false (Case 0 (Lambda gen_var_1122 bool bool) (CaseMatch gen_var_1121) (CaseBranches false false)))) (CaseMatch gen_var_1120) (CaseBranches (App eq_refl bool false) (App eq_refl bool false))))))) REVERTcast (App eq bool (App ExportProof.binary_intersection gen_var_832 (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833)) gen_var_1118) (App ExportProof.binary_intersection gen_var_37 (App ExportProof.binary_intersection gen_var_832 (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833))) gen_var_1118)))) REVERTcast (App ExportProof.set_eq (App ExportProof.binary_intersection gen_var_832 (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833))) (App ExportProof.binary_intersection gen_var_37 (App ExportProof.binary_intersection gen_var_832 (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833))))))) REVERTcast (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 (App cons ExportProof.set gen_var_832 gen_var_833)) (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 (App cons ExportProof.set gen_var_832 gen_var_833)))))))) gen_var_833) (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833) (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833))) (App (Lambda gen_var_1123 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833) (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833))) (App (Lambda gen_var_1124 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833) (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833))) (App Coq.Classes.Morphisms.subrelation_proper (Prod gen_var_1125 ExportProof.set (Prod gen_var_1126 ExportProof.set (Sort Prop))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set (Sort Prop)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff)) ExportProof.set_eq (App Coq.Classes.Morphisms.PER_morphism ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PER ExportProof.set ExportProof.set_eq ExportProof.Set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1128 ExportProof.set (Sort Prop)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1129 ExportProof.set (Sort Prop)) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Sort Prop) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_37 gen_var_727) (App ExportProof.binary_intersection gen_var_1118 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833))) (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_37 gen_var_727) (App ExportProof.binary_intersection gen_var_1118 (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833)))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1130 ExportProof.set (Prod gen_var_1131 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1132 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1133 (Axiom ExportProof.X) bool) (Prod gen_var_1134 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1136 ExportProof.set (Prod gen_var_1137 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1139 ExportProof.set (Prod gen_var_1140 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1141 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1142 (Axiom ExportProof.X) bool) (Prod gen_var_1143 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq)) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1144 ExportProof.set (Prod gen_var_1145 (Axiom ExportProof.X) bool)) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1146 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1147 (Axiom ExportProof.X) bool) (Prod gen_var_1148 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1149 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1150 (Axiom ExportProof.X) bool) (Prod gen_var_1151 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_1152 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1153 (Axiom ExportProof.X) bool) ExportProof.set_eq)))) (App ExportProof.binary_intersection gen_var_37 gen_var_727) (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Reflexive (App ExportProof.binary_intersection gen_var_37 gen_var_727)) (App ExportProof.binary_intersection gen_var_1153 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833)) (App ExportProof.binary_intersection gen_var_1153 (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1154 ExportProof.set (Prod gen_var_1155 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1156 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1157 (Axiom ExportProof.X) bool) (Prod gen_var_1158 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_1160 ExportProof.set (Prod gen_var_1161 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1162 ExportProof.set (Prod gen_var_1163 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1164 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1165 (Axiom ExportProof.X) bool) (Prod gen_var_1166 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_1168 ExportProof.set (Prod gen_var_1169 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_1171 ExportProof.set (Prod gen_var_1172 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1173 ExportProof.set (Prod gen_var_1174 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1175 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1176 (Axiom ExportProof.X) bool) (Prod gen_var_1177 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1178 (Axiom ExportProof.X) bool) (Prod gen_var_1179 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1180 ExportProof.set (Prod gen_var_1181 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1182 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1183 (Axiom ExportProof.X) bool) (Prod gen_var_1184 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1185 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1186 (Axiom ExportProof.X) bool) (Prod gen_var_1187 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1188 (Axiom ExportProof.X) bool) (Prod gen_var_1189 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1190 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1191 (Axiom ExportProof.X) bool) (Prod gen_var_1192 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1193 (Axiom ExportProof.X) bool) (Prod gen_var_1194 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1195 (Axiom ExportProof.X) bool) (Prod gen_var_1196 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_1197 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1198 (Axiom ExportProof.X) bool) (Prod gen_var_1199 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_1201 ExportProof.set (Prod gen_var_1202 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1203 ExportProof.set (Prod gen_var_1204 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1205 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1206 (Axiom ExportProof.X) bool) (Prod gen_var_1207 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1208 (Axiom ExportProof.X) bool) (Prod gen_var_1209 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1211 ExportProof.set (Prod gen_var_1212 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1214 ExportProof.set (Prod gen_var_1215 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1216 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1217 (Axiom ExportProof.X) bool) (Prod gen_var_1218 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1219 (Axiom ExportProof.X) bool) (Prod gen_var_1220 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1221 ExportProof.set (Prod gen_var_1222 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1223 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1224 (Axiom ExportProof.X) bool) (Prod gen_var_1225 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1226 (Axiom ExportProof.X) bool) (Prod gen_var_1227 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1228 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1229 (Axiom ExportProof.X) bool) (Prod gen_var_1230 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1231 (Axiom ExportProof.X) bool) (Prod gen_var_1232 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_1233 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1234 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) gen_var_1234 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) gen_var_1234) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833) (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833)) gen_var_1124)) (App ExportProof.binary_intersection gen_var_1234 (App ExportProof.binary_intersection gen_var_727 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833))) (App ExportProof.binary_intersection gen_var_1234 (App ExportProof.binary_intersection gen_var_727 (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833)))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1235 ExportProof.set (Prod gen_var_1236 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1237 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1238 (Axiom ExportProof.X) bool) (Prod gen_var_1239 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1241 ExportProof.set (Prod gen_var_1242 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1244 ExportProof.set (Prod gen_var_1245 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1246 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1247 (Axiom ExportProof.X) bool) (Prod gen_var_1248 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq)) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1249 ExportProof.set (Prod gen_var_1250 (Axiom ExportProof.X) bool)) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1251 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1252 (Axiom ExportProof.X) bool) (Prod gen_var_1253 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1254 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1255 (Axiom ExportProof.X) bool) (Prod gen_var_1256 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_1257 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1258 (Axiom ExportProof.X) bool) ExportProof.set_eq)))) gen_var_1258 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Reflexive gen_var_1258) (App ExportProof.binary_intersection gen_var_727 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833)) (App ExportProof.binary_intersection gen_var_727 (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1259 ExportProof.set (Prod gen_var_1260 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1261 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1262 (Axiom ExportProof.X) bool) (Prod gen_var_1263 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_1265 ExportProof.set (Prod gen_var_1266 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1267 ExportProof.set (Prod gen_var_1268 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1269 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1270 (Axiom ExportProof.X) bool) (Prod gen_var_1271 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_1273 ExportProof.set (Prod gen_var_1274 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_1276 ExportProof.set (Prod gen_var_1277 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1278 ExportProof.set (Prod gen_var_1279 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1280 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1281 (Axiom ExportProof.X) bool) (Prod gen_var_1282 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1283 (Axiom ExportProof.X) bool) (Prod gen_var_1284 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1285 ExportProof.set (Prod gen_var_1286 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1287 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1288 (Axiom ExportProof.X) bool) (Prod gen_var_1289 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1290 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1291 (Axiom ExportProof.X) bool) (Prod gen_var_1292 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1293 (Axiom ExportProof.X) bool) (Prod gen_var_1294 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1295 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1296 (Axiom ExportProof.X) bool) (Prod gen_var_1297 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1298 (Axiom ExportProof.X) bool) (Prod gen_var_1299 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1300 (Axiom ExportProof.X) bool) (Prod gen_var_1301 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_1302 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1303 (Axiom ExportProof.X) bool) (Prod gen_var_1304 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_1306 ExportProof.set (Prod gen_var_1307 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1308 ExportProof.set (Prod gen_var_1309 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1310 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1311 (Axiom ExportProof.X) bool) (Prod gen_var_1312 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1313 (Axiom ExportProof.X) bool) (Prod gen_var_1314 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1316 ExportProof.set (Prod gen_var_1317 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1319 ExportProof.set (Prod gen_var_1320 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1321 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1322 (Axiom ExportProof.X) bool) (Prod gen_var_1323 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1324 (Axiom ExportProof.X) bool) (Prod gen_var_1325 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1326 ExportProof.set (Prod gen_var_1327 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1328 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1329 (Axiom ExportProof.X) bool) (Prod gen_var_1330 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1331 (Axiom ExportProof.X) bool) (Prod gen_var_1332 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1333 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1334 (Axiom ExportProof.X) bool) (Prod gen_var_1335 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1336 (Axiom ExportProof.X) bool) (Prod gen_var_1337 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_1338 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1339 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) gen_var_727 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) gen_var_727) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833) (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833)) gen_var_1124)))) gen_var_1123 (Cast (Lambda gen_var_1340 (Axiom ExportProof.X) (Cast (LetIn gen_var_1472 (App gen_var_37 gen_var_1340) bool (Case 0 (Lambda gen_var_1374 bool (App eq bool (Case 0 (Lambda gen_var_1343 bool bool) (CaseMatch (Case 0 (Lambda gen_var_1344 bool bool) (CaseMatch gen_var_1342) (CaseBranches (App gen_var_727 gen_var_1340) false))) (CaseBranches (Case 0 (Lambda gen_var_1345 bool bool) (CaseMatch (App gen_var_1339 gen_var_1340)) (CaseBranches (Case 0 (Lambda gen_var_1346 bool bool) (CaseMatch gen_var_1342) (CaseBranches (App (Fix (Functions (App gen_var_1347 0 (Prod gen_var_1348 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1353 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1353 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1353) (CaseBranches gen_var_37 (Lambda gen_var_1356 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1358 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1360 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1361 bool bool) (CaseMatch (App gen_var_1356 gen_var_1360)) (CaseBranches (App gen_var_1347 gen_var_1358 gen_var_1360) false)))))))))) 0) gen_var_833 gen_var_1340) false)) false)) false)) (Case 0 (Lambda gen_var_1362 bool bool) (CaseMatch (App gen_var_1360 gen_var_1340)) (CaseBranches (Case 0 (Lambda gen_var_1363 bool bool) (CaseMatch (App gen_var_727 gen_var_1340)) (CaseBranches (Case 0 (Lambda gen_var_1364 bool bool) (CaseMatch gen_var_1356) (CaseBranches (App (Fix (Functions (App gen_var_1365 0 (Prod gen_var_1366 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1371 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1371 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1371) (CaseBranches gen_var_37 (Lambda gen_var_1374 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1376 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1378 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1379 bool bool) (CaseMatch (App gen_var_1374 gen_var_1378)) (CaseBranches (App gen_var_1365 gen_var_1376 gen_var_1378) false)))))))))) 0) gen_var_833 gen_var_1340) false)) false)) false)))) (CaseMatch gen_var_1341) (CaseBranches (LetIn gen_var_1465 (App gen_var_727 gen_var_1340) bool (Case 0 (Lambda gen_var_1410 bool (App eq bool (Case 0 (Lambda gen_var_1382 bool bool) (CaseMatch gen_var_1381) (CaseBranches (Case 0 (Lambda gen_var_1383 bool bool) (CaseMatch (App gen_var_1378 gen_var_1340)) (CaseBranches (App (Fix (Functions (App gen_var_1384 0 (Prod gen_var_1385 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1390 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1390 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1390) (CaseBranches gen_var_37 (Lambda gen_var_1393 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1395 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1397 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1398 bool bool) (CaseMatch (App gen_var_1393 gen_var_1397)) (CaseBranches (App gen_var_1384 gen_var_1395 gen_var_1397) false)))))))))) 0) gen_var_833 gen_var_1340) false)) false)) (Case 0 (Lambda gen_var_1399 bool bool) (CaseMatch (App gen_var_1397 gen_var_1340)) (CaseBranches (Case 0 (Lambda gen_var_1400 bool bool) (CaseMatch gen_var_1393) (CaseBranches (App (Fix (Functions (App gen_var_1401 0 (Prod gen_var_1402 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1407 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1407 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1407) (CaseBranches gen_var_37 (Lambda gen_var_1410 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1412 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1414 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1415 bool bool) (CaseMatch (App gen_var_1410 gen_var_1414)) (CaseBranches (App gen_var_1401 gen_var_1412 gen_var_1414) false)))))))))) 0) gen_var_833 gen_var_1340) false)) false)))) (CaseMatch gen_var_1380) (CaseBranches (LetIn gen_var_1416 (App gen_var_1414 gen_var_1340) bool (Case 0 (Lambda gen_var_1444 bool (App eq bool (Case 0 (Lambda gen_var_1418 bool bool) (CaseMatch gen_var_1417) (CaseBranches (App (Fix (Functions (App gen_var_1419 0 (Prod gen_var_1420 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1425 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1425 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1425) (CaseBranches gen_var_37 (Lambda gen_var_1428 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1430 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1432 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1433 bool bool) (CaseMatch (App gen_var_1428 gen_var_1432)) (CaseBranches (App gen_var_1419 gen_var_1430 gen_var_1432) false)))))))))) 0) gen_var_833 gen_var_1340) false)) (Case 0 (Lambda gen_var_1434 bool bool) (CaseMatch gen_var_1428) (CaseBranches (App (Fix (Functions (App gen_var_1435 0 (Prod gen_var_1436 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1441 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1441 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1441) (CaseBranches gen_var_37 (Lambda gen_var_1444 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1446 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1448 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1449 bool bool) (CaseMatch (App gen_var_1444 gen_var_1448)) (CaseBranches (App gen_var_1435 gen_var_1446 gen_var_1448) false)))))))))) 0) gen_var_833 gen_var_1340) false)))) (CaseMatch gen_var_1416) (CaseBranches (App eq_refl bool (App (Fix (Functions (App gen_var_1450 0 (Prod gen_var_1451 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1456 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1456 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1456) (CaseBranches gen_var_37 (Lambda gen_var_1459 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1461 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1463 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1464 bool bool) (CaseMatch (App gen_var_1459 gen_var_1463)) (CaseBranches (App gen_var_1450 gen_var_1461 gen_var_1463) false)))))))))) 0) gen_var_833 gen_var_1340)) (App eq_refl bool false)))) (LetIn gen_var_1465 (App gen_var_1463 gen_var_1340) bool (Case 0 (Lambda gen_var_1466 bool (App eq bool false (Case 0 (Lambda gen_var_1467 bool bool) (CaseMatch gen_var_1466) (CaseBranches false false)))) (CaseMatch gen_var_1465) (CaseBranches (App eq_refl bool false) (App eq_refl bool false))))))) (LetIn gen_var_1472 (App gen_var_1463 gen_var_1340) bool (Case 0 (Lambda gen_var_1469 bool (App eq bool false (Case 0 (Lambda gen_var_1470 bool bool) (CaseMatch gen_var_1469) (CaseBranches (Case 0 (Lambda gen_var_1471 bool bool) (CaseMatch (App gen_var_727 gen_var_1340)) (CaseBranches false false)) false)))) (CaseMatch gen_var_1468) (CaseBranches (LetIn gen_var_1472 (App gen_var_727 gen_var_1340) bool (Case 0 (Lambda gen_var_1473 bool (App eq bool false (Case 0 (Lambda gen_var_1474 bool bool) (CaseMatch gen_var_1473) (CaseBranches false false)))) (CaseMatch gen_var_1472) (CaseBranches (App eq_refl bool false) (App eq_refl bool false)))) (App eq_refl bool false))))))) REVERTcast (App eq bool (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_37 gen_var_727) (App ExportProof.binary_intersection gen_var_1463 (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833))) gen_var_1340) (App ExportProof.binary_intersection gen_var_1463 (App ExportProof.binary_intersection gen_var_727 (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833))) gen_var_1340)))) REVERTcast (App ExportProof.set_eq (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_37 gen_var_727) (App ExportProof.binary_intersection gen_var_1463 (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833)))) (App ExportProof.binary_intersection gen_var_1463 (App ExportProof.binary_intersection gen_var_727 (App ExportProof.binary_intersection gen_var_37 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 gen_var_833)))))))) gen_var_1123))) REVERTcast (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_37 gen_var_1463) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1475 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1475)) (App cons ExportProof.set gen_var_727 gen_var_833))) (App ExportProof.binary_intersection gen_var_1463 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_37 (App cons ExportProof.set gen_var_727 gen_var_833)))))))) gen_var_833)) REVERTcast (App eq Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1463) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1476 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1476)) gen_var_833)))) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833)))))) (App eq Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1463) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1477 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1477)) gen_var_833)))) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833))))) (App (Lambda gen_var_1478 (App eq Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1463) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1479 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1479)) gen_var_833)))) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833))))) (App Coq.Init.Logic.eq_ind_r Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833)))) (Lambda gen_var_1480 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul gen_var_1480 (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_833))) (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_833)) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833))))))) (Cast (LetIn gen_var_1481 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_1482 (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_833)) (App nil Z))) (App list Z) (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma1 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1482 gen_var_1481 (App PEmul Z (App PEX Z xH) (App PEX Z (App xO xH))) (App PEmul Z (App PEX Z (App xO xH)) (App PEX Z xH)) I (Cast (App eq_refl bool true) VMcast (App eq bool (LetIn gen_var_1483 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_1481) (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.Peq Z Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1483 (App PEmul Z (App PEX Z xH) (App PEX Z (App xO xH)))) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1483 (App PEmul Z (App PEX Z (App xO xH)) (App PEX Z xH))))) true))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833)))) (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_833))) (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_833)) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833))))))) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1463) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1484 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1484)) gen_var_833)))) gen_var_1478)) gen_var_1478)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_833))))))) gen_var_706)))) (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1463) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1485 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1485)) gen_var_833)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_833))))) gen_var_699))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_683 (App cons Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1463) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1487 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1487)) gen_var_833)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_833))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_833))))))) (App nil Z)))) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1463) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1488 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1488)) gen_var_833)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_833))))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_833)))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_683 gen_var_683) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1463) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1490 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1490)) gen_var_833)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_833))))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_833)))))))))) (App eq_refl (App list Z) gen_var_683))) (App Coq.Init.Datatypes.length ExportProof.set (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1491 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1491)) gen_var_833)) (App Coq.Lists.List.map_length ExportProof.set ExportProof.set (Lambda gen_var_1492 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1492)) gen_var_833)) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1463) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1493 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1493)) gen_var_833)))) (App ExportProof.alternating_sign (App Coq.Init.Nat.add (App S O) (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1463) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1494 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1494)) gen_var_833)))))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833)))) (App ExportProof.alternating_sign (App Coq.Init.Nat.add (App S O) (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833))))))))) REVERTcast (App eq Z (App gen_var_2 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1463) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1495 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1495)) gen_var_833))) (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833)))))) (App eq Z (App gen_var_2 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1463) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1496 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1496)) gen_var_833))) (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833))))) (App (Lambda gen_var_1497 (App eq Z (App gen_var_2 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1463) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1498 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1498)) gen_var_833))) (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833))))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833)))) (Lambda gen_var_1499 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.opp gen_var_1499) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1500 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1500))) gen_var_1456))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1501 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1501))) gen_var_1456))))) (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833)))))) (Cast (LetIn gen_var_1502 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_1503 (App cons Z (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1504 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1504))) gen_var_1456)))) (App nil Z))) (App list Z) (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma1 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1503 gen_var_1502 (App PEsub Z (App PEopp Z (App PEopp Z (App PEX Z xH))) (App PEX Z (App xO xH))) (App PEadd Z (App PEopp Z (App PEX Z (App xO xH))) (App PEX Z xH)) I (Cast (App eq_refl bool true) VMcast (App eq bool (LetIn gen_var_1505 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_1502) (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.Peq Z Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1505 (App PEsub Z (App PEopp Z (App PEopp Z (App PEX Z xH))) (App PEX Z (App xO xH)))) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1505 (App PEadd Z (App PEopp Z (App PEX Z (App xO xH))) (App PEX Z xH))))) true))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1506 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1506))) gen_var_1456))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1507 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1507))) gen_var_1456))))) (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833)))))) (App gen_var_2 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1463) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1508 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1508)) gen_var_833))) gen_var_1497)) gen_var_1497)) (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1509 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1509))) gen_var_1456)))))) gen_var_706)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1463) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1510 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1510)) gen_var_833))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1511 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1511))) gen_var_1456)))))) gen_var_699))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_683 (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1463) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1513 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1513)) gen_var_833))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1514 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1514))) gen_var_1456)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1515 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1515))) gen_var_1456)))))) (App nil Z)))) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1463) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1516 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1516)) gen_var_833))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1517 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1517))) gen_var_1456)))))) (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1518 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1518))) gen_var_1456))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_683 gen_var_683) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1463) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1520 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1520)) gen_var_833))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1521 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1521))) gen_var_1456)))))) (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2 (App cons ExportProof.set gen_var_37 (App cons ExportProof.set gen_var_1463 gen_var_833))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1522 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1522))) gen_var_1456))))))))) (App eq_refl (App list Z) gen_var_683))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1523 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1523)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1523)))) gen_var_613) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (Case 0 (Lambda gen_var_1524 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1525 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1525)) (App cons ExportProof.set gen_var_1463 gen_var_833)))) (CaseBranches (App cons (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1526 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1526)) (App cons ExportProof.set gen_var_1463 gen_var_833)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1527 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1527))) gen_var_1523))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1528 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1528))) gen_var_1523))))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1529 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1529)) (Case 0 (Lambda gen_var_1530 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App cons ExportProof.set gen_var_1463 gen_var_833))) (CaseBranches (App cons (App list ExportProof.set) (App cons ExportProof.set gen_var_1463 gen_var_833) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1529)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1529)))))))))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1531 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1531))) (App cons (App list ExportProof.set) gen_var_1531 gen_var_1529)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1532 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1532)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App cons (App list ExportProof.set) gen_var_1531 gen_var_1532)))))))))) gen_var_1532))) (App ExportProof.sublists ExportProof.set gen_var_1532)) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1533 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1533)) gen_var_1532)) (App ExportProof.sublists_map ExportProof.set ExportProof.set (Lambda gen_var_1534 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1534)) gen_var_1532)) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1535 (Axiom ExportProof.X) bool) (Lambda gen_var_1536 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1536)) gen_var_1532)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1537 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1537)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1537)))))) (App (LetIn gen_var_1539 (App eq_refl Z (App ExportProof.cardinal gen_var_37)) (App eq Z (App ExportProof.cardinal gen_var_37) (App ExportProof.cardinal gen_var_37)) (App (Lambda gen_var_1539 (App eq Z (App ExportProof.cardinal gen_var_37) (App ExportProof.cardinal gen_var_37)) (Lambda gen_var_1540 (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1541 (Axiom ExportProof.X) bool) (Lambda gen_var_1542 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1542)) gen_var_1537)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1543 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1543)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1543)))))) (App Coq.Init.Logic.eq_trans Z (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_37) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1545 (Sort Set) (Lambda gen_var_1545 (Sort Set) (Prod Anonymous gen_var_1545 gen_var_1545))) (Axiom ExportProof.X) bool) (Lambda gen_var_1547 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1547)) gen_var_1543))))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_37) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1549 (Sort Set) (Lambda gen_var_1549 (Sort Set) (Prod Anonymous gen_var_1549 gen_var_1549))) (Axiom ExportProof.X) bool) (Lambda gen_var_1551 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1551)) gen_var_1543))))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1552 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1552)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1552)))))) (App Coq.Init.Logic.f_equal (Prod gen_var_1553 Z Z) Z (Lambda gen_var_1554 (Prod gen_var_1555 Z Z) (App gen_var_1554 (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1557 (Sort Set) (Lambda gen_var_1557 (Sort Set) (Prod Anonymous gen_var_1557 gen_var_1557))) (Axiom ExportProof.X) bool) (Lambda gen_var_1559 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1559)) gen_var_1552)))))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_37)) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_37)) (App eq_refl (Prod gen_var_1560 Z Z) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_37)))) (App Coq.Init.Logic.f_equal Z Z (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_37)) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1562 (Sort Set) (Lambda gen_var_1562 (Sort Set) (Prod Anonymous gen_var_1562 gen_var_1562))) (Axiom ExportProof.X) bool) (Lambda gen_var_1564 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1564)) gen_var_1552)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1565 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1565)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1565))))) gen_var_1540)))) gen_var_1539)) gen_var_1539)) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1566 (Axiom ExportProof.X) bool) (Lambda gen_var_1567 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1567)) gen_var_1565)))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1568 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1568)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1568)))))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_37) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1569 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1569)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1569)))))) gen_var_706)))))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_683 (App cons Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1571 (Axiom ExportProof.X) bool) (Lambda gen_var_1572 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1572)) gen_var_1569)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_37) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1573 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1573)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1573)))))) (App nil Z)))) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1574 (Axiom ExportProof.X) bool) (Lambda gen_var_1575 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1575)) gen_var_1573)))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_37) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1576 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1576)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1576))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_683 gen_var_683) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1578 (Axiom ExportProof.X) bool) (Lambda gen_var_1579 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1579)) gen_var_1576)))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_37) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1580 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1580)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1580))))))))) (App eq_refl (App list Z) gen_var_683))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1581 (Axiom ExportProof.X) bool) (Lambda gen_var_1582 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1582)) gen_var_1580)))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_37 (App nil ExportProof.set)))) (App ExportProof.alternating_sign (App Coq.Init.Nat.add (App S O) (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set gen_var_37 (App nil ExportProof.set)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1583 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1583)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1583)))))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1584 (Axiom ExportProof.X) bool) (Lambda gen_var_1585 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1585)) gen_var_1583)))))) (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2 (App cons ExportProof.set gen_var_37 (App nil ExportProof.set))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1586 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1586)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1586)))))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1587 (Axiom ExportProof.X) bool) (Lambda gen_var_1588 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1588)) gen_var_1586)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1589 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1589)) (App cons (App list ExportProof.set) (App nil ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1589)))))))) (App ExportProof.sublists ExportProof.set gen_var_1589) (App ExportProof.sublists_proper ExportProof.set gen_var_1589)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1590 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1590)) (App ExportProof.sublists ExportProof.set gen_var_1590))) (App ExportProof.filter_map_always (App list ExportProof.set) (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (Lambda gen_var_1591 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1591)) (App ExportProof.sublists ExportProof.set gen_var_1591) (Lambda gen_var_1592 (App list ExportProof.set) (App eq_refl bool true)))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_55))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1593 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1593)) (App ExportProof.sublists ExportProof.set gen_var_1593))))))) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_55))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1594 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1594)) (App ExportProof.sublists ExportProof.set gen_var_1594)))))) (App (Lambda gen_var_1595 (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_55))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1596 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1596)) (App ExportProof.sublists ExportProof.set gen_var_1596)))))) (App Coq.Init.Logic.eq_ind Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_55))))) (Lambda gen_var_1597 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1596))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_55))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1596)))) gen_var_1597))) (Cast (LetIn gen_var_1598 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_1599 (App cons Z (App ExportProof.cardinal gen_var_37) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1596)))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_55)))) (App nil Z)))) (App list Z) (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma1 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1599 gen_var_1598 (App PEsub Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH))) (App PEX Z (App xI xH))) (App PEadd Z (App PEX Z (App xO xH)) (App PEsub Z (App PEX Z xH) (App PEX Z (App xI xH)))) I (Cast (App eq_refl bool true) VMcast (App eq bool (LetIn gen_var_1600 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_1598) (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.Peq Z Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1600 (App PEsub Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH))) (App PEX Z (App xI xH)))) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1600 (App PEadd Z (App PEX Z (App xO xH)) (App PEsub Z (App PEX Z xH) (App PEX Z (App xI xH))))))) true))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1596))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_55))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1596)))) (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_37) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_55)))))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1601 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1601)) (App ExportProof.sublists ExportProof.set gen_var_1601))))) gen_var_1595)) gen_var_1595)) (App ExportProof.cardinal (App ExportProof.list_union gen_var_55)) (App gen_var_25 gen_var_55 (Cast (App Coq.Init.Logic.eq_ind_r nat (App Coq.Init.Datatypes.length ExportProof.set gen_var_1601) (Lambda gen_var_1602 nat (App eq nat gen_var_1602 gen_var_1602)) gen_var_44 (App Coq.Init.Datatypes.length (Prod gen_var_1603 (Axiom ExportProof.X) bool) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1604 (Axiom ExportProof.X) bool) (Lambda gen_var_1605 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1605)) gen_var_1601)) (App Coq.Lists.List.map_length ExportProof.set (Prod gen_var_1606 (Axiom ExportProof.X) bool) (Lambda gen_var_1607 ExportProof.set (App ExportProof.binary_intersection gen_var_37 gen_var_1607)) gen_var_1601)) REVERTcast (App eq nat gen_var_1602 (App Coq.Init.Datatypes.length ExportProof.set gen_var_55))))) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_37 (App ExportProof.list_union gen_var_1601))) gen_var_1595))) (App ExportProof.cardinal (App ExportProof.list_union gen_var_1601)) (App gen_var_25 gen_var_1601 gen_var_44)) (App ExportProof.sum (App Coq.Init.Datatypes.app Z (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1601))) (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1608 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1608)) (App ExportProof.sublists ExportProof.set gen_var_1608)))))) (App ExportProof.sum_app (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1608))) (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1609 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1609)) (App ExportProof.sublists ExportProof.set gen_var_1609)))))) (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Init.Datatypes.app (App list ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1609)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1610 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1610)) (App ExportProof.sublists ExportProof.set gen_var_1610))))) (App Coq.Lists.List.map_app (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1610)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1611 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1611)) (App ExportProof.sublists ExportProof.set gen_var_1611))))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Init.Datatypes.app (App list ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1611) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1612 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1612)) (App ExportProof.sublists ExportProof.set gen_var_1612)))) (App ExportProof.filter_app (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1612) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1613 (App list ExportProof.set) (App cons ExportProof.set gen_var_37 gen_var_1613)) (App ExportProof.sublists ExportProof.set gen_var_1613)))) (App ExportProof.cardinal (App ExportProof.binary_union gen_var_37 (App ExportProof.list_union gen_var_1613))) (App ExportProof.cardinal_binary_union gen_var_37 (App ExportProof.list_union gen_var_1613))) REVERTcast (App eq Z (App ExportProof.cardinal (App ExportProof.list_union (App cons ExportProof.set gen_var_37 gen_var_1613))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App cons ExportProof.set gen_var_37 gen_var_1613)))))))) gen_var_1595))))))) gen_var_44))))) gen_var_1602 gen_var_1613 gen_var_27)))))) 