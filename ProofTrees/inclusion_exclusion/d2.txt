(Definition ExportProof.set (Prod Anonymous (Axiom ExportProof.X) bool)) (Definition Coq.ZArith.BinIntDef.Z.mul (Lambda gen_var_7 Z (Lambda gen_var_13 Z (Case 0 (Lambda gen_var_7 Z Z) (CaseMatch gen_var_7) (CaseBranches Z0 (Lambda gen_var_8 positive (Case 0 (Lambda gen_var_9 Z Z) (CaseMatch gen_var_9) (CaseBranches Z0 (Lambda gen_var_10 positive (App Zpos (App Coq.PArith.BinPosDef.Pos.mul gen_var_8 gen_var_10))) (Lambda gen_var_11 positive (App Zneg (App Coq.PArith.BinPosDef.Pos.mul gen_var_8 gen_var_11)))))) (Lambda gen_var_12 positive (Case 0 (Lambda gen_var_13 Z Z) (CaseMatch gen_var_13) (CaseBranches Z0 (Lambda gen_var_14 positive (App Zneg (App Coq.PArith.BinPosDef.Pos.mul gen_var_12 gen_var_14))) (Lambda gen_var_15 positive (App Zpos (App Coq.PArith.BinPosDef.Pos.mul gen_var_12 gen_var_15))))))))))) (Definition ExportProof.cardinal (Lambda gen_var_16 ExportProof.set (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_16 (Axiom ExportProof.enum_X)))))) (Definition ExportProof.list_intersection (Lambda gen_var_17 (App list ExportProof.set) (App ExportProof.fold1 ExportProof.set ExportProof.binary_intersection gen_var_17 ExportProof.empty_set))) (Definition ExportProof.alternating_sign (Fix (Functions (App gen_var_18 0 (Prod gen_var_19 nat Z) (Lambda gen_var_22 nat (Case 0 (Lambda gen_var_21 nat Z) (CaseMatch gen_var_21) (CaseBranches (App Zpos xH) (Lambda gen_var_22 nat (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_18 gen_var_22)))))))) 0)) (Definition Coq.Init.Nat.add (Fix (Functions (App gen_var_23 0 (Prod gen_var_24 nat (Prod gen_var_25 nat nat)) (Lambda gen_var_28 nat (Lambda gen_var_27 nat (Case 0 (Lambda gen_var_28 nat nat) (CaseMatch gen_var_28) (CaseBranches gen_var_27 (Lambda gen_var_29 nat (App S (App gen_var_23 gen_var_29 gen_var_27))))))))) 0)) (Definition Coq.Init.Datatypes.length (Lambda gen_var_30 (Sort Type) (Fix (Functions (App gen_var_31 0 (Prod gen_var_32 (App list gen_var_30) nat) (Lambda gen_var_34 (App list gen_var_30) (Case 1 (Lambda gen_var_34 (App list gen_var_30) nat) (CaseMatch gen_var_34) (CaseBranches O (Lambda gen_var_35 gen_var_30 (Lambda gen_var_36 (App list gen_var_30) (App S (App gen_var_31 gen_var_36))))))))) 0))) (Definition Coq.Init.Datatypes.nat_ind (Lambda gen_var_40 (Prod gen_var_41 nat (Sort Prop)) (Lambda gen_var_43 (App gen_var_40 O) (Lambda gen_var_43 (Prod gen_var_44 nat (Prod Anonymous (App gen_var_40 gen_var_44) (App gen_var_40 (App S gen_var_44)))) (Fix (Functions (App gen_var_46 0 (Prod gen_var_47 nat (App gen_var_40 gen_var_47)) (Lambda gen_var_50 nat (Case 0 (Lambda gen_var_49 nat (App gen_var_40 gen_var_49)) (CaseMatch gen_var_49) (CaseBranches gen_var_43 (Lambda gen_var_50 nat (App gen_var_43 gen_var_50 (App gen_var_46 gen_var_50)))))))) 0))))) (Definition ExportProof.list_union (Lambda gen_var_54 (App list ExportProof.set) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_union ExportProof.empty_set gen_var_54))) (Definition ExportProof.sum (Fix (Functions (App gen_var_55 0 (Prod gen_var_56 (App list Z) Z) (Lambda gen_var_60 (App list Z) (Case 1 (Lambda gen_var_58 (App list Z) Z) (CaseMatch gen_var_58) (CaseBranches Z0 (Lambda gen_var_59 Z (Lambda gen_var_60 (App list Z) (App Coq.ZArith.BinIntDef.Z.add gen_var_59 (App gen_var_55 gen_var_60))))))))) 0)) (Definition Coq.Lists.List.map (Lambda gen_var_61 (Sort Type) (Lambda gen_var_62 (Sort Type) (Lambda gen_var_63 (Prod Anonymous gen_var_61 gen_var_62) (Fix (Functions (App gen_var_65 0 (Prod gen_var_66 (App list gen_var_61) (App list gen_var_62)) (Lambda gen_var_68 (App list gen_var_61) (Case 1 (Lambda gen_var_68 (App list gen_var_61) (App list gen_var_62)) (CaseMatch gen_var_68) (CaseBranches (App nil gen_var_62) (Lambda gen_var_69 gen_var_61 (Lambda gen_var_70 (App list gen_var_61) (App cons gen_var_62 (App gen_var_63 gen_var_69) (App gen_var_65 gen_var_70))))))))) 0))))) (Definition Coq.Lists.List.filter (Lambda gen_var_71 (Sort Type) (Lambda gen_var_72 (Prod Anonymous gen_var_71 bool) (Fix (Functions (App gen_var_74 0 (Prod gen_var_75 (App list gen_var_71) (App list gen_var_71)) (Lambda gen_var_79 (App list gen_var_71) (Case 1 (Lambda gen_var_77 (App list gen_var_71) (App list gen_var_71)) (CaseMatch gen_var_77) (CaseBranches (App nil gen_var_71) (Lambda gen_var_78 gen_var_71 (Lambda gen_var_79 (App list gen_var_71) (Case 0 (Lambda gen_var_80 bool (App list gen_var_71)) (CaseMatch (App gen_var_72 gen_var_78)) (CaseBranches (App cons gen_var_71 gen_var_78 (App gen_var_74 gen_var_79)) (App gen_var_74 gen_var_79)))))))))) 0)))) (Definition ExportProof.nonempty (Lambda gen_var_81 (Sort Type) (Lambda gen_var_83 (App list gen_var_81) (Case 1 (Lambda gen_var_83 (App list gen_var_81) bool) (CaseMatch gen_var_83) (CaseBranches false (Lambda gen_var_84 gen_var_81 (Lambda gen_var_85 (App list gen_var_81) true))))))) (Definition ExportProof.sublists (Fix (Functions (App gen_var_86 0 (Prod gen_var_87 (Sort Type) (Prod gen_var_88 (App list gen_var_87) (App list (App list gen_var_87)))) (Lambda gen_var_89 (Sort Type) (Lambda gen_var_93 (App list gen_var_89) (Case 1 (Lambda gen_var_91 (App list gen_var_89) (App list (App list gen_var_89))) (CaseMatch gen_var_91) (CaseBranches (App cons (App list gen_var_89) (App nil gen_var_89) (App nil (App list gen_var_89))) (Lambda gen_var_92 gen_var_89 (Lambda gen_var_93 (App list gen_var_89) (LetIn gen_var_94 (App gen_var_86 gen_var_89 gen_var_93) (App list (App list gen_var_89)) (App Coq.Init.Datatypes.app (App list gen_var_89) gen_var_94 (App Coq.Lists.List.map (App list gen_var_89) (App list gen_var_89) (Lambda gen_var_95 (App list gen_var_89) (App cons gen_var_89 gen_var_92 gen_var_95)) gen_var_94))))))))))) 0)) (Definition Coq.Init.Logic.eq_ind_r (Lambda gen_var_101 (Sort Type) (Lambda gen_var_102 gen_var_101 (Lambda gen_var_103 (Prod Anonymous gen_var_101 (Sort Prop)) (Lambda gen_var_105 (App gen_var_103 gen_var_102) (Lambda gen_var_108 gen_var_101 (Lambda gen_var_107 (App eq gen_var_101 gen_var_106 gen_var_102) (App Coq.Init.Logic.eq_ind gen_var_101 gen_var_102 (Lambda gen_var_108 gen_var_101 (App gen_var_103 gen_var_108)) gen_var_105 gen_var_108 (App Coq.Init.Logic.eq_sym gen_var_101 gen_var_108 gen_var_102 gen_var_107))))))))) (Definition ExportProof.empty_set (Lambda Anonymous (Axiom ExportProof.X) false)) (Definition ExportProof.cardinal_empty (Cast (LetIn gen_var_115 (Axiom ExportProof.enum_X) (App list (Axiom ExportProof.X)) (App Coq.Init.Datatypes.list_ind (Axiom ExportProof.X) (Lambda gen_var_112 (App list (Axiom ExportProof.X)) (App eq Z (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda Anonymous (Axiom ExportProof.X) false) gen_var_112))) Z0)) (App eq_refl Z Z0) (Lambda gen_var_114 (Axiom ExportProof.X) (Lambda gen_var_115 (App list (Axiom ExportProof.X)) (Lambda gen_var_116 (App eq Z (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda Anonymous (Axiom ExportProof.X) false) gen_var_115))) Z0) gen_var_116))) gen_var_115)) REVERTcast (App eq Z (App ExportProof.cardinal ExportProof.empty_set) Z0))) (Definition Coq.Lists.List.fold_right (Lambda gen_var_118 (Sort Type) (Lambda gen_var_119 (Sort Type) (Lambda gen_var_120 (Prod Anonymous gen_var_119 (Prod Anonymous gen_var_118 gen_var_118)) (Lambda gen_var_123 gen_var_118 (Fix (Functions (App gen_var_124 0 (Prod gen_var_125 (App list gen_var_119) gen_var_118) (Lambda gen_var_127 (App list gen_var_119) (Case 1 (Lambda gen_var_127 (App list gen_var_119) gen_var_118) (CaseMatch gen_var_127) (CaseBranches gen_var_123 (Lambda gen_var_128 gen_var_119 (Lambda gen_var_129 (App list gen_var_119) (App gen_var_120 gen_var_128 (App gen_var_124 gen_var_129))))))))) 0)))))) (Definition ExportProof.binary_union (Lambda gen_var_130 ExportProof.set (Lambda gen_var_131 ExportProof.set (Lambda gen_var_132 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_130 gen_var_132) (App gen_var_131 gen_var_132)))))) (Definition Coq.Init.Logic.eq_ind (Lambda gen_var_138 (Sort Type) (Lambda gen_var_139 gen_var_138 (Lambda gen_var_140 (Prod Anonymous gen_var_138 (Sort Prop)) (Lambda gen_var_142 (App gen_var_140 gen_var_139) (Lambda gen_var_145 gen_var_138 (Lambda gen_var_144 (App eq gen_var_138 gen_var_139 gen_var_143) (Case 2 (Lambda gen_var_145 gen_var_138 (Lambda Anonymous (App eq gen_var_138 gen_var_139 gen_var_145) (App gen_var_140 gen_var_145))) (CaseMatch gen_var_144) (CaseBranches gen_var_142))))))))) (Definition Coq.Init.Logic.False_ind (Lambda gen_var_150 (Sort Prop) (Lambda gen_var_151 False (Case 0 (Lambda Anonymous False gen_var_150) (CaseMatch gen_var_151) (CaseBranches))))) (Definition Coq.Init.Logic.f_equal (Lambda gen_var_170 (Sort Type) (Lambda gen_var_171 (Sort Type) (Lambda gen_var_172 (Prod Anonymous gen_var_170 gen_var_171) (Lambda gen_var_174 gen_var_170 (Lambda gen_var_177 gen_var_170 (Lambda gen_var_176 (App eq gen_var_170 gen_var_174 gen_var_175) (Case 2 (Lambda gen_var_177 gen_var_170 (Lambda Anonymous (App eq gen_var_170 gen_var_174 gen_var_177) (App eq gen_var_171 (App gen_var_172 gen_var_174) (App gen_var_172 gen_var_177)))) (CaseMatch gen_var_176) (CaseBranches (App eq_refl gen_var_171 (App gen_var_172 gen_var_174))))))))))) (Definition Coq.ZArith.BinIntDef.Z.sub (Lambda gen_var_183 Z (Lambda gen_var_184 Z (App Coq.ZArith.BinIntDef.Z.add gen_var_183 (App Coq.ZArith.BinIntDef.Z.opp gen_var_184))))) (Definition Coq.ZArith.BinIntDef.Z.add (Lambda gen_var_187 Z (Lambda gen_var_193 Z (Case 0 (Lambda gen_var_187 Z Z) (CaseMatch gen_var_187) (CaseBranches gen_var_186 (Lambda gen_var_188 positive (Case 0 (Lambda gen_var_189 Z Z) (CaseMatch gen_var_189) (CaseBranches gen_var_187 (Lambda gen_var_190 positive (App Zpos (App Coq.PArith.BinPosDef.Pos.add gen_var_188 gen_var_190))) (Lambda gen_var_191 positive (App Coq.ZArith.BinIntDef.Z.pos_sub gen_var_188 gen_var_191))))) (Lambda gen_var_192 positive (Case 0 (Lambda gen_var_193 Z Z) (CaseMatch gen_var_193) (CaseBranches gen_var_187 (Lambda gen_var_194 positive (App Coq.ZArith.BinIntDef.Z.pos_sub gen_var_194 gen_var_192)) (Lambda gen_var_195 positive (App Zneg (App Coq.PArith.BinPosDef.Pos.add gen_var_192 gen_var_195))))))))))) (Definition ExportProof.binary_intersection (Lambda gen_var_196 ExportProof.set (Lambda gen_var_197 ExportProof.set (Lambda gen_var_198 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_196 gen_var_198) (App gen_var_197 gen_var_198)))))) (Definition Coq.Init.Datatypes.app (Lambda gen_var_200 (Sort Type) (Fix (Functions (App gen_var_201 0 (Prod gen_var_202 (App list gen_var_200) (Prod gen_var_203 (App list gen_var_200) (App list gen_var_200))) (Lambda gen_var_206 (App list gen_var_200) (Lambda gen_var_205 (App list gen_var_200) (Case 1 (Lambda gen_var_206 (App list gen_var_200) (App list gen_var_200)) (CaseMatch gen_var_206) (CaseBranches gen_var_205 (Lambda gen_var_207 gen_var_200 (Lambda gen_var_208 (App list gen_var_200) (App cons gen_var_200 gen_var_207 (App gen_var_201 gen_var_208 gen_var_205)))))))))) 0))) (Definition ExportProof.cardinal_set_eq (Lambda gen_var_223 ExportProof.set (Lambda gen_var_224 ExportProof.set (Lambda gen_var_225 (App ExportProof.set_eq gen_var_223 gen_var_224) (Cast (LetIn gen_var_243 (LetIn gen_var_230 (Axiom ExportProof.enum_X) (App list (Axiom ExportProof.X)) (App Coq.Init.Datatypes.list_ind (Axiom ExportProof.X) (Lambda gen_var_228 (App list (Axiom ExportProof.X)) (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_223 gen_var_228)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_224 gen_var_228)))) (Cast (App eq_refl nat O) REVERTcast (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_223 (App nil (Axiom ExportProof.X)))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_224 (App nil (Axiom ExportProof.X)))))) (Lambda gen_var_229 (Axiom ExportProof.X) (Lambda gen_var_230 (App list (Axiom ExportProof.X)) (Lambda gen_var_231 (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_223 gen_var_230)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_224 gen_var_230))) (Cast (App Coq.Init.Logic.eq_ind_r bool (App gen_var_224 gen_var_229) (Lambda gen_var_234 bool (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_233 bool (App list (Axiom ExportProof.X))) (CaseMatch gen_var_233) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_229 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_223 gen_var_230)) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_223 gen_var_230)))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_234 bool (App list (Axiom ExportProof.X))) (CaseMatch (App gen_var_224 gen_var_229)) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_229 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_224 gen_var_230)) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_224 gen_var_230)))))) (LetIn gen_var_238 (App gen_var_224 gen_var_229) bool (Case 0 (Lambda gen_var_238 bool (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_237 bool (App list (Axiom ExportProof.X))) (CaseMatch gen_var_237) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_229 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_223 gen_var_230)) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_223 gen_var_230)))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_238 bool (App list (Axiom ExportProof.X))) (CaseMatch gen_var_238) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_229 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_224 gen_var_230)) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_224 gen_var_230)))))) (CaseMatch gen_var_238) (CaseBranches (Cast (App Coq.Init.Logic.eq_trans nat (App S (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_223 gen_var_230))) (App S (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_223 gen_var_230))) (App S (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_224 gen_var_230))) (App Coq.Init.Logic.f_equal (Prod Anonymous nat nat) nat (Lambda gen_var_240 (Prod Anonymous nat nat) (App gen_var_240 (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_223 gen_var_230)))) S S (App eq_refl (Prod Anonymous nat nat) S)) (App Coq.Init.Logic.f_equal nat nat S (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_223 gen_var_230)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_224 gen_var_230)) gen_var_231)) REVERTcast (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App cons (Axiom ExportProof.X) gen_var_229 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_223 gen_var_230))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App cons (Axiom ExportProof.X) gen_var_229 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_224 gen_var_230))))) (Cast gen_var_231 REVERTcast (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_223 gen_var_230)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_224 gen_var_230))))))) (App gen_var_223 gen_var_229) (App gen_var_225 gen_var_229)) REVERTcast (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_223 (App cons (Axiom ExportProof.X) gen_var_229 gen_var_230))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_224 (App cons (Axiom ExportProof.X) gen_var_229 gen_var_230)))))))) gen_var_230)) (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_223 (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_224 (Axiom ExportProof.enum_X)))) (App (Lambda gen_var_243 (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_223 (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_224 (Axiom ExportProof.enum_X)))) (App Coq.Init.Logic.eq_trans Z (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_223 (Axiom ExportProof.enum_X)))) (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_223 (Axiom ExportProof.enum_X)))) (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_224 (Axiom ExportProof.enum_X)))) (App Coq.Init.Logic.f_equal (Prod gen_var_244 nat Z) Z (Lambda gen_var_245 (Prod gen_var_246 nat Z) (App gen_var_245 (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_223 (Axiom ExportProof.enum_X))))) Coq.ZArith.BinIntDef.Z.of_nat Coq.ZArith.BinIntDef.Z.of_nat (App eq_refl (Prod gen_var_247 nat Z) Coq.ZArith.BinIntDef.Z.of_nat)) (App Coq.Init.Logic.f_equal nat Z Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_223 (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_224 (Axiom ExportProof.enum_X))) gen_var_243))) gen_var_243)) REVERTcast (App eq Z (App ExportProof.cardinal gen_var_223) (App ExportProof.cardinal gen_var_224))))))) (Definition Coq.Init.Datatypes.list_ind (Lambda gen_var_248 (Sort Type) (Lambda gen_var_249 (Prod gen_var_250 (App list gen_var_248) (Sort Prop)) (Lambda gen_var_252 (App gen_var_249 (App nil gen_var_248)) (Lambda gen_var_252 (Prod gen_var_253 gen_var_248 (Prod gen_var_254 (App list gen_var_248) (Prod Anonymous (App gen_var_249 gen_var_254) (App gen_var_249 (App cons gen_var_248 gen_var_253 gen_var_254))))) (Fix (Functions (App gen_var_256 0 (Prod gen_var_257 (App list gen_var_248) (App gen_var_249 gen_var_257)) (Lambda gen_var_261 (App list gen_var_248) (Case 1 (Lambda gen_var_259 (App list gen_var_248) (App gen_var_249 gen_var_259)) (CaseMatch gen_var_259) (CaseBranches gen_var_252 (Lambda gen_var_260 gen_var_248 (Lambda gen_var_261 (App list gen_var_248) (App gen_var_252 gen_var_260 gen_var_261 (App gen_var_256 gen_var_261))))))))) 0)))))) (Definition ExportProof.set_eq (Lambda gen_var_263 ExportProof.set (Lambda gen_var_264 ExportProof.set (Prod gen_var_265 (Axiom ExportProof.X) (App eq bool (App gen_var_263 gen_var_265) (App gen_var_264 gen_var_265)))))) (Definition Coq.Classes.Morphisms.subrelation_proper (LetIn gen_var_282 (Sort Type) (Sort Type) (Lambda gen_var_283 gen_var_282 (Lambda gen_var_284 (App Coq.Relations.Relation_Definitions.relation gen_var_283) (Lambda gen_var_285 gen_var_283 (Lambda gen_var_286 (App Coq.Classes.Morphisms.Proper gen_var_283 gen_var_284 gen_var_285) (Lambda gen_var_287 (App Coq.Relations.Relation_Definitions.relation gen_var_283) (Lambda gen_var_288 (App Coq.Classes.Init.Unconvertible (App Coq.Relations.Relation_Definitions.relation gen_var_283) gen_var_287 gen_var_284) (Lambda gen_var_289 (App Coq.Classes.RelationClasses.subrelation gen_var_283 gen_var_284 gen_var_287) (App gen_var_289 gen_var_285 gen_var_285 gen_var_286)))))))))) (Definition Coq.Classes.Morphisms.respectful (LetIn gen_var_292 (Sort Type) (Sort Type) (Lambda gen_var_293 gen_var_292 (Lambda gen_var_294 gen_var_292 (Lambda gen_var_295 (App Coq.Relations.Relation_Definitions.relation gen_var_293) (Lambda gen_var_296 (App Coq.Relations.Relation_Definitions.relation gen_var_294) (Lambda gen_var_297 (Prod gen_var_298 gen_var_293 gen_var_294) (Lambda gen_var_299 (Prod gen_var_300 gen_var_293 gen_var_294) (Prod gen_var_301 gen_var_293 (Prod gen_var_302 gen_var_293 (Prod Anonymous (App gen_var_295 gen_var_301 gen_var_302) (App gen_var_296 (App gen_var_297 gen_var_301) (App gen_var_299 gen_var_302))))))))))))) (Definition Coq.Init.Logic.iff (Lambda gen_var_305 (Sort Prop) (Lambda gen_var_306 (Sort Prop) (App and (Prod Anonymous gen_var_305 gen_var_306) (Prod Anonymous gen_var_306 gen_var_305))))) (Definition Coq.Classes.Morphisms.PER_morphism (LetIn gen_var_309 (Sort Type) (Sort Type) (Lambda gen_var_310 gen_var_309 (Lambda gen_var_313 (App Coq.Relations.Relation_Definitions.relation gen_var_310) (Lambda gen_var_314 (App PER gen_var_310 gen_var_311) (App (Lambda gen_var_313 (App Coq.Relations.Relation_Definitions.relation gen_var_310) (Lambda gen_var_314 (App PER gen_var_310 gen_var_313) (App Coq.Classes.Morphisms.PER_morphism_obligation_1 gen_var_310 gen_var_313 gen_var_314))) gen_var_313 gen_var_314)))))) (Definition Coq.Classes.RelationClasses.Equivalence_PER (Lambda gen_var_315 (Sort Type) (Lambda gen_var_316 (App Coq.Relations.Relation_Definitions.relation gen_var_315) (Lambda gen_var_317 (App Equivalence gen_var_315 gen_var_316) (App Build_PER gen_var_315 gen_var_316 (App Coq.Classes.RelationClasses.Equivalence_Symmetric gen_var_315 gen_var_316 gen_var_317) (App Coq.Classes.RelationClasses.Equivalence_Transitive gen_var_315 gen_var_316 gen_var_317)))))) (Definition ExportProof.Set_eq (App Build_Equivalence ExportProof.set ExportProof.set_eq ExportProof.set_eq_refl ExportProof.set_eq_sym ExportProof.set_eq_trans)) (Definition Coq.Program.Basics.flip (Lambda gen_var_319 (Sort Type) (Lambda gen_var_320 (Sort Type) (Lambda gen_var_321 (Sort Type) (Lambda gen_var_322 (Prod Anonymous gen_var_319 (Prod Anonymous gen_var_320 gen_var_321)) (Lambda gen_var_325 gen_var_320 (Lambda gen_var_326 gen_var_319 (App gen_var_322 gen_var_326 gen_var_325)))))))) (Definition Coq.Program.Basics.impl (Lambda gen_var_329 (Sort Prop) (Lambda gen_var_330 (Sort Prop) (Prod Anonymous gen_var_329 gen_var_330)))) (Definition Coq.Classes.Morphisms.subrelation_respectful (LetIn gen_var_332 (Sort Type) (Sort Type) (Lambda gen_var_333 gen_var_332 (Lambda gen_var_334 gen_var_332 (Lambda gen_var_335 (App Coq.Relations.Relation_Definitions.relation gen_var_333) (Lambda gen_var_336 (App Coq.Relations.Relation_Definitions.relation gen_var_333) (Lambda gen_var_337 (App Coq.Classes.RelationClasses.subrelation gen_var_333 gen_var_335 gen_var_336) (Lambda gen_var_338 (App Coq.Relations.Relation_Definitions.relation gen_var_334) (Lambda gen_var_339 (App Coq.Relations.Relation_Definitions.relation gen_var_334) (Lambda gen_var_340 (App Coq.Classes.RelationClasses.subrelation gen_var_334 gen_var_338 gen_var_339) (Cast (Lambda gen_var_341 (Prod Anonymous gen_var_333 gen_var_334) (Lambda gen_var_353 (Prod Anonymous gen_var_333 gen_var_334) (Lambda gen_var_345 (App Coq.Classes.Morphisms.respectful gen_var_333 gen_var_334 gen_var_336 gen_var_338 gen_var_341 gen_var_343) (Cast (Lambda gen_var_346 gen_var_333 (Lambda gen_var_347 gen_var_333 (Lambda gen_var_348 (App gen_var_335 gen_var_346 gen_var_347) (App (Lambda gen_var_349 (Prod gen_var_350 gen_var_334 (Prod Anonymous (App gen_var_338 (App gen_var_341 gen_var_346) gen_var_350) (App gen_var_339 (App gen_var_341 gen_var_346) gen_var_350))) (App (Lambda gen_var_352 (Prod gen_var_353 gen_var_333 (Prod Anonymous (App gen_var_336 gen_var_346 gen_var_353) (App gen_var_338 (App gen_var_341 gen_var_346) (App gen_var_353 gen_var_353)))) (App (Lambda gen_var_355 (Prod Anonymous (App gen_var_338 (App gen_var_341 gen_var_346) (App gen_var_353 gen_var_347)) (App gen_var_339 (App gen_var_341 gen_var_346) (App gen_var_353 gen_var_347))) (App gen_var_340 (App gen_var_341 gen_var_346) (App gen_var_353 gen_var_347) (App gen_var_345 gen_var_346 gen_var_347 (App gen_var_337 gen_var_346 gen_var_347 gen_var_348)))) (App gen_var_349 (App gen_var_353 gen_var_347)))) (App gen_var_345 gen_var_346))) (App gen_var_340 (App gen_var_341 gen_var_346)))))) REVERTcast (App Coq.Classes.Morphisms.respectful gen_var_333 gen_var_334 gen_var_335 gen_var_339 gen_var_341 gen_var_353))))) REVERTcast (App Coq.Classes.RelationClasses.subrelation (Prod Anonymous gen_var_333 gen_var_334) (App Coq.Classes.Morphisms.respectful gen_var_333 gen_var_334 gen_var_336 gen_var_338) (App Coq.Classes.Morphisms.respectful gen_var_333 gen_var_334 gen_var_335 gen_var_339))))))))))))) (Definition Coq.Classes.RelationClasses.subrelation_symmetric (Lambda gen_var_361 (Sort Type) (Lambda gen_var_362 (App Coq.Relations.Relation_Definitions.relation gen_var_361) (Lambda gen_var_363 (App Coq.Classes.RelationClasses.Symmetric gen_var_361 gen_var_362) (Cast (Lambda gen_var_364 gen_var_361 (Lambda gen_var_365 gen_var_361 (Lambda gen_var_366 (App Coq.Program.Basics.flip gen_var_361 gen_var_361 (Sort Prop) gen_var_362 gen_var_364 gen_var_365) (App Coq.Classes.RelationClasses.symmetry gen_var_361 gen_var_362 gen_var_363 gen_var_365 gen_var_364 gen_var_366)))) REVERTcast (App Coq.Classes.RelationClasses.subrelation gen_var_361 (App Coq.Program.Basics.flip gen_var_361 gen_var_361 (Sort Prop) gen_var_362) gen_var_362)))))) (Definition ExportProof.Set_eq_Symmetric ExportProof.set_eq_sym) (Definition Coq.Classes.Morphisms.subrelation_refl (LetIn gen_var_368 (Sort Type) (Sort Type) (Lambda gen_var_369 gen_var_368 (Lambda gen_var_370 (App Coq.Relations.Relation_Definitions.relation gen_var_369) (Cast (Lambda gen_var_371 gen_var_369 (Lambda gen_var_372 gen_var_369 (Lambda gen_var_373 (App gen_var_370 gen_var_371 gen_var_372) gen_var_373))) REVERTcast (App Coq.Classes.RelationClasses.subrelation gen_var_369 gen_var_370 gen_var_370)))))) (Definition Coq.Classes.Morphisms.iff_flip_impl_subrelation (Cast (Lambda gen_var_374 (Sort Prop) (Lambda gen_var_375 (Sort Prop) (Lambda gen_var_380 (App Coq.Init.Logic.iff gen_var_374 gen_var_375) (Cast (Lambda gen_var_377 gen_var_375 (App Coq.Init.Logic.and_ind (Prod Anonymous gen_var_374 gen_var_375) (Prod Anonymous gen_var_375 gen_var_374) gen_var_374 (Lambda gen_var_380 (Prod Anonymous gen_var_374 gen_var_375) (Lambda gen_var_384 (Prod Anonymous gen_var_375 gen_var_374) (App (Lambda gen_var_384 gen_var_374 gen_var_384) (App gen_var_384 gen_var_377)))) gen_var_380)) REVERTcast (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl gen_var_374 gen_var_375))))) REVERTcast (App Coq.Classes.RelationClasses.subrelation (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)))) (Definition Coq.Classes.Morphisms.Reflexive_partial_app_morphism (LetIn gen_var_387 (Sort Type) (Sort Type) (Lambda gen_var_388 gen_var_387 (Lambda gen_var_389 gen_var_387 (Lambda gen_var_390 (App Coq.Relations.Relation_Definitions.relation gen_var_388) (Lambda gen_var_391 (App Coq.Relations.Relation_Definitions.relation gen_var_389) (Lambda gen_var_392 (Prod Anonymous gen_var_388 gen_var_389) (Lambda gen_var_394 (App Coq.Classes.Morphisms.Proper (Prod Anonymous gen_var_388 gen_var_389) (App Coq.Classes.Morphisms.respectful gen_var_388 gen_var_389 gen_var_390 gen_var_391) gen_var_392) (Lambda gen_var_396 gen_var_388 (Lambda gen_var_397 (App Coq.Classes.Morphisms.ProperProxy gen_var_388 gen_var_390 gen_var_396) (Cast (Cast (Cast (Cast (App gen_var_394 gen_var_396 gen_var_396 gen_var_397) REVERTcast (App gen_var_391 (App gen_var_392 gen_var_396) (App gen_var_392 gen_var_396))) REVERTcast (App gen_var_391 (App gen_var_392 gen_var_396) (App gen_var_392 gen_var_396))) REVERTcast (App Coq.Classes.Morphisms.Proper gen_var_389 gen_var_391 (App gen_var_392 gen_var_396))) REVERTcast (App Coq.Classes.Morphisms.Proper gen_var_389 gen_var_391 (App gen_var_392 gen_var_396))))))))))))) (Definition Coq.Classes.Morphisms.proper_normalizes_proper (Lambda gen_var_403 (Sort Type) (Lambda gen_var_404 (App Coq.Relations.Relation_Definitions.relation gen_var_403) (Lambda gen_var_405 (App Coq.Relations.Relation_Definitions.relation gen_var_403) (Lambda gen_var_406 (App Coq.Classes.Morphisms.Normalizes gen_var_403 gen_var_404 gen_var_405) (Lambda gen_var_414 gen_var_403 (Lambda gen_var_408 (App Coq.Classes.Morphisms.Proper gen_var_403 gen_var_405 gen_var_407) (App (Lambda gen_var_409 (App Coq.Classes.RelationClasses.relation_equivalence gen_var_403 gen_var_404 gen_var_405) (App Coq.Classes.Morphisms.subrelation_proper (Prod gen_var_410 (App Coq.Relations.Relation_Definitions.relation gen_var_403) (Prod gen_var_411 gen_var_403 (Sort Prop))) (App Coq.Classes.Morphisms.respectful (App Coq.Relations.Relation_Definitions.relation gen_var_403) (Prod Anonymous gen_var_403 (Sort Prop)) (App Coq.Classes.RelationClasses.relation_equivalence gen_var_403) (App Coq.Classes.Morphisms.respectful gen_var_403 (Sort Prop) (App eq gen_var_403) Coq.Init.Logic.iff)) (App Coq.Classes.Morphisms.Proper gen_var_403) (App Coq.Classes.Morphisms.proper_proper gen_var_403) (App Coq.Classes.Morphisms.respectful (App Coq.Relations.Relation_Definitions.relation gen_var_403) (Prod gen_var_413 gen_var_403 (Sort Prop)) (App Coq.Classes.RelationClasses.relation_equivalence gen_var_403) (App Coq.Classes.Morphisms.respectful gen_var_403 (Sort Prop) (App eq gen_var_403) (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful (App Coq.Relations.Relation_Definitions.relation gen_var_403) (Prod gen_var_414 gen_var_403 (Sort Prop)) (App Coq.Classes.RelationClasses.relation_equivalence gen_var_403) (App Coq.Classes.RelationClasses.relation_equivalence gen_var_403) (App Coq.Classes.Morphisms.subrelation_refl (App Coq.Relations.Relation_Definitions.relation gen_var_403) (App Coq.Classes.RelationClasses.relation_equivalence gen_var_403)) (App Coq.Classes.Morphisms.respectful gen_var_403 (Sort Prop) (App eq gen_var_403) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful gen_var_403 (Sort Prop) (App eq gen_var_403) (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful gen_var_403 (Sort Prop) (App eq gen_var_403) (App eq gen_var_403) (App Coq.Classes.Morphisms.subrelation_refl gen_var_403 (App eq gen_var_403)) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) gen_var_404 gen_var_405 gen_var_409 gen_var_414 gen_var_414 (App Coq.Classes.Morphisms.eq_proper_proxy gen_var_403 gen_var_414))) gen_var_406 gen_var_408)))))))) (Definition Coq.Classes.Morphisms.flip_arrow (Lambda gen_var_436 (Sort Type) (Lambda gen_var_437 (Sort Type) (Lambda gen_var_438 (App Coq.Relations.Relation_Definitions.relation gen_var_436) (Lambda gen_var_439 (Prod Anonymous gen_var_436 (Prod Anonymous gen_var_436 (Sort Prop))) (Lambda gen_var_442 (App Coq.Classes.Morphisms.Normalizes gen_var_436 gen_var_438 (App Coq.Program.Basics.flip gen_var_436 gen_var_436 (Sort Prop) gen_var_439)) (Lambda gen_var_443 (App Coq.Relations.Relation_Definitions.relation gen_var_437) (Lambda gen_var_444 (Prod Anonymous gen_var_437 (Prod Anonymous gen_var_437 (Sort Prop))) (Lambda gen_var_447 (App Coq.Classes.Morphisms.Normalizes gen_var_437 gen_var_443 (App Coq.Program.Basics.flip gen_var_437 gen_var_437 (Sort Prop) gen_var_444)) (Cast (Cast (Cast (Cast (Cast (Cast (Lambda gen_var_534 (Prod Anonymous gen_var_436 gen_var_437) (Lambda gen_var_450 (Prod Anonymous gen_var_436 gen_var_437) (App conj (Prod Anonymous (Prod gen_var_453 gen_var_436 (Prod gen_var_454 gen_var_436 (Prod Anonymous (App gen_var_438 gen_var_453 gen_var_454) (App gen_var_443 (App gen_var_453 gen_var_453) (App gen_var_450 gen_var_454))))) (Prod gen_var_456 gen_var_436 (Prod gen_var_457 gen_var_436 (Prod Anonymous (App gen_var_439 gen_var_456 gen_var_457) (App gen_var_444 (App gen_var_450 gen_var_456) (App gen_var_456 gen_var_457)))))) (Prod Anonymous (Prod gen_var_460 gen_var_436 (Prod gen_var_461 gen_var_436 (Prod Anonymous (App gen_var_439 gen_var_460 gen_var_461) (App gen_var_444 (App gen_var_450 gen_var_460) (App gen_var_460 gen_var_461))))) (Prod gen_var_463 gen_var_436 (Prod gen_var_464 gen_var_436 (Prod Anonymous (App gen_var_438 gen_var_463 gen_var_464) (App gen_var_443 (App gen_var_463 gen_var_463) (App gen_var_450 gen_var_464)))))) (Lambda gen_var_466 (Prod gen_var_467 gen_var_436 (Prod gen_var_468 gen_var_436 (Prod Anonymous (App gen_var_438 gen_var_467 gen_var_468) (App gen_var_443 (App gen_var_467 gen_var_467) (App gen_var_450 gen_var_468))))) (Lambda gen_var_470 gen_var_436 (Lambda gen_var_471 gen_var_436 (Lambda gen_var_472 (App gen_var_439 gen_var_470 gen_var_471) (LetIn gen_var_487 (Lambda gen_var_475 gen_var_437 (Lambda gen_var_475 gen_var_437 (Case 2 (Lambda Anonymous (App and (Prod Anonymous (App gen_var_443 gen_var_475 gen_var_475) (App gen_var_444 gen_var_475 gen_var_475)) (Prod Anonymous (App gen_var_444 gen_var_475 gen_var_475) (App gen_var_443 gen_var_475 gen_var_475))) (Prod Anonymous (App gen_var_443 gen_var_475 gen_var_475) (App gen_var_444 gen_var_475 gen_var_475))) (CaseMatch (App gen_var_447 gen_var_475 gen_var_475)) (CaseBranches (Lambda Anonymous (Prod Anonymous (App gen_var_443 gen_var_475 gen_var_475) (App gen_var_444 gen_var_475 gen_var_475)) (Lambda Anonymous (Prod Anonymous (App gen_var_444 gen_var_475 gen_var_475) (App gen_var_443 gen_var_475 gen_var_475)) Anonymous)))))) (Prod gen_var_485 gen_var_437 (Prod gen_var_485 gen_var_437 (Prod Anonymous (App gen_var_443 gen_var_485 gen_var_485) (App gen_var_444 gen_var_485 gen_var_485)))) (App gen_var_473 (App gen_var_485 gen_var_471) (App gen_var_450 gen_var_470) (App gen_var_466 gen_var_471 gen_var_470 (LetIn gen_var_487 (Lambda gen_var_489 gen_var_436 (Lambda gen_var_489 gen_var_436 (Case 2 (Lambda Anonymous (App and (Prod Anonymous (App gen_var_438 gen_var_489 gen_var_489) (App gen_var_439 gen_var_489 gen_var_489)) (Prod Anonymous (App gen_var_439 gen_var_489 gen_var_489) (App gen_var_438 gen_var_489 gen_var_489))) (Prod Anonymous (App gen_var_439 gen_var_489 gen_var_489) (App gen_var_438 gen_var_489 gen_var_489))) (CaseMatch (App gen_var_442 gen_var_489 gen_var_489)) (CaseBranches (Lambda Anonymous (Prod Anonymous (App gen_var_438 gen_var_489 gen_var_489) (App gen_var_439 gen_var_489 gen_var_489)) (Lambda Anonymous (Prod Anonymous (App gen_var_439 gen_var_489 gen_var_489) (App gen_var_438 gen_var_489 gen_var_489)) Anonymous)))))) (Prod gen_var_499 gen_var_436 (Prod gen_var_499 gen_var_436 (Prod Anonymous (App gen_var_439 gen_var_499 gen_var_499) (App gen_var_438 gen_var_499 gen_var_499)))) (App gen_var_487 gen_var_471 gen_var_470 gen_var_472))))))))) (Lambda gen_var_501 (Prod gen_var_502 gen_var_436 (Prod gen_var_503 gen_var_436 (Prod Anonymous (App gen_var_439 gen_var_502 gen_var_503) (App gen_var_444 (App gen_var_450 gen_var_502) (App gen_var_502 gen_var_503))))) (Lambda gen_var_505 gen_var_436 (Lambda gen_var_506 gen_var_436 (Lambda gen_var_507 (App gen_var_438 gen_var_505 gen_var_506) (LetIn gen_var_522 (Lambda gen_var_510 gen_var_437 (Lambda gen_var_510 gen_var_437 (Case 2 (Lambda Anonymous (App and (Prod Anonymous (App gen_var_443 gen_var_510 gen_var_510) (App gen_var_444 gen_var_510 gen_var_510)) (Prod Anonymous (App gen_var_444 gen_var_510 gen_var_510) (App gen_var_443 gen_var_510 gen_var_510))) (Prod Anonymous (App gen_var_444 gen_var_510 gen_var_510) (App gen_var_443 gen_var_510 gen_var_510))) (CaseMatch (App gen_var_447 gen_var_510 gen_var_510)) (CaseBranches (Lambda Anonymous (Prod Anonymous (App gen_var_443 gen_var_510 gen_var_510) (App gen_var_444 gen_var_510 gen_var_510)) (Lambda Anonymous (Prod Anonymous (App gen_var_444 gen_var_510 gen_var_510) (App gen_var_443 gen_var_510 gen_var_510)) Anonymous)))))) (Prod gen_var_520 gen_var_437 (Prod gen_var_520 gen_var_437 (Prod Anonymous (App gen_var_444 gen_var_520 gen_var_520) (App gen_var_443 gen_var_520 gen_var_520)))) (App gen_var_508 (App gen_var_520 gen_var_505) (App gen_var_450 gen_var_506) (App gen_var_501 gen_var_506 gen_var_505 (LetIn gen_var_522 (Lambda gen_var_524 gen_var_436 (Lambda gen_var_524 gen_var_436 (Case 2 (Lambda Anonymous (App and (Prod Anonymous (App gen_var_438 gen_var_524 gen_var_524) (App gen_var_439 gen_var_524 gen_var_524)) (Prod Anonymous (App gen_var_439 gen_var_524 gen_var_524) (App gen_var_438 gen_var_524 gen_var_524))) (Prod Anonymous (App gen_var_438 gen_var_524 gen_var_524) (App gen_var_439 gen_var_524 gen_var_524))) (CaseMatch (App gen_var_442 gen_var_524 gen_var_524)) (CaseBranches (Lambda Anonymous (Prod Anonymous (App gen_var_438 gen_var_524 gen_var_524) (App gen_var_439 gen_var_524 gen_var_524)) (Lambda Anonymous (Prod Anonymous (App gen_var_439 gen_var_524 gen_var_524) (App gen_var_438 gen_var_524 gen_var_524)) Anonymous)))))) (Prod gen_var_534 gen_var_436 (Prod gen_var_534 gen_var_436 (Prod Anonymous (App gen_var_438 gen_var_534 gen_var_534) (App gen_var_439 gen_var_534 gen_var_534)))) (App gen_var_522 gen_var_505 gen_var_506 gen_var_507)))))))))))) REVERTcast (Prod gen_var_549 (Prod Anonymous gen_var_436 gen_var_437) (Prod gen_var_549 (Prod Anonymous gen_var_436 gen_var_437) (App Coq.Init.Logic.iff (Prod gen_var_540 gen_var_436 (Prod gen_var_541 gen_var_436 (Prod Anonymous (App gen_var_438 gen_var_540 gen_var_541) (App gen_var_443 (App gen_var_540 gen_var_540) (App gen_var_540 gen_var_541))))) (App Coq.Program.Basics.flip (Prod Anonymous gen_var_436 gen_var_437) (Prod Anonymous gen_var_436 gen_var_437) (Sort Prop) (Lambda gen_var_545 (Prod gen_var_546 gen_var_436 gen_var_437) (Lambda gen_var_547 (Prod gen_var_548 gen_var_436 gen_var_437) (Prod gen_var_549 gen_var_436 (Prod gen_var_550 gen_var_436 (Prod Anonymous (App gen_var_439 gen_var_549 gen_var_550) (App gen_var_444 (App gen_var_545 gen_var_549) (App gen_var_547 gen_var_550))))))) gen_var_549 gen_var_549))))) REVERTcast (Prod gen_var_554 (Prod Anonymous gen_var_436 gen_var_437) (Prod gen_var_554 (Prod Anonymous gen_var_436 gen_var_437) (App Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful gen_var_436 gen_var_437 gen_var_438 gen_var_443 gen_var_554 gen_var_554) (App Coq.Program.Basics.flip (Prod Anonymous gen_var_436 gen_var_437) (Prod Anonymous gen_var_436 gen_var_437) (Sort Prop) (App Coq.Classes.Morphisms.respectful gen_var_436 gen_var_437 gen_var_439 gen_var_444) gen_var_554 gen_var_554))))) REVERTcast (App Coq.Classes.RelationClasses.pointwise_lifting Coq.Init.Logic.iff (App Tcons (Prod Anonymous gen_var_436 gen_var_437) (App Tcons (Prod Anonymous gen_var_436 gen_var_437) Tnil)) (App Coq.Classes.Morphisms.respectful gen_var_436 gen_var_437 gen_var_438 gen_var_443) (App Coq.Program.Basics.flip (Prod Anonymous gen_var_436 gen_var_437) (Prod Anonymous gen_var_436 gen_var_437) (Sort Prop) (App Coq.Classes.Morphisms.respectful gen_var_436 gen_var_437 gen_var_439 gen_var_444)))) REVERTcast (App Coq.Classes.RelationClasses.predicate_equivalence (App Tcons (Prod Anonymous gen_var_436 gen_var_437) (App Tcons (Prod Anonymous gen_var_436 gen_var_437) Tnil)) (App Coq.Classes.Morphisms.respectful gen_var_436 gen_var_437 gen_var_438 gen_var_443) (App Coq.Program.Basics.flip (Prod Anonymous gen_var_436 gen_var_437) (Prod Anonymous gen_var_436 gen_var_437) (Sort Prop) (App Coq.Classes.Morphisms.respectful gen_var_436 gen_var_437 gen_var_439 gen_var_444)))) REVERTcast (App Coq.Classes.RelationClasses.relation_equivalence (Prod Anonymous gen_var_436 gen_var_437) (App Coq.Classes.Morphisms.respectful gen_var_436 gen_var_437 gen_var_438 gen_var_443) (App Coq.Program.Basics.flip (Prod Anonymous gen_var_436 gen_var_437) (Prod Anonymous gen_var_436 gen_var_437) (Sort Prop) (App Coq.Classes.Morphisms.respectful gen_var_436 gen_var_437 gen_var_439 gen_var_444)))) REVERTcast (App Coq.Classes.Morphisms.Normalizes (Prod Anonymous gen_var_436 gen_var_437) (App Coq.Classes.Morphisms.respectful gen_var_436 gen_var_437 gen_var_438 gen_var_443) (App Coq.Program.Basics.flip (Prod Anonymous gen_var_436 gen_var_437) (Prod Anonymous gen_var_436 gen_var_437) (Sort Prop) (App Coq.Classes.Morphisms.respectful gen_var_436 gen_var_437 gen_var_439 gen_var_444))))))))))))) (Definition Coq.Classes.Morphisms.flip_atom (Lambda gen_var_574 (Sort Type) (Lambda gen_var_575 (App Coq.Relations.Relation_Definitions.relation gen_var_574) (Cast (Lambda gen_var_576 gen_var_574 (Cast (Lambda gen_var_577 gen_var_574 (App conj (Prod Anonymous (App gen_var_575 gen_var_576 gen_var_577) (App Coq.Program.Basics.flip gen_var_574 gen_var_574 (Sort Prop) (App Coq.Program.Basics.flip gen_var_574 gen_var_574 (Sort Prop) gen_var_575) gen_var_576 gen_var_577)) (Prod Anonymous (App Coq.Program.Basics.flip gen_var_574 gen_var_574 (Sort Prop) (App Coq.Program.Basics.flip gen_var_574 gen_var_574 (Sort Prop) gen_var_575) gen_var_576 gen_var_577) (App gen_var_575 gen_var_576 gen_var_577)) (Lambda gen_var_580 (App gen_var_575 gen_var_576 gen_var_577) gen_var_580) (Lambda gen_var_581 (App Coq.Program.Basics.flip gen_var_574 gen_var_574 (Sort Prop) (App Coq.Program.Basics.flip gen_var_574 gen_var_574 (Sort Prop) gen_var_575) gen_var_576 gen_var_577) gen_var_581))) REVERTcast (App Coq.Classes.RelationClasses.pointwise_lifting Coq.Init.Logic.iff (App Tcons gen_var_574 Tnil) (App gen_var_575 gen_var_576) (App Coq.Program.Basics.flip gen_var_574 gen_var_574 (Sort Prop) (App Coq.Program.Basics.flip gen_var_574 gen_var_574 (Sort Prop) gen_var_575) gen_var_576)))) REVERTcast (App Coq.Classes.Morphisms.Normalizes gen_var_574 gen_var_575 (App Coq.Program.Basics.flip gen_var_574 gen_var_574 (Sort Prop) (App Coq.Program.Basics.flip gen_var_574 gen_var_574 (Sort Prop) gen_var_575))))))) (Definition Coq.Classes.Morphisms.proper_flip_proper (LetIn gen_var_600 (Sort Type) (Sort Type) (Lambda gen_var_601 gen_var_600 (Lambda gen_var_602 (App Coq.Relations.Relation_Definitions.relation gen_var_601) (Lambda gen_var_603 gen_var_601 (Lambda gen_var_604 (App Coq.Classes.Morphisms.Proper gen_var_601 gen_var_602 gen_var_603) gen_var_604)))))) (Definition ExportProof.union_morphism (Cast (Lambda gen_var_619 ExportProof.set (Lambda gen_var_620 ExportProof.set (Lambda gen_var_621 (App ExportProof.set_eq gen_var_619 gen_var_620) (Cast (Lambda gen_var_622 ExportProof.set (Lambda gen_var_623 ExportProof.set (Lambda gen_var_624 (App ExportProof.set_eq gen_var_622 gen_var_623) (Cast (Lambda gen_var_625 (Axiom ExportProof.X) (Cast (App Coq.Init.Logic.eq_ind_r bool (App gen_var_620 gen_var_625) (Lambda gen_var_626 bool (App eq bool (App Coq.Init.Datatypes.orb gen_var_626 (App gen_var_622 gen_var_625)) (App Coq.Init.Datatypes.orb (App gen_var_620 gen_var_625) (App gen_var_623 gen_var_625)))) (App Coq.Init.Logic.eq_ind_r bool (App gen_var_623 gen_var_625) (Lambda gen_var_627 bool (App eq bool (App Coq.Init.Datatypes.orb (App gen_var_620 gen_var_625) gen_var_627) (App Coq.Init.Datatypes.orb (App gen_var_620 gen_var_625) (App gen_var_623 gen_var_625)))) (App eq_refl bool (App Coq.Init.Datatypes.orb (App gen_var_620 gen_var_625) (App gen_var_623 gen_var_625))) (App gen_var_622 gen_var_625) (App gen_var_624 gen_var_625)) (App gen_var_619 gen_var_625) (App gen_var_621 gen_var_625)) REVERTcast (App eq bool (App ExportProof.binary_union gen_var_619 gen_var_622 gen_var_625) (App ExportProof.binary_union gen_var_620 gen_var_623 gen_var_625)))) REVERTcast (App ExportProof.set_eq (App ExportProof.binary_union gen_var_619 gen_var_622) (App ExportProof.binary_union gen_var_620 gen_var_623)))))) REVERTcast (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq (App ExportProof.binary_union gen_var_619) (App ExportProof.binary_union gen_var_620)))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod Anonymous ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_union))) (Definition Coq.Classes.Morphisms.flip1 (LetIn gen_var_640 (Sort Type) (Sort Type) (Lambda gen_var_641 gen_var_640 (Lambda gen_var_642 (App Coq.Relations.Relation_Definitions.relation gen_var_641) (Lambda gen_var_643 (App Coq.Relations.Relation_Definitions.relation gen_var_641) (Lambda gen_var_644 (App Coq.Classes.RelationClasses.subrelation gen_var_641 gen_var_642 gen_var_643) gen_var_644)))))) (Definition Coq.Classes.Morphisms.flip2 (LetIn gen_var_655 (Sort Type) (Sort Type) (Lambda gen_var_656 gen_var_655 (Lambda gen_var_657 (App Coq.Relations.Relation_Definitions.relation gen_var_656) (Lambda gen_var_658 (App Coq.Relations.Relation_Definitions.relation gen_var_656) (Lambda gen_var_659 (App Coq.Classes.RelationClasses.subrelation gen_var_656 gen_var_657 gen_var_658) gen_var_659)))))) (Definition Coq.Classes.Morphisms.reflexive_proper_proxy (LetIn gen_var_662 (Sort Type) (Sort Type) (Lambda gen_var_663 gen_var_662 (Lambda gen_var_664 (App Coq.Relations.Relation_Definitions.relation gen_var_663) (Lambda gen_var_665 (App Coq.Classes.RelationClasses.Reflexive gen_var_663 gen_var_664) (Lambda gen_var_666 gen_var_663 (App (Lambda gen_var_667 (App gen_var_664 gen_var_666 gen_var_666) gen_var_667) (App gen_var_665 gen_var_666)))))))) (Definition Coq.Classes.RelationClasses.PreOrder_Reflexive (Lambda gen_var_668 (Sort Type) (Lambda gen_var_669 (App Coq.Relations.Relation_Definitions.relation gen_var_668) (Lambda gen_var_671 (App gen_var_670 gen_var_668 gen_var_669) (Case 2 (Lambda gen_var_671 (App gen_var_671 gen_var_668 gen_var_669) (App Coq.Classes.RelationClasses.Reflexive gen_var_668 gen_var_669)) (CaseMatch gen_var_671) (CaseBranches (Lambda gen_var_672 (App Coq.Classes.RelationClasses.Reflexive gen_var_668 gen_var_669) (Lambda gen_var_673 (App Coq.Classes.RelationClasses.Transitive gen_var_668 gen_var_669) gen_var_672)))))))) (Definition Coq.Classes.RelationClasses.flip_PreOrder (Lambda gen_var_674 (Sort Type) (Lambda gen_var_675 (App Coq.Relations.Relation_Definitions.relation gen_var_674) (Lambda gen_var_683 (App gen_var_671 gen_var_674 gen_var_675) (Case 2 (Lambda Anonymous (App gen_var_671 gen_var_674 gen_var_675) (App gen_var_671 gen_var_674 (App Coq.Program.Basics.flip gen_var_674 gen_var_674 (Sort Prop) gen_var_675))) (CaseMatch gen_var_676) (CaseBranches (Lambda gen_var_678 (App Coq.Classes.RelationClasses.Reflexive gen_var_674 gen_var_675) (Lambda gen_var_679 (App Coq.Classes.RelationClasses.Transitive gen_var_674 gen_var_675) (App Build_PreOrder gen_var_674 (App Coq.Program.Basics.flip gen_var_674 gen_var_674 (Sort Prop) gen_var_675) gen_var_678 (Cast (Lambda gen_var_680 gen_var_674 (Lambda gen_var_686 gen_var_674 (Lambda gen_var_691 gen_var_674 (Lambda gen_var_683 (App Coq.Program.Basics.flip gen_var_674 gen_var_674 (Sort Prop) gen_var_675 gen_var_680 gen_var_681) (Lambda gen_var_684 (App Coq.Program.Basics.flip gen_var_674 gen_var_674 (Sort Prop) gen_var_675 gen_var_681 gen_var_682) (App (Lambda gen_var_685 (Prod gen_var_686 gen_var_674 (Prod gen_var_687 gen_var_674 (Prod Anonymous (App gen_var_675 gen_var_687 gen_var_686) (Prod Anonymous (App gen_var_675 gen_var_686 gen_var_687) (App gen_var_675 gen_var_687 gen_var_687))))) (App (Lambda gen_var_690 (Prod gen_var_691 gen_var_674 (Prod Anonymous (App gen_var_675 gen_var_691 gen_var_686) (Prod Anonymous (App gen_var_675 gen_var_686 gen_var_691) (App gen_var_675 gen_var_691 gen_var_691)))) (App (Lambda gen_var_699 (Prod Anonymous (App gen_var_675 gen_var_691 gen_var_686) (Prod Anonymous (App gen_var_675 gen_var_686 gen_var_680) (App gen_var_675 gen_var_691 gen_var_680))) (App (Lambda gen_var_699 (Prod Anonymous (App gen_var_675 gen_var_686 gen_var_680) (App gen_var_675 gen_var_691 gen_var_680)) (App (Lambda gen_var_699 (App gen_var_675 gen_var_691 gen_var_680) gen_var_699) (App gen_var_699 gen_var_683))) (App gen_var_699 gen_var_684))) (App gen_var_690 gen_var_680))) (App gen_var_685 gen_var_686))) (App gen_var_679 gen_var_691))))))) REVERTcast (App Coq.Classes.RelationClasses.Transitive gen_var_674 (App Coq.Program.Basics.flip gen_var_674 gen_var_674 (Sort Prop) gen_var_675)))))))))))) (Definition Coq.Classes.RelationClasses.Equivalence_PreOrder (Lambda gen_var_700 (Sort Type) (Lambda gen_var_701 (App Coq.Relations.Relation_Definitions.relation gen_var_700) (Lambda gen_var_702 (App Equivalence gen_var_700 gen_var_701) (App Build_PreOrder gen_var_700 gen_var_701 (App Coq.Classes.RelationClasses.Equivalence_Reflexive gen_var_700 gen_var_701 gen_var_702) (App Coq.Classes.RelationClasses.Equivalence_Transitive gen_var_700 gen_var_701 gen_var_702)))))) (Definition ExportProof.Set_eq_Reflexive ExportProof.set_eq_refl) (Definition Coq.setoid_ring.Ring_polynom.mk_monpol_list (Lambda gen_var_823 (Sort Type) (Lambda gen_var_824 gen_var_823 (Lambda gen_var_825 gen_var_823 (Lambda gen_var_826 (Prod Anonymous gen_var_823 (Prod Anonymous gen_var_823 gen_var_823)) (Lambda gen_var_829 (Prod Anonymous gen_var_823 (Prod Anonymous gen_var_823 gen_var_823)) (Lambda gen_var_832 (Prod Anonymous gen_var_823 (Prod Anonymous gen_var_823 gen_var_823)) (Lambda gen_var_835 (Prod Anonymous gen_var_823 gen_var_823) (Lambda gen_var_837 (Prod Anonymous gen_var_823 (Prod Anonymous gen_var_823 bool)) (Lambda gen_var_840 (Prod Anonymous gen_var_823 (Prod Anonymous gen_var_823 (App prod gen_var_823 gen_var_823))) (Fix (Functions (App gen_var_843 0 (Prod gen_var_844 (App list (App prod (App PExpr gen_var_823) (App PExpr gen_var_823))) (App list (App prod (App prod gen_var_823 Mon) (App Pol gen_var_823)))) (Lambda gen_var_848 (App list (App prod (App PExpr gen_var_823) (App PExpr gen_var_823))) (Case 1 (Lambda gen_var_846 (App list (App prod (App PExpr gen_var_823) (App PExpr gen_var_823))) (App list (App prod (App prod gen_var_823 Mon) (App Pol gen_var_823)))) (CaseMatch gen_var_846) (CaseBranches (App nil (App prod (App prod gen_var_823 Mon) (App Pol gen_var_823))) (Lambda gen_var_849 (App prod (App PExpr gen_var_823) (App PExpr gen_var_823)) (Lambda gen_var_848 (App list (App prod (App PExpr gen_var_823) (App PExpr gen_var_823))) (Case 2 (Lambda gen_var_849 (App prod (App PExpr gen_var_823) (App PExpr gen_var_823)) (App list (App prod (App prod gen_var_823 Mon) (App Pol gen_var_823)))) (CaseMatch gen_var_849) (CaseBranches (Lambda gen_var_850 (App PExpr gen_var_823) (Lambda gen_var_851 (App PExpr gen_var_823) (Case 1 (Lambda gen_var_852 (App option (App prod gen_var_823 Mon)) (App list (App prod (App prod gen_var_823 Mon) (App Pol gen_var_823)))) (CaseMatch (App Coq.setoid_ring.Ring_polynom.mon_of_pol gen_var_823 gen_var_824 gen_var_837 (App Coq.setoid_ring.Ring_polynom.norm_subst gen_var_823 gen_var_824 gen_var_825 gen_var_826 gen_var_829 gen_var_832 gen_var_835 gen_var_837 gen_var_840 O (App nil (App prod (App prod gen_var_823 Mon) (App Pol gen_var_823))) gen_var_850))) (CaseBranches (Lambda gen_var_853 (App prod gen_var_823 Mon) (App cons (App prod (App prod gen_var_823 Mon) (App Pol gen_var_823)) (App pair (App prod gen_var_823 Mon) (App Pol gen_var_823) gen_var_853 (App Coq.setoid_ring.Ring_polynom.norm_subst gen_var_823 gen_var_824 gen_var_825 gen_var_826 gen_var_829 gen_var_832 gen_var_835 gen_var_837 gen_var_840 O (App nil (App prod (App prod gen_var_823 Mon) (App Pol gen_var_823))) gen_var_851)) (App gen_var_843 gen_var_848))) (App gen_var_843 gen_var_848)))))))))))))) 0))))))))))) (Definition Coq.ZArith.BinIntDef.Z.opp (Lambda gen_var_857 Z (Case 0 (Lambda gen_var_855 Z Z) (CaseMatch gen_var_855) (CaseBranches Z0 (Lambda gen_var_856 positive (App Zneg gen_var_856)) (Lambda gen_var_857 positive (App Zpos gen_var_857)))))) (Definition Coq.ZArith.Zbool.Zeq_bool (Lambda gen_var_860 Z (Lambda gen_var_859 Z (Case 0 (Lambda gen_var_860 comparison bool) (CaseMatch (App Coq.ZArith.BinIntDef.Z.compare gen_var_860 gen_var_859)) (CaseBranches true false false))))) (Definition Coq.ZArith.BinIntDef.Z.quotrem (Lambda gen_var_874 Z (Lambda gen_var_880 Z (Case 0 (Lambda gen_var_863 Z (App prod Z Z)) (CaseMatch gen_var_863) (CaseBranches (App pair Z Z Z0 Z0) (Lambda gen_var_864 positive (Case 0 (Lambda gen_var_865 Z (App prod Z Z)) (CaseMatch gen_var_865) (CaseBranches (App pair Z Z Z0 gen_var_864) (Lambda gen_var_866 positive (Case 2 (Lambda gen_var_867 (App prod N N) (App prod Z Z)) (CaseMatch (App Coq.NArith.BinNatDef.N.pos_div_eucl gen_var_864 (App Npos gen_var_866))) (CaseBranches (Lambda gen_var_868 N (Lambda gen_var_869 N (App pair Z Z (App Coq.ZArith.BinIntDef.Z.of_N gen_var_868) (App Coq.ZArith.BinIntDef.Z.of_N gen_var_869))))))) (Lambda gen_var_870 positive (Case 2 (Lambda gen_var_871 (App prod N N) (App prod Z Z)) (CaseMatch (App Coq.NArith.BinNatDef.N.pos_div_eucl gen_var_864 (App Npos gen_var_870))) (CaseBranches (Lambda gen_var_872 N (Lambda gen_var_873 N (App pair Z Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N gen_var_872)) (App Coq.ZArith.BinIntDef.Z.of_N gen_var_873)))))))))) (Lambda gen_var_874 positive (Case 0 (Lambda gen_var_875 Z (App prod Z Z)) (CaseMatch gen_var_875) (CaseBranches (App pair Z Z Z0 gen_var_874) (Lambda gen_var_876 positive (Case 2 (Lambda gen_var_877 (App prod N N) (App prod Z Z)) (CaseMatch (App Coq.NArith.BinNatDef.N.pos_div_eucl gen_var_874 (App Npos gen_var_876))) (CaseBranches (Lambda gen_var_878 N (Lambda gen_var_879 N (App pair Z Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N gen_var_878)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N gen_var_879)))))))) (Lambda gen_var_880 positive (Case 2 (Lambda gen_var_881 (App prod N N) (App prod Z Z)) (CaseMatch (App Coq.NArith.BinNatDef.N.pos_div_eucl gen_var_874 (App Npos gen_var_880))) (CaseBranches (Lambda gen_var_882 N (Lambda gen_var_883 N (App pair Z Z (App Coq.ZArith.BinIntDef.Z.of_N gen_var_882) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N gen_var_883)))))))))))))))) (Definition Coq.setoid_ring.ZArithRing.Zr_ring_lemma2 (App Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp (App eq Z) (App Coq.setoid_ring.Ring_theory.Eqsth Z) (App Coq.setoid_ring.Ring_theory.Eq_ext Z Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.opp) (App Coq.setoid_ring.Ring_theory.Rth_ARth Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp (App eq Z) (App Coq.setoid_ring.Ring_theory.Eqsth Z) (App Coq.setoid_ring.Ring_theory.Eq_ext Z Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.opp) Coq.setoid_ring.InitialRing.Zth) Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) (App Coq.setoid_ring.Ring_theory.IDmorph Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp (App eq Z) (App Coq.setoid_ring.Ring_theory.Eqsth Z) Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.Zbool.Zeq_bool_eq) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.ZArith.Zpow_def.Zpower_theory Coq.ZArith.BinIntDef.Z.quotrem (App Coq.setoid_ring.InitialRing.Ztriv_div_th Z (App eq Z) (App Coq.setoid_ring.Ring_theory.Eqsth Z) (App Coq.setoid_ring.Ring_theory.IDphi Z)) Coq.setoid_ring.InitialRing.get_signZ Coq.setoid_ring.InitialRing.get_signZ_th)) (Definition Coq.setoid_ring.Ring_tac.ring_subst_niter (App Coq.Init.Nat.mul (App Coq.Init.Nat.mul (App S (App S (App S (App S (App S (App S (App S (App S (App S (App S O)))))))))) (App S (App S (App S (App S (App S (App S (App S (App S (App S (App S O))))))))))) (App S (App S (App S (App S (App S (App S (App S (App S (App S (App S O)))))))))))) (Definition Coq.setoid_ring.Ring_polynom.norm_subst (Lambda gen_var_891 (Sort Type) (Lambda gen_var_892 gen_var_891 (Lambda gen_var_893 gen_var_891 (Lambda gen_var_894 (Prod Anonymous gen_var_891 (Prod Anonymous gen_var_891 gen_var_891)) (Lambda gen_var_897 (Prod Anonymous gen_var_891 (Prod Anonymous gen_var_891 gen_var_891)) (Lambda gen_var_900 (Prod Anonymous gen_var_891 (Prod Anonymous gen_var_891 gen_var_891)) (Lambda gen_var_903 (Prod Anonymous gen_var_891 gen_var_891) (Lambda gen_var_905 (Prod Anonymous gen_var_891 (Prod Anonymous gen_var_891 bool)) (Lambda gen_var_908 (Prod Anonymous gen_var_891 (Prod Anonymous gen_var_891 (App prod gen_var_891 gen_var_891))) (Lambda gen_var_911 nat (Lambda gen_var_912 (App list (App prod (App prod gen_var_891 Mon) (App Pol gen_var_891))) (LetIn gen_var_913 (Lambda gen_var_914 (App Pol gen_var_891) (App Coq.setoid_ring.Ring_polynom.PNSubstL gen_var_891 gen_var_892 gen_var_893 gen_var_894 gen_var_897 gen_var_905 gen_var_908 gen_var_914 gen_var_912 gen_var_911 gen_var_911)) (Prod gen_var_915 (App Pol gen_var_891) (App Pol gen_var_891)) (Lambda gen_var_916 (App PExpr gen_var_891) (App gen_var_913 (App Coq.setoid_ring.Ring_polynom.norm_aux gen_var_891 gen_var_892 gen_var_893 gen_var_894 gen_var_897 gen_var_900 gen_var_903 gen_var_905 gen_var_916)))))))))))))))) (Definition Coq.setoid_ring.Ring_polynom.PEeval (Lambda gen_var_917 (Sort Type) (Lambda gen_var_918 gen_var_917 (Lambda gen_var_919 gen_var_917 (Lambda gen_var_920 (Prod Anonymous gen_var_917 (Prod Anonymous gen_var_917 gen_var_917)) (Lambda gen_var_923 (Prod Anonymous gen_var_917 (Prod Anonymous gen_var_917 gen_var_917)) (Lambda gen_var_926 (Prod Anonymous gen_var_917 (Prod Anonymous gen_var_917 gen_var_917)) (Lambda gen_var_929 (Prod Anonymous gen_var_917 gen_var_917) (Lambda gen_var_931 (Sort Type) (Lambda gen_var_932 (Prod Anonymous gen_var_931 gen_var_917) (Lambda gen_var_934 (Sort Type) (Lambda gen_var_935 (Prod Anonymous N gen_var_934) (Lambda gen_var_937 (Prod Anonymous gen_var_917 (Prod Anonymous gen_var_934 gen_var_917)) (Fix (Functions (App gen_var_940 0 (Prod gen_var_941 (App list gen_var_917) (Prod gen_var_942 (App PExpr gen_var_931) gen_var_917)) (Lambda gen_var_943 (App list gen_var_917) (Lambda gen_var_945 (App PExpr gen_var_931) (Case 1 (Lambda gen_var_945 (App PExpr gen_var_931) gen_var_917) (CaseMatch gen_var_945) (CaseBranches gen_var_918 gen_var_919 (Lambda gen_var_946 gen_var_931 (App gen_var_932 gen_var_946)) (Lambda gen_var_947 positive (App Coq.setoid_ring.BinList.nth gen_var_917 gen_var_918 gen_var_947 gen_var_943)) (Lambda gen_var_948 (App PExpr gen_var_931) (Lambda gen_var_949 (App PExpr gen_var_931) (App gen_var_920 (App gen_var_940 gen_var_943 gen_var_948) (App gen_var_940 gen_var_943 gen_var_949)))) (Lambda gen_var_950 (App PExpr gen_var_931) (Lambda gen_var_951 (App PExpr gen_var_931) (App gen_var_926 (App gen_var_940 gen_var_943 gen_var_950) (App gen_var_940 gen_var_943 gen_var_951)))) (Lambda gen_var_952 (App PExpr gen_var_931) (Lambda gen_var_953 (App PExpr gen_var_931) (App gen_var_923 (App gen_var_940 gen_var_943 gen_var_952) (App gen_var_940 gen_var_943 gen_var_953)))) (Lambda gen_var_954 (App PExpr gen_var_931) (App gen_var_929 (App gen_var_940 gen_var_943 gen_var_954))) (Lambda gen_var_955 (App PExpr gen_var_931) (Lambda gen_var_956 N (App gen_var_937 (App gen_var_940 gen_var_943 gen_var_955) (App gen_var_935 gen_var_956)))))))))) 0)))))))))))))) (Definition Coq.setoid_ring.Ring_theory.IDphi (Lambda gen_var_957 (Sort Type) (Lambda gen_var_958 gen_var_957 gen_var_958))) (Definition Coq.ZArith.BinIntDef.Z.of_N (Lambda gen_var_960 N (Case 0 (Lambda gen_var_960 N Z) (CaseMatch gen_var_960) (CaseBranches Z0 (Lambda gen_var_961 positive (App Zpos gen_var_961)))))) (Definition Coq.ZArith.BinIntDef.Z.pow (Lambda gen_var_962 Z (Lambda gen_var_964 Z (Case 0 (Lambda gen_var_964 Z Z) (CaseMatch gen_var_964) (CaseBranches (App Zpos xH) (Lambda gen_var_965 positive (App Coq.ZArith.BinIntDef.Z.pow_pos gen_var_962 gen_var_965)) (Lambda gen_var_966 positive Z0)))))) (Definition Coq.setoid_ring.Ring_polynom.Pphi_pow (Lambda gen_var_970 (Sort Type) (Lambda gen_var_971 gen_var_970 (Lambda gen_var_972 gen_var_970 (Lambda gen_var_973 (Prod Anonymous gen_var_970 (Prod Anonymous gen_var_970 gen_var_970)) (Lambda gen_var_976 (Prod Anonymous gen_var_970 (Prod Anonymous gen_var_970 gen_var_970)) (Lambda gen_var_979 (Prod Anonymous gen_var_970 (Prod Anonymous gen_var_970 gen_var_970)) (Lambda gen_var_982 (Prod Anonymous gen_var_970 gen_var_970) (Lambda gen_var_984 (Sort Type) (Lambda gen_var_985 gen_var_984 (Lambda gen_var_986 gen_var_984 (Lambda gen_var_987 (Prod Anonymous gen_var_984 (Prod Anonymous gen_var_984 bool)) (Lambda gen_var_990 (Prod Anonymous gen_var_984 gen_var_970) (Lambda gen_var_992 (Sort Type) (Lambda gen_var_993 (Prod Anonymous N gen_var_992) (Lambda gen_var_995 (Prod Anonymous gen_var_970 (Prod Anonymous gen_var_992 gen_var_970)) (Lambda gen_var_998 (Prod Anonymous gen_var_984 (App option gen_var_984)) (LetIn gen_var_1000 (Lambda gen_var_1001 gen_var_970 (Lambda gen_var_1005 positive (Case 0 (Lambda gen_var_1003 positive gen_var_970) (CaseMatch gen_var_1003) (CaseBranches (Lambda gen_var_1004 positive (App gen_var_995 gen_var_1001 (App gen_var_993 (App Npos gen_var_1004)))) (Lambda gen_var_1005 positive (App gen_var_995 gen_var_1001 (App gen_var_993 (App Npos gen_var_1005)))) gen_var_1001)))) (Prod gen_var_1006 gen_var_970 (Prod gen_var_1007 positive gen_var_970)) (LetIn gen_var_1008 (Lambda gen_var_1009 gen_var_970 (Lambda gen_var_1010 positive (App gen_var_982 (App gen_var_1000 gen_var_1009 gen_var_1010)))) (Prod gen_var_1011 gen_var_970 (Prod gen_var_1012 positive gen_var_970)) (LetIn gen_var_1013 (Lambda gen_var_1014 gen_var_970 (Lambda gen_var_1015 gen_var_970 (Lambda gen_var_1016 positive (App gen_var_976 gen_var_1014 (App gen_var_1000 gen_var_1015 gen_var_1016))))) (Prod gen_var_1017 gen_var_970 (Prod gen_var_1018 gen_var_970 (Prod gen_var_1019 positive gen_var_970))) (App Coq.setoid_ring.Ring_polynom.Pphi_avoid gen_var_970 gen_var_971 gen_var_972 gen_var_973 gen_var_979 gen_var_982 gen_var_984 gen_var_985 gen_var_986 gen_var_987 gen_var_990 gen_var_998 gen_var_1000 gen_var_1008 gen_var_1013))))))))))))))))))))) (Definition Coq.setoid_ring.InitialRing.get_signZ (Lambda gen_var_1021 Z (Case 0 (Lambda gen_var_1021 Z (App option Z)) (CaseMatch gen_var_1021) (CaseBranches (App None Z) (Lambda gen_var_1022 positive (App None Z)) (Lambda gen_var_1023 positive (App Some Z (App Zpos gen_var_1023))))))) (Definition Coq.Init.Logic.eq_trans (Lambda gen_var_1132 (Sort Type) (Lambda gen_var_1133 gen_var_1132 (Lambda gen_var_1138 gen_var_1132 (Lambda gen_var_1135 gen_var_1132 (Lambda gen_var_1136 (App eq gen_var_1132 gen_var_1133 gen_var_1134) (Lambda gen_var_1137 (App eq gen_var_1132 gen_var_1134 gen_var_1135) (Case 2 (Lambda gen_var_1138 gen_var_1132 (Lambda Anonymous (App eq gen_var_1132 gen_var_1138 gen_var_1138) (App eq gen_var_1132 gen_var_1133 gen_var_1138))) (CaseMatch gen_var_1137) (CaseBranches gen_var_1136))))))))) (Definition ExportProof.intersection_morphism (Cast (Lambda gen_var_1536 ExportProof.set (Lambda gen_var_1537 ExportProof.set (Lambda gen_var_1538 (App ExportProof.set_eq gen_var_1536 gen_var_1537) (Cast (Lambda gen_var_1539 ExportProof.set (Lambda gen_var_1540 ExportProof.set (Lambda gen_var_1541 (App ExportProof.set_eq gen_var_1539 gen_var_1540) (Cast (Lambda gen_var_1542 (Axiom ExportProof.X) (Cast (App Coq.Init.Logic.eq_ind_r bool (App gen_var_1537 gen_var_1542) (Lambda gen_var_1543 bool (App eq bool (App Coq.Init.Datatypes.andb gen_var_1543 (App gen_var_1539 gen_var_1542)) (App Coq.Init.Datatypes.andb (App gen_var_1537 gen_var_1542) (App gen_var_1540 gen_var_1542)))) (App Coq.Init.Logic.eq_ind_r bool (App gen_var_1540 gen_var_1542) (Lambda gen_var_1544 bool (App eq bool (App Coq.Init.Datatypes.andb (App gen_var_1537 gen_var_1542) gen_var_1544) (App Coq.Init.Datatypes.andb (App gen_var_1537 gen_var_1542) (App gen_var_1540 gen_var_1542)))) (App eq_refl bool (App Coq.Init.Datatypes.andb (App gen_var_1537 gen_var_1542) (App gen_var_1540 gen_var_1542))) (App gen_var_1539 gen_var_1542) (App gen_var_1541 gen_var_1542)) (App gen_var_1536 gen_var_1542) (App gen_var_1538 gen_var_1542)) REVERTcast (App eq bool (App ExportProof.binary_intersection gen_var_1536 gen_var_1539 gen_var_1542) (App ExportProof.binary_intersection gen_var_1537 gen_var_1540 gen_var_1542)))) REVERTcast (App ExportProof.set_eq (App ExportProof.binary_intersection gen_var_1536 gen_var_1539) (App ExportProof.binary_intersection gen_var_1537 gen_var_1540)))))) REVERTcast (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq (App ExportProof.binary_intersection gen_var_1536) (App ExportProof.binary_intersection gen_var_1537)))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod Anonymous ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection))) (Definition Coq.setoid_ring.ZArithRing.Zr_ring_lemma1 (App Coq.setoid_ring.Ring_polynom.ring_correct Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp (App eq Z) (App Coq.setoid_ring.Ring_theory.Eqsth Z) (App Coq.setoid_ring.Ring_theory.Eq_ext Z Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.opp) (App Coq.setoid_ring.Ring_theory.Rth_ARth Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp (App eq Z) (App Coq.setoid_ring.Ring_theory.Eqsth Z) (App Coq.setoid_ring.Ring_theory.Eq_ext Z Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.opp) Coq.setoid_ring.InitialRing.Zth) Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) (App Coq.setoid_ring.Ring_theory.IDmorph Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp (App eq Z) (App Coq.setoid_ring.Ring_theory.Eqsth Z) Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.Zbool.Zeq_bool_eq) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.ZArith.Zpow_def.Zpower_theory Coq.ZArith.BinIntDef.Z.quotrem (App Coq.setoid_ring.InitialRing.Ztriv_div_th Z (App eq Z) (App Coq.setoid_ring.Ring_theory.Eqsth Z) (App Coq.setoid_ring.Ring_theory.IDphi Z)))) (Definition Coq.setoid_ring.Ring_polynom.Peq (Lambda gen_var_2228 (Sort Type) (Lambda gen_var_2229 (Prod Anonymous gen_var_2228 (Prod Anonymous gen_var_2228 bool)) (Fix (Functions (App gen_var_2232 0 (Prod gen_var_2233 (App Pol gen_var_2228) (Prod gen_var_2234 (App Pol gen_var_2228) bool)) (Lambda gen_var_2256 (App Pol gen_var_2228) (Lambda gen_var_2263 (App Pol gen_var_2228) (Case 1 (Lambda gen_var_2237 (App Pol gen_var_2228) bool) (CaseMatch gen_var_2237) (CaseBranches (Lambda gen_var_2238 gen_var_2228 (Case 1 (Lambda gen_var_2239 (App Pol gen_var_2228) bool) (CaseMatch gen_var_2239) (CaseBranches (Lambda gen_var_2240 gen_var_2228 (App gen_var_2229 gen_var_2238 gen_var_2240)) (Lambda gen_var_2241 positive (Lambda gen_var_2242 (App Pol gen_var_2228) false)) (Lambda gen_var_2243 (App Pol gen_var_2228) (Lambda gen_var_2244 positive (Lambda gen_var_2245 (App Pol gen_var_2228) false)))))) (Lambda gen_var_2246 positive (Lambda gen_var_2247 (App Pol gen_var_2228) (Case 1 (Lambda gen_var_2248 (App Pol gen_var_2228) bool) (CaseMatch gen_var_2248) (CaseBranches (Lambda gen_var_2249 gen_var_2228 false) (Lambda gen_var_2250 positive (Lambda gen_var_2251 (App Pol gen_var_2228) (Case 0 (Lambda gen_var_2252 comparison bool) (CaseMatch (App Coq.PArith.BinPosDef.Pos.compare gen_var_2246 gen_var_2250)) (CaseBranches (App gen_var_2232 gen_var_2247 gen_var_2251) false false)))) (Lambda gen_var_2253 (App Pol gen_var_2228) (Lambda gen_var_2254 positive (Lambda gen_var_2255 (App Pol gen_var_2228) false))))))) (Lambda gen_var_2256 (App Pol gen_var_2228) (Lambda gen_var_2257 positive (Lambda gen_var_2258 (App Pol gen_var_2228) (Case 1 (Lambda gen_var_2259 (App Pol gen_var_2228) bool) (CaseMatch gen_var_2259) (CaseBranches (Lambda gen_var_2260 gen_var_2228 false) (Lambda gen_var_2261 positive (Lambda gen_var_2262 (App Pol gen_var_2228) false)) (Lambda gen_var_2263 (App Pol gen_var_2228) (Lambda gen_var_2264 positive (Lambda gen_var_2265 (App Pol gen_var_2228) (Case 0 (Lambda gen_var_2266 comparison bool) (CaseMatch (App Coq.PArith.BinPosDef.Pos.compare gen_var_2257 gen_var_2264)) (CaseBranches (Case 0 (Lambda gen_var_2267 bool bool) (CaseMatch (App gen_var_2232 gen_var_2256 gen_var_2263)) (CaseBranches (App gen_var_2232 gen_var_2258 gen_var_2265) false)) false false)))))))))))))))) 0)))) (Definition Coq.Lists.List.map_length (Lambda gen_var_2276 (Sort Type) (Lambda gen_var_2277 (Sort Type) (Lambda gen_var_2278 (Prod Anonymous gen_var_2276 gen_var_2277) (Lambda gen_var_2283 (App list gen_var_2276) (App Coq.Init.Datatypes.list_ind gen_var_2276 (Lambda gen_var_2281 (App list gen_var_2276) (App eq nat (App Coq.Init.Datatypes.length gen_var_2277 (App Coq.Lists.List.map gen_var_2276 gen_var_2277 gen_var_2278 gen_var_2281)) (App Coq.Init.Datatypes.length gen_var_2276 gen_var_2281))) (Cast (App eq_refl nat O) REVERTcast (App eq nat (App Coq.Init.Datatypes.length gen_var_2277 (App Coq.Lists.List.map gen_var_2276 gen_var_2277 gen_var_2278 (App nil gen_var_2276))) (App Coq.Init.Datatypes.length gen_var_2276 (App nil gen_var_2276)))) (Lambda gen_var_2282 gen_var_2276 (Lambda gen_var_2283 (App list gen_var_2276) (Lambda gen_var_2284 (App eq nat (App Coq.Init.Datatypes.length gen_var_2277 (App Coq.Lists.List.map gen_var_2276 gen_var_2277 gen_var_2278 gen_var_2283)) (App Coq.Init.Datatypes.length gen_var_2276 gen_var_2283)) (Cast (App Coq.Init.Peano.f_equal_nat nat S (App Coq.Init.Datatypes.length gen_var_2277 (App Coq.Lists.List.map gen_var_2276 gen_var_2277 gen_var_2278 gen_var_2283)) (App Coq.Init.Datatypes.length gen_var_2276 gen_var_2283) gen_var_2284) REVERTcast (App eq nat (App Coq.Init.Datatypes.length gen_var_2277 (App Coq.Lists.List.map gen_var_2276 gen_var_2277 gen_var_2278 (App cons gen_var_2276 gen_var_2282 gen_var_2283))) (App Coq.Init.Datatypes.length gen_var_2276 (App cons gen_var_2276 gen_var_2282 gen_var_2283))))))) gen_var_2283)))))) (Definition ExportProof.sublists_map (Lambda gen_var_2327 (Sort Type) (Lambda gen_var_2328 (Sort Type) (Lambda gen_var_2329 (Prod Anonymous gen_var_2327 gen_var_2328) (Lambda gen_var_2395 (App list gen_var_2327) (App Coq.Init.Datatypes.list_ind gen_var_2327 (Lambda gen_var_2332 (App list gen_var_2327) (App eq (App list (App list gen_var_2328)) (App ExportProof.sublists gen_var_2328 (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329 gen_var_2332)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2332)))) (App eq_refl (App list (App list gen_var_2328)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 (App nil gen_var_2327)))) (Lambda gen_var_2333 gen_var_2327 (Lambda gen_var_2395 (App list gen_var_2327) (Lambda gen_var_2335 (App eq (App list (App list gen_var_2328)) (App ExportProof.sublists gen_var_2328 (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329 gen_var_2334)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2334))) (Cast (App Coq.Init.Logic.eq_ind_r (App list (App list gen_var_2328)) (App Coq.Init.Datatypes.app (App list gen_var_2328) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2334)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2327) (Lambda gen_var_2336 (App list gen_var_2327) (App cons gen_var_2327 gen_var_2333 gen_var_2336)) (App ExportProof.sublists gen_var_2327 gen_var_2336)))) (Lambda gen_var_2338 (App list (App list gen_var_2328)) (App eq (App list (App list gen_var_2328)) (App Coq.Init.Datatypes.app (App list gen_var_2328) (App ExportProof.sublists gen_var_2328 (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329 gen_var_2337)) (App Coq.Lists.List.map (App list gen_var_2328) (App list gen_var_2328) (Lambda gen_var_2338 (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) gen_var_2338)) (App ExportProof.sublists gen_var_2328 (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329 gen_var_2338)))) gen_var_2338)) (App Coq.Init.Logic.eq_ind_r (App list (App list gen_var_2328)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2338)) (Lambda gen_var_2341 (App list (App list gen_var_2328)) (App eq (App list (App list gen_var_2328)) (App Coq.Init.Datatypes.app (App list gen_var_2328) gen_var_2339 (App Coq.Lists.List.map (App list gen_var_2328) (App list gen_var_2328) (Lambda gen_var_2340 (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) gen_var_2340)) gen_var_2340)) (App Coq.Init.Datatypes.app (App list gen_var_2328) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2340)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2327) (Lambda gen_var_2341 (App list gen_var_2327) (App cons gen_var_2327 gen_var_2333 gen_var_2341)) (App ExportProof.sublists gen_var_2327 gen_var_2341)))))) (LetIn gen_var_2379 (LetIn gen_var_2344 (App ExportProof.sublists gen_var_2327 gen_var_2341) (App list (App list gen_var_2327)) (App Coq.Init.Datatypes.list_ind (App list gen_var_2327) (Lambda gen_var_2344 (App list (App list gen_var_2327)) (App eq (App list (App list gen_var_2328)) (App Coq.Lists.List.map (App list gen_var_2328) (App list gen_var_2328) (Lambda gen_var_2345 (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) gen_var_2345)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) gen_var_2344)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2327) (Lambda gen_var_2346 (App list gen_var_2327) (App cons gen_var_2327 gen_var_2333 gen_var_2346)) gen_var_2344)))) (App eq_refl (App list (App list gen_var_2328)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2327) (Lambda gen_var_2347 (App list gen_var_2327) (App cons gen_var_2327 gen_var_2333 gen_var_2347)) (App nil (App list gen_var_2327))))) (Lambda gen_var_2348 (App list gen_var_2327) (Lambda gen_var_2349 (App list (App list gen_var_2327)) (Lambda gen_var_2350 (App eq (App list (App list gen_var_2328)) (App Coq.Lists.List.map (App list gen_var_2328) (App list gen_var_2328) (Lambda gen_var_2351 (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) gen_var_2351)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) gen_var_2349)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2327) (Lambda gen_var_2352 (App list gen_var_2327) (App cons gen_var_2327 gen_var_2333 gen_var_2352)) gen_var_2349))) (Cast (LetIn gen_var_2358 gen_var_2350 (App eq (App list (App list gen_var_2328)) (App Coq.Lists.List.map (App list gen_var_2328) (App list gen_var_2328) (Lambda gen_var_2354 (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) gen_var_2354)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) gen_var_2349)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2327) (Lambda gen_var_2355 (App list gen_var_2327) (App cons gen_var_2327 gen_var_2333 gen_var_2355)) gen_var_2349))) (App (LetIn gen_var_2358 (App eq_refl (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329 gen_var_2348))) (App eq (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329 gen_var_2348)) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329 gen_var_2348))) (App (LetIn gen_var_2358 (App eq_refl (Sort Type) (App list gen_var_2328)) (App eq (Sort Type) (App list gen_var_2328) (App list gen_var_2328)) (App (Lambda gen_var_2358 (App eq (Sort Type) (App list gen_var_2328) (App list gen_var_2328)) (Lambda gen_var_2359 (App eq (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329 gen_var_2348)) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329 gen_var_2348))) (Lambda gen_var_2360 (App eq (App list (App list gen_var_2328)) (App Coq.Lists.List.map (App list gen_var_2328) (App list gen_var_2328) (Lambda gen_var_2361 (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) gen_var_2361)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) gen_var_2349)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2327) (Lambda gen_var_2362 (App list gen_var_2327) (App cons gen_var_2327 gen_var_2333 gen_var_2362)) gen_var_2349))) (App Coq.Init.Logic.eq_trans (App list (App list gen_var_2328)) (App cons (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329 gen_var_2348)) (App Coq.Lists.List.map (App list gen_var_2328) (App list gen_var_2328) (Lambda gen_var_2363 (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) gen_var_2363)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) gen_var_2349))) (App cons (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329 gen_var_2348)) (App Coq.Lists.List.map (App list gen_var_2328) (App list gen_var_2328) (Lambda gen_var_2364 (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) gen_var_2364)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) gen_var_2349))) (App cons (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329 gen_var_2348)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2327) (Lambda gen_var_2365 (App list gen_var_2327) (App cons gen_var_2327 gen_var_2333 gen_var_2365)) gen_var_2349))) (App Coq.Init.Logic.f_equal (Prod gen_var_2366 (App list (App list gen_var_2328)) (App list (App list gen_var_2328))) (App list (App list gen_var_2328)) (Lambda gen_var_2367 (Prod gen_var_2368 (App list (App list gen_var_2328)) (App list (App list gen_var_2328))) (App gen_var_2367 (App Coq.Lists.List.map (App list gen_var_2328) (App list gen_var_2328) (Lambda gen_var_2369 (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) gen_var_2369)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) gen_var_2349)))) (App cons (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329 gen_var_2348))) (App cons (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329 gen_var_2348))) (App eq_refl (Prod gen_var_2370 (App list (App list gen_var_2328)) (App list (App list gen_var_2328))) (App cons (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329 gen_var_2348))))) (App Coq.Init.Logic.f_equal (App list (App list gen_var_2328)) (App list (App list gen_var_2328)) (App cons (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329 gen_var_2348))) (App Coq.Lists.List.map (App list gen_var_2328) (App list gen_var_2328) (Lambda gen_var_2371 (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) gen_var_2371)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) gen_var_2349)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2327) (Lambda gen_var_2372 (App list gen_var_2327) (App cons gen_var_2327 gen_var_2333 gen_var_2372)) gen_var_2349)) gen_var_2360))))) gen_var_2358)) gen_var_2358)) gen_var_2358)) REVERTcast (App eq (App list (App list gen_var_2328)) (App Coq.Lists.List.map (App list gen_var_2328) (App list gen_var_2328) (Lambda gen_var_2373 (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) gen_var_2373)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App cons (App list gen_var_2327) gen_var_2348 gen_var_2349))) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2327) (Lambda gen_var_2374 (App list gen_var_2327) (App cons gen_var_2327 gen_var_2333 gen_var_2374)) (App cons (App list gen_var_2327) gen_var_2348 gen_var_2349)))))))) gen_var_2344)) (App eq (App list (App list gen_var_2328)) (App Coq.Lists.List.map (App list gen_var_2328) (App list gen_var_2328) (Lambda gen_var_2375 (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) gen_var_2375)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2375))) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2327) (Lambda gen_var_2376 (App list gen_var_2327) (App cons gen_var_2327 gen_var_2333 gen_var_2376)) (App ExportProof.sublists gen_var_2327 gen_var_2376)))) (App (LetIn gen_var_2379 (App eq_refl (App list (App list gen_var_2328)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2376))) (App eq (App list (App list gen_var_2328)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2376)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2376))) (App (LetIn gen_var_2379 (App eq_refl (Sort Type) (App list gen_var_2328)) (App eq (Sort Type) (App list gen_var_2328) (App list gen_var_2328)) (App (Lambda gen_var_2379 (App eq (Sort Type) (App list gen_var_2328) (App list gen_var_2328)) (Lambda gen_var_2380 (App eq (App list (App list gen_var_2328)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2376)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2376))) (Lambda gen_var_2381 (App eq (App list (App list gen_var_2328)) (App Coq.Lists.List.map (App list gen_var_2328) (App list gen_var_2328) (Lambda gen_var_2382 (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) gen_var_2382)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2382))) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2327) (Lambda gen_var_2383 (App list gen_var_2327) (App cons gen_var_2327 gen_var_2333 gen_var_2383)) (App ExportProof.sublists gen_var_2327 gen_var_2383)))) (App Coq.Init.Logic.eq_trans (App list (App list gen_var_2328)) (App Coq.Init.Datatypes.app (App list gen_var_2328) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2383)) (App Coq.Lists.List.map (App list gen_var_2328) (App list gen_var_2328) (Lambda gen_var_2384 (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) gen_var_2384)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2384)))) (App Coq.Init.Datatypes.app (App list gen_var_2328) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2384)) (App Coq.Lists.List.map (App list gen_var_2328) (App list gen_var_2328) (Lambda gen_var_2385 (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) gen_var_2385)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2385)))) (App Coq.Init.Datatypes.app (App list gen_var_2328) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2385)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2327) (Lambda gen_var_2386 (App list gen_var_2327) (App cons gen_var_2327 gen_var_2333 gen_var_2386)) (App ExportProof.sublists gen_var_2327 gen_var_2386)))) (App Coq.Init.Logic.f_equal (Prod Anonymous (App list (App list gen_var_2328)) (App list (App list gen_var_2328))) (App list (App list gen_var_2328)) (Lambda gen_var_2388 (Prod Anonymous (App list (App list gen_var_2328)) (App list (App list gen_var_2328))) (App gen_var_2388 (App Coq.Lists.List.map (App list gen_var_2328) (App list gen_var_2328) (Lambda gen_var_2390 (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) gen_var_2390)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2390))))) (App Coq.Init.Datatypes.app (App list gen_var_2328) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2390))) (App Coq.Init.Datatypes.app (App list gen_var_2328) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2390))) (App eq_refl (Prod Anonymous (App list (App list gen_var_2328)) (App list (App list gen_var_2328))) (App Coq.Init.Datatypes.app (App list gen_var_2328) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2390))))) (App Coq.Init.Logic.f_equal (App list (App list gen_var_2328)) (App list (App list gen_var_2328)) (App Coq.Init.Datatypes.app (App list gen_var_2328) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2390))) (App Coq.Lists.List.map (App list gen_var_2328) (App list gen_var_2328) (Lambda gen_var_2392 (App list gen_var_2328) (App cons gen_var_2328 (App gen_var_2329 gen_var_2333) gen_var_2392)) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2392))) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2327) (Lambda gen_var_2393 (App list gen_var_2327) (App cons gen_var_2327 gen_var_2333 gen_var_2393)) (App ExportProof.sublists gen_var_2327 gen_var_2393))) gen_var_2381))))) gen_var_2379)) gen_var_2379)) gen_var_2379)) (App ExportProof.sublists gen_var_2328 (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329 gen_var_2393)) gen_var_2335) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App Coq.Init.Datatypes.app (App list gen_var_2327) (App ExportProof.sublists gen_var_2327 gen_var_2393) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2327) (Lambda gen_var_2394 (App list gen_var_2327) (App cons gen_var_2327 gen_var_2333 gen_var_2394)) (App ExportProof.sublists gen_var_2327 gen_var_2394)))) (App Coq.Lists.List.map_app (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 gen_var_2394) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2327) (Lambda gen_var_2395 (App list gen_var_2327) (App cons gen_var_2327 gen_var_2333 gen_var_2395)) (App ExportProof.sublists gen_var_2327 gen_var_2395)))) REVERTcast (App eq (App list (App list gen_var_2328)) (App ExportProof.sublists gen_var_2328 (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329 (App cons gen_var_2327 gen_var_2333 gen_var_2395))) (App Coq.Lists.List.map (App list gen_var_2327) (App list gen_var_2328) (App Coq.Lists.List.map gen_var_2327 gen_var_2328 gen_var_2329) (App ExportProof.sublists gen_var_2327 (App cons gen_var_2327 gen_var_2333 gen_var_2395)))))))) gen_var_2395)))))) (Definition ExportProof.sublists_proper (Lambda gen_var_2452 (Sort Type) (Lambda gen_var_2484 (App list gen_var_2452) (App Coq.Init.Datatypes.list_ind gen_var_2452 (Lambda gen_var_2454 (App list gen_var_2452) (App eq (App list (App list gen_var_2452)) (App ExportProof.sublists gen_var_2452 gen_var_2454) (App cons (App list gen_var_2452) (App nil gen_var_2452) (App Coq.Lists.List.filter (App list gen_var_2452) (App ExportProof.nonempty gen_var_2452) (App ExportProof.sublists gen_var_2452 gen_var_2454))))) (App eq_refl (App list (App list gen_var_2452)) (App cons (App list gen_var_2452) (App nil gen_var_2452) (App Coq.Lists.List.filter (App list gen_var_2452) (App ExportProof.nonempty gen_var_2452) (App ExportProof.sublists gen_var_2452 (App nil gen_var_2452))))) (Lambda gen_var_2455 gen_var_2452 (Lambda gen_var_2484 (App list gen_var_2452) (Lambda gen_var_2457 (App eq (App list (App list gen_var_2452)) (App ExportProof.sublists gen_var_2452 gen_var_2456) (App cons (App list gen_var_2452) (App nil gen_var_2452) (App Coq.Lists.List.filter (App list gen_var_2452) (App ExportProof.nonempty gen_var_2452) (App ExportProof.sublists gen_var_2452 gen_var_2456)))) (Cast (App (Lambda gen_var_2458 (App eq (App list (App list gen_var_2452)) (App ExportProof.sublists gen_var_2452 gen_var_2456) (App cons (App list gen_var_2452) (App nil gen_var_2452) (App Coq.Lists.List.filter (App list gen_var_2452) (App ExportProof.nonempty gen_var_2452) (App ExportProof.sublists gen_var_2452 gen_var_2456)))) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (App list (App list gen_var_2452)) (App eq (App list (App list gen_var_2452))) (App Coq.Classes.RelationClasses.eq_Transitive (App list (App list gen_var_2452))) (App Coq.Init.Datatypes.app (App list gen_var_2452) (App ExportProof.sublists gen_var_2452 gen_var_2456) (App Coq.Lists.List.map (App list gen_var_2452) (App list gen_var_2452) (Lambda gen_var_2459 (App list gen_var_2452) (App cons gen_var_2452 gen_var_2455 gen_var_2459)) (App ExportProof.sublists gen_var_2452 gen_var_2459))) (App Coq.Init.Datatypes.app (App list gen_var_2452) (App cons (App list gen_var_2452) (App nil gen_var_2452) (App Coq.Lists.List.filter (App list gen_var_2452) (App ExportProof.nonempty gen_var_2452) (App ExportProof.sublists gen_var_2452 gen_var_2459))) (App Coq.Lists.List.map (App list gen_var_2452) (App list gen_var_2452) (Lambda gen_var_2460 (App list gen_var_2452) (App cons gen_var_2452 gen_var_2455 gen_var_2460)) (App ExportProof.sublists gen_var_2452 gen_var_2460))) (App Coq.Classes.Morphisms.reflexive_proper (Prod Anonymous (App list (App list gen_var_2452)) (Prod Anonymous (App list (App list gen_var_2452)) (App list (App list gen_var_2452)))) (App Coq.Classes.Morphisms.respectful (App list (App list gen_var_2452)) (Prod Anonymous (App list (App list gen_var_2452)) (App list (App list gen_var_2452))) (App eq (App list (App list gen_var_2452))) (App Coq.Classes.Morphisms.respectful (App list (App list gen_var_2452)) (App list (App list gen_var_2452)) (App eq (App list (App list gen_var_2452))) (App eq (App list (App list gen_var_2452))))) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive (App list (App list gen_var_2452)) (Prod Anonymous (App list (App list gen_var_2452)) (App list (App list gen_var_2452))) (App Coq.Classes.Morphisms.respectful (App list (App list gen_var_2452)) (App list (App list gen_var_2452)) (App eq (App list (App list gen_var_2452))) (App eq (App list (App list gen_var_2452)))) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive (App list (App list gen_var_2452)) (App list (App list gen_var_2452)) (App eq (App list (App list gen_var_2452))) (App Coq.Classes.RelationClasses.eq_Reflexive (App list (App list gen_var_2452))))) (App Coq.Init.Datatypes.app (App list gen_var_2452)) (App ExportProof.sublists gen_var_2452 gen_var_2460) (App cons (App list gen_var_2452) (App nil gen_var_2452) (App Coq.Lists.List.filter (App list gen_var_2452) (App ExportProof.nonempty gen_var_2452) (App ExportProof.sublists gen_var_2452 gen_var_2460))) gen_var_2458 (App Coq.Lists.List.map (App list gen_var_2452) (App list gen_var_2452) (Lambda gen_var_2465 (App list gen_var_2452) (App cons gen_var_2452 gen_var_2455 gen_var_2465)) (App ExportProof.sublists gen_var_2452 gen_var_2465)) (App Coq.Lists.List.map (App list gen_var_2452) (App list gen_var_2452) (Lambda gen_var_2466 (App list gen_var_2452) (App cons gen_var_2452 gen_var_2455 gen_var_2466)) (App ExportProof.sublists gen_var_2452 gen_var_2466)) (App Coq.Classes.Morphisms.eq_proper_proxy (App list (App list gen_var_2452)) (App Coq.Lists.List.map (App list gen_var_2452) (App list gen_var_2452) (Lambda gen_var_2467 (App list gen_var_2452) (App cons gen_var_2452 gen_var_2455 gen_var_2467)) (App ExportProof.sublists gen_var_2452 gen_var_2467)))) (App cons (App list gen_var_2452) (App nil gen_var_2452) (App Coq.Lists.List.filter (App list gen_var_2452) (App ExportProof.nonempty gen_var_2452) (App Coq.Init.Datatypes.app (App list gen_var_2452) (App ExportProof.sublists gen_var_2452 gen_var_2467) (App Coq.Lists.List.map (App list gen_var_2452) (App list gen_var_2452) (Lambda gen_var_2468 (App list gen_var_2452) (App cons gen_var_2452 gen_var_2455 gen_var_2468)) (App ExportProof.sublists gen_var_2452 gen_var_2468))))) (App cons (App list gen_var_2452) (App nil gen_var_2452) (App Coq.Lists.List.filter (App list gen_var_2452) (App ExportProof.nonempty gen_var_2452) (App Coq.Init.Datatypes.app (App list gen_var_2452) (App ExportProof.sublists gen_var_2452 gen_var_2468) (App Coq.Lists.List.map (App list gen_var_2452) (App list gen_var_2452) (Lambda gen_var_2469 (App list gen_var_2452) (App cons gen_var_2452 gen_var_2455 gen_var_2469)) (App ExportProof.sublists gen_var_2452 gen_var_2469))))) (App Coq.Classes.Morphisms.eq_proper_proxy (App list (App list gen_var_2452)) (App cons (App list gen_var_2452) (App nil gen_var_2452) (App Coq.Lists.List.filter (App list gen_var_2452) (App ExportProof.nonempty gen_var_2452) (App Coq.Init.Datatypes.app (App list gen_var_2452) (App ExportProof.sublists gen_var_2452 gen_var_2469) (App Coq.Lists.List.map (App list gen_var_2452) (App list gen_var_2452) (Lambda gen_var_2470 (App list gen_var_2452) (App cons gen_var_2452 gen_var_2455 gen_var_2470)) (App ExportProof.sublists gen_var_2452 gen_var_2470)))))))) gen_var_2457 (Cast (App Coq.Init.Logic.eq_ind_r (App list (App list gen_var_2452)) (App Coq.Init.Datatypes.app (App list gen_var_2452) (App Coq.Lists.List.filter (App list gen_var_2452) (App ExportProof.nonempty gen_var_2452) (App ExportProof.sublists gen_var_2452 gen_var_2470)) (App Coq.Lists.List.filter (App list gen_var_2452) (App ExportProof.nonempty gen_var_2452) (App Coq.Lists.List.map (App list gen_var_2452) (App list gen_var_2452) (Lambda gen_var_2471 (App list gen_var_2452) (App cons gen_var_2452 gen_var_2455 gen_var_2471)) (App ExportProof.sublists gen_var_2452 gen_var_2471)))) (Lambda gen_var_2473 (App list (App list gen_var_2452)) (App eq (App list (App list gen_var_2452)) (App cons (App list gen_var_2452) (App nil gen_var_2452) (App Coq.Init.Datatypes.app (App list gen_var_2452) (App Coq.Lists.List.filter (App list gen_var_2452) (App ExportProof.nonempty gen_var_2452) (App ExportProof.sublists gen_var_2452 gen_var_2472)) (App Coq.Lists.List.map (App list gen_var_2452) (App list gen_var_2452) (Lambda gen_var_2473 (App list gen_var_2452) (App cons gen_var_2452 gen_var_2455 gen_var_2473)) (App ExportProof.sublists gen_var_2452 gen_var_2473)))) (App cons (App list gen_var_2452) (App nil gen_var_2452) gen_var_2473))) (App Coq.Init.Logic.eq_ind_r (App list (App list gen_var_2452)) (App Coq.Lists.List.map (App list gen_var_2452) (App list gen_var_2452) (Lambda gen_var_2474 (App list gen_var_2452) (App cons gen_var_2452 gen_var_2455 gen_var_2474)) (App ExportProof.sublists gen_var_2452 gen_var_2474)) (Lambda gen_var_2476 (App list (App list gen_var_2452)) (App eq (App list (App list gen_var_2452)) (App cons (App list gen_var_2452) (App nil gen_var_2452) (App Coq.Init.Datatypes.app (App list gen_var_2452) (App Coq.Lists.List.filter (App list gen_var_2452) (App ExportProof.nonempty gen_var_2452) (App ExportProof.sublists gen_var_2452 gen_var_2475)) (App Coq.Lists.List.map (App list gen_var_2452) (App list gen_var_2452) (Lambda gen_var_2476 (App list gen_var_2452) (App cons gen_var_2452 gen_var_2455 gen_var_2476)) (App ExportProof.sublists gen_var_2452 gen_var_2476)))) (App cons (App list gen_var_2452) (App nil gen_var_2452) (App Coq.Init.Datatypes.app (App list gen_var_2452) (App Coq.Lists.List.filter (App list gen_var_2452) (App ExportProof.nonempty gen_var_2452) (App ExportProof.sublists gen_var_2452 gen_var_2476)) gen_var_2476)))) (App eq_refl (App list (App list gen_var_2452)) (App cons (App list gen_var_2452) (App nil gen_var_2452) (App Coq.Init.Datatypes.app (App list gen_var_2452) (App Coq.Lists.List.filter (App list gen_var_2452) (App ExportProof.nonempty gen_var_2452) (App ExportProof.sublists gen_var_2452 gen_var_2476)) (App Coq.Lists.List.map (App list gen_var_2452) (App list gen_var_2452) (Lambda gen_var_2477 (App list gen_var_2452) (App cons gen_var_2452 gen_var_2455 gen_var_2477)) (App ExportProof.sublists gen_var_2452 gen_var_2477))))) (App Coq.Lists.List.filter (App list gen_var_2452) (App ExportProof.nonempty gen_var_2452) (App Coq.Lists.List.map (App list gen_var_2452) (App list gen_var_2452) (Lambda gen_var_2478 (App list gen_var_2452) (App cons gen_var_2452 gen_var_2455 gen_var_2478)) (App ExportProof.sublists gen_var_2452 gen_var_2478))) (App ExportProof.filter_map_always (App list gen_var_2452) (App list gen_var_2452) (App ExportProof.nonempty gen_var_2452) (Lambda gen_var_2479 (App list gen_var_2452) (App cons gen_var_2452 gen_var_2455 gen_var_2479)) (App ExportProof.sublists gen_var_2452 gen_var_2479) (Lambda gen_var_2480 (App list gen_var_2452) (App eq_refl bool true)))) (App Coq.Lists.List.filter (App list gen_var_2452) (App ExportProof.nonempty gen_var_2452) (App Coq.Init.Datatypes.app (App list gen_var_2452) (App ExportProof.sublists gen_var_2452 gen_var_2479) (App Coq.Lists.List.map (App list gen_var_2452) (App list gen_var_2452) (Lambda gen_var_2481 (App list gen_var_2452) (App cons gen_var_2452 gen_var_2455 gen_var_2481)) (App ExportProof.sublists gen_var_2452 gen_var_2481)))) (App ExportProof.filter_app (App list gen_var_2452) (App ExportProof.nonempty gen_var_2452) (App ExportProof.sublists gen_var_2452 gen_var_2481) (App Coq.Lists.List.map (App list gen_var_2452) (App list gen_var_2452) (Lambda gen_var_2482 (App list gen_var_2452) (App cons gen_var_2452 gen_var_2455 gen_var_2482)) (App ExportProof.sublists gen_var_2452 gen_var_2482)))) REVERTcast (App eq (App list (App list gen_var_2452)) (App Coq.Init.Datatypes.app (App list gen_var_2452) (App cons (App list gen_var_2452) (App nil gen_var_2452) (App Coq.Lists.List.filter (App list gen_var_2452) (App ExportProof.nonempty gen_var_2452) (App ExportProof.sublists gen_var_2452 gen_var_2482))) (App Coq.Lists.List.map (App list gen_var_2452) (App list gen_var_2452) (Lambda gen_var_2483 (App list gen_var_2452) (App cons gen_var_2452 gen_var_2455 gen_var_2483)) (App ExportProof.sublists gen_var_2452 gen_var_2483))) (App cons (App list gen_var_2452) (App nil gen_var_2452) (App Coq.Lists.List.filter (App list gen_var_2452) (App ExportProof.nonempty gen_var_2452) (App Coq.Init.Datatypes.app (App list gen_var_2452) (App ExportProof.sublists gen_var_2452 gen_var_2483) (App Coq.Lists.List.map (App list gen_var_2452) (App list gen_var_2452) (Lambda gen_var_2484 (App list gen_var_2452) (App cons gen_var_2452 gen_var_2455 gen_var_2484)) (App ExportProof.sublists gen_var_2452 gen_var_2484)))))))) REVERTcast (App eq (App list (App list gen_var_2452)) (App ExportProof.sublists gen_var_2452 (App cons gen_var_2452 gen_var_2455 gen_var_2484)) (App cons (App list gen_var_2452) (App nil gen_var_2452) (App Coq.Lists.List.filter (App list gen_var_2452) (App ExportProof.nonempty gen_var_2452) (App ExportProof.sublists gen_var_2452 (App cons gen_var_2452 gen_var_2455 gen_var_2484))))))))) gen_var_2484)))) (Definition ExportProof.filter_map_always (Lambda gen_var_2486 (Sort Type) (Lambda gen_var_2487 (Sort Type) (Lambda gen_var_2488 (Prod gen_var_2489 gen_var_2487 bool) (Lambda gen_var_2490 (Prod Anonymous gen_var_2486 gen_var_2487) (Lambda gen_var_2504 (App list gen_var_2486) (Lambda gen_var_2493 (Prod gen_var_2494 gen_var_2486 (App eq bool (App gen_var_2488 (App gen_var_2490 gen_var_2494)) true)) (App Coq.Init.Datatypes.list_ind gen_var_2486 (Lambda gen_var_2495 (App list gen_var_2486) (App eq (App list gen_var_2487) (App Coq.Lists.List.filter gen_var_2487 gen_var_2488 (App Coq.Lists.List.map gen_var_2486 gen_var_2487 gen_var_2490 gen_var_2495)) (App Coq.Lists.List.map gen_var_2486 gen_var_2487 gen_var_2490 gen_var_2495))) (App eq_refl (App list gen_var_2487) (App Coq.Lists.List.map gen_var_2486 gen_var_2487 gen_var_2490 (App nil gen_var_2486))) (Lambda gen_var_2496 gen_var_2486 (Lambda gen_var_2504 (App list gen_var_2486) (Lambda gen_var_2498 (App eq (App list gen_var_2487) (App Coq.Lists.List.filter gen_var_2487 gen_var_2488 (App Coq.Lists.List.map gen_var_2486 gen_var_2487 gen_var_2490 gen_var_2497)) (App Coq.Lists.List.map gen_var_2486 gen_var_2487 gen_var_2490 gen_var_2497)) (Cast (App Coq.Init.Logic.eq_ind_r bool true (Lambda gen_var_2500 bool (App eq (App list gen_var_2487) (Case 0 (Lambda gen_var_2500 bool (App list gen_var_2487)) (CaseMatch gen_var_2500) (CaseBranches (App cons gen_var_2487 (App gen_var_2490 gen_var_2496) (App Coq.Lists.List.filter gen_var_2487 gen_var_2488 (App Coq.Lists.List.map gen_var_2486 gen_var_2487 gen_var_2490 gen_var_2497))) (App Coq.Lists.List.filter gen_var_2487 gen_var_2488 (App Coq.Lists.List.map gen_var_2486 gen_var_2487 gen_var_2490 gen_var_2497)))) (App cons gen_var_2487 (App gen_var_2490 gen_var_2496) (App Coq.Lists.List.map gen_var_2486 gen_var_2487 gen_var_2490 gen_var_2497)))) (App Coq.Init.Logic.eq_trans (App list gen_var_2487) (App cons gen_var_2487 (App gen_var_2490 gen_var_2496) (App Coq.Lists.List.filter gen_var_2487 gen_var_2488 (App Coq.Lists.List.map gen_var_2486 gen_var_2487 gen_var_2490 gen_var_2497))) (App cons gen_var_2487 (App gen_var_2490 gen_var_2496) (App Coq.Lists.List.filter gen_var_2487 gen_var_2488 (App Coq.Lists.List.map gen_var_2486 gen_var_2487 gen_var_2490 gen_var_2497))) (App cons gen_var_2487 (App gen_var_2490 gen_var_2496) (App Coq.Lists.List.map gen_var_2486 gen_var_2487 gen_var_2490 gen_var_2497)) (App Coq.Init.Logic.f_equal (Prod gen_var_2501 (App list gen_var_2487) (App list gen_var_2487)) (App list gen_var_2487) (Lambda gen_var_2502 (Prod gen_var_2503 (App list gen_var_2487) (App list gen_var_2487)) (App gen_var_2502 (App Coq.Lists.List.filter gen_var_2487 gen_var_2488 (App Coq.Lists.List.map gen_var_2486 gen_var_2487 gen_var_2490 gen_var_2503)))) (App cons gen_var_2487 (App gen_var_2490 gen_var_2496)) (App cons gen_var_2487 (App gen_var_2490 gen_var_2496)) (App eq_refl (Prod gen_var_2504 (App list gen_var_2487) (App list gen_var_2487)) (App cons gen_var_2487 (App gen_var_2490 gen_var_2496)))) (App Coq.Init.Logic.f_equal (App list gen_var_2487) (App list gen_var_2487) (App cons gen_var_2487 (App gen_var_2490 gen_var_2496)) (App Coq.Lists.List.filter gen_var_2487 gen_var_2488 (App Coq.Lists.List.map gen_var_2486 gen_var_2487 gen_var_2490 gen_var_2504)) (App Coq.Lists.List.map gen_var_2486 gen_var_2487 gen_var_2490 gen_var_2504) gen_var_2498)) (App gen_var_2488 (App gen_var_2490 gen_var_2496)) (App gen_var_2493 gen_var_2496)) REVERTcast (App eq (App list gen_var_2487) (App Coq.Lists.List.filter gen_var_2487 gen_var_2488 (App Coq.Lists.List.map gen_var_2486 gen_var_2487 gen_var_2490 (App cons gen_var_2486 gen_var_2496 gen_var_2504))) (App Coq.Lists.List.map gen_var_2486 gen_var_2487 gen_var_2490 (App cons gen_var_2486 gen_var_2496 gen_var_2504))))))) gen_var_2504)))))))) (Definition ExportProof.sum_app (Lambda gen_var_2527 (App list Z) (Lambda gen_var_2524 (App list Z) (App Coq.Init.Datatypes.list_ind Z (Lambda gen_var_2525 (App list Z) (App eq Z (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_2525 gen_var_2524)) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum gen_var_2525) (App ExportProof.sum gen_var_2524)))) (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App nil Z)) (App ExportProof.sum gen_var_2524))) (Lambda gen_var_2526 Z (Lambda gen_var_2527 (App list Z) (Lambda gen_var_2528 (App eq Z (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_2527 gen_var_2524)) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum gen_var_2527) (App ExportProof.sum gen_var_2524))) (Cast (App Coq.Logic.Decidable.dec_not_not (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_2527 gen_var_2524))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 (App ExportProof.sum gen_var_2527)) (App ExportProof.sum gen_var_2524))) (App Coq.ZArith.BinInt.Z.eq_decidable (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_2527 gen_var_2524))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 (App ExportProof.sum gen_var_2527)) (App ExportProof.sum gen_var_2524))) (Lambda gen_var_2585 (App Coq.Init.Logic.not (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_2527 gen_var_2524))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 (App ExportProof.sum gen_var_2527)) (App ExportProof.sum gen_var_2524)))) (App Coq.Init.Logic.ex_ind Z (Lambda gen_var_2530 Z (App eq Z (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_2527 gen_var_2524)) gen_var_2530)) False (Lambda gen_var_2531 Z (Lambda gen_var_2532 (App eq Z (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_2527 gen_var_2524)) gen_var_2531) (App Coq.Init.Logic.ex_ind Z (Lambda gen_var_2533 Z (App eq Z (App ExportProof.sum gen_var_2527) gen_var_2533)) False (Lambda gen_var_2534 Z (Lambda gen_var_2535 (App eq Z (App ExportProof.sum gen_var_2527) gen_var_2534) (App Coq.Init.Logic.ex_ind Z (Lambda gen_var_2536 Z (App eq Z (App ExportProof.sum gen_var_2524) gen_var_2536)) False (Lambda gen_var_2537 Z (Lambda gen_var_2538 (App eq Z (App ExportProof.sum gen_var_2524) gen_var_2537) (App (Lambda gen_var_2539 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_2541 (App gen_var_2539 gen_var_2531) (App Coq.Init.Logic.eq_ind_r Z gen_var_2531 gen_var_2539 gen_var_2541 (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_2527 gen_var_2524)) gen_var_2532))) (Lambda gen_var_2542 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_2542 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum gen_var_2527) (App ExportProof.sum gen_var_2524)))) Z0) False)) (App (Lambda gen_var_2544 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_2546 (App gen_var_2544 gen_var_2534) (App Coq.Init.Logic.eq_ind_r Z gen_var_2534 gen_var_2544 gen_var_2546 (App ExportProof.sum gen_var_2527) gen_var_2535))) (Lambda gen_var_2547 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_2531 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add gen_var_2547 (App ExportProof.sum gen_var_2524)))) Z0) False)) (App (Lambda gen_var_2549 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_2551 (App gen_var_2549 gen_var_2537) (App Coq.Init.Logic.eq_ind_r Z gen_var_2537 gen_var_2549 gen_var_2551 (App ExportProof.sum gen_var_2524) gen_var_2538))) (Lambda gen_var_2552 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_2531 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add gen_var_2534 gen_var_2552))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_comm gen_var_2534 gen_var_2537 (Lambda gen_var_2554 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_2531 (App Coq.ZArith.BinIntDef.Z.opp gen_var_2554)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_plus_distr gen_var_2537 gen_var_2534 (Lambda gen_var_2556 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_2531 gen_var_2556) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_2537 (Lambda gen_var_2558 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_2531 (App Coq.ZArith.BinIntDef.Z.add gen_var_2558 (App Coq.ZArith.BinIntDef.Z.opp gen_var_2534))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_2534 (Lambda gen_var_2560 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_2531 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2537 (App Zneg xH)) gen_var_2560)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_permute gen_var_2531 (App Coq.ZArith.BinIntDef.Z.mul gen_var_2537 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.mul gen_var_2534 (App Zneg xH)) (Lambda gen_var_2562 Z (Prod Anonymous (App eq Z gen_var_2562 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_comm gen_var_2531 (App Coq.ZArith.BinIntDef.Z.mul gen_var_2534 (App Zneg xH)) (Lambda gen_var_2564 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2537 (App Zneg xH)) gen_var_2564) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor0 gen_var_2531 (Lambda gen_var_2566 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2537 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2534 (App Zneg xH)) gen_var_2566)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor6 (App Coq.ZArith.BinIntDef.Z.mul gen_var_2531 (App Zpos xH)) (Lambda gen_var_2568 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2537 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2534 (App Zneg xH)) gen_var_2568)) Z0) False)) (Lambda gen_var_2570 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2537 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2534 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2531 (App Zpos xH)) Z0))) Z0) (App (Lambda gen_var_2571 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_2573 (App gen_var_2571 gen_var_2531) (App Coq.Init.Logic.eq_ind_r Z gen_var_2531 gen_var_2571 gen_var_2573 (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_2527 gen_var_2524)) gen_var_2532))) (Lambda gen_var_2574 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 gen_var_2574) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 (App ExportProof.sum gen_var_2527)) (App ExportProof.sum gen_var_2524)))) Z0) False)) (App (Lambda gen_var_2576 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_2578 (App gen_var_2576 gen_var_2534) (App Coq.Init.Logic.eq_ind_r Z gen_var_2534 gen_var_2576 gen_var_2578 (App ExportProof.sum gen_var_2527) gen_var_2535))) (Lambda gen_var_2579 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 gen_var_2531) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 gen_var_2579) (App ExportProof.sum gen_var_2524)))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_comm gen_var_2526 gen_var_2534 (Lambda gen_var_2581 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 gen_var_2531) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add gen_var_2581 (App ExportProof.sum gen_var_2524)))) Z0) False)) (App (Lambda gen_var_2583 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_2585 (App gen_var_2583 gen_var_2537) (App Coq.Init.Logic.eq_ind_r Z gen_var_2537 gen_var_2583 gen_var_2585 (App ExportProof.sum gen_var_2524) gen_var_2538))) (Lambda gen_var_2586 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 gen_var_2531) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2534 gen_var_2526) gen_var_2586))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_comm (App Coq.ZArith.BinIntDef.Z.add gen_var_2534 gen_var_2526) gen_var_2537 (Lambda gen_var_2588 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 gen_var_2531) (App Coq.ZArith.BinIntDef.Z.opp gen_var_2588)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_plus_distr gen_var_2537 (App Coq.ZArith.BinIntDef.Z.add gen_var_2534 gen_var_2526) (Lambda gen_var_2590 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 gen_var_2531) gen_var_2590) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_2537 (Lambda gen_var_2592 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 gen_var_2531) (App Coq.ZArith.BinIntDef.Z.add gen_var_2592 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add gen_var_2534 gen_var_2526)))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_plus_distr gen_var_2534 gen_var_2526 (Lambda gen_var_2594 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 gen_var_2531) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2537 (App Zneg xH)) gen_var_2594)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_2534 (Lambda gen_var_2596 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 gen_var_2531) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2537 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add gen_var_2596 (App Coq.ZArith.BinIntDef.Z.opp gen_var_2526)))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_2526 (Lambda gen_var_2598 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 gen_var_2531) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2537 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2534 (App Zneg xH)) gen_var_2598))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_permute (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 gen_var_2531) (App Coq.ZArith.BinIntDef.Z.mul gen_var_2537 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2534 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.mul gen_var_2526 (App Zneg xH))) (Lambda gen_var_2600 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_2600 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_permute (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 gen_var_2531) (App Coq.ZArith.BinIntDef.Z.mul gen_var_2534 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.mul gen_var_2526 (App Zneg xH)) (Lambda gen_var_2602 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2537 (App Zneg xH)) gen_var_2602) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_comm (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 gen_var_2531) (App Coq.ZArith.BinIntDef.Z.mul gen_var_2526 (App Zneg xH)) (Lambda gen_var_2604 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2537 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2534 (App Zneg xH)) gen_var_2604)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_assoc (App Coq.ZArith.BinIntDef.Z.mul gen_var_2526 (App Zneg xH)) gen_var_2526 gen_var_2531 (Lambda gen_var_2606 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2537 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2534 (App Zneg xH)) gen_var_2606)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor3 gen_var_2526 (App Zneg xH) (Lambda gen_var_2608 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2537 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2534 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add gen_var_2608 gen_var_2531))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor0 gen_var_2531 (Lambda gen_var_2610 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2537 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2534 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2526 Z0) gen_var_2610))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor6 (App Coq.ZArith.BinIntDef.Z.mul gen_var_2531 (App Zpos xH)) (Lambda gen_var_2612 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2537 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2534 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2526 Z0) gen_var_2612))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 gen_var_2526 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2531 (App Zpos xH)) Z0) (Lambda gen_var_2614 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2537 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2534 (App Zneg xH)) gen_var_2614)) Z0) False)) (Lambda gen_var_2616 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2537 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2534 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2531 (App Zpos xH)) Z0))) Z0) (App Coq.omega.OmegaLemmas.fast_OMEGA15 gen_var_2537 (App Zneg xH) (App Zneg xH) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2534 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2531 (App Zpos xH)) Z0)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2534 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2531 (App Zpos xH)) Z0)) (App Zneg xH) (Lambda gen_var_2617 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_2617 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 gen_var_2537 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2534 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2531 (App Zpos xH)) Z0)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2534 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2531 (App Zpos xH)) Z0)) (App Zneg xH))) (Lambda gen_var_2619 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_2619 Z0) False)) (App Coq.omega.OmegaLemmas.fast_OMEGA15 gen_var_2534 (App Zneg xH) (App Zneg xH) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2531 (App Zpos xH)) Z0) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2531 (App Zpos xH)) Z0) (App Zneg xH) (Lambda gen_var_2621 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_2621 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 gen_var_2534 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2531 (App Zpos xH)) Z0) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2531 (App Zpos xH)) Z0) (App Zneg xH))) (Lambda gen_var_2623 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_2623 Z0) False)) (App Coq.omega.OmegaLemmas.fast_OMEGA15 gen_var_2531 (App Zpos xH) (App Zpos xH) Z0 Z0 (App Zneg xH) (Lambda gen_var_2625 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_2625 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 gen_var_2531 (App Coq.ZArith.BinIntDef.Z.add Z0 (App Coq.ZArith.BinIntDef.Z.mul Z0 (App Zneg xH))) (Lambda gen_var_2627 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_2627 Z0) False)) (Lambda gen_var_2629 (App Coq.ZArith.BinInt.Zne Z0 Z0) (App gen_var_2629 (App eq_refl Z Z0)))))))) (App Coq.omega.OmegaLemmas.OMEGA17 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2537 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2534 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2531 (App Zpos xH)) Z0))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2537 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2534 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2531 (App Zpos xH)) Z0))) (App Zneg xH) gen_var_2616 gen_var_2570)))))))))))))))))))) (App Coq.ZArith.auxiliary.Zne_left (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_2527 gen_var_2524))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2526 (App ExportProof.sum gen_var_2527)) (App ExportProof.sum gen_var_2524)) gen_var_2585))))))))))))) (App Coq.ZArith.auxiliary.Zegal_left (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_2527 gen_var_2524)) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum gen_var_2527) (App ExportProof.sum gen_var_2524)) gen_var_2528)))) (App Coq.omega.OmegaLemmas.new_var (App ExportProof.sum gen_var_2524))))) (App Coq.omega.OmegaLemmas.new_var (App ExportProof.sum gen_var_2527))))) (App Coq.omega.OmegaLemmas.new_var (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_2527 gen_var_2524)))))) REVERTcast (App eq Z (App ExportProof.sum (App Coq.Init.Datatypes.app Z (App cons Z gen_var_2526 gen_var_2527) gen_var_2524)) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App cons Z gen_var_2526 gen_var_2527)) (App ExportProof.sum gen_var_2524))))))) gen_var_2527)))) (Definition Coq.Lists.List.map_app (Lambda gen_var_2632 (Sort Type) (Lambda gen_var_2633 (Sort Type) (Lambda gen_var_2634 (Prod Anonymous gen_var_2632 gen_var_2633) (Lambda gen_var_2646 (App list gen_var_2632) (App Coq.Init.Datatypes.list_ind gen_var_2632 (Lambda gen_var_2637 (App list gen_var_2632) (Prod gen_var_2638 (App list gen_var_2632) (App eq (App list gen_var_2633) (App Coq.Lists.List.map gen_var_2632 gen_var_2633 gen_var_2634 (App Coq.Init.Datatypes.app gen_var_2632 gen_var_2637 gen_var_2638)) (App Coq.Init.Datatypes.app gen_var_2633 (App Coq.Lists.List.map gen_var_2632 gen_var_2633 gen_var_2634 gen_var_2637) (App Coq.Lists.List.map gen_var_2632 gen_var_2633 gen_var_2634 gen_var_2638))))) (Cast (Lambda gen_var_2639 (App list gen_var_2632) (App eq_refl (App list gen_var_2633) (App Coq.Lists.List.map gen_var_2632 gen_var_2633 gen_var_2634 gen_var_2639))) REVERTcast (Prod gen_var_2640 (App list gen_var_2632) (App eq (App list gen_var_2633) (App Coq.Lists.List.map gen_var_2632 gen_var_2633 gen_var_2634 (App Coq.Init.Datatypes.app gen_var_2632 (App nil gen_var_2632) gen_var_2640)) (App Coq.Init.Datatypes.app gen_var_2633 (App Coq.Lists.List.map gen_var_2632 gen_var_2633 gen_var_2634 (App nil gen_var_2632)) (App Coq.Lists.List.map gen_var_2632 gen_var_2633 gen_var_2634 gen_var_2640))))) (Lambda gen_var_2641 gen_var_2632 (Lambda gen_var_2646 (App list gen_var_2632) (Lambda gen_var_2643 (Prod gen_var_2644 (App list gen_var_2632) (App eq (App list gen_var_2633) (App Coq.Lists.List.map gen_var_2632 gen_var_2633 gen_var_2634 (App Coq.Init.Datatypes.app gen_var_2632 gen_var_2642 gen_var_2644)) (App Coq.Init.Datatypes.app gen_var_2633 (App Coq.Lists.List.map gen_var_2632 gen_var_2633 gen_var_2634 gen_var_2642) (App Coq.Lists.List.map gen_var_2632 gen_var_2633 gen_var_2634 gen_var_2644)))) (Cast (Lambda gen_var_2645 (App list gen_var_2632) (App Coq.Init.Logic.eq_ind_r (App list gen_var_2633) (App Coq.Init.Datatypes.app gen_var_2633 (App Coq.Lists.List.map gen_var_2632 gen_var_2633 gen_var_2634 gen_var_2642) (App Coq.Lists.List.map gen_var_2632 gen_var_2633 gen_var_2634 gen_var_2645)) (Lambda gen_var_2646 (App list gen_var_2633) (App eq (App list gen_var_2633) (App cons gen_var_2633 (App gen_var_2634 gen_var_2641) gen_var_2646) (App cons gen_var_2633 (App gen_var_2634 gen_var_2641) (App Coq.Init.Datatypes.app gen_var_2633 (App Coq.Lists.List.map gen_var_2632 gen_var_2633 gen_var_2634 gen_var_2646) (App Coq.Lists.List.map gen_var_2632 gen_var_2633 gen_var_2634 gen_var_2645))))) (App eq_refl (App list gen_var_2633) (App cons gen_var_2633 (App gen_var_2634 gen_var_2641) (App Coq.Init.Datatypes.app gen_var_2633 (App Coq.Lists.List.map gen_var_2632 gen_var_2633 gen_var_2634 gen_var_2646) (App Coq.Lists.List.map gen_var_2632 gen_var_2633 gen_var_2634 gen_var_2645)))) (App Coq.Lists.List.map gen_var_2632 gen_var_2633 gen_var_2634 (App Coq.Init.Datatypes.app gen_var_2632 gen_var_2646 gen_var_2645)) (App gen_var_2643 gen_var_2645))) REVERTcast (Prod gen_var_2647 (App list gen_var_2632) (App eq (App list gen_var_2633) (App Coq.Lists.List.map gen_var_2632 gen_var_2633 gen_var_2634 (App Coq.Init.Datatypes.app gen_var_2632 (App cons gen_var_2632 gen_var_2641 gen_var_2646) gen_var_2647)) (App Coq.Init.Datatypes.app gen_var_2633 (App Coq.Lists.List.map gen_var_2632 gen_var_2633 gen_var_2634 (App cons gen_var_2632 gen_var_2641 gen_var_2646)) (App Coq.Lists.List.map gen_var_2632 gen_var_2633 gen_var_2634 gen_var_2647)))))))) gen_var_2646)))))) (Definition ExportProof.filter_app (Lambda gen_var_2650 (Sort Type) (Lambda gen_var_2651 (Prod Anonymous gen_var_2650 bool) (Lambda gen_var_2655 (App list gen_var_2650) (Lambda gen_var_2654 (App list gen_var_2650) (App Coq.Init.Datatypes.list_ind gen_var_2650 (Lambda gen_var_2655 (App list gen_var_2650) (App eq (App list gen_var_2650) (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 (App Coq.Init.Datatypes.app gen_var_2650 gen_var_2655 gen_var_2654)) (App Coq.Init.Datatypes.app gen_var_2650 (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 gen_var_2655) (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 gen_var_2654)))) (Cast (App eq_refl (App list gen_var_2650) (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 gen_var_2654)) REVERTcast (App eq (App list gen_var_2650) (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 (App Coq.Init.Datatypes.app gen_var_2650 (App nil gen_var_2650) gen_var_2654)) (App Coq.Init.Datatypes.app gen_var_2650 (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 (App nil gen_var_2650)) (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 gen_var_2654)))) (Lambda gen_var_2656 gen_var_2650 (Lambda gen_var_2666 (App list gen_var_2650) (Lambda gen_var_2658 (App eq (App list gen_var_2650) (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 (App Coq.Init.Datatypes.app gen_var_2650 gen_var_2657 gen_var_2654)) (App Coq.Init.Datatypes.app gen_var_2650 (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 gen_var_2657) (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 gen_var_2654))) (Cast (LetIn gen_var_2662 (App gen_var_2651 gen_var_2656) bool (Case 0 (Lambda gen_var_2662 bool (App eq (App list gen_var_2650) (Case 0 (Lambda gen_var_2661 bool (App list gen_var_2650)) (CaseMatch gen_var_2661) (CaseBranches (App cons gen_var_2650 gen_var_2656 (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 (App Coq.Init.Datatypes.app gen_var_2650 gen_var_2657 gen_var_2654))) (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 (App Coq.Init.Datatypes.app gen_var_2650 gen_var_2657 gen_var_2654)))) (App Coq.Init.Datatypes.app gen_var_2650 (Case 0 (Lambda gen_var_2662 bool (App list gen_var_2650)) (CaseMatch gen_var_2662) (CaseBranches (App cons gen_var_2650 gen_var_2656 (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 gen_var_2657)) (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 gen_var_2657))) (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 gen_var_2654)))) (CaseMatch gen_var_2662) (CaseBranches (Cast (App Coq.Init.Logic.eq_trans (App list gen_var_2650) (App cons gen_var_2650 gen_var_2656 (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 (App Coq.Init.Datatypes.app gen_var_2650 gen_var_2657 gen_var_2654))) (App cons gen_var_2650 gen_var_2656 (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 (App Coq.Init.Datatypes.app gen_var_2650 gen_var_2657 gen_var_2654))) (App cons gen_var_2650 gen_var_2656 (App Coq.Init.Datatypes.app gen_var_2650 (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 gen_var_2657) (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 gen_var_2654))) (App Coq.Init.Logic.f_equal (Prod gen_var_2663 (App list gen_var_2650) (App list gen_var_2650)) (App list gen_var_2650) (Lambda gen_var_2664 (Prod gen_var_2665 (App list gen_var_2650) (App list gen_var_2650)) (App gen_var_2664 (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 (App Coq.Init.Datatypes.app gen_var_2650 gen_var_2665 gen_var_2654)))) (App cons gen_var_2650 gen_var_2656) (App cons gen_var_2650 gen_var_2656) (App eq_refl (Prod gen_var_2666 (App list gen_var_2650) (App list gen_var_2650)) (App cons gen_var_2650 gen_var_2656))) (App Coq.Init.Logic.f_equal (App list gen_var_2650) (App list gen_var_2650) (App cons gen_var_2650 gen_var_2656) (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 (App Coq.Init.Datatypes.app gen_var_2650 gen_var_2666 gen_var_2654)) (App Coq.Init.Datatypes.app gen_var_2650 (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 gen_var_2666) (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 gen_var_2654)) gen_var_2658)) REVERTcast (App eq (App list gen_var_2650) (App cons gen_var_2650 gen_var_2656 (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 (App Coq.Init.Datatypes.app gen_var_2650 gen_var_2666 gen_var_2654))) (App Coq.Init.Datatypes.app gen_var_2650 (App cons gen_var_2650 gen_var_2656 (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 gen_var_2666)) (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 gen_var_2654)))) (Cast gen_var_2658 REVERTcast (App eq (App list gen_var_2650) (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 (App Coq.Init.Datatypes.app gen_var_2650 gen_var_2666 gen_var_2654)) (App Coq.Init.Datatypes.app gen_var_2650 (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 gen_var_2666) (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 gen_var_2654))))))) REVERTcast (App eq (App list gen_var_2650) (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 (App Coq.Init.Datatypes.app gen_var_2650 (App cons gen_var_2650 gen_var_2656 gen_var_2666) gen_var_2654)) (App Coq.Init.Datatypes.app gen_var_2650 (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 (App cons gen_var_2650 gen_var_2656 gen_var_2666)) (App Coq.Lists.List.filter gen_var_2650 gen_var_2651 gen_var_2654))))))) gen_var_2655)))))) (Definition ExportProof.cardinal_binary_union (Lambda gen_var_2668 ExportProof.set (Lambda gen_var_2669 ExportProof.set (App Coq.Init.Logic.eq_ind Z (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2668 gen_var_2669)) (Lambda gen_var_2670 Z (App eq Z (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2668 gen_var_2669)) gen_var_2670)) (App Coq.Logic.Decidable.dec_not_not (App eq Z (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2668 gen_var_2669)) (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2668 gen_var_2669))) (App Coq.ZArith.BinInt.Z.eq_decidable (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2668 gen_var_2669)) (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2668 gen_var_2669))) (Lambda gen_var_2682 (App Coq.Init.Logic.not (App eq Z (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2668 gen_var_2669)) (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2668 gen_var_2669)))) (App Coq.Init.Logic.ex_ind Z (Lambda gen_var_2672 Z (App eq Z (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2668 gen_var_2669)) gen_var_2672)) False (Lambda gen_var_2673 Z (Lambda gen_var_2674 (App eq Z (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2668 gen_var_2669)) gen_var_2673) (App (Lambda gen_var_2675 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_2677 (App gen_var_2675 gen_var_2673) (App Coq.Init.Logic.eq_ind_r Z gen_var_2673 gen_var_2675 gen_var_2677 (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2668 gen_var_2669)) gen_var_2674))) (Lambda gen_var_2678 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add gen_var_2678 (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2668 gen_var_2669)))) Z0) False)) (App (Lambda gen_var_2680 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_2682 (App gen_var_2680 gen_var_2673) (App Coq.Init.Logic.eq_ind_r Z gen_var_2673 gen_var_2680 gen_var_2682 (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2668 gen_var_2669)) gen_var_2674))) (Lambda gen_var_2683 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add gen_var_2673 (App Coq.ZArith.BinIntDef.Z.opp gen_var_2683)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_2673 (Lambda gen_var_2685 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add gen_var_2673 gen_var_2685) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor2 gen_var_2673 (App Zneg xH) (Lambda gen_var_2687 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_2687 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor6 (App Coq.ZArith.BinIntDef.Z.mul gen_var_2673 Z0) (Lambda gen_var_2689 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_2689 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 gen_var_2673 Z0 (Lambda gen_var_2691 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_2691 Z0) False)) (Lambda gen_var_2693 (App Coq.ZArith.BinInt.Zne Z0 Z0) (App gen_var_2693 (App eq_refl Z Z0)))))))) (App Coq.ZArith.auxiliary.Zne_left (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2668 gen_var_2669)) (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2668 gen_var_2669)) gen_var_2682)))) (App Coq.omega.OmegaLemmas.new_var (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2668 gen_var_2669)))))) (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2668) (App ExportProof.cardinal gen_var_2669)) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_2668 gen_var_2669))) (App ExportProof.cardinal_union_lemma gen_var_2668 gen_var_2669))))) (Definition ExportProof.inclusion_exclusion (Lambda gen_var_2667 (App list ExportProof.set) (LetIn gen_var_2651 (Lambda gen_var_36 (App list ExportProof.set) (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection gen_var_4)) (App ExportProof.alternating_sign (App Coq.Init.Nat.add (App S O) (App Coq.Init.Datatypes.length ExportProof.set gen_var_36))))) (Prod gen_var_37 (App list ExportProof.set) Z) (LetIn gen_var_2516 (App Coq.Init.Datatypes.length ExportProof.set gen_var_34) nat (LetIn gen_var_156 (App eq_refl nat gen_var_38) (App eq nat gen_var_38 (App Coq.Init.Datatypes.length ExportProof.set gen_var_34)) (App Coq.Init.Datatypes.nat_ind (Lambda gen_var_51 nat (Prod gen_var_95 (App list ExportProof.set) (Prod gen_var_53 (App eq nat gen_var_51 (App Coq.Init.Datatypes.length ExportProof.set gen_var_52)) (App eq Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_52)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_63 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_95)))))))) (Lambda gen_var_135 (App list ExportProof.set) (Lambda gen_var_136 (App eq nat O (App Coq.Init.Datatypes.length ExportProof.set gen_var_96)) (App (Case 1 (Lambda gen_var_98 (App list ExportProof.set) (Prod gen_var_99 (App eq nat O (App Coq.Init.Datatypes.length ExportProof.set gen_var_98)) (App eq Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_98)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_72 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_98))))))) (CaseMatch gen_var_98) (CaseBranches (Lambda gen_var_100 (App eq nat O (App Coq.Init.Datatypes.length ExportProof.set (App nil ExportProof.set))) (Cast (Cast (App Coq.Init.Logic.eq_ind_r Z Z0 (Lambda gen_var_109 Z (App eq Z gen_var_109 Z0)) (App eq_refl Z Z0) (App ExportProof.cardinal ExportProof.empty_set) ExportProof.cardinal_empty) REVERTcast (App eq Z (App ExportProof.cardinal (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_union ExportProof.empty_set (App nil ExportProof.set))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z (Lambda gen_var_133 (App list ExportProof.set) (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection gen_var_133)) (App ExportProof.alternating_sign (App Coq.Init.Nat.add (App S O) (App Coq.Init.Datatypes.length ExportProof.set gen_var_133))))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App nil ExportProof.set))))))) REVERTcast (App eq Z (App ExportProof.cardinal (App ExportProof.list_union (App nil ExportProof.set))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_120 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App nil ExportProof.set)))))))) (Lambda gen_var_134 ExportProof.set (Lambda gen_var_135 (App list ExportProof.set) (Lambda gen_var_136 (App eq nat O (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set gen_var_134 gen_var_135))) (LetIn gen_var_137 (App Coq.Init.Logic.eq_ind nat O (Lambda gen_var_147 nat (Case 0 (Lambda gen_var_148 nat (Sort Prop)) (CaseMatch gen_var_147) (CaseBranches True (Lambda Anonymous nat False)))) I (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set gen_var_134 gen_var_135)) gen_var_136) False (App Coq.Init.Logic.False_ind (App eq Z (App ExportProof.cardinal (App ExportProof.list_union (App cons ExportProof.set gen_var_134 gen_var_135))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_151 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App cons ExportProof.set gen_var_134 gen_var_135)))))) gen_var_137))))))) gen_var_136))) (Lambda gen_var_2516 nat (Lambda gen_var_154 (Prod gen_var_155 (App list ExportProof.set) (Prod gen_var_156 (App eq nat gen_var_153 (App Coq.Init.Datatypes.length ExportProof.set gen_var_155)) (App eq Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_155)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_151 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_155))))))) (Lambda gen_var_2667 (App list ExportProof.set) (Lambda gen_var_182 (App eq nat (App S gen_var_153) (App Coq.Init.Datatypes.length ExportProof.set gen_var_157)) (App (Case 1 (Lambda gen_var_159 (App list ExportProof.set) (Prod gen_var_160 (App eq nat (App S gen_var_153) (App Coq.Init.Datatypes.length ExportProof.set gen_var_159)) (App eq Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_159)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_151 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_159))))))) (CaseMatch gen_var_159) (CaseBranches (Lambda gen_var_161 (App eq nat (App S gen_var_153) (App Coq.Init.Datatypes.length ExportProof.set (App nil ExportProof.set))) (LetIn gen_var_162 (App Coq.Init.Logic.eq_ind nat (App S gen_var_153) (Lambda gen_var_163 nat (Case 0 (Lambda gen_var_164 nat (Sort Prop)) (CaseMatch gen_var_163) (CaseBranches False (Lambda Anonymous nat True)))) I (App Coq.Init.Datatypes.length ExportProof.set (App nil ExportProof.set)) gen_var_161) False (App Coq.Init.Logic.False_ind (App eq Z (App ExportProof.cardinal (App ExportProof.list_union (App nil ExportProof.set))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_151 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App nil ExportProof.set)))))) gen_var_162))) (Lambda gen_var_2656 ExportProof.set (Lambda gen_var_2667 (App list ExportProof.set) (Lambda gen_var_182 (App eq nat (App S gen_var_164) (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set gen_var_166 gen_var_167))) (LetIn gen_var_2682 (App Coq.Init.Logic.f_equal nat nat (Lambda gen_var_179 nat (Case 0 (Lambda gen_var_180 nat nat) (CaseMatch gen_var_179) (CaseBranches gen_var_180 (Lambda gen_var_181 nat gen_var_181)))) (App S gen_var_181) (App S (App Coq.Init.Datatypes.length ExportProof.set gen_var_167)) gen_var_168) (App eq nat gen_var_181 (App Coq.Init.Datatypes.length ExportProof.set gen_var_167)) (App (Lambda gen_var_182 (App eq nat gen_var_181 (App Coq.Init.Datatypes.length ExportProof.set gen_var_167)) (Cast (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_166) (App ExportProof.cardinal (App ExportProof.list_union gen_var_167))) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_166 (App ExportProof.list_union gen_var_167)))) (Lambda gen_var_199 Z (App eq Z gen_var_199 (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_172 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Init.Datatypes.app (App list ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_206) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_209 (App list ExportProof.set) (App cons ExportProof.set gen_var_207 gen_var_209)) (App ExportProof.sublists ExportProof.set gen_var_209)))))))) (App Coq.Init.Logic.eq_ind_r (App list (App list ExportProof.set)) (App Coq.Init.Datatypes.app (App list ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_209)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_210 (App list ExportProof.set) (App cons ExportProof.set gen_var_207 gen_var_210)) (App ExportProof.sublists ExportProof.set gen_var_210)))) (Lambda gen_var_211 (App list (App list ExportProof.set)) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_207) (App ExportProof.cardinal (App ExportProof.list_union gen_var_211))) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_207 (App ExportProof.list_union gen_var_211)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_172 gen_var_211)))) (App Coq.Init.Logic.eq_ind_r (App list Z) (App Coq.Init.Datatypes.app Z (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_172 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_211))) (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_172 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_212 (App list ExportProof.set) (App cons ExportProof.set gen_var_207 gen_var_212)) (App ExportProof.sublists ExportProof.set gen_var_212))))) (Lambda gen_var_213 (App list Z) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_207) (App ExportProof.cardinal (App ExportProof.list_union gen_var_213))) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_207 (App ExportProof.list_union gen_var_213)))) (App ExportProof.sum gen_var_213))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_172 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_213)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_172 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_214 (App list ExportProof.set) (App cons ExportProof.set gen_var_207 gen_var_214)) (App ExportProof.sublists ExportProof.set gen_var_214)))))) (Lambda gen_var_215 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_207) (App ExportProof.cardinal (App ExportProof.list_union gen_var_214))) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_207 (App ExportProof.list_union gen_var_214)))) gen_var_215)) (App Coq.Init.Logic.eq_ind_r Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_172 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_214)))) (Lambda gen_var_216 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_207) gen_var_216) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_207 (App ExportProof.list_union gen_var_214)))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_172 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_214)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_172 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_217 (App list ExportProof.set) (App cons ExportProof.set gen_var_207 gen_var_217)) (App ExportProof.sublists ExportProof.set gen_var_217)))))))) (LetIn gen_var_218 (App Coq.Lists.List.map ExportProof.set (Prod gen_var_219 (Axiom ExportProof.X) bool) (Lambda gen_var_220 ExportProof.set (App ExportProof.binary_intersection gen_var_207 gen_var_220)) gen_var_217) (App list (Prod gen_var_221 (Axiom ExportProof.X) bool)) (LetIn gen_var_2509 (App ExportProof.cardinal_set_eq (App ExportProof.list_union gen_var_218) (App ExportProof.binary_intersection gen_var_229 (App ExportProof.list_union gen_var_230)) (Cast (App Coq.Init.Datatypes.list_ind ExportProof.set (Lambda gen_var_262 (App list ExportProof.set) (App ExportProof.set_eq (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_266 (Axiom ExportProof.X) bool) (Lambda gen_var_267 ExportProof.set (App ExportProof.binary_intersection gen_var_253 gen_var_267)) gen_var_262)) (App ExportProof.binary_intersection gen_var_253 (App ExportProof.list_union gen_var_262)))) (Cast (Cast (Lambda gen_var_268 (Axiom ExportProof.X) (Cast (LetIn gen_var_269 (App gen_var_253 gen_var_268) bool (Case 0 (Lambda gen_var_270 bool (App eq bool false (Case 0 (Lambda gen_var_271 bool bool) (CaseMatch gen_var_270) (CaseBranches false false)))) (CaseMatch gen_var_269) (CaseBranches (App eq_refl bool false) (App eq_refl bool false)))) REVERTcast (App eq bool (App ExportProof.empty_set gen_var_268) (App ExportProof.binary_intersection gen_var_253 ExportProof.empty_set gen_var_268)))) REVERTcast (App ExportProof.set_eq ExportProof.empty_set (App ExportProof.binary_intersection gen_var_253 ExportProof.empty_set))) REVERTcast (App ExportProof.set_eq (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_272 (Axiom ExportProof.X) bool) (Lambda gen_var_273 ExportProof.set (App ExportProof.binary_intersection gen_var_253 gen_var_273)) (App nil ExportProof.set))) (App ExportProof.binary_intersection gen_var_253 (App ExportProof.list_union (App nil ExportProof.set))))) (Lambda gen_var_274 ExportProof.set (Lambda gen_var_787 (App list ExportProof.set) (Lambda gen_var_276 (App ExportProof.set_eq (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_277 (Axiom ExportProof.X) bool) (Lambda gen_var_278 ExportProof.set (App ExportProof.binary_intersection gen_var_253 gen_var_278)) gen_var_275)) (App ExportProof.binary_intersection gen_var_253 (App ExportProof.list_union gen_var_275))) (Cast (App (Lambda gen_var_409 (App ExportProof.set_eq (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_280 (Axiom ExportProof.X) bool) (Lambda gen_var_281 ExportProof.set (App ExportProof.binary_intersection gen_var_253 gen_var_281)) gen_var_275)) (App ExportProof.binary_intersection gen_var_253 (App ExportProof.list_union gen_var_275))) (App Coq.Classes.Morphisms.subrelation_proper (Prod gen_var_290 ExportProof.set (Prod gen_var_291 ExportProof.set (Sort Prop))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set (Sort Prop)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff)) ExportProof.set_eq (App Coq.Classes.Morphisms.PER_morphism ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PER ExportProof.set ExportProof.set_eq ExportProof.Set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_318 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_327 (Axiom ExportProof.X) bool) (Prod gen_var_328 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_358 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_359 (Axiom ExportProof.X) bool) (Prod gen_var_360 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_367 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Sort Prop) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App ExportProof.binary_union (App ExportProof.binary_intersection gen_var_253 gen_var_274) (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_385 (Axiom ExportProof.X) bool) (Lambda gen_var_386 ExportProof.set (App ExportProof.binary_intersection gen_var_253 gen_var_386)) gen_var_275))) (App ExportProof.binary_union (App ExportProof.binary_intersection gen_var_253 gen_var_274) (App ExportProof.binary_intersection gen_var_253 (App ExportProof.list_union gen_var_275))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_398 ExportProof.set (Prod gen_var_399 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_400 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_401 (Axiom ExportProof.X) bool) (Prod gen_var_402 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_union (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_416 ExportProof.set (Prod gen_var_417 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_418 ExportProof.set (Prod gen_var_419 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_420 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_421 (Axiom ExportProof.X) bool) (Prod gen_var_422 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_424 ExportProof.set (Prod gen_var_425 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_427 ExportProof.set (Prod gen_var_428 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_429 ExportProof.set (Prod gen_var_430 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_431 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_432 (Axiom ExportProof.X) bool) (Prod gen_var_433 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_434 (Axiom ExportProof.X) bool) (Prod gen_var_435 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_572 ExportProof.set (Prod gen_var_573 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_582 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_583 (Axiom ExportProof.X) bool) (Prod gen_var_584 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_585 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_586 (Axiom ExportProof.X) bool) (Prod gen_var_587 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_588 (Axiom ExportProof.X) bool) (Prod gen_var_589 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_590 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_591 (Axiom ExportProof.X) bool) (Prod gen_var_592 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_593 (Axiom ExportProof.X) bool) (Prod gen_var_594 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_595 (Axiom ExportProof.X) bool) (Prod gen_var_596 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_597 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_598 (Axiom ExportProof.X) bool) (Prod gen_var_599 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_union (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_606 ExportProof.set (Prod gen_var_607 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_608 ExportProof.set (Prod gen_var_609 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_610 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_611 (Axiom ExportProof.X) bool) (Prod gen_var_612 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_613 (Axiom ExportProof.X) bool) (Prod gen_var_614 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_union (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_616 ExportProof.set (Prod gen_var_617 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_union ExportProof.union_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_631 ExportProof.set (Prod gen_var_632 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_633 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_634 (Axiom ExportProof.X) bool) (Prod gen_var_635 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_636 (Axiom ExportProof.X) bool) (Prod gen_var_637 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_638 ExportProof.set (Prod gen_var_639 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_645 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_646 (Axiom ExportProof.X) bool) (Prod gen_var_647 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_648 (Axiom ExportProof.X) bool) (Prod gen_var_649 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_650 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_651 (Axiom ExportProof.X) bool) (Prod gen_var_652 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_653 (Axiom ExportProof.X) bool) (Prod gen_var_654 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_660 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_661 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) (App ExportProof.binary_intersection gen_var_253 gen_var_274) (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) (App ExportProof.binary_intersection gen_var_253 gen_var_274)) (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_703 (Axiom ExportProof.X) bool) (Lambda gen_var_704 ExportProof.set (App ExportProof.binary_intersection gen_var_253 gen_var_704)) gen_var_275)) (App ExportProof.binary_intersection gen_var_253 (App ExportProof.list_union gen_var_275)) gen_var_409) (App ExportProof.binary_intersection gen_var_253 (App ExportProof.binary_union gen_var_274 (App ExportProof.list_union gen_var_275))) (App ExportProof.binary_intersection gen_var_253 (App ExportProof.binary_union gen_var_274 (App ExportProof.list_union gen_var_275))) (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Reflexive (App ExportProof.binary_intersection gen_var_253 (App ExportProof.binary_union gen_var_274 (App ExportProof.list_union gen_var_275)))))) gen_var_276 (Cast (Lambda gen_var_795 (Axiom ExportProof.X) (Cast (LetIn gen_var_745 (App gen_var_253 gen_var_705) bool (Case 0 (Lambda gen_var_739 bool (App eq bool (Case 0 (Lambda gen_var_708 bool bool) (CaseMatch (Case 0 (Lambda gen_var_709 bool bool) (CaseMatch gen_var_707) (CaseBranches (App gen_var_274 gen_var_705) false))) (CaseBranches true (Case 0 (Lambda gen_var_710 bool bool) (CaseMatch gen_var_707) (CaseBranches (App (Fix (Functions (App gen_var_711 0 (Prod gen_var_712 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_717 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_717 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_717) (CaseBranches (Lambda Anonymous (Axiom ExportProof.X) false) (Lambda gen_var_721 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_723 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_725 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_726 bool bool) (CaseMatch (App gen_var_721 gen_var_725)) (CaseBranches true (App gen_var_711 gen_var_723 gen_var_725))))))))))) 0) gen_var_717 gen_var_725) false)))) (Case 0 (Lambda gen_var_727 bool bool) (CaseMatch gen_var_721) (CaseBranches (Case 0 (Lambda gen_var_728 bool bool) (CaseMatch (App gen_var_274 gen_var_725)) (CaseBranches true (App (Fix (Functions (App gen_var_729 0 (Prod gen_var_730 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_735 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_735 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_735) (CaseBranches (Lambda Anonymous (Axiom ExportProof.X) false) (Lambda gen_var_739 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_741 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_743 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_744 bool bool) (CaseMatch (App gen_var_739 gen_var_743)) (CaseBranches true (App gen_var_729 gen_var_741 gen_var_743))))))))))) 0) gen_var_735 gen_var_743))) false)))) (CaseMatch gen_var_706) (CaseBranches (LetIn gen_var_745 (App gen_var_274 gen_var_743) bool (Case 0 (Lambda gen_var_775 bool (App eq bool (Case 0 (Lambda gen_var_747 bool bool) (CaseMatch gen_var_746) (CaseBranches true (App (Fix (Functions (App gen_var_748 0 (Prod gen_var_749 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_754 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_754 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_754) (CaseBranches (Lambda Anonymous (Axiom ExportProof.X) false) (Lambda gen_var_758 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_760 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_762 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_763 bool bool) (CaseMatch (App gen_var_758 gen_var_762)) (CaseBranches true (App gen_var_748 gen_var_760 gen_var_762))))))))))) 0) gen_var_754 gen_var_762))) (Case 0 (Lambda gen_var_764 bool bool) (CaseMatch gen_var_758) (CaseBranches true (App (Fix (Functions (App gen_var_765 0 (Prod gen_var_766 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_771 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_771 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_771) (CaseBranches (Lambda Anonymous (Axiom ExportProof.X) false) (Lambda gen_var_775 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_777 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_779 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_780 bool bool) (CaseMatch (App gen_var_775 gen_var_779)) (CaseBranches true (App gen_var_765 gen_var_777 gen_var_779))))))))))) 0) gen_var_771 gen_var_779))))) (CaseMatch gen_var_745) (CaseBranches (App eq_refl bool true) (App eq_refl bool (App (Fix (Functions (App gen_var_781 0 (Prod gen_var_782 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_787 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_787 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_787) (CaseBranches (Lambda Anonymous (Axiom ExportProof.X) false) (Lambda gen_var_791 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_793 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_795 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_796 bool bool) (CaseMatch (App gen_var_791 gen_var_795)) (CaseBranches true (App gen_var_781 gen_var_793 gen_var_795))))))))))) 0) gen_var_787 gen_var_795))))) (App eq_refl bool false)))) REVERTcast (App eq bool (App ExportProof.binary_union (App ExportProof.binary_intersection gen_var_253 gen_var_274) (App ExportProof.binary_intersection gen_var_253 (App ExportProof.list_union gen_var_787)) gen_var_795) (App ExportProof.binary_intersection gen_var_253 (App ExportProof.binary_union gen_var_274 (App ExportProof.list_union gen_var_787)) gen_var_795)))) REVERTcast (App ExportProof.set_eq (App ExportProof.binary_union (App ExportProof.binary_intersection gen_var_253 gen_var_274) (App ExportProof.binary_intersection gen_var_253 (App ExportProof.list_union gen_var_787))) (App ExportProof.binary_intersection gen_var_253 (App ExportProof.binary_union gen_var_274 (App ExportProof.list_union gen_var_787)))))) REVERTcast (App ExportProof.set_eq (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_797 (Axiom ExportProof.X) bool) (Lambda gen_var_798 ExportProof.set (App ExportProof.binary_intersection gen_var_253 gen_var_798)) (App cons ExportProof.set gen_var_274 gen_var_787))) (App ExportProof.binary_intersection gen_var_253 (App ExportProof.list_union (App cons ExportProof.set gen_var_274 gen_var_787)))))))) gen_var_787) REVERTcast (App ExportProof.set_eq (App ExportProof.list_union gen_var_218) (App ExportProof.binary_intersection gen_var_253 (App ExportProof.list_union gen_var_787))))) (App eq Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_218)) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_253 (App ExportProof.list_union gen_var_787)))) (App Coq.Init.Logic.eq_ind Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_218)) (Lambda gen_var_799 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_253) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_787))))) gen_var_799) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_787)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_800 (App list ExportProof.set) (App cons ExportProof.set gen_var_253 gen_var_800)) (App ExportProof.sublists ExportProof.set gen_var_800)))))))) (App Coq.Init.Logic.eq_ind_r Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_218)))) (Lambda gen_var_801 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_253) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_800))))) gen_var_801) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_800)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_802 (App list ExportProof.set) (App cons ExportProof.set gen_var_253 gen_var_802)) (App ExportProof.sublists ExportProof.set gen_var_802)))))))) (LetIn gen_var_2509 (Cast (App Coq.Init.Logic.eq_ind_r (App list (App list ExportProof.set)) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_804 (App list ExportProof.set) (App cons ExportProof.set gen_var_253 gen_var_804)) (App ExportProof.sublists ExportProof.set gen_var_804)) (Lambda gen_var_805 (App list (App list ExportProof.set)) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_253) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_806 (Axiom ExportProof.X) bool) (Lambda gen_var_807 ExportProof.set (App ExportProof.binary_intersection gen_var_253 gen_var_807)) gen_var_805)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 gen_var_805)))) (App Coq.Init.Logic.eq_ind_r (App list (App list ExportProof.set)) (App cons (App list ExportProof.set) (App nil ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_805))) (Lambda gen_var_811 (App list (App list ExportProof.set)) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_253) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_809 (Axiom ExportProof.X) bool) (Lambda gen_var_810 ExportProof.set (App ExportProof.binary_intersection gen_var_253 gen_var_810)) gen_var_808)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_811 (App list ExportProof.set) (App cons ExportProof.set gen_var_253 gen_var_811)) gen_var_811))))) (Cast (Cast (Cast (LetIn gen_var_1415 (App cons Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_253) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_813 (Axiom ExportProof.X) bool) (Lambda gen_var_814 ExportProof.set (App ExportProof.binary_intersection gen_var_253 gen_var_814)) gen_var_811)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_253) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_815 (App list ExportProof.set) (App cons ExportProof.set gen_var_253 gen_var_815)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_815)))))) (App nil Z))) (App list Z) (App (Cast (Cast (Lambda gen_var_1417 (App eq (App list Z) gen_var_812 (App cons Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_253) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_817 (Axiom ExportProof.X) bool) (Lambda gen_var_818 ExportProof.set (App ExportProof.binary_intersection gen_var_253 gen_var_818)) gen_var_815)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_253) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_819 (App list ExportProof.set) (App cons ExportProof.set gen_var_253 gen_var_819)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_819)))))) (App nil Z)))) (LetIn gen_var_1419 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_1420 (App nil (App prod (App prod Z Mon) (App Pol Z))) (App list (App prod (App prod Z Mon) (App Pol Z))) (LetIn gen_var_1421 (Cast (App eq_refl (App list (App prod (App prod Z Mon) (App Pol Z))) gen_var_821) VMcast (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_820) gen_var_821)) (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_820) gen_var_821) (LetIn gen_var_1422 (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma2 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_820 (App cons Z (App ExportProof.cardinal gen_var_874) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_885 (Axiom ExportProof.X) bool) (Lambda gen_var_886 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_886)) gen_var_819))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_887 (App list ExportProof.set) (App cons ExportProof.set gen_var_874 gen_var_887)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_887))))) (App nil Z)))) I gen_var_821 gen_var_822) (Prod gen_var_945 (App PExpr Z) (Prod gen_var_889 (App Pol Z) (Prod Anonymous (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_821 gen_var_916) gen_var_889) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal gen_var_874) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_967 (Axiom ExportProof.X) bool) (Lambda gen_var_968 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_968)) gen_var_943))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_969 (App list ExportProof.set) (App cons ExportProof.set gen_var_874 gen_var_969)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_969))))) (App nil Z)))) gen_var_945) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal gen_var_874) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1024 (Axiom ExportProof.X) bool) (Lambda gen_var_1025 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1025)) gen_var_969))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1026 (App list ExportProof.set) (App cons ExportProof.set gen_var_874 gen_var_1026)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1026))))) (App nil Z)))) gen_var_889))))) (LetIn gen_var_1429 (App PX Z (App Pc Z (App Zpos xH)) xH (App PX Z (App Pc Z (App Zneg xH)) xH (App Pc Z Z0))) (App Pol Z) (LetIn gen_var_1430 (Cast (App eq_refl (App Pol Z) gen_var_1027) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_821 (App PEsub Z (App PEX Z xH) (App PEX Z (App xO xH)))) gen_var_1027)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_821 (App PEsub Z (App PEX Z xH) (App PEX Z (App xO xH)))) gen_var_1027) (LetIn gen_var_1431 (App gen_var_884 (App PEsub Z (App PEX Z xH) (App PEX Z (App xO xH))) gen_var_1027 gen_var_1028) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal gen_var_874) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1030 (Axiom ExportProof.X) bool) (Lambda gen_var_1031 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1031)) gen_var_1026))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1032 (App list ExportProof.set) (App cons ExportProof.set gen_var_874 gen_var_1032)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1032))))) (App nil Z)))) (App PEsub Z (App PEX Z xH) (App PEX Z (App xO xH)))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal gen_var_874) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1033 (Axiom ExportProof.X) bool) (Lambda gen_var_1034 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1034)) gen_var_1032))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1035 (App list ExportProof.set) (App cons ExportProof.set gen_var_874 gen_var_1035)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1035))))) (App nil Z)))) gen_var_1027)) (LetIn gen_var_1436 (App PX Z (App Pc Z (App Zpos xH)) xH (App Pinj Z xH (App PX Z (App Pc Z (App Zpos xH)) xH (App Pc Z Z0)))) (App Pol Z) (LetIn gen_var_1437 (Cast (App eq_refl (App Pol Z) gen_var_1036) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_821 (App PEadd Z (App PEmul Z (App PEX Z xH) (App PEc Z (App Zpos xH))) (App PEX Z (App xI xH)))) gen_var_1036)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_821 (App PEadd Z (App PEmul Z (App PEX Z xH) (App PEc Z (App Zpos xH))) (App PEX Z (App xI xH)))) gen_var_1036) (LetIn gen_var_1438 (App gen_var_884 (App PEadd Z (App PEmul Z (App PEX Z xH) (App PEc Z (App Zpos xH))) (App PEX Z (App xI xH))) gen_var_1036 gen_var_1037) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal gen_var_874) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1039 (Axiom ExportProof.X) bool) (Lambda gen_var_1040 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1040)) gen_var_1035))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1041 (App list ExportProof.set) (App cons ExportProof.set gen_var_874 gen_var_1041)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1041))))) (App nil Z)))) (App PEadd Z (App PEmul Z (App PEX Z xH) (App PEc Z (App Zpos xH))) (App PEX Z (App xI xH)))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal gen_var_874) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1042 (Axiom ExportProof.X) bool) (Lambda gen_var_1043 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1043)) gen_var_1041))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1044 (App list ExportProof.set) (App cons ExportProof.set gen_var_874 gen_var_1044)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1044))))) (App nil Z)))) gen_var_1036)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_874) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1045 (App list ExportProof.set) (App cons ExportProof.set gen_var_874 gen_var_1045)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1045)))))) (Lambda gen_var_1046 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_874) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1047 (Axiom ExportProof.X) bool) (Lambda gen_var_1048 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1048)) gen_var_1045)))))) gen_var_1046)) (Cast (LetIn gen_var_2401 (App Coq.Init.Logic.eq_ind_r (App list (App list ExportProof.set)) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1050 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1050))) (App ExportProof.sublists ExportProof.set gen_var_1045)) (Lambda gen_var_1052 (App list (App list ExportProof.set)) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1051)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1052 (App list ExportProof.set) (App cons ExportProof.set gen_var_874 gen_var_1052)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1052))))))) (App (Lambda gen_var_2325 (App list (App list ExportProof.set)) (LetIn gen_var_2290 (App Coq.Init.Datatypes.list_ind (App list ExportProof.set) (Lambda gen_var_1055 (App list (App list ExportProof.set)) (App eq (App list (App list (Prod gen_var_1056 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_1057 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1058 (Axiom ExportProof.X) bool) (Lambda gen_var_1059 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1059))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1055)) (App Coq.Lists.List.filter (App list (Prod gen_var_1060 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_1061 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_1062 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1063 (Axiom ExportProof.X) bool) (Lambda gen_var_1064 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1064))) gen_var_1055)))) (App eq_refl (App list (App list (Prod gen_var_1065 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.filter (App list (Prod gen_var_1066 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_1067 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_1068 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1069 (Axiom ExportProof.X) bool) (Lambda gen_var_1070 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1070))) (App nil (App list ExportProof.set))))) (Lambda gen_var_1329 (App list ExportProof.set) (Lambda gen_var_1245 (App list (App list ExportProof.set)) (Lambda gen_var_1073 (App eq (App list (App list (Prod gen_var_1074 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_1075 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1076 (Axiom ExportProof.X) bool) (Lambda gen_var_1077 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1077))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1072)) (App Coq.Lists.List.filter (App list (Prod gen_var_1078 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_1079 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_1080 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1081 (Axiom ExportProof.X) bool) (Lambda gen_var_1082 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1082))) gen_var_1072))) (Cast (Case 1 (Lambda gen_var_1083 (App list ExportProof.set) (App eq (App list (App list (Prod gen_var_1084 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_1085 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1086 (Axiom ExportProof.X) bool) (Lambda gen_var_1087 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1087))) (Case 0 (Lambda gen_var_1088 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set gen_var_1083)) (CaseBranches (App cons (App list ExportProof.set) gen_var_1083 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1083)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1083)))) (Case 0 (Lambda gen_var_1089 bool (App list (App list (Prod gen_var_1090 (Axiom ExportProof.X) bool)))) (CaseMatch (App ExportProof.nonempty (Prod gen_var_1091 (Axiom ExportProof.X) bool) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1092 (Axiom ExportProof.X) bool) (Lambda gen_var_1093 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1093)) gen_var_1083))) (CaseBranches (App cons (App list (Prod gen_var_1094 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1095 (Axiom ExportProof.X) bool) (Lambda gen_var_1096 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1096)) gen_var_1083) (App Coq.Lists.List.filter (App list (Prod gen_var_1097 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_1098 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_1099 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1100 (Axiom ExportProof.X) bool) (Lambda gen_var_1101 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1101))) gen_var_1083))) (App Coq.Lists.List.filter (App list (Prod gen_var_1102 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_1103 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_1104 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1105 (Axiom ExportProof.X) bool) (Lambda gen_var_1106 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1106))) gen_var_1083)))))) (CaseMatch gen_var_1106) (CaseBranches (Cast gen_var_1073 REVERTcast (App eq (App list (App list (Prod gen_var_1107 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_1108 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1109 (Axiom ExportProof.X) bool) (Lambda gen_var_1110 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1110))) (Case 0 (Lambda gen_var_1111 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App nil ExportProof.set))) (CaseBranches (App cons (App list ExportProof.set) (App nil ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1083)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1083)))) (Case 0 (Lambda gen_var_1112 bool (App list (App list (Prod gen_var_1113 (Axiom ExportProof.X) bool)))) (CaseMatch (App ExportProof.nonempty (Prod gen_var_1114 (Axiom ExportProof.X) bool) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1115 (Axiom ExportProof.X) bool) (Lambda gen_var_1116 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1116)) (App nil ExportProof.set)))) (CaseBranches (App cons (App list (Prod gen_var_1117 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1118 (Axiom ExportProof.X) bool) (Lambda gen_var_1119 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1119)) (App nil ExportProof.set)) (App Coq.Lists.List.filter (App list (Prod gen_var_1120 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_1121 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_1122 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1123 (Axiom ExportProof.X) bool) (Lambda gen_var_1124 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1124))) gen_var_1083))) (App Coq.Lists.List.filter (App list (Prod gen_var_1125 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_1126 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_1127 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1128 (Axiom ExportProof.X) bool) (Lambda gen_var_1129 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1129))) gen_var_1083)))))) (Lambda gen_var_1130 ExportProof.set (Lambda gen_var_1320 (App list ExportProof.set) (Cast (App Coq.Init.Logic.eq_trans (App list (App list (App (Lambda gen_var_1141 (Sort Set) (Lambda gen_var_1141 (Sort Set) (Prod Anonymous gen_var_1141 gen_var_1141))) (Axiom ExportProof.X) bool))) (App cons (App list (App (Lambda gen_var_1144 (Sort Set) (Lambda gen_var_1144 (Sort Set) (Prod Anonymous gen_var_1144 gen_var_1144))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_1147 (Sort Set) (Lambda gen_var_1147 (Sort Set) (Prod Anonymous gen_var_1147 gen_var_1147))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_874 gen_var_1130) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1150 (Sort Set) (Lambda gen_var_1150 (Sort Set) (Prod Anonymous gen_var_1150 gen_var_1150))) (Axiom ExportProof.X) bool) (Lambda gen_var_1152 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1152)) gen_var_1152)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_1154 (Sort Set) (Lambda gen_var_1154 (Sort Set) (Prod Anonymous gen_var_1154 gen_var_1154))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1157 (Sort Set) (Lambda gen_var_1157 (Sort Set) (Prod Anonymous gen_var_1157 gen_var_1157))) (Axiom ExportProof.X) bool) (Lambda gen_var_1159 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1159))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1083))) (App cons (App list (App (Lambda gen_var_1161 (Sort Set) (Lambda gen_var_1161 (Sort Set) (Prod Anonymous gen_var_1161 gen_var_1161))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_1164 (Sort Set) (Lambda gen_var_1164 (Sort Set) (Prod Anonymous gen_var_1164 gen_var_1164))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_874 gen_var_1130) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1167 (Sort Set) (Lambda gen_var_1167 (Sort Set) (Prod Anonymous gen_var_1167 gen_var_1167))) (Axiom ExportProof.X) bool) (Lambda gen_var_1169 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1169)) gen_var_1169)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_1171 (Sort Set) (Lambda gen_var_1171 (Sort Set) (Prod Anonymous gen_var_1171 gen_var_1171))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1174 (Sort Set) (Lambda gen_var_1174 (Sort Set) (Prod Anonymous gen_var_1174 gen_var_1174))) (Axiom ExportProof.X) bool) (Lambda gen_var_1176 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1176))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1083))) (App cons (App list (App (Lambda gen_var_1178 (Sort Set) (Lambda gen_var_1178 (Sort Set) (Prod Anonymous gen_var_1178 gen_var_1178))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_1181 (Sort Set) (Lambda gen_var_1181 (Sort Set) (Prod Anonymous gen_var_1181 gen_var_1181))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_874 gen_var_1130) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1184 (Sort Set) (Lambda gen_var_1184 (Sort Set) (Prod Anonymous gen_var_1184 gen_var_1184))) (Axiom ExportProof.X) bool) (Lambda gen_var_1186 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1186)) gen_var_1186)) (App Coq.Lists.List.filter (App list (App (Lambda gen_var_1188 (Sort Set) (Lambda gen_var_1188 (Sort Set) (Prod Anonymous gen_var_1188 gen_var_1188))) (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (App (Lambda gen_var_1191 (Sort Set) (Lambda gen_var_1191 (Sort Set) (Prod Anonymous gen_var_1191 gen_var_1191))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_1194 (Sort Set) (Lambda gen_var_1194 (Sort Set) (Prod Anonymous gen_var_1194 gen_var_1194))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1197 (Sort Set) (Lambda gen_var_1197 (Sort Set) (Prod Anonymous gen_var_1197 gen_var_1197))) (Axiom ExportProof.X) bool) (Lambda gen_var_1199 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1199))) gen_var_1083))) (App Coq.Init.Logic.f_equal (Prod gen_var_1200 (App list (App list (App (Lambda gen_var_1202 (Sort Set) (Lambda gen_var_1202 (Sort Set) (Prod Anonymous gen_var_1202 gen_var_1202))) (Axiom ExportProof.X) bool))) (App list (App list (App (Lambda gen_var_1205 (Sort Set) (Lambda gen_var_1205 (Sort Set) (Prod Anonymous gen_var_1205 gen_var_1205))) (Axiom ExportProof.X) bool)))) (App list (App list (App (Lambda gen_var_1208 (Sort Set) (Lambda gen_var_1208 (Sort Set) (Prod Anonymous gen_var_1208 gen_var_1208))) (Axiom ExportProof.X) bool))) (Lambda gen_var_1210 (Prod gen_var_1211 (App list (App list (App (Lambda gen_var_1213 (Sort Set) (Lambda gen_var_1213 (Sort Set) (Prod Anonymous gen_var_1213 gen_var_1213))) (Axiom ExportProof.X) bool))) (App list (App list (App (Lambda gen_var_1216 (Sort Set) (Lambda gen_var_1216 (Sort Set) (Prod Anonymous gen_var_1216 gen_var_1216))) (Axiom ExportProof.X) bool)))) (App gen_var_1210 (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_1219 (Sort Set) (Lambda gen_var_1219 (Sort Set) (Prod Anonymous gen_var_1219 gen_var_1219))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1222 (Sort Set) (Lambda gen_var_1222 (Sort Set) (Prod Anonymous gen_var_1222 gen_var_1222))) (Axiom ExportProof.X) bool) (Lambda gen_var_1224 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1224))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1211)))) (App cons (App list (App (Lambda gen_var_1226 (Sort Set) (Lambda gen_var_1226 (Sort Set) (Prod Anonymous gen_var_1226 gen_var_1226))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_1229 (Sort Set) (Lambda gen_var_1229 (Sort Set) (Prod Anonymous gen_var_1229 gen_var_1229))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_874 gen_var_1130) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1232 (Sort Set) (Lambda gen_var_1232 (Sort Set) (Prod Anonymous gen_var_1232 gen_var_1232))) (Axiom ExportProof.X) bool) (Lambda gen_var_1234 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1234)) gen_var_1234))) (App cons (App list (App (Lambda gen_var_1236 (Sort Set) (Lambda gen_var_1236 (Sort Set) (Prod Anonymous gen_var_1236 gen_var_1236))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_1239 (Sort Set) (Lambda gen_var_1239 (Sort Set) (Prod Anonymous gen_var_1239 gen_var_1239))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_874 gen_var_1130) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1242 (Sort Set) (Lambda gen_var_1242 (Sort Set) (Prod Anonymous gen_var_1242 gen_var_1242))) (Axiom ExportProof.X) bool) (Lambda gen_var_1244 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1244)) gen_var_1244))) (App eq_refl (Prod gen_var_1245 (App list (App list (App (Lambda gen_var_1247 (Sort Set) (Lambda gen_var_1247 (Sort Set) (Prod Anonymous gen_var_1247 gen_var_1247))) (Axiom ExportProof.X) bool))) (App list (App list (App (Lambda gen_var_1250 (Sort Set) (Lambda gen_var_1250 (Sort Set) (Prod Anonymous gen_var_1250 gen_var_1250))) (Axiom ExportProof.X) bool)))) (App cons (App list (App (Lambda gen_var_1253 (Sort Set) (Lambda gen_var_1253 (Sort Set) (Prod Anonymous gen_var_1253 gen_var_1253))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_1256 (Sort Set) (Lambda gen_var_1256 (Sort Set) (Prod Anonymous gen_var_1256 gen_var_1256))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_874 gen_var_1130) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1259 (Sort Set) (Lambda gen_var_1259 (Sort Set) (Prod Anonymous gen_var_1259 gen_var_1259))) (Axiom ExportProof.X) bool) (Lambda gen_var_1261 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1261)) gen_var_1261))))) (App Coq.Init.Logic.f_equal (App list (App list (App (Lambda gen_var_1263 (Sort Set) (Lambda gen_var_1263 (Sort Set) (Prod Anonymous gen_var_1263 gen_var_1263))) (Axiom ExportProof.X) bool))) (App list (App list (App (Lambda gen_var_1266 (Sort Set) (Lambda gen_var_1266 (Sort Set) (Prod Anonymous gen_var_1266 gen_var_1266))) (Axiom ExportProof.X) bool))) (App cons (App list (App (Lambda gen_var_1269 (Sort Set) (Lambda gen_var_1269 (Sort Set) (Prod Anonymous gen_var_1269 gen_var_1269))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_1272 (Sort Set) (Lambda gen_var_1272 (Sort Set) (Prod Anonymous gen_var_1272 gen_var_1272))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_874 gen_var_1130) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1275 (Sort Set) (Lambda gen_var_1275 (Sort Set) (Prod Anonymous gen_var_1275 gen_var_1275))) (Axiom ExportProof.X) bool) (Lambda gen_var_1277 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1277)) gen_var_1277))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_1279 (Sort Set) (Lambda gen_var_1279 (Sort Set) (Prod Anonymous gen_var_1279 gen_var_1279))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1282 (Sort Set) (Lambda gen_var_1282 (Sort Set) (Prod Anonymous gen_var_1282 gen_var_1282))) (Axiom ExportProof.X) bool) (Lambda gen_var_1284 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1284))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1245)) (App Coq.Lists.List.filter (App list (App (Lambda gen_var_1286 (Sort Set) (Lambda gen_var_1286 (Sort Set) (Prod Anonymous gen_var_1286 gen_var_1286))) (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (App (Lambda gen_var_1289 (Sort Set) (Lambda gen_var_1289 (Sort Set) (Prod Anonymous gen_var_1289 gen_var_1289))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_1292 (Sort Set) (Lambda gen_var_1292 (Sort Set) (Prod Anonymous gen_var_1292 gen_var_1292))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1295 (Sort Set) (Lambda gen_var_1295 (Sort Set) (Prod Anonymous gen_var_1295 gen_var_1295))) (Axiom ExportProof.X) bool) (Lambda gen_var_1297 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1297))) gen_var_1245)) gen_var_1073)) REVERTcast (App eq (App list (App list (Prod gen_var_1298 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_1299 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1300 (Axiom ExportProof.X) bool) (Lambda gen_var_1301 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1301))) (Case 0 (Lambda gen_var_1302 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App cons ExportProof.set gen_var_1130 gen_var_1302))) (CaseBranches (App cons (App list ExportProof.set) (App cons ExportProof.set gen_var_1130 gen_var_1302) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1245)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1245)))) (Case 0 (Lambda gen_var_1303 bool (App list (App list (Prod gen_var_1304 (Axiom ExportProof.X) bool)))) (CaseMatch (App ExportProof.nonempty (Prod gen_var_1305 (Axiom ExportProof.X) bool) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1306 (Axiom ExportProof.X) bool) (Lambda gen_var_1307 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1307)) (App cons ExportProof.set gen_var_1130 gen_var_1307)))) (CaseBranches (App cons (App list (Prod gen_var_1308 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1309 (Axiom ExportProof.X) bool) (Lambda gen_var_1310 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1310)) (App cons ExportProof.set gen_var_1130 gen_var_1310)) (App Coq.Lists.List.filter (App list (Prod gen_var_1311 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_1312 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_1313 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1314 (Axiom ExportProof.X) bool) (Lambda gen_var_1315 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1315))) gen_var_1245))) (App Coq.Lists.List.filter (App list (Prod gen_var_1316 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_1317 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_1318 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1319 (Axiom ExportProof.X) bool) (Lambda gen_var_1320 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1320))) gen_var_1245)))))))))) REVERTcast (App eq (App list (App list (Prod gen_var_1321 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_1322 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1323 (Axiom ExportProof.X) bool) (Lambda gen_var_1324 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1324))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App cons (App list ExportProof.set) gen_var_1324 gen_var_1245))) (App Coq.Lists.List.filter (App list (Prod gen_var_1325 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_1326 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_1327 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1328 (Axiom ExportProof.X) bool) (Lambda gen_var_1329 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1329))) (App cons (App list ExportProof.set) gen_var_1329 gen_var_1245)))))))) gen_var_1245) (App eq (App list (App list (Prod gen_var_1330 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_1331 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1332 (Axiom ExportProof.X) bool) (Lambda gen_var_1333 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1333))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1245)) (App Coq.Lists.List.filter (App list (Prod gen_var_1334 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_1335 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_1336 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1337 (Axiom ExportProof.X) bool) (Lambda gen_var_1338 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1338))) gen_var_1245))) (App Coq.Init.Datatypes.list_ind (App list ExportProof.set) (Lambda gen_var_1341 (App list (App list ExportProof.set)) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1340 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1340))) gen_var_1339))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1341 (App list ExportProof.set) (App cons ExportProof.set gen_var_874 gen_var_1341)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1341)))))) (App eq_refl Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1342 (App list ExportProof.set) (App cons ExportProof.set gen_var_874 gen_var_1342)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App nil (App list ExportProof.set))))))) (Lambda gen_var_2324 (App list ExportProof.set) (Lambda gen_var_2325 (App list (App list ExportProof.set)) (Lambda gen_var_2284 (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1346 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1346))) gen_var_1344))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1347 (App list ExportProof.set) (App cons ExportProof.set gen_var_874 gen_var_1347)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1347))))) (Cast (Case 1 (Lambda gen_var_1354 (App list ExportProof.set) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (Case 0 (Lambda gen_var_1349 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1350 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1350)) gen_var_1348))) (CaseBranches (App cons (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1351 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1351)) gen_var_1348) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1352 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1352))) gen_var_1348))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1353 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1353))) gen_var_1348))))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1354 (App list ExportProof.set) (App cons ExportProof.set gen_var_874 gen_var_1354)) (Case 0 (Lambda gen_var_1355 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set gen_var_1354)) (CaseBranches (App cons (App list ExportProof.set) gen_var_1354 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1354)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1354)))))))) (CaseMatch gen_var_1355) (CaseBranches (Cast gen_var_1345 REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (Case 0 (Lambda gen_var_1356 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1357 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1357)) (App nil ExportProof.set)))) (CaseBranches (App cons (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1358 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1358)) (App nil ExportProof.set)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1359 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1359))) gen_var_1354))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1360 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1360))) gen_var_1354))))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1361 (App list ExportProof.set) (App cons ExportProof.set gen_var_874 gen_var_1361)) (Case 0 (Lambda gen_var_1362 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App nil ExportProof.set))) (CaseBranches (App cons (App list ExportProof.set) (App nil ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1361)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1361)))))))) (Lambda gen_var_2266 ExportProof.set (Lambda gen_var_1577 (App list ExportProof.set) (Cast (App Coq.Init.Logic.eq_ind Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1365 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1365))) gen_var_1361))))) (Lambda gen_var_1366 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_545 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1367 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1367)) gen_var_1364))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1368 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1368))) gen_var_1361)))))) (App Coq.ZArith.BinIntDef.Z.add (App gen_var_545 (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364))) gen_var_1366))) (LetIn gen_var_1415 (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_545 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1370 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1370)) gen_var_1364))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1371 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1371))) gen_var_1361)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App gen_var_545 (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1372 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1372))) gen_var_1361)))))) (App nil Z))) (App list Z) (App (Cast (Cast (Lambda gen_var_1417 (App eq (App list Z) gen_var_1369 (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_545 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1374 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1374)) gen_var_1364))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1375 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1375))) gen_var_1361)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App gen_var_545 (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1376 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1376))) gen_var_1361)))))) (App nil Z)))) (LetIn gen_var_1419 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_1420 (App nil (App prod (App prod Z Mon) (App Pol Z))) (App list (App prod (App prod Z Mon) (App Pol Z))) (LetIn gen_var_1421 (Cast (App eq_refl (App list (App prod (App prod Z Mon) (App Pol Z))) gen_var_1378) VMcast (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_1377) gen_var_1378)) (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_1377) gen_var_1378) (LetIn gen_var_1422 (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma2 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1377 (App cons Z (App gen_var_545 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1381 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1381)) gen_var_1364))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1382 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1382))) gen_var_1361)))) (App cons Z (App gen_var_545 (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364))) (App nil Z)))) I gen_var_1378 gen_var_1379) (Prod gen_var_1383 (App PExpr Z) (Prod gen_var_1384 (App Pol Z) (Prod Anonymous (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1378 gen_var_1383) gen_var_1384) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App gen_var_545 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1386 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1386)) gen_var_1364))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1387 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1387))) gen_var_1361)))) (App cons Z (App gen_var_545 (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364))) (App nil Z)))) gen_var_1383) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App gen_var_545 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1388 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1388)) gen_var_1364))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1389 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1389))) gen_var_1361)))) (App cons Z (App gen_var_545 (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364))) (App nil Z)))) gen_var_1384))))) (LetIn gen_var_1429 (App PX Z (App Pc Z (App Zneg xH)) xH (App PX Z (App Pc Z (App Zneg xH)) xH (App Pc Z Z0))) (App Pol Z) (LetIn gen_var_1430 (Cast (App eq_refl (App Pol Z) gen_var_1390) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1378 (App PEopp Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH))))) gen_var_1390)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1378 (App PEopp Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH))))) gen_var_1390) (LetIn gen_var_1431 (App gen_var_1380 (App PEopp Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH)))) gen_var_1390 gen_var_1391) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App gen_var_545 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1393 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1393)) gen_var_1364))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1394 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1394))) gen_var_1361)))) (App cons Z (App gen_var_545 (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364))) (App nil Z)))) (App PEopp Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH))))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App gen_var_545 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1395 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1395)) gen_var_1364))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1396 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1396))) gen_var_1361)))) (App cons Z (App gen_var_545 (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364))) (App nil Z)))) gen_var_1390)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_545 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1397 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1397)) gen_var_1364)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1398 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1398))) gen_var_1361))))) (Lambda gen_var_1399 Z (App eq Z gen_var_1399 (App Coq.ZArith.BinIntDef.Z.add (App gen_var_545 (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1400 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1400))) gen_var_1361)))))))) (LetIn gen_var_1436 (App Pinj Z xH (App PX Z (App Pc Z (App Zneg xH)) xH (App PX Z (App Pc Z (App Zpos xH)) xH (App Pc Z Z0)))) (App Pol Z) (LetIn gen_var_1437 (Cast (App eq_refl (App Pol Z) gen_var_1401) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1378 (App PEadd Z (App PEX Z (App xI xH)) (App PEopp Z (App PEX Z (App xO xH))))) gen_var_1401)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1378 (App PEadd Z (App PEX Z (App xI xH)) (App PEopp Z (App PEX Z (App xO xH))))) gen_var_1401) (LetIn gen_var_1438 (App gen_var_1380 (App PEadd Z (App PEX Z (App xI xH)) (App PEopp Z (App PEX Z (App xO xH)))) gen_var_1401 gen_var_1402) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App gen_var_545 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1404 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1404)) gen_var_1364))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1405 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1405))) gen_var_1361)))) (App cons Z (App gen_var_545 (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364))) (App nil Z)))) (App PEadd Z (App PEX Z (App xI xH)) (App PEopp Z (App PEX Z (App xO xH))))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App gen_var_545 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1406 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1406)) gen_var_1364))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1407 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1407))) gen_var_1361)))) (App cons Z (App gen_var_545 (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364))) (App nil Z)))) gen_var_1401)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1408 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1408))) gen_var_1361))))) (App gen_var_545 (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364)))) (Lambda gen_var_1409 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_545 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1410 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1410)) gen_var_1364)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_545 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1411 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1411))) gen_var_1361))))) gen_var_1409)) (LetIn gen_var_2290 (Cast (Cast (App Coq.Init.Logic.eq_ind_r nat (App Coq.Init.Datatypes.length ExportProof.set gen_var_1364) (Lambda gen_var_1413 nat (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1414 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1414)) gen_var_1364)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign gen_var_1413)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1364))))))))) (LetIn gen_var_1415 (App cons Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1416 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1416)) gen_var_1364)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1364))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1364))))))) (App nil Z))) (App list Z) (App (Cast (Cast (Lambda gen_var_1417 (App eq (App list Z) gen_var_1415 (App cons Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1418 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1418)) gen_var_1364)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1364))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1364))))))) (App nil Z)))) (LetIn gen_var_1419 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_1420 (App nil (App prod (App prod Z Mon) (App Pol Z))) (App list (App prod (App prod Z Mon) (App Pol Z))) (LetIn gen_var_1421 (Cast (App eq_refl (App list (App prod (App prod Z Mon) (App Pol Z))) gen_var_1420) VMcast (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_1419) gen_var_1420)) (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_1419) gen_var_1420) (LetIn gen_var_1422 (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma2 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1419 (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1423 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1423)) gen_var_1364)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1364)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364)))) (App nil Z)))) I gen_var_1420 gen_var_1421) (Prod gen_var_1424 (App PExpr Z) (Prod gen_var_1425 (App Pol Z) (Prod Anonymous (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1420 gen_var_1424) gen_var_1425) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1427 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1427)) gen_var_1364)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1364)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364)))) (App nil Z)))) gen_var_1424) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1428 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1428)) gen_var_1364)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1364)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364)))) (App nil Z)))) gen_var_1425))))) (LetIn gen_var_1429 (App PX Z (App Pinj Z xH (App PX Z (App Pc Z (App Zpos xH)) xH (App Pc Z Z0))) xH (App Pc Z Z0)) (App Pol Z) (LetIn gen_var_1430 (Cast (App eq_refl (App Pol Z) gen_var_1429) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1420 (App PEmul Z (App PEX Z xH) (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))) gen_var_1429)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1420 (App PEmul Z (App PEX Z xH) (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))) gen_var_1429) (LetIn gen_var_1431 (App gen_var_1422 (App PEmul Z (App PEX Z xH) (App PEopp Z (App PEopp Z (App PEX Z (App xO xH))))) gen_var_1429 gen_var_1430) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1432 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1432)) gen_var_1364)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1364)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364)))) (App nil Z)))) (App PEmul Z (App PEX Z xH) (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1433 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1433)) gen_var_1364)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1364)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364)))) (App nil Z)))) gen_var_1429)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1434 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1434)) gen_var_1364)))) (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1364))) (Lambda gen_var_1435 Z (App eq Z gen_var_1435 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1364))))))))) (LetIn gen_var_1436 (App Pinj Z xH (App PX Z (App Pinj Z xH (App PX Z (App Pc Z (App Zpos xH)) xH (App Pc Z Z0))) xH (App Pc Z Z0))) (App Pol Z) (LetIn gen_var_1437 (Cast (App eq_refl (App Pol Z) gen_var_1436) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1420 (App PEopp Z (App PEmul Z (App PEX Z (App xI xH)) (App PEopp Z (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))))) gen_var_1436)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1420 (App PEopp Z (App PEmul Z (App PEX Z (App xI xH)) (App PEopp Z (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))))) gen_var_1436) (LetIn gen_var_1438 (App gen_var_1422 (App PEopp Z (App PEmul Z (App PEX Z (App xI xH)) (App PEopp Z (App PEopp Z (App PEopp Z (App PEX Z (App xO xH))))))) gen_var_1436 gen_var_1437) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1439 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1439)) gen_var_1364)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1364)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364)))) (App nil Z)))) (App PEopp Z (App PEmul Z (App PEX Z (App xI xH)) (App PEopp Z (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1440 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1440)) gen_var_1364)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1364)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364)))) (App nil Z)))) gen_var_1436)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1364)) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_1363 gen_var_1364))))) (Lambda gen_var_1441 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1442 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1442)) gen_var_1364)))) (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1364))) gen_var_1441)) (LetIn gen_var_2222 (Cast (App ExportProof.cardinal_set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1444 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1444)) gen_var_1364)) (App ExportProof.binary_intersection gen_var_1363 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1364)) (App Coq.Init.Datatypes.list_ind ExportProof.set (Lambda gen_var_1445 (App list ExportProof.set) (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1446 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1446)) gen_var_1445)) (App ExportProof.binary_intersection gen_var_1363 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1445)))) (Cast (Cast (Lambda gen_var_1447 (Axiom ExportProof.X) (Cast (LetIn gen_var_1455 (App gen_var_874 gen_var_1447) bool (Case 0 (Lambda gen_var_1449 bool (App eq bool (Case 0 (Lambda gen_var_1450 bool bool) (CaseMatch gen_var_1449) (CaseBranches (App gen_var_1363 gen_var_1447) false)) (Case 0 (Lambda gen_var_1451 bool bool) (CaseMatch (App gen_var_1363 gen_var_1447)) (CaseBranches gen_var_1449 false)))) (CaseMatch gen_var_1448) (CaseBranches (LetIn gen_var_1452 (App gen_var_1363 gen_var_1447) bool (Case 0 (Lambda gen_var_1453 bool (App eq bool gen_var_1453 (Case 0 (Lambda gen_var_1454 bool bool) (CaseMatch gen_var_1453) (CaseBranches true false)))) (CaseMatch gen_var_1452) (CaseBranches (App eq_refl bool true) (App eq_refl bool false)))) (LetIn gen_var_1455 (App gen_var_1363 gen_var_1447) bool (Case 0 (Lambda gen_var_1456 bool (App eq bool false (Case 0 (Lambda gen_var_1457 bool bool) (CaseMatch gen_var_1456) (CaseBranches false false)))) (CaseMatch gen_var_1455) (CaseBranches (App eq_refl bool false) (App eq_refl bool false))))))) REVERTcast (App eq bool (App ExportProof.binary_intersection gen_var_874 gen_var_1363 gen_var_1447) (App ExportProof.binary_intersection gen_var_1363 gen_var_874 gen_var_1447)))) REVERTcast (App ExportProof.set_eq (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App ExportProof.binary_intersection gen_var_1363 gen_var_874))) REVERTcast (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1458 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1458)) (App nil ExportProof.set))) (App ExportProof.binary_intersection gen_var_1363 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 (App nil ExportProof.set))))) (Lambda gen_var_1459 ExportProof.set (Lambda gen_var_1577 (App list ExportProof.set) (Lambda gen_var_1578 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1462 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1462)) gen_var_1460)) (App ExportProof.binary_intersection gen_var_1363 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1460))) (Cast (App (Lambda gen_var_1463 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_874 gen_var_1363) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1464 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1464)) gen_var_1460)) (App ExportProof.binary_intersection gen_var_1363 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1460))) (App Coq.Classes.Morphisms.subrelation_proper (Prod gen_var_1465 ExportProof.set (Prod gen_var_1466 ExportProof.set (Sort Prop))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set (Sort Prop)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff)) ExportProof.set_eq (App Coq.Classes.Morphisms.PER_morphism ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PER ExportProof.set ExportProof.set_eq ExportProof.Set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1468 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_1469 (Axiom ExportProof.X) bool) (Prod gen_var_1470 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1471 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_1472 (Axiom ExportProof.X) bool) (Prod gen_var_1473 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_1474 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Sort Prop) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_874 gen_var_1459) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_874 gen_var_1474) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1475 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1475)) gen_var_1460))) (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_874 gen_var_1459) (App ExportProof.binary_intersection gen_var_1474 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1460))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1476 ExportProof.set (Prod gen_var_1477 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1478 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1479 (Axiom ExportProof.X) bool) (Prod gen_var_1480 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_1482 ExportProof.set (Prod gen_var_1483 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1484 ExportProof.set (Prod gen_var_1485 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1486 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1487 (Axiom ExportProof.X) bool) (Prod gen_var_1488 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_1490 ExportProof.set (Prod gen_var_1491 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_1493 ExportProof.set (Prod gen_var_1494 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1495 ExportProof.set (Prod gen_var_1496 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1497 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1498 (Axiom ExportProof.X) bool) (Prod gen_var_1499 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1500 (Axiom ExportProof.X) bool) (Prod gen_var_1501 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1502 ExportProof.set (Prod gen_var_1503 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1504 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1505 (Axiom ExportProof.X) bool) (Prod gen_var_1506 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1507 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1508 (Axiom ExportProof.X) bool) (Prod gen_var_1509 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1510 (Axiom ExportProof.X) bool) (Prod gen_var_1511 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1512 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1513 (Axiom ExportProof.X) bool) (Prod gen_var_1514 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1515 (Axiom ExportProof.X) bool) (Prod gen_var_1516 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1517 (Axiom ExportProof.X) bool) (Prod gen_var_1518 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_1519 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1520 (Axiom ExportProof.X) bool) (Prod gen_var_1521 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_1523 ExportProof.set (Prod gen_var_1524 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1525 ExportProof.set (Prod gen_var_1526 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1527 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1528 (Axiom ExportProof.X) bool) (Prod gen_var_1529 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1530 (Axiom ExportProof.X) bool) (Prod gen_var_1531 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1533 ExportProof.set (Prod gen_var_1534 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1548 ExportProof.set (Prod gen_var_1549 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1550 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1551 (Axiom ExportProof.X) bool) (Prod gen_var_1552 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1553 (Axiom ExportProof.X) bool) (Prod gen_var_1554 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1555 ExportProof.set (Prod gen_var_1556 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1557 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1558 (Axiom ExportProof.X) bool) (Prod gen_var_1559 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1560 (Axiom ExportProof.X) bool) (Prod gen_var_1561 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1562 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1563 (Axiom ExportProof.X) bool) (Prod gen_var_1564 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1565 (Axiom ExportProof.X) bool) (Prod gen_var_1566 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_1567 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1568 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) (App ExportProof.binary_intersection gen_var_874 gen_var_1459) (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) (App ExportProof.binary_intersection gen_var_874 gen_var_1459)) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_874 gen_var_1568) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1569 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_1569)) gen_var_1460)) (App ExportProof.binary_intersection gen_var_1568 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1460)) gen_var_1463) (App ExportProof.binary_intersection gen_var_1568 (App ExportProof.binary_intersection gen_var_1459 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1460))) (App ExportProof.binary_intersection gen_var_1568 (App ExportProof.binary_intersection gen_var_1459 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1460))) (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Reflexive (App ExportProof.binary_intersection gen_var_1568 (App ExportProof.binary_intersection gen_var_1459 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1460)))))) gen_var_1461 (LetIn gen_var_1867 (App Coq.Init.Datatypes.list_ind ExportProof.set (Lambda gen_var_1571 (App list ExportProof.set) (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1571) (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1571)))) (Cast (Cast (Lambda gen_var_1572 (Axiom ExportProof.X) (Cast (LetIn gen_var_1573 (App gen_var_874 gen_var_1572) bool (Case 0 (Lambda gen_var_1574 bool (App eq bool gen_var_1574 (Case 0 (Lambda gen_var_1575 bool bool) (CaseMatch gen_var_1574) (CaseBranches gen_var_1574 false)))) (CaseMatch gen_var_1573) (CaseBranches (App eq_refl bool true) (App eq_refl bool false)))) REVERTcast (App eq bool (App gen_var_874 gen_var_1572) (App ExportProof.binary_intersection gen_var_874 gen_var_874 gen_var_1572)))) REVERTcast (App ExportProof.set_eq gen_var_874 (App ExportProof.binary_intersection gen_var_874 gen_var_874))) REVERTcast (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 (App nil ExportProof.set)) (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 (App nil ExportProof.set))))) (Lambda gen_var_1576 ExportProof.set (Lambda gen_var_1577 (App list ExportProof.set) (Lambda gen_var_1578 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577) (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577))) (Cast (App (Lambda gen_var_1579 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577) (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577))) (App Coq.Classes.Morphisms.subrelation_proper (Prod gen_var_1580 ExportProof.set (Prod gen_var_1581 ExportProof.set (Sort Prop))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set (Sort Prop)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff)) ExportProof.set_eq (App Coq.Classes.Morphisms.PER_morphism ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PER ExportProof.set ExportProof.set_eq ExportProof.Set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1583 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_1584 (Axiom ExportProof.X) bool) (Prod gen_var_1585 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1586 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_1587 (Axiom ExportProof.X) bool) (Prod gen_var_1588 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_1589 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Sort Prop) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App ExportProof.binary_intersection gen_var_1576 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577)) (App ExportProof.binary_intersection gen_var_1576 (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1590 ExportProof.set (Prod gen_var_1591 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1592 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1593 (Axiom ExportProof.X) bool) (Prod gen_var_1594 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_1596 ExportProof.set (Prod gen_var_1597 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1598 ExportProof.set (Prod gen_var_1599 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1600 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1601 (Axiom ExportProof.X) bool) (Prod gen_var_1602 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_1604 ExportProof.set (Prod gen_var_1605 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_1607 ExportProof.set (Prod gen_var_1608 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1609 ExportProof.set (Prod gen_var_1610 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1611 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1612 (Axiom ExportProof.X) bool) (Prod gen_var_1613 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1614 (Axiom ExportProof.X) bool) (Prod gen_var_1615 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1616 ExportProof.set (Prod gen_var_1617 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1618 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1619 (Axiom ExportProof.X) bool) (Prod gen_var_1620 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1621 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1622 (Axiom ExportProof.X) bool) (Prod gen_var_1623 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1624 (Axiom ExportProof.X) bool) (Prod gen_var_1625 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1626 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1627 (Axiom ExportProof.X) bool) (Prod gen_var_1628 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1629 (Axiom ExportProof.X) bool) (Prod gen_var_1630 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1631 (Axiom ExportProof.X) bool) (Prod gen_var_1632 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_1633 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1634 (Axiom ExportProof.X) bool) (Prod gen_var_1635 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_1637 ExportProof.set (Prod gen_var_1638 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1639 ExportProof.set (Prod gen_var_1640 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1641 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1642 (Axiom ExportProof.X) bool) (Prod gen_var_1643 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1644 (Axiom ExportProof.X) bool) (Prod gen_var_1645 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1647 ExportProof.set (Prod gen_var_1648 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1650 ExportProof.set (Prod gen_var_1651 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1652 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1653 (Axiom ExportProof.X) bool) (Prod gen_var_1654 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1655 (Axiom ExportProof.X) bool) (Prod gen_var_1656 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1657 ExportProof.set (Prod gen_var_1658 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1659 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1660 (Axiom ExportProof.X) bool) (Prod gen_var_1661 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1662 (Axiom ExportProof.X) bool) (Prod gen_var_1663 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1664 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1665 (Axiom ExportProof.X) bool) (Prod gen_var_1666 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1667 (Axiom ExportProof.X) bool) (Prod gen_var_1668 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_1669 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1670 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) gen_var_1576 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) gen_var_1576) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577) (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577)) gen_var_1579) (App ExportProof.binary_intersection gen_var_874 (App ExportProof.binary_intersection gen_var_1576 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577))) (App ExportProof.binary_intersection gen_var_874 (App ExportProof.binary_intersection gen_var_1576 (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577)))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1671 ExportProof.set (Prod gen_var_1672 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1673 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1674 (Axiom ExportProof.X) bool) (Prod gen_var_1675 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1677 ExportProof.set (Prod gen_var_1678 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1680 ExportProof.set (Prod gen_var_1681 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1682 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1683 (Axiom ExportProof.X) bool) (Prod gen_var_1684 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq)) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1685 ExportProof.set (Prod gen_var_1686 (Axiom ExportProof.X) bool)) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1687 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1688 (Axiom ExportProof.X) bool) (Prod gen_var_1689 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1690 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1691 (Axiom ExportProof.X) bool) (Prod gen_var_1692 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_1693 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1694 (Axiom ExportProof.X) bool) ExportProof.set_eq)))) gen_var_874 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Reflexive gen_var_874) (App ExportProof.binary_intersection gen_var_1576 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577)) (App ExportProof.binary_intersection gen_var_1576 (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1695 ExportProof.set (Prod gen_var_1696 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1697 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1698 (Axiom ExportProof.X) bool) (Prod gen_var_1699 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_1701 ExportProof.set (Prod gen_var_1702 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1703 ExportProof.set (Prod gen_var_1704 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1705 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1706 (Axiom ExportProof.X) bool) (Prod gen_var_1707 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_1709 ExportProof.set (Prod gen_var_1710 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_1712 ExportProof.set (Prod gen_var_1713 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1714 ExportProof.set (Prod gen_var_1715 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1716 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1717 (Axiom ExportProof.X) bool) (Prod gen_var_1718 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1719 (Axiom ExportProof.X) bool) (Prod gen_var_1720 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1721 ExportProof.set (Prod gen_var_1722 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1723 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1724 (Axiom ExportProof.X) bool) (Prod gen_var_1725 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1726 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1727 (Axiom ExportProof.X) bool) (Prod gen_var_1728 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1729 (Axiom ExportProof.X) bool) (Prod gen_var_1730 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1731 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1732 (Axiom ExportProof.X) bool) (Prod gen_var_1733 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1734 (Axiom ExportProof.X) bool) (Prod gen_var_1735 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1736 (Axiom ExportProof.X) bool) (Prod gen_var_1737 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_1738 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1739 (Axiom ExportProof.X) bool) (Prod gen_var_1740 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_1742 ExportProof.set (Prod gen_var_1743 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1744 ExportProof.set (Prod gen_var_1745 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1746 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1747 (Axiom ExportProof.X) bool) (Prod gen_var_1748 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1749 (Axiom ExportProof.X) bool) (Prod gen_var_1750 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1752 ExportProof.set (Prod gen_var_1753 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1755 ExportProof.set (Prod gen_var_1756 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1757 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1758 (Axiom ExportProof.X) bool) (Prod gen_var_1759 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1760 (Axiom ExportProof.X) bool) (Prod gen_var_1761 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1762 ExportProof.set (Prod gen_var_1763 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1764 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1765 (Axiom ExportProof.X) bool) (Prod gen_var_1766 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1767 (Axiom ExportProof.X) bool) (Prod gen_var_1768 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1769 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1770 (Axiom ExportProof.X) bool) (Prod gen_var_1771 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1772 (Axiom ExportProof.X) bool) (Prod gen_var_1773 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_1774 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1775 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) gen_var_1576 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) gen_var_1576) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577) (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577)) gen_var_1579)))) gen_var_1578 (Cast (Lambda gen_var_1862 (Axiom ExportProof.X) (Cast (LetIn gen_var_1864 (App gen_var_1576 gen_var_1776) bool (Case 0 (Lambda gen_var_1808 bool (App eq bool (Case 0 (Lambda gen_var_1779 bool bool) (CaseMatch gen_var_1778) (CaseBranches (Case 0 (Lambda gen_var_1780 bool bool) (CaseMatch (App gen_var_874 gen_var_1776)) (CaseBranches (App (Fix (Functions (App gen_var_1781 0 (Prod gen_var_1782 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1787 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1787 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1787) (CaseBranches gen_var_874 (Lambda gen_var_1790 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1792 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1794 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1795 bool bool) (CaseMatch (App gen_var_1790 gen_var_1794)) (CaseBranches (App gen_var_1781 gen_var_1792 gen_var_1794) false)))))))))) 0) gen_var_1577 gen_var_1794) false)) false)) (Case 0 (Lambda gen_var_1796 bool bool) (CaseMatch (App gen_var_874 gen_var_1794)) (CaseBranches (Case 0 (Lambda gen_var_1797 bool bool) (CaseMatch gen_var_1790) (CaseBranches (Case 0 (Lambda gen_var_1798 bool bool) (CaseMatch (App gen_var_874 gen_var_1794)) (CaseBranches (App (Fix (Functions (App gen_var_1799 0 (Prod gen_var_1800 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1805 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1805 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1805) (CaseBranches gen_var_874 (Lambda gen_var_1808 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1810 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1812 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1813 bool bool) (CaseMatch (App gen_var_1808 gen_var_1812)) (CaseBranches (App gen_var_1799 gen_var_1810 gen_var_1812) false)))))))))) 0) gen_var_1577 gen_var_1812) false)) false)) false)))) (CaseMatch gen_var_1777) (CaseBranches (LetIn gen_var_1814 (App gen_var_874 gen_var_1812) bool (Case 0 (Lambda gen_var_1843 bool (App eq bool (Case 0 (Lambda gen_var_1816 bool bool) (CaseMatch gen_var_1815) (CaseBranches (App (Fix (Functions (App gen_var_1817 0 (Prod gen_var_1818 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1823 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1823 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1823) (CaseBranches gen_var_874 (Lambda gen_var_1826 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1828 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1830 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1831 bool bool) (CaseMatch (App gen_var_1826 gen_var_1830)) (CaseBranches (App gen_var_1817 gen_var_1828 gen_var_1830) false)))))))))) 0) gen_var_1577 gen_var_1830) false)) (Case 0 (Lambda gen_var_1832 bool bool) (CaseMatch gen_var_1826) (CaseBranches (Case 0 (Lambda gen_var_1833 bool bool) (CaseMatch gen_var_1826) (CaseBranches (App (Fix (Functions (App gen_var_1834 0 (Prod gen_var_1835 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1840 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1840 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1840) (CaseBranches gen_var_874 (Lambda gen_var_1843 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1845 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1847 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1848 bool bool) (CaseMatch (App gen_var_1843 gen_var_1847)) (CaseBranches (App gen_var_1834 gen_var_1845 gen_var_1847) false)))))))))) 0) gen_var_1577 gen_var_1847) false)) false)))) (CaseMatch gen_var_1814) (CaseBranches (App eq_refl bool (App (Fix (Functions (App gen_var_1849 0 (Prod gen_var_1850 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1855 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1855 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1855) (CaseBranches gen_var_874 (Lambda gen_var_1858 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1860 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1862 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1863 bool bool) (CaseMatch (App gen_var_1858 gen_var_1862)) (CaseBranches (App gen_var_1849 gen_var_1860 gen_var_1862) false)))))))))) 0) gen_var_1577 gen_var_1862)) (App eq_refl bool false)))) (LetIn gen_var_1864 (App gen_var_874 gen_var_1862) bool (Case 0 (Lambda gen_var_1865 bool (App eq bool false (Case 0 (Lambda gen_var_1866 bool bool) (CaseMatch gen_var_1865) (CaseBranches false false)))) (CaseMatch gen_var_1864) (CaseBranches (App eq_refl bool false) (App eq_refl bool false))))))) REVERTcast (App eq bool (App ExportProof.binary_intersection gen_var_1576 (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577)) gen_var_1862) (App ExportProof.binary_intersection gen_var_874 (App ExportProof.binary_intersection gen_var_1576 (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577))) gen_var_1862)))) REVERTcast (App ExportProof.set_eq (App ExportProof.binary_intersection gen_var_1576 (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577))) (App ExportProof.binary_intersection gen_var_874 (App ExportProof.binary_intersection gen_var_1576 (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577))))))) REVERTcast (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 (App cons ExportProof.set gen_var_1576 gen_var_1577)) (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 (App cons ExportProof.set gen_var_1576 gen_var_1577)))))))) gen_var_1577) (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577) (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577))) (App (Lambda gen_var_1867 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577) (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577))) (App (Lambda gen_var_1868 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577) (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577))) (App Coq.Classes.Morphisms.subrelation_proper (Prod gen_var_1869 ExportProof.set (Prod gen_var_1870 ExportProof.set (Sort Prop))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set (Sort Prop)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff)) ExportProof.set_eq (App Coq.Classes.Morphisms.PER_morphism ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PER ExportProof.set ExportProof.set_eq ExportProof.Set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1872 ExportProof.set (Sort Prop)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1873 ExportProof.set (Sort Prop)) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Sort Prop) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_874 gen_var_1459) (App ExportProof.binary_intersection gen_var_1862 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577))) (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_874 gen_var_1459) (App ExportProof.binary_intersection gen_var_1862 (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577)))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1874 ExportProof.set (Prod gen_var_1875 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1876 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1877 (Axiom ExportProof.X) bool) (Prod gen_var_1878 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1880 ExportProof.set (Prod gen_var_1881 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1883 ExportProof.set (Prod gen_var_1884 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1885 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1886 (Axiom ExportProof.X) bool) (Prod gen_var_1887 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq)) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1888 ExportProof.set (Prod gen_var_1889 (Axiom ExportProof.X) bool)) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1890 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1891 (Axiom ExportProof.X) bool) (Prod gen_var_1892 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1893 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1894 (Axiom ExportProof.X) bool) (Prod gen_var_1895 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_1896 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1897 (Axiom ExportProof.X) bool) ExportProof.set_eq)))) (App ExportProof.binary_intersection gen_var_874 gen_var_1459) (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Reflexive (App ExportProof.binary_intersection gen_var_874 gen_var_1459)) (App ExportProof.binary_intersection gen_var_1897 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577)) (App ExportProof.binary_intersection gen_var_1897 (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1898 ExportProof.set (Prod gen_var_1899 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1900 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1901 (Axiom ExportProof.X) bool) (Prod gen_var_1902 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_1904 ExportProof.set (Prod gen_var_1905 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1906 ExportProof.set (Prod gen_var_1907 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1908 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1909 (Axiom ExportProof.X) bool) (Prod gen_var_1910 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_1912 ExportProof.set (Prod gen_var_1913 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_1915 ExportProof.set (Prod gen_var_1916 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1917 ExportProof.set (Prod gen_var_1918 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1919 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1920 (Axiom ExportProof.X) bool) (Prod gen_var_1921 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1922 (Axiom ExportProof.X) bool) (Prod gen_var_1923 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1924 ExportProof.set (Prod gen_var_1925 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1926 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1927 (Axiom ExportProof.X) bool) (Prod gen_var_1928 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1929 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1930 (Axiom ExportProof.X) bool) (Prod gen_var_1931 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1932 (Axiom ExportProof.X) bool) (Prod gen_var_1933 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1934 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1935 (Axiom ExportProof.X) bool) (Prod gen_var_1936 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1937 (Axiom ExportProof.X) bool) (Prod gen_var_1938 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1939 (Axiom ExportProof.X) bool) (Prod gen_var_1940 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_1941 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1942 (Axiom ExportProof.X) bool) (Prod gen_var_1943 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_1945 ExportProof.set (Prod gen_var_1946 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1947 ExportProof.set (Prod gen_var_1948 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1949 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1950 (Axiom ExportProof.X) bool) (Prod gen_var_1951 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1952 (Axiom ExportProof.X) bool) (Prod gen_var_1953 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1955 ExportProof.set (Prod gen_var_1956 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1958 ExportProof.set (Prod gen_var_1959 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1960 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1961 (Axiom ExportProof.X) bool) (Prod gen_var_1962 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1963 (Axiom ExportProof.X) bool) (Prod gen_var_1964 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1965 ExportProof.set (Prod gen_var_1966 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1967 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1968 (Axiom ExportProof.X) bool) (Prod gen_var_1969 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1970 (Axiom ExportProof.X) bool) (Prod gen_var_1971 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1972 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1973 (Axiom ExportProof.X) bool) (Prod gen_var_1974 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1975 (Axiom ExportProof.X) bool) (Prod gen_var_1976 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_1977 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1978 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) gen_var_1978 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) gen_var_1978) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577) (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577)) gen_var_1868)) (App ExportProof.binary_intersection gen_var_1978 (App ExportProof.binary_intersection gen_var_1459 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577))) (App ExportProof.binary_intersection gen_var_1978 (App ExportProof.binary_intersection gen_var_1459 (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577)))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1979 ExportProof.set (Prod gen_var_1980 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1981 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1982 (Axiom ExportProof.X) bool) (Prod gen_var_1983 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1985 ExportProof.set (Prod gen_var_1986 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1988 ExportProof.set (Prod gen_var_1989 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1990 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1991 (Axiom ExportProof.X) bool) (Prod gen_var_1992 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq)) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1993 ExportProof.set (Prod gen_var_1994 (Axiom ExportProof.X) bool)) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1995 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1996 (Axiom ExportProof.X) bool) (Prod gen_var_1997 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1998 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1999 (Axiom ExportProof.X) bool) (Prod gen_var_2000 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_2001 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_2002 (Axiom ExportProof.X) bool) ExportProof.set_eq)))) gen_var_2002 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Reflexive gen_var_2002) (App ExportProof.binary_intersection gen_var_1459 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577)) (App ExportProof.binary_intersection gen_var_1459 (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_2003 ExportProof.set (Prod gen_var_2004 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_2005 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_2006 (Axiom ExportProof.X) bool) (Prod gen_var_2007 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_2009 ExportProof.set (Prod gen_var_2010 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_2011 ExportProof.set (Prod gen_var_2012 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_2013 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_2014 (Axiom ExportProof.X) bool) (Prod gen_var_2015 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_2017 ExportProof.set (Prod gen_var_2018 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_2020 ExportProof.set (Prod gen_var_2021 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_2022 ExportProof.set (Prod gen_var_2023 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_2024 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_2025 (Axiom ExportProof.X) bool) (Prod gen_var_2026 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_2027 (Axiom ExportProof.X) bool) (Prod gen_var_2028 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_2029 ExportProof.set (Prod gen_var_2030 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_2031 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_2032 (Axiom ExportProof.X) bool) (Prod gen_var_2033 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_2034 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_2035 (Axiom ExportProof.X) bool) (Prod gen_var_2036 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_2037 (Axiom ExportProof.X) bool) (Prod gen_var_2038 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_2039 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_2040 (Axiom ExportProof.X) bool) (Prod gen_var_2041 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_2042 (Axiom ExportProof.X) bool) (Prod gen_var_2043 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_2044 (Axiom ExportProof.X) bool) (Prod gen_var_2045 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_2046 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_2047 (Axiom ExportProof.X) bool) (Prod gen_var_2048 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_2050 ExportProof.set (Prod gen_var_2051 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_2052 ExportProof.set (Prod gen_var_2053 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_2054 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_2055 (Axiom ExportProof.X) bool) (Prod gen_var_2056 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_2057 (Axiom ExportProof.X) bool) (Prod gen_var_2058 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_2060 ExportProof.set (Prod gen_var_2061 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_2063 ExportProof.set (Prod gen_var_2064 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_2065 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_2066 (Axiom ExportProof.X) bool) (Prod gen_var_2067 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_2068 (Axiom ExportProof.X) bool) (Prod gen_var_2069 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_2070 ExportProof.set (Prod gen_var_2071 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_2072 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_2073 (Axiom ExportProof.X) bool) (Prod gen_var_2074 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_2075 (Axiom ExportProof.X) bool) (Prod gen_var_2076 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_2077 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_2078 (Axiom ExportProof.X) bool) (Prod gen_var_2079 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_2080 (Axiom ExportProof.X) bool) (Prod gen_var_2081 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_2082 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_2083 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) gen_var_1459 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) gen_var_1459) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577) (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577)) gen_var_1868)))) gen_var_1867 (Cast (Lambda gen_var_2084 (Axiom ExportProof.X) (Cast (LetIn gen_var_2216 (App gen_var_874 gen_var_2084) bool (Case 0 (Lambda gen_var_2118 bool (App eq bool (Case 0 (Lambda gen_var_2087 bool bool) (CaseMatch (Case 0 (Lambda gen_var_2088 bool bool) (CaseMatch gen_var_2086) (CaseBranches (App gen_var_1459 gen_var_2084) false))) (CaseBranches (Case 0 (Lambda gen_var_2089 bool bool) (CaseMatch (App gen_var_2083 gen_var_2084)) (CaseBranches (Case 0 (Lambda gen_var_2090 bool bool) (CaseMatch gen_var_2086) (CaseBranches (App (Fix (Functions (App gen_var_2091 0 (Prod gen_var_2092 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_2097 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_2097 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_2097) (CaseBranches gen_var_874 (Lambda gen_var_2100 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_2102 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_2104 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2105 bool bool) (CaseMatch (App gen_var_2100 gen_var_2104)) (CaseBranches (App gen_var_2091 gen_var_2102 gen_var_2104) false)))))))))) 0) gen_var_1577 gen_var_2084) false)) false)) false)) (Case 0 (Lambda gen_var_2106 bool bool) (CaseMatch (App gen_var_2104 gen_var_2084)) (CaseBranches (Case 0 (Lambda gen_var_2107 bool bool) (CaseMatch (App gen_var_1459 gen_var_2084)) (CaseBranches (Case 0 (Lambda gen_var_2108 bool bool) (CaseMatch gen_var_2100) (CaseBranches (App (Fix (Functions (App gen_var_2109 0 (Prod gen_var_2110 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_2115 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_2115 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_2115) (CaseBranches gen_var_874 (Lambda gen_var_2118 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_2120 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_2122 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2123 bool bool) (CaseMatch (App gen_var_2118 gen_var_2122)) (CaseBranches (App gen_var_2109 gen_var_2120 gen_var_2122) false)))))))))) 0) gen_var_1577 gen_var_2084) false)) false)) false)))) (CaseMatch gen_var_2085) (CaseBranches (LetIn gen_var_2209 (App gen_var_1459 gen_var_2084) bool (Case 0 (Lambda gen_var_2154 bool (App eq bool (Case 0 (Lambda gen_var_2126 bool bool) (CaseMatch gen_var_2125) (CaseBranches (Case 0 (Lambda gen_var_2127 bool bool) (CaseMatch (App gen_var_2122 gen_var_2084)) (CaseBranches (App (Fix (Functions (App gen_var_2128 0 (Prod gen_var_2129 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_2134 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_2134 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_2134) (CaseBranches gen_var_874 (Lambda gen_var_2137 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_2139 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_2141 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2142 bool bool) (CaseMatch (App gen_var_2137 gen_var_2141)) (CaseBranches (App gen_var_2128 gen_var_2139 gen_var_2141) false)))))))))) 0) gen_var_1577 gen_var_2084) false)) false)) (Case 0 (Lambda gen_var_2143 bool bool) (CaseMatch (App gen_var_2141 gen_var_2084)) (CaseBranches (Case 0 (Lambda gen_var_2144 bool bool) (CaseMatch gen_var_2137) (CaseBranches (App (Fix (Functions (App gen_var_2145 0 (Prod gen_var_2146 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_2151 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_2151 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_2151) (CaseBranches gen_var_874 (Lambda gen_var_2154 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_2156 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_2158 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2159 bool bool) (CaseMatch (App gen_var_2154 gen_var_2158)) (CaseBranches (App gen_var_2145 gen_var_2156 gen_var_2158) false)))))))))) 0) gen_var_1577 gen_var_2084) false)) false)))) (CaseMatch gen_var_2124) (CaseBranches (LetIn gen_var_2160 (App gen_var_2158 gen_var_2084) bool (Case 0 (Lambda gen_var_2188 bool (App eq bool (Case 0 (Lambda gen_var_2162 bool bool) (CaseMatch gen_var_2161) (CaseBranches (App (Fix (Functions (App gen_var_2163 0 (Prod gen_var_2164 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_2169 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_2169 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_2169) (CaseBranches gen_var_874 (Lambda gen_var_2172 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_2174 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_2176 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2177 bool bool) (CaseMatch (App gen_var_2172 gen_var_2176)) (CaseBranches (App gen_var_2163 gen_var_2174 gen_var_2176) false)))))))))) 0) gen_var_1577 gen_var_2084) false)) (Case 0 (Lambda gen_var_2178 bool bool) (CaseMatch gen_var_2172) (CaseBranches (App (Fix (Functions (App gen_var_2179 0 (Prod gen_var_2180 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_2185 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_2185 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_2185) (CaseBranches gen_var_874 (Lambda gen_var_2188 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_2190 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_2192 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2193 bool bool) (CaseMatch (App gen_var_2188 gen_var_2192)) (CaseBranches (App gen_var_2179 gen_var_2190 gen_var_2192) false)))))))))) 0) gen_var_1577 gen_var_2084) false)))) (CaseMatch gen_var_2160) (CaseBranches (App eq_refl bool (App (Fix (Functions (App gen_var_2194 0 (Prod gen_var_2195 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_2200 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_2200 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_2200) (CaseBranches gen_var_874 (Lambda gen_var_2203 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_2205 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_2207 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2208 bool bool) (CaseMatch (App gen_var_2203 gen_var_2207)) (CaseBranches (App gen_var_2194 gen_var_2205 gen_var_2207) false)))))))))) 0) gen_var_1577 gen_var_2084)) (App eq_refl bool false)))) (LetIn gen_var_2209 (App gen_var_2207 gen_var_2084) bool (Case 0 (Lambda gen_var_2210 bool (App eq bool false (Case 0 (Lambda gen_var_2211 bool bool) (CaseMatch gen_var_2210) (CaseBranches false false)))) (CaseMatch gen_var_2209) (CaseBranches (App eq_refl bool false) (App eq_refl bool false))))))) (LetIn gen_var_2216 (App gen_var_2207 gen_var_2084) bool (Case 0 (Lambda gen_var_2213 bool (App eq bool false (Case 0 (Lambda gen_var_2214 bool bool) (CaseMatch gen_var_2213) (CaseBranches (Case 0 (Lambda gen_var_2215 bool bool) (CaseMatch (App gen_var_1459 gen_var_2084)) (CaseBranches false false)) false)))) (CaseMatch gen_var_2212) (CaseBranches (LetIn gen_var_2216 (App gen_var_1459 gen_var_2084) bool (Case 0 (Lambda gen_var_2217 bool (App eq bool false (Case 0 (Lambda gen_var_2218 bool bool) (CaseMatch gen_var_2217) (CaseBranches false false)))) (CaseMatch gen_var_2216) (CaseBranches (App eq_refl bool false) (App eq_refl bool false)))) (App eq_refl bool false))))))) REVERTcast (App eq bool (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_874 gen_var_1459) (App ExportProof.binary_intersection gen_var_2207 (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577))) gen_var_2084) (App ExportProof.binary_intersection gen_var_2207 (App ExportProof.binary_intersection gen_var_1459 (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577))) gen_var_2084)))) REVERTcast (App ExportProof.set_eq (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_874 gen_var_1459) (App ExportProof.binary_intersection gen_var_2207 (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577)))) (App ExportProof.binary_intersection gen_var_2207 (App ExportProof.binary_intersection gen_var_1459 (App ExportProof.binary_intersection gen_var_874 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 gen_var_1577)))))))) gen_var_1867))) REVERTcast (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_874 gen_var_2207) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2219 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_2219)) (App cons ExportProof.set gen_var_1459 gen_var_1577))) (App ExportProof.binary_intersection gen_var_2207 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_874 (App cons ExportProof.set gen_var_1459 gen_var_1577)))))))) gen_var_1577)) REVERTcast (App eq Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_2207) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2220 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_2220)) gen_var_1577)))) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_2207 gen_var_1577)))))) (App eq Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_2207) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2221 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_2221)) gen_var_1577)))) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_2207 gen_var_1577))))) (App (Lambda gen_var_2222 (App eq Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_2207) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2223 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_2223)) gen_var_1577)))) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_2207 gen_var_1577))))) (App Coq.Init.Logic.eq_ind_r Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_2207 gen_var_1577)))) (Lambda gen_var_2224 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul gen_var_2224 (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1577))) (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1577)) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_2207 gen_var_1577))))))) (Cast (LetIn gen_var_2225 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_2226 (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_2207 gen_var_1577)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1577)) (App nil Z))) (App list Z) (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma1 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_2226 gen_var_2225 (App PEmul Z (App PEX Z xH) (App PEX Z (App xO xH))) (App PEmul Z (App PEX Z (App xO xH)) (App PEX Z xH)) I (Cast (App eq_refl bool true) VMcast (App eq bool (LetIn gen_var_2227 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_2225) (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.Peq Z Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_2227 (App PEmul Z (App PEX Z xH) (App PEX Z (App xO xH)))) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_2227 (App PEmul Z (App PEX Z (App xO xH)) (App PEX Z xH))))) true))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_2266 gen_var_1577)))) (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1577))) (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1577)) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_2266 gen_var_1577))))))) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_2266) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2268 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_2268)) gen_var_1577)))) gen_var_2222)) gen_var_2222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_2266 gen_var_1577)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1577))))))) gen_var_1438)))) (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_2266) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2269 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_2269)) gen_var_1577)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1577))))) gen_var_1431))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_1415 (App cons Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_2266) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2271 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_2271)) gen_var_1577)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1577))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_2266 gen_var_1577)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1577))))))) (App nil Z)))) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_2266) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2272 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_2272)) gen_var_1577)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1577))))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_2266 gen_var_1577)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1577)))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_1415 gen_var_1415) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_2266) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2274 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_2274)) gen_var_1577)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1577))))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_874 (App cons ExportProof.set gen_var_2266 gen_var_1577)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_1577)))))))))) (App eq_refl (App list Z) gen_var_1415))) (App Coq.Init.Datatypes.length ExportProof.set (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2275 ExportProof.set (App ExportProof.binary_intersection gen_var_874 gen_var_2275)) gen_var_1577)) (App Coq.Lists.List.map_length ExportProof.set ExportProof.set (Lambda gen_var_2285 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2285)) gen_var_1577)) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2266) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2286 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2286)) gen_var_1577)))) (App ExportProof.alternating_sign (App Coq.Init.Nat.add (App S O) (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2266) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2287 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2287)) gen_var_1577)))))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_2282 (App cons ExportProof.set gen_var_2266 gen_var_1577)))) (App ExportProof.alternating_sign (App Coq.Init.Nat.add (App S O) (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set gen_var_2282 (App cons ExportProof.set gen_var_2266 gen_var_1577))))))))) REVERTcast (App eq Z (App gen_var_2278 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2266) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2288 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2288)) gen_var_1577))) (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_2278 (App cons ExportProof.set gen_var_2282 (App cons ExportProof.set gen_var_2266 gen_var_1577)))))) (App eq Z (App gen_var_2278 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2266) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2289 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2289)) gen_var_1577))) (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_2278 (App cons ExportProof.set gen_var_2282 (App cons ExportProof.set gen_var_2266 gen_var_1577))))) (App (Lambda gen_var_2290 (App eq Z (App gen_var_2278 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2266) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2291 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2291)) gen_var_1577))) (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_2278 (App cons ExportProof.set gen_var_2282 (App cons ExportProof.set gen_var_2266 gen_var_1577))))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_2278 (App cons ExportProof.set gen_var_2282 (App cons ExportProof.set gen_var_2266 gen_var_1577)))) (Lambda gen_var_2292 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.opp gen_var_2292) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2278 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2293 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2293))) gen_var_2283))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2278 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2294 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2294))) gen_var_2283))))) (App gen_var_2278 (App cons ExportProof.set gen_var_2282 (App cons ExportProof.set gen_var_2266 gen_var_1577)))))) (Cast (LetIn gen_var_2295 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_2296 (App cons Z (App gen_var_2278 (App cons ExportProof.set gen_var_2282 (App cons ExportProof.set gen_var_2266 gen_var_1577))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2278 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2297 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2297))) gen_var_2283)))) (App nil Z))) (App list Z) (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma1 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_2296 gen_var_2295 (App PEsub Z (App PEopp Z (App PEopp Z (App PEX Z xH))) (App PEX Z (App xO xH))) (App PEadd Z (App PEopp Z (App PEX Z (App xO xH))) (App PEX Z xH)) I (Cast (App eq_refl bool true) VMcast (App eq bool (LetIn gen_var_2298 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_2295) (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.Peq Z Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_2298 (App PEsub Z (App PEopp Z (App PEopp Z (App PEX Z xH))) (App PEX Z (App xO xH)))) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_2298 (App PEadd Z (App PEopp Z (App PEX Z (App xO xH))) (App PEX Z xH))))) true))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_2278 (App cons ExportProof.set gen_var_2282 (App cons ExportProof.set gen_var_2266 gen_var_1577))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2278 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2299 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2299))) gen_var_2283))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2278 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2300 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2300))) gen_var_2283))))) (App gen_var_2278 (App cons ExportProof.set gen_var_2282 (App cons ExportProof.set gen_var_2266 gen_var_1577)))))) (App gen_var_2278 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2266) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2301 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2301)) gen_var_1577))) gen_var_2290)) gen_var_2290)) (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2278 (App cons ExportProof.set gen_var_2282 (App cons ExportProof.set gen_var_2266 gen_var_1577))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2278 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2302 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2302))) gen_var_2283)))))) gen_var_1438)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2278 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2266) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2303 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2303)) gen_var_1577))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2278 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2304 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2304))) gen_var_2283)))))) gen_var_1431))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_1415 (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2278 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2266) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2306 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2306)) gen_var_1577))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2278 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2307 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2307))) gen_var_2283)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2278 (App cons ExportProof.set gen_var_2282 (App cons ExportProof.set gen_var_2266 gen_var_1577))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2278 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2308 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2308))) gen_var_2283)))))) (App nil Z)))) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2278 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2266) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2309 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2309)) gen_var_1577))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2278 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2310 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2310))) gen_var_2283)))))) (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2278 (App cons ExportProof.set gen_var_2282 (App cons ExportProof.set gen_var_2266 gen_var_1577))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2278 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2311 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2311))) gen_var_2283))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_1415 gen_var_1415) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2278 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2266) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2313 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2313)) gen_var_1577))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2278 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2314 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2314))) gen_var_2283)))))) (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2278 (App cons ExportProof.set gen_var_2282 (App cons ExportProof.set gen_var_2266 gen_var_1577))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2278 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2315 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2315))) gen_var_2283))))))))) (App eq_refl (App list Z) gen_var_1415))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2278 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2316 (App list ExportProof.set) (App cons ExportProof.set gen_var_2282 gen_var_2316)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_2316)))) gen_var_2284) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2278 (Case 0 (Lambda gen_var_2317 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2318 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2318)) (App cons ExportProof.set gen_var_2266 gen_var_1577)))) (CaseBranches (App cons (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2319 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2319)) (App cons ExportProof.set gen_var_2266 gen_var_1577)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2320 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2320))) gen_var_2316))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2321 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2321))) gen_var_2316))))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2278 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2322 (App list ExportProof.set) (App cons ExportProof.set gen_var_2282 gen_var_2322)) (Case 0 (Lambda gen_var_2323 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App cons ExportProof.set gen_var_2266 gen_var_1577))) (CaseBranches (App cons (App list ExportProof.set) (App cons ExportProof.set gen_var_2266 gen_var_1577) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_2322)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_2322)))))))))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2278 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2324 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2324))) (App cons (App list ExportProof.set) gen_var_2324 gen_var_2322)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2278 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2325 (App list ExportProof.set) (App cons ExportProof.set gen_var_2282 gen_var_2325)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App cons (App list ExportProof.set) gen_var_2324 gen_var_2325)))))))))) gen_var_2325))) (App ExportProof.sublists ExportProof.set gen_var_2325)) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_2326 ExportProof.set (App ExportProof.binary_intersection gen_var_2282 gen_var_2326)) gen_var_2325)) (App ExportProof.sublists_map ExportProof.set ExportProof.set (Lambda gen_var_2396 ExportProof.set (App ExportProof.binary_intersection gen_var_2333 gen_var_2396)) gen_var_2395)) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_2397 (Axiom ExportProof.X) bool) (Lambda gen_var_2398 ExportProof.set (App ExportProof.binary_intersection gen_var_2333 gen_var_2398)) gen_var_2395)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2399 (App list ExportProof.set) (App cons ExportProof.set gen_var_2333 gen_var_2399)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2399)))))) (App (LetIn gen_var_2401 (App eq_refl Z (App ExportProof.cardinal gen_var_2333)) (App eq Z (App ExportProof.cardinal gen_var_2333) (App ExportProof.cardinal gen_var_2333)) (App (Lambda gen_var_2401 (App eq Z (App ExportProof.cardinal gen_var_2333) (App ExportProof.cardinal gen_var_2333)) (Lambda gen_var_2402 (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_2403 (Axiom ExportProof.X) bool) (Lambda gen_var_2404 ExportProof.set (App ExportProof.binary_intersection gen_var_2333 gen_var_2404)) gen_var_2399)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2405 (App list ExportProof.set) (App cons ExportProof.set gen_var_2333 gen_var_2405)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2405)))))) (App Coq.Init.Logic.eq_trans Z (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2333) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_2407 (Sort Set) (Lambda gen_var_2407 (Sort Set) (Prod Anonymous gen_var_2407 gen_var_2407))) (Axiom ExportProof.X) bool) (Lambda gen_var_2409 ExportProof.set (App ExportProof.binary_intersection gen_var_2333 gen_var_2409)) gen_var_2405))))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2333) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_2411 (Sort Set) (Lambda gen_var_2411 (Sort Set) (Prod Anonymous gen_var_2411 gen_var_2411))) (Axiom ExportProof.X) bool) (Lambda gen_var_2413 ExportProof.set (App ExportProof.binary_intersection gen_var_2333 gen_var_2413)) gen_var_2405))))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2333) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2414 (App list ExportProof.set) (App cons ExportProof.set gen_var_2333 gen_var_2414)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2414)))))) (App Coq.Init.Logic.f_equal (Prod gen_var_2415 Z Z) Z (Lambda gen_var_2416 (Prod gen_var_2417 Z Z) (App gen_var_2416 (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_2419 (Sort Set) (Lambda gen_var_2419 (Sort Set) (Prod Anonymous gen_var_2419 gen_var_2419))) (Axiom ExportProof.X) bool) (Lambda gen_var_2421 ExportProof.set (App ExportProof.binary_intersection gen_var_2333 gen_var_2421)) gen_var_2414)))))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2333)) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2333)) (App eq_refl (Prod gen_var_2422 Z Z) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2333)))) (App Coq.Init.Logic.f_equal Z Z (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2333)) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_2424 (Sort Set) (Lambda gen_var_2424 (Sort Set) (Prod Anonymous gen_var_2424 gen_var_2424))) (Axiom ExportProof.X) bool) (Lambda gen_var_2426 ExportProof.set (App ExportProof.binary_intersection gen_var_2333 gen_var_2426)) gen_var_2414)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2427 (App list ExportProof.set) (App cons ExportProof.set gen_var_2333 gen_var_2427)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2427))))) gen_var_2402)))) gen_var_2401)) gen_var_2401)) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_2333) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_2428 (Axiom ExportProof.X) bool) (Lambda gen_var_2429 ExportProof.set (App ExportProof.binary_intersection gen_var_2333 gen_var_2429)) gen_var_2427)))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2333) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2430 (App list ExportProof.set) (App cons ExportProof.set gen_var_2333 gen_var_2430)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2430)))))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_2333) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2431 (App list ExportProof.set) (App cons ExportProof.set gen_var_2333 gen_var_2431)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2431)))))) gen_var_1438)))))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_1415 (App cons Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_2333) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_2433 (Axiom ExportProof.X) bool) (Lambda gen_var_2434 ExportProof.set (App ExportProof.binary_intersection gen_var_2333 gen_var_2434)) gen_var_2431)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_2333) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2435 (App list ExportProof.set) (App cons ExportProof.set gen_var_2333 gen_var_2435)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2435)))))) (App nil Z)))) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_2333) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_2436 (Axiom ExportProof.X) bool) (Lambda gen_var_2437 ExportProof.set (App ExportProof.binary_intersection gen_var_2333 gen_var_2437)) gen_var_2435)))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_2333) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2438 (App list ExportProof.set) (App cons ExportProof.set gen_var_2333 gen_var_2438)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2438))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_1415 gen_var_1415) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_2333) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_2440 (Axiom ExportProof.X) bool) (Lambda gen_var_2441 ExportProof.set (App ExportProof.binary_intersection gen_var_2333 gen_var_2441)) gen_var_2438)))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_2333) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2442 (App list ExportProof.set) (App cons ExportProof.set gen_var_2333 gen_var_2442)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2442))))))))) (App eq_refl (App list Z) gen_var_1415))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_2333) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_2443 (Axiom ExportProof.X) bool) (Lambda gen_var_2444 ExportProof.set (App ExportProof.binary_intersection gen_var_2333 gen_var_2444)) gen_var_2442)))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_2333 (App nil ExportProof.set)))) (App ExportProof.alternating_sign (App Coq.Init.Nat.add (App S O) (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set gen_var_2333 (App nil ExportProof.set)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2445 (App list ExportProof.set) (App cons ExportProof.set gen_var_2333 gen_var_2445)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2445)))))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_2333) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_2446 (Axiom ExportProof.X) bool) (Lambda gen_var_2447 ExportProof.set (App ExportProof.binary_intersection gen_var_2333 gen_var_2447)) gen_var_2445)))))) (App Coq.ZArith.BinIntDef.Z.add (App gen_var_2329 (App cons ExportProof.set gen_var_2333 (App nil ExportProof.set))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2448 (App list ExportProof.set) (App cons ExportProof.set gen_var_2333 gen_var_2448)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2448)))))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_2333) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_2449 (Axiom ExportProof.X) bool) (Lambda gen_var_2450 ExportProof.set (App ExportProof.binary_intersection gen_var_2333 gen_var_2450)) gen_var_2448)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2329 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2451 (App list ExportProof.set) (App cons ExportProof.set gen_var_2333 gen_var_2451)) (App cons (App list ExportProof.set) (App nil ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2451)))))))) (App ExportProof.sublists ExportProof.set gen_var_2451) (App ExportProof.sublists_proper ExportProof.set gen_var_2484)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2485 (App list ExportProof.set) (App cons ExportProof.set gen_var_2455 gen_var_2485)) (App ExportProof.sublists ExportProof.set gen_var_2485))) (App ExportProof.filter_map_always (App list ExportProof.set) (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (Lambda gen_var_2505 (App list ExportProof.set) (App cons ExportProof.set gen_var_2496 gen_var_2505)) (App ExportProof.sublists ExportProof.set gen_var_2505) (Lambda gen_var_2506 (App list ExportProof.set) (App eq_refl bool true)))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_2496) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2488 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_218))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2488 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2507 (App list ExportProof.set) (App cons ExportProof.set gen_var_2496 gen_var_2507)) (App ExportProof.sublists ExportProof.set gen_var_2507))))))) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_2496) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2488 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_218))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2488 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2508 (App list ExportProof.set) (App cons ExportProof.set gen_var_2496 gen_var_2508)) (App ExportProof.sublists ExportProof.set gen_var_2508)))))) (App (Lambda gen_var_2509 (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_2496) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2488 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_218))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2488 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2510 (App list ExportProof.set) (App cons ExportProof.set gen_var_2496 gen_var_2510)) (App ExportProof.sublists ExportProof.set gen_var_2510)))))) (App Coq.Init.Logic.eq_ind Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_2496) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2488 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_218))))) (Lambda gen_var_2511 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2496) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2488 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2510))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2488 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_218))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2488 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2510)))) gen_var_2511))) (Cast (LetIn gen_var_2512 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_2513 (App cons Z (App ExportProof.cardinal gen_var_2496) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2488 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2510)))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2488 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_218)))) (App nil Z)))) (App list Z) (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma1 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_2513 gen_var_2512 (App PEsub Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH))) (App PEX Z (App xI xH))) (App PEadd Z (App PEX Z (App xO xH)) (App PEsub Z (App PEX Z xH) (App PEX Z (App xI xH)))) I (Cast (App eq_refl bool true) VMcast (App eq bool (LetIn gen_var_2514 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_2512) (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.Peq Z Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_2514 (App PEsub Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH))) (App PEX Z (App xI xH)))) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_2514 (App PEadd Z (App PEX Z (App xO xH)) (App PEsub Z (App PEX Z xH) (App PEX Z (App xI xH))))))) true))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2496) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2488 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2510))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2488 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_218))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2488 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2510)))) (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_2496) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2488 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_218)))))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2488 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2515 (App list ExportProof.set) (App cons ExportProof.set gen_var_2496 gen_var_2515)) (App ExportProof.sublists ExportProof.set gen_var_2515))))) gen_var_2509)) gen_var_2509)) (App ExportProof.cardinal (App ExportProof.list_union gen_var_218)) (App gen_var_154 gen_var_218 (Cast (App Coq.Init.Logic.eq_ind_r nat (App Coq.Init.Datatypes.length ExportProof.set gen_var_2515) (Lambda gen_var_2516 nat (App eq nat gen_var_2516 gen_var_2516)) gen_var_182 (App Coq.Init.Datatypes.length (Prod gen_var_2517 (Axiom ExportProof.X) bool) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_2518 (Axiom ExportProof.X) bool) (Lambda gen_var_2519 ExportProof.set (App ExportProof.binary_intersection gen_var_2496 gen_var_2519)) gen_var_2515)) (App Coq.Lists.List.map_length ExportProof.set (Prod gen_var_2520 (Axiom ExportProof.X) bool) (Lambda gen_var_2521 ExportProof.set (App ExportProof.binary_intersection gen_var_2496 gen_var_2521)) gen_var_2515)) REVERTcast (App eq nat gen_var_2516 (App Coq.Init.Datatypes.length ExportProof.set gen_var_218))))) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_2496 (App ExportProof.list_union gen_var_2515))) gen_var_2509))) (App ExportProof.cardinal (App ExportProof.list_union gen_var_2515)) (App gen_var_154 gen_var_2515 gen_var_182)) (App ExportProof.sum (App Coq.Init.Datatypes.app Z (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2488 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2515))) (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2488 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2522 (App list ExportProof.set) (App cons ExportProof.set gen_var_2496 gen_var_2522)) (App ExportProof.sublists ExportProof.set gen_var_2522)))))) (App ExportProof.sum_app (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2488 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2522))) (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2488 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2630 (App list ExportProof.set) (App cons ExportProof.set gen_var_2526 gen_var_2630)) (App ExportProof.sublists ExportProof.set gen_var_2630)))))) (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2488 (App Coq.Init.Datatypes.app (App list ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2630)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2631 (App list ExportProof.set) (App cons ExportProof.set gen_var_2526 gen_var_2631)) (App ExportProof.sublists ExportProof.set gen_var_2631))))) (App Coq.Lists.List.map_app (App list ExportProof.set) Z gen_var_2634 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2646)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2648 (App list ExportProof.set) (App cons ExportProof.set gen_var_2641 gen_var_2648)) (App ExportProof.sublists ExportProof.set gen_var_2648))))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Init.Datatypes.app (App list ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2648) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2649 (App list ExportProof.set) (App cons ExportProof.set gen_var_2641 gen_var_2649)) (App ExportProof.sublists ExportProof.set gen_var_2649)))) (App ExportProof.filter_app (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_2666) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_2667 (App list ExportProof.set) (App cons ExportProof.set gen_var_2656 gen_var_2667)) (App ExportProof.sublists ExportProof.set gen_var_2667)))) (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2656 (App ExportProof.list_union gen_var_2667))) (App ExportProof.cardinal_binary_union gen_var_2656 (App ExportProof.list_union gen_var_2667))) REVERTcast (App eq Z (App ExportProof.cardinal (App ExportProof.list_union (App cons ExportProof.set gen_var_2656 gen_var_2667))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2651 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App cons ExportProof.set gen_var_2656 gen_var_2667)))))))) gen_var_2682))))))) gen_var_182))))) gen_var_2516 gen_var_2667 gen_var_156)))))) 