(Definition ExportProof.set (Prod Anonymous (Axiom ExportProof.X) bool)) (Definition ExportProof.cardinal (Lambda gen_var_5 ExportProof.set (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_5 (Axiom ExportProof.enum_X)))))) (Definition ExportProof.fold1 (Lambda gen_var_7 (Sort Type) (Lambda gen_var_8 (Prod Anonymous gen_var_7 (Prod Anonymous gen_var_7 gen_var_7)) (Lambda gen_var_13 (App list gen_var_7) (Lambda gen_var_12 gen_var_7 (Case 1 (Lambda gen_var_13 (App list gen_var_7) gen_var_7) (CaseMatch gen_var_13) (CaseBranches gen_var_12 (Lambda gen_var_14 gen_var_7 (Lambda gen_var_15 (App list gen_var_7) (App Coq.Lists.List.fold_right gen_var_7 gen_var_7 gen_var_8 gen_var_14 gen_var_15)))))))))) (Definition ExportProof.binary_intersection (Lambda gen_var_16 ExportProof.set (Lambda gen_var_17 ExportProof.set (Lambda gen_var_18 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_16 gen_var_18) (App gen_var_17 gen_var_18)))))) (Definition ExportProof.empty_set (Lambda Anonymous (Axiom ExportProof.X) false)) (Definition ExportProof.list_intersection (Lambda gen_var_16 (App list ExportProof.set) (App ExportProof.fold1 ExportProof.set ExportProof.binary_intersection gen_var_16 ExportProof.empty_set))) (Definition ExportProof.alternating_sign (Fix (Functions (App gen_var_20 0 (Prod gen_var_21 nat Z) (Lambda gen_var_24 nat (Case 0 (Lambda gen_var_23 nat Z) (CaseMatch gen_var_23) (CaseBranches (App Zpos xH) (Lambda gen_var_24 nat (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_20 gen_var_24)))))))) 0)) (Definition ExportProof.binary_union (Lambda gen_var_32 ExportProof.set (Lambda gen_var_33 ExportProof.set (Lambda gen_var_34 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_32 gen_var_34) (App gen_var_33 gen_var_34)))))) (Definition ExportProof.list_union (Lambda gen_var_32 (App list ExportProof.set) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_union ExportProof.empty_set gen_var_32))) (Definition ExportProof.sum (Fix (Functions (App gen_var_35 0 (Prod gen_var_36 (App list Z) Z) (Lambda gen_var_40 (App list Z) (Case 1 (Lambda gen_var_38 (App list Z) Z) (CaseMatch gen_var_38) (CaseBranches Z0 (Lambda gen_var_39 Z (Lambda gen_var_40 (App list Z) (App Coq.ZArith.BinIntDef.Z.add gen_var_39 (App gen_var_35 gen_var_40))))))))) 0)) (Definition ExportProof.nonempty (Lambda gen_var_41 (Sort Type) (Lambda gen_var_43 (App list gen_var_41) (Case 1 (Lambda gen_var_43 (App list gen_var_41) bool) (CaseMatch gen_var_43) (CaseBranches false (Lambda gen_var_44 gen_var_41 (Lambda gen_var_45 (App list gen_var_41) true))))))) (Definition ExportProof.sublists (Fix (Functions (App gen_var_46 0 (Prod gen_var_47 (Sort Type) (Prod gen_var_48 (App list gen_var_47) (App list (App list gen_var_47)))) (Lambda gen_var_49 (Sort Type) (Lambda gen_var_53 (App list gen_var_49) (Case 1 (Lambda gen_var_51 (App list gen_var_49) (App list (App list gen_var_49))) (CaseMatch gen_var_51) (CaseBranches (App cons (App list gen_var_49) (App nil gen_var_49) (App nil (App list gen_var_49))) (Lambda gen_var_52 gen_var_49 (Lambda gen_var_53 (App list gen_var_49) (LetIn gen_var_54 (App gen_var_46 gen_var_49 gen_var_53) (App list (App list gen_var_49)) (App Coq.Init.Datatypes.app (App list gen_var_49) gen_var_54 (App Coq.Lists.List.map (App list gen_var_49) (App list gen_var_49) (Lambda gen_var_55 (App list gen_var_49) (App cons gen_var_49 gen_var_52 gen_var_55)) gen_var_54))))))))))) 0)) (Definition ExportProof.cardinal_empty (Cast (LetIn gen_var_66 (Axiom ExportProof.enum_X) (App list (Axiom ExportProof.X)) (App Coq.Init.Datatypes.list_ind (Axiom ExportProof.X) (Lambda gen_var_63 (App list (Axiom ExportProof.X)) (App eq Z (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda Anonymous (Axiom ExportProof.X) false) gen_var_63))) Z0)) (App eq_refl Z Z0) (Lambda gen_var_65 (Axiom ExportProof.X) (Lambda gen_var_66 (App list (Axiom ExportProof.X)) (Lambda gen_var_67 (App eq Z (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda Anonymous (Axiom ExportProof.X) false) gen_var_66))) Z0) gen_var_67))) gen_var_66)) REVERTcast (App eq Z (App ExportProof.cardinal ExportProof.empty_set) Z0))) (Definition ExportProof.set_eq (Lambda gen_var_116 ExportProof.set (Lambda gen_var_117 ExportProof.set (Prod gen_var_118 (Axiom ExportProof.X) (App eq bool (App gen_var_116 gen_var_118) (App gen_var_117 gen_var_118)))))) (Definition ExportProof.cardinal_set_eq (Lambda gen_var_116 ExportProof.set (Lambda gen_var_117 ExportProof.set (Lambda gen_var_115 (App ExportProof.set_eq gen_var_116 gen_var_117) (Cast (LetIn gen_var_136 (LetIn gen_var_123 (Axiom ExportProof.enum_X) (App list (Axiom ExportProof.X)) (App Coq.Init.Datatypes.list_ind (Axiom ExportProof.X) (Lambda gen_var_121 (App list (Axiom ExportProof.X)) (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_116 gen_var_121)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_117 gen_var_121)))) (Cast (App eq_refl nat O) REVERTcast (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_116 (App nil (Axiom ExportProof.X)))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_117 (App nil (Axiom ExportProof.X)))))) (Lambda gen_var_122 (Axiom ExportProof.X) (Lambda gen_var_123 (App list (Axiom ExportProof.X)) (Lambda gen_var_124 (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_116 gen_var_123)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_117 gen_var_123))) (Cast (App Coq.Init.Logic.eq_ind_r bool (App gen_var_117 gen_var_122) (Lambda gen_var_127 bool (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_126 bool (App list (Axiom ExportProof.X))) (CaseMatch gen_var_126) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_122 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_116 gen_var_123)) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_116 gen_var_123)))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_127 bool (App list (Axiom ExportProof.X))) (CaseMatch (App gen_var_117 gen_var_122)) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_122 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_117 gen_var_123)) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_117 gen_var_123)))))) (LetIn gen_var_131 (App gen_var_117 gen_var_122) bool (Case 0 (Lambda gen_var_131 bool (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_130 bool (App list (Axiom ExportProof.X))) (CaseMatch gen_var_130) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_122 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_116 gen_var_123)) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_116 gen_var_123)))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_131 bool (App list (Axiom ExportProof.X))) (CaseMatch gen_var_131) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_122 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_117 gen_var_123)) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_117 gen_var_123)))))) (CaseMatch gen_var_131) (CaseBranches (Cast (App Coq.Init.Logic.eq_trans nat (App S (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_116 gen_var_123))) (App S (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_116 gen_var_123))) (App S (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_117 gen_var_123))) (App Coq.Init.Logic.f_equal (Prod Anonymous nat nat) nat (Lambda gen_var_133 (Prod Anonymous nat nat) (App gen_var_133 (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_116 gen_var_123)))) S S (App eq_refl (Prod Anonymous nat nat) S)) (App Coq.Init.Logic.f_equal nat nat S (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_116 gen_var_123)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_117 gen_var_123)) gen_var_124)) REVERTcast (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App cons (Axiom ExportProof.X) gen_var_122 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_116 gen_var_123))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App cons (Axiom ExportProof.X) gen_var_122 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_117 gen_var_123))))) (Cast gen_var_124 REVERTcast (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_116 gen_var_123)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_117 gen_var_123))))))) (App gen_var_116 gen_var_122) (App gen_var_115 gen_var_122)) REVERTcast (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_116 (App cons (Axiom ExportProof.X) gen_var_122 gen_var_123))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_117 (App cons (Axiom ExportProof.X) gen_var_122 gen_var_123)))))))) gen_var_123)) (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_116 (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_117 (Axiom ExportProof.enum_X)))) (App (Lambda gen_var_136 (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_116 (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_117 (Axiom ExportProof.enum_X)))) (App Coq.Init.Logic.eq_trans Z (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_116 (Axiom ExportProof.enum_X)))) (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_116 (Axiom ExportProof.enum_X)))) (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_117 (Axiom ExportProof.enum_X)))) (App Coq.Init.Logic.f_equal (Prod gen_var_137 nat Z) Z (Lambda gen_var_138 (Prod gen_var_139 nat Z) (App gen_var_138 (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_116 (Axiom ExportProof.enum_X))))) Coq.ZArith.BinIntDef.Z.of_nat Coq.ZArith.BinIntDef.Z.of_nat (App eq_refl (Prod gen_var_140 nat Z) Coq.ZArith.BinIntDef.Z.of_nat)) (App Coq.Init.Logic.f_equal nat Z Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_116 (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_117 (Axiom ExportProof.enum_X))) gen_var_136))) gen_var_136)) REVERTcast (App eq Z (App ExportProof.cardinal gen_var_116) (App ExportProof.cardinal gen_var_117))))))) (Definition ExportProof.set_eq_refl (Cast (Lambda gen_var_161 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_163 (Axiom ExportProof.X) (App eq_refl bool (App gen_var_161 gen_var_163)))) REVERTcast (App Coq.Classes.RelationClasses.Reflexive ExportProof.set ExportProof.set_eq))) (Definition ExportProof.set_eq_sym (Cast (Lambda gen_var_169 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_166 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_168 (Prod gen_var_169 (Axiom ExportProof.X) (App eq bool (App gen_var_169 gen_var_169) (App gen_var_166 gen_var_169))) (Lambda gen_var_170 (Axiom ExportProof.X) (App Coq.Init.Logic.eq_sym bool (App gen_var_169 gen_var_170) (App gen_var_166 gen_var_170) (App gen_var_168 gen_var_170)))))) REVERTcast (App Coq.Classes.RelationClasses.Symmetric ExportProof.set ExportProof.set_eq))) (Definition ExportProof.set_eq_trans (Cast (Lambda gen_var_180 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_173 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_175 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_177 (Prod gen_var_178 (Axiom ExportProof.X) (App eq bool (App gen_var_178 gen_var_178) (App gen_var_173 gen_var_178))) (Lambda gen_var_179 (Prod gen_var_180 (Axiom ExportProof.X) (App eq bool (App gen_var_173 gen_var_180) (App gen_var_175 gen_var_180))) (Lambda gen_var_181 (Axiom ExportProof.X) (App Coq.Init.Logic.eq_trans bool (App gen_var_180 gen_var_181) (App gen_var_173 gen_var_181) (App gen_var_175 gen_var_181) (App gen_var_177 gen_var_181) (App gen_var_179 gen_var_181)))))))) REVERTcast (App Coq.Classes.RelationClasses.Transitive ExportProof.set ExportProof.set_eq))) (Definition ExportProof.Set_eq (App Build_Equivalence ExportProof.set ExportProof.set_eq ExportProof.set_eq_refl ExportProof.set_eq_sym ExportProof.set_eq_trans)) (Definition ExportProof.Set_eq_Symmetric ExportProof.set_eq_sym) (Definition ExportProof.union_morphism (Cast (Lambda gen_var_251 ExportProof.set (Lambda gen_var_252 ExportProof.set (Lambda gen_var_253 (App ExportProof.set_eq gen_var_251 gen_var_252) (Cast (Lambda gen_var_254 ExportProof.set (Lambda gen_var_255 ExportProof.set (Lambda gen_var_256 (App ExportProof.set_eq gen_var_254 gen_var_255) (Cast (Lambda gen_var_257 (Axiom ExportProof.X) (Cast (App Coq.Init.Logic.eq_ind_r bool (App gen_var_252 gen_var_257) (Lambda gen_var_258 bool (App eq bool (App Coq.Init.Datatypes.orb gen_var_258 (App gen_var_254 gen_var_257)) (App Coq.Init.Datatypes.orb (App gen_var_252 gen_var_257) (App gen_var_255 gen_var_257)))) (App Coq.Init.Logic.eq_ind_r bool (App gen_var_255 gen_var_257) (Lambda gen_var_259 bool (App eq bool (App Coq.Init.Datatypes.orb (App gen_var_252 gen_var_257) gen_var_259) (App Coq.Init.Datatypes.orb (App gen_var_252 gen_var_257) (App gen_var_255 gen_var_257)))) (App eq_refl bool (App Coq.Init.Datatypes.orb (App gen_var_252 gen_var_257) (App gen_var_255 gen_var_257))) (App gen_var_254 gen_var_257) (App gen_var_256 gen_var_257)) (App gen_var_251 gen_var_257) (App gen_var_253 gen_var_257)) REVERTcast (App eq bool (App ExportProof.binary_union gen_var_251 gen_var_254 gen_var_257) (App ExportProof.binary_union gen_var_252 gen_var_255 gen_var_257)))) REVERTcast (App ExportProof.set_eq (App ExportProof.binary_union gen_var_251 gen_var_254) (App ExportProof.binary_union gen_var_252 gen_var_255)))))) REVERTcast (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq (App ExportProof.binary_union gen_var_251) (App ExportProof.binary_union gen_var_252)))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod Anonymous ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_union))) (Definition ExportProof.Set_eq_Reflexive ExportProof.set_eq_refl) (Definition ExportProof.intersection_morphism (Cast (Lambda gen_var_918 ExportProof.set (Lambda gen_var_919 ExportProof.set (Lambda gen_var_920 (App ExportProof.set_eq gen_var_918 gen_var_919) (Cast (Lambda gen_var_921 ExportProof.set (Lambda gen_var_922 ExportProof.set (Lambda gen_var_923 (App ExportProof.set_eq gen_var_921 gen_var_922) (Cast (Lambda gen_var_924 (Axiom ExportProof.X) (Cast (App Coq.Init.Logic.eq_ind_r bool (App gen_var_919 gen_var_924) (Lambda gen_var_925 bool (App eq bool (App Coq.Init.Datatypes.andb gen_var_925 (App gen_var_921 gen_var_924)) (App Coq.Init.Datatypes.andb (App gen_var_919 gen_var_924) (App gen_var_922 gen_var_924)))) (App Coq.Init.Logic.eq_ind_r bool (App gen_var_922 gen_var_924) (Lambda gen_var_926 bool (App eq bool (App Coq.Init.Datatypes.andb (App gen_var_919 gen_var_924) gen_var_926) (App Coq.Init.Datatypes.andb (App gen_var_919 gen_var_924) (App gen_var_922 gen_var_924)))) (App eq_refl bool (App Coq.Init.Datatypes.andb (App gen_var_919 gen_var_924) (App gen_var_922 gen_var_924))) (App gen_var_921 gen_var_924) (App gen_var_923 gen_var_924)) (App gen_var_918 gen_var_924) (App gen_var_920 gen_var_924)) REVERTcast (App eq bool (App ExportProof.binary_intersection gen_var_918 gen_var_921 gen_var_924) (App ExportProof.binary_intersection gen_var_919 gen_var_922 gen_var_924)))) REVERTcast (App ExportProof.set_eq (App ExportProof.binary_intersection gen_var_918 gen_var_921) (App ExportProof.binary_intersection gen_var_919 gen_var_922)))))) REVERTcast (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq (App ExportProof.binary_intersection gen_var_918) (App ExportProof.binary_intersection gen_var_919)))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod Anonymous ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection))) (Definition ExportProof.sublists_map (Lambda gen_var_1660 (Sort Type) (Lambda gen_var_1661 (Sort Type) (Lambda gen_var_1662 (Prod Anonymous gen_var_1660 gen_var_1661) (Lambda gen_var_1728 (App list gen_var_1660) (App Coq.Init.Datatypes.list_ind gen_var_1660 (Lambda gen_var_1665 (App list gen_var_1660) (App eq (App list (App list gen_var_1661)) (App ExportProof.sublists gen_var_1661 (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662 gen_var_1665)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1665)))) (App eq_refl (App list (App list gen_var_1661)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 (App nil gen_var_1660)))) (Lambda gen_var_1666 gen_var_1660 (Lambda gen_var_1728 (App list gen_var_1660) (Lambda gen_var_1668 (App eq (App list (App list gen_var_1661)) (App ExportProof.sublists gen_var_1661 (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662 gen_var_1667)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1667))) (Cast (App Coq.Init.Logic.eq_ind_r (App list (App list gen_var_1661)) (App Coq.Init.Datatypes.app (App list gen_var_1661) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1667)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1660) (Lambda gen_var_1669 (App list gen_var_1660) (App cons gen_var_1660 gen_var_1666 gen_var_1669)) (App ExportProof.sublists gen_var_1660 gen_var_1669)))) (Lambda gen_var_1671 (App list (App list gen_var_1661)) (App eq (App list (App list gen_var_1661)) (App Coq.Init.Datatypes.app (App list gen_var_1661) (App ExportProof.sublists gen_var_1661 (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662 gen_var_1670)) (App Coq.Lists.List.map (App list gen_var_1661) (App list gen_var_1661) (Lambda gen_var_1671 (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) gen_var_1671)) (App ExportProof.sublists gen_var_1661 (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662 gen_var_1671)))) gen_var_1671)) (App Coq.Init.Logic.eq_ind_r (App list (App list gen_var_1661)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1671)) (Lambda gen_var_1674 (App list (App list gen_var_1661)) (App eq (App list (App list gen_var_1661)) (App Coq.Init.Datatypes.app (App list gen_var_1661) gen_var_1672 (App Coq.Lists.List.map (App list gen_var_1661) (App list gen_var_1661) (Lambda gen_var_1673 (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) gen_var_1673)) gen_var_1673)) (App Coq.Init.Datatypes.app (App list gen_var_1661) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1673)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1660) (Lambda gen_var_1674 (App list gen_var_1660) (App cons gen_var_1660 gen_var_1666 gen_var_1674)) (App ExportProof.sublists gen_var_1660 gen_var_1674)))))) (LetIn gen_var_1712 (LetIn gen_var_1677 (App ExportProof.sublists gen_var_1660 gen_var_1674) (App list (App list gen_var_1660)) (App Coq.Init.Datatypes.list_ind (App list gen_var_1660) (Lambda gen_var_1677 (App list (App list gen_var_1660)) (App eq (App list (App list gen_var_1661)) (App Coq.Lists.List.map (App list gen_var_1661) (App list gen_var_1661) (Lambda gen_var_1678 (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) gen_var_1678)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) gen_var_1677)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1660) (Lambda gen_var_1679 (App list gen_var_1660) (App cons gen_var_1660 gen_var_1666 gen_var_1679)) gen_var_1677)))) (App eq_refl (App list (App list gen_var_1661)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1660) (Lambda gen_var_1680 (App list gen_var_1660) (App cons gen_var_1660 gen_var_1666 gen_var_1680)) (App nil (App list gen_var_1660))))) (Lambda gen_var_1681 (App list gen_var_1660) (Lambda gen_var_1682 (App list (App list gen_var_1660)) (Lambda gen_var_1683 (App eq (App list (App list gen_var_1661)) (App Coq.Lists.List.map (App list gen_var_1661) (App list gen_var_1661) (Lambda gen_var_1684 (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) gen_var_1684)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) gen_var_1682)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1660) (Lambda gen_var_1685 (App list gen_var_1660) (App cons gen_var_1660 gen_var_1666 gen_var_1685)) gen_var_1682))) (Cast (LetIn gen_var_1691 gen_var_1683 (App eq (App list (App list gen_var_1661)) (App Coq.Lists.List.map (App list gen_var_1661) (App list gen_var_1661) (Lambda gen_var_1687 (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) gen_var_1687)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) gen_var_1682)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1660) (Lambda gen_var_1688 (App list gen_var_1660) (App cons gen_var_1660 gen_var_1666 gen_var_1688)) gen_var_1682))) (App (LetIn gen_var_1691 (App eq_refl (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662 gen_var_1681))) (App eq (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662 gen_var_1681)) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662 gen_var_1681))) (App (LetIn gen_var_1691 (App eq_refl (Sort Type) (App list gen_var_1661)) (App eq (Sort Type) (App list gen_var_1661) (App list gen_var_1661)) (App (Lambda gen_var_1691 (App eq (Sort Type) (App list gen_var_1661) (App list gen_var_1661)) (Lambda gen_var_1692 (App eq (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662 gen_var_1681)) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662 gen_var_1681))) (Lambda gen_var_1693 (App eq (App list (App list gen_var_1661)) (App Coq.Lists.List.map (App list gen_var_1661) (App list gen_var_1661) (Lambda gen_var_1694 (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) gen_var_1694)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) gen_var_1682)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1660) (Lambda gen_var_1695 (App list gen_var_1660) (App cons gen_var_1660 gen_var_1666 gen_var_1695)) gen_var_1682))) (App Coq.Init.Logic.eq_trans (App list (App list gen_var_1661)) (App cons (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662 gen_var_1681)) (App Coq.Lists.List.map (App list gen_var_1661) (App list gen_var_1661) (Lambda gen_var_1696 (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) gen_var_1696)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) gen_var_1682))) (App cons (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662 gen_var_1681)) (App Coq.Lists.List.map (App list gen_var_1661) (App list gen_var_1661) (Lambda gen_var_1697 (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) gen_var_1697)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) gen_var_1682))) (App cons (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662 gen_var_1681)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1660) (Lambda gen_var_1698 (App list gen_var_1660) (App cons gen_var_1660 gen_var_1666 gen_var_1698)) gen_var_1682))) (App Coq.Init.Logic.f_equal (Prod gen_var_1699 (App list (App list gen_var_1661)) (App list (App list gen_var_1661))) (App list (App list gen_var_1661)) (Lambda gen_var_1700 (Prod gen_var_1701 (App list (App list gen_var_1661)) (App list (App list gen_var_1661))) (App gen_var_1700 (App Coq.Lists.List.map (App list gen_var_1661) (App list gen_var_1661) (Lambda gen_var_1702 (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) gen_var_1702)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) gen_var_1682)))) (App cons (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662 gen_var_1681))) (App cons (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662 gen_var_1681))) (App eq_refl (Prod gen_var_1703 (App list (App list gen_var_1661)) (App list (App list gen_var_1661))) (App cons (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662 gen_var_1681))))) (App Coq.Init.Logic.f_equal (App list (App list gen_var_1661)) (App list (App list gen_var_1661)) (App cons (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662 gen_var_1681))) (App Coq.Lists.List.map (App list gen_var_1661) (App list gen_var_1661) (Lambda gen_var_1704 (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) gen_var_1704)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) gen_var_1682)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1660) (Lambda gen_var_1705 (App list gen_var_1660) (App cons gen_var_1660 gen_var_1666 gen_var_1705)) gen_var_1682)) gen_var_1693))))) gen_var_1691)) gen_var_1691)) gen_var_1691)) REVERTcast (App eq (App list (App list gen_var_1661)) (App Coq.Lists.List.map (App list gen_var_1661) (App list gen_var_1661) (Lambda gen_var_1706 (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) gen_var_1706)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App cons (App list gen_var_1660) gen_var_1681 gen_var_1682))) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1660) (Lambda gen_var_1707 (App list gen_var_1660) (App cons gen_var_1660 gen_var_1666 gen_var_1707)) (App cons (App list gen_var_1660) gen_var_1681 gen_var_1682)))))))) gen_var_1677)) (App eq (App list (App list gen_var_1661)) (App Coq.Lists.List.map (App list gen_var_1661) (App list gen_var_1661) (Lambda gen_var_1708 (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) gen_var_1708)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1708))) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1660) (Lambda gen_var_1709 (App list gen_var_1660) (App cons gen_var_1660 gen_var_1666 gen_var_1709)) (App ExportProof.sublists gen_var_1660 gen_var_1709)))) (App (LetIn gen_var_1712 (App eq_refl (App list (App list gen_var_1661)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1709))) (App eq (App list (App list gen_var_1661)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1709)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1709))) (App (LetIn gen_var_1712 (App eq_refl (Sort Type) (App list gen_var_1661)) (App eq (Sort Type) (App list gen_var_1661) (App list gen_var_1661)) (App (Lambda gen_var_1712 (App eq (Sort Type) (App list gen_var_1661) (App list gen_var_1661)) (Lambda gen_var_1713 (App eq (App list (App list gen_var_1661)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1709)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1709))) (Lambda gen_var_1714 (App eq (App list (App list gen_var_1661)) (App Coq.Lists.List.map (App list gen_var_1661) (App list gen_var_1661) (Lambda gen_var_1715 (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) gen_var_1715)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1715))) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1660) (Lambda gen_var_1716 (App list gen_var_1660) (App cons gen_var_1660 gen_var_1666 gen_var_1716)) (App ExportProof.sublists gen_var_1660 gen_var_1716)))) (App Coq.Init.Logic.eq_trans (App list (App list gen_var_1661)) (App Coq.Init.Datatypes.app (App list gen_var_1661) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1716)) (App Coq.Lists.List.map (App list gen_var_1661) (App list gen_var_1661) (Lambda gen_var_1717 (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) gen_var_1717)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1717)))) (App Coq.Init.Datatypes.app (App list gen_var_1661) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1717)) (App Coq.Lists.List.map (App list gen_var_1661) (App list gen_var_1661) (Lambda gen_var_1718 (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) gen_var_1718)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1718)))) (App Coq.Init.Datatypes.app (App list gen_var_1661) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1718)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1660) (Lambda gen_var_1719 (App list gen_var_1660) (App cons gen_var_1660 gen_var_1666 gen_var_1719)) (App ExportProof.sublists gen_var_1660 gen_var_1719)))) (App Coq.Init.Logic.f_equal (Prod Anonymous (App list (App list gen_var_1661)) (App list (App list gen_var_1661))) (App list (App list gen_var_1661)) (Lambda gen_var_1721 (Prod Anonymous (App list (App list gen_var_1661)) (App list (App list gen_var_1661))) (App gen_var_1721 (App Coq.Lists.List.map (App list gen_var_1661) (App list gen_var_1661) (Lambda gen_var_1723 (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) gen_var_1723)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1723))))) (App Coq.Init.Datatypes.app (App list gen_var_1661) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1723))) (App Coq.Init.Datatypes.app (App list gen_var_1661) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1723))) (App eq_refl (Prod Anonymous (App list (App list gen_var_1661)) (App list (App list gen_var_1661))) (App Coq.Init.Datatypes.app (App list gen_var_1661) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1723))))) (App Coq.Init.Logic.f_equal (App list (App list gen_var_1661)) (App list (App list gen_var_1661)) (App Coq.Init.Datatypes.app (App list gen_var_1661) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1723))) (App Coq.Lists.List.map (App list gen_var_1661) (App list gen_var_1661) (Lambda gen_var_1725 (App list gen_var_1661) (App cons gen_var_1661 (App gen_var_1662 gen_var_1666) gen_var_1725)) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1725))) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1660) (Lambda gen_var_1726 (App list gen_var_1660) (App cons gen_var_1660 gen_var_1666 gen_var_1726)) (App ExportProof.sublists gen_var_1660 gen_var_1726))) gen_var_1714))))) gen_var_1712)) gen_var_1712)) gen_var_1712)) (App ExportProof.sublists gen_var_1661 (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662 gen_var_1726)) gen_var_1668) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App Coq.Init.Datatypes.app (App list gen_var_1660) (App ExportProof.sublists gen_var_1660 gen_var_1726) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1660) (Lambda gen_var_1727 (App list gen_var_1660) (App cons gen_var_1660 gen_var_1666 gen_var_1727)) (App ExportProof.sublists gen_var_1660 gen_var_1727)))) (App Coq.Lists.List.map_app (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 gen_var_1727) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1660) (Lambda gen_var_1728 (App list gen_var_1660) (App cons gen_var_1660 gen_var_1666 gen_var_1728)) (App ExportProof.sublists gen_var_1660 gen_var_1728)))) REVERTcast (App eq (App list (App list gen_var_1661)) (App ExportProof.sublists gen_var_1661 (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662 (App cons gen_var_1660 gen_var_1666 gen_var_1728))) (App Coq.Lists.List.map (App list gen_var_1660) (App list gen_var_1661) (App Coq.Lists.List.map gen_var_1660 gen_var_1661 gen_var_1662) (App ExportProof.sublists gen_var_1660 (App cons gen_var_1660 gen_var_1666 gen_var_1728)))))))) gen_var_1728)))))) (Definition ExportProof.filter_map_always (Lambda gen_var_1812 (Sort Type) (Lambda gen_var_1813 (Sort Type) (Lambda gen_var_1814 (Prod gen_var_1815 gen_var_1813 bool) (Lambda gen_var_1816 (Prod Anonymous gen_var_1812 gen_var_1813) (Lambda gen_var_1830 (App list gen_var_1812) (Lambda gen_var_1819 (Prod gen_var_1820 gen_var_1812 (App eq bool (App gen_var_1814 (App gen_var_1816 gen_var_1820)) true)) (App Coq.Init.Datatypes.list_ind gen_var_1812 (Lambda gen_var_1821 (App list gen_var_1812) (App eq (App list gen_var_1813) (App Coq.Lists.List.filter gen_var_1813 gen_var_1814 (App Coq.Lists.List.map gen_var_1812 gen_var_1813 gen_var_1816 gen_var_1821)) (App Coq.Lists.List.map gen_var_1812 gen_var_1813 gen_var_1816 gen_var_1821))) (App eq_refl (App list gen_var_1813) (App Coq.Lists.List.map gen_var_1812 gen_var_1813 gen_var_1816 (App nil gen_var_1812))) (Lambda gen_var_1822 gen_var_1812 (Lambda gen_var_1830 (App list gen_var_1812) (Lambda gen_var_1824 (App eq (App list gen_var_1813) (App Coq.Lists.List.filter gen_var_1813 gen_var_1814 (App Coq.Lists.List.map gen_var_1812 gen_var_1813 gen_var_1816 gen_var_1823)) (App Coq.Lists.List.map gen_var_1812 gen_var_1813 gen_var_1816 gen_var_1823)) (Cast (App Coq.Init.Logic.eq_ind_r bool true (Lambda gen_var_1826 bool (App eq (App list gen_var_1813) (Case 0 (Lambda gen_var_1826 bool (App list gen_var_1813)) (CaseMatch gen_var_1826) (CaseBranches (App cons gen_var_1813 (App gen_var_1816 gen_var_1822) (App Coq.Lists.List.filter gen_var_1813 gen_var_1814 (App Coq.Lists.List.map gen_var_1812 gen_var_1813 gen_var_1816 gen_var_1823))) (App Coq.Lists.List.filter gen_var_1813 gen_var_1814 (App Coq.Lists.List.map gen_var_1812 gen_var_1813 gen_var_1816 gen_var_1823)))) (App cons gen_var_1813 (App gen_var_1816 gen_var_1822) (App Coq.Lists.List.map gen_var_1812 gen_var_1813 gen_var_1816 gen_var_1823)))) (App Coq.Init.Logic.eq_trans (App list gen_var_1813) (App cons gen_var_1813 (App gen_var_1816 gen_var_1822) (App Coq.Lists.List.filter gen_var_1813 gen_var_1814 (App Coq.Lists.List.map gen_var_1812 gen_var_1813 gen_var_1816 gen_var_1823))) (App cons gen_var_1813 (App gen_var_1816 gen_var_1822) (App Coq.Lists.List.filter gen_var_1813 gen_var_1814 (App Coq.Lists.List.map gen_var_1812 gen_var_1813 gen_var_1816 gen_var_1823))) (App cons gen_var_1813 (App gen_var_1816 gen_var_1822) (App Coq.Lists.List.map gen_var_1812 gen_var_1813 gen_var_1816 gen_var_1823)) (App Coq.Init.Logic.f_equal (Prod gen_var_1827 (App list gen_var_1813) (App list gen_var_1813)) (App list gen_var_1813) (Lambda gen_var_1828 (Prod gen_var_1829 (App list gen_var_1813) (App list gen_var_1813)) (App gen_var_1828 (App Coq.Lists.List.filter gen_var_1813 gen_var_1814 (App Coq.Lists.List.map gen_var_1812 gen_var_1813 gen_var_1816 gen_var_1829)))) (App cons gen_var_1813 (App gen_var_1816 gen_var_1822)) (App cons gen_var_1813 (App gen_var_1816 gen_var_1822)) (App eq_refl (Prod gen_var_1830 (App list gen_var_1813) (App list gen_var_1813)) (App cons gen_var_1813 (App gen_var_1816 gen_var_1822)))) (App Coq.Init.Logic.f_equal (App list gen_var_1813) (App list gen_var_1813) (App cons gen_var_1813 (App gen_var_1816 gen_var_1822)) (App Coq.Lists.List.filter gen_var_1813 gen_var_1814 (App Coq.Lists.List.map gen_var_1812 gen_var_1813 gen_var_1816 gen_var_1830)) (App Coq.Lists.List.map gen_var_1812 gen_var_1813 gen_var_1816 gen_var_1830) gen_var_1824)) (App gen_var_1814 (App gen_var_1816 gen_var_1822)) (App gen_var_1819 gen_var_1822)) REVERTcast (App eq (App list gen_var_1813) (App Coq.Lists.List.filter gen_var_1813 gen_var_1814 (App Coq.Lists.List.map gen_var_1812 gen_var_1813 gen_var_1816 (App cons gen_var_1812 gen_var_1822 gen_var_1830))) (App Coq.Lists.List.map gen_var_1812 gen_var_1813 gen_var_1816 (App cons gen_var_1812 gen_var_1822 gen_var_1830))))))) gen_var_1830)))))))) (Definition ExportProof.filter_app (Lambda gen_var_1834 (Sort Type) (Lambda gen_var_1835 (Prod Anonymous gen_var_1834 bool) (Lambda gen_var_1839 (App list gen_var_1834) (Lambda gen_var_1838 (App list gen_var_1834) (App Coq.Init.Datatypes.list_ind gen_var_1834 (Lambda gen_var_1839 (App list gen_var_1834) (App eq (App list gen_var_1834) (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 (App Coq.Init.Datatypes.app gen_var_1834 gen_var_1839 gen_var_1838)) (App Coq.Init.Datatypes.app gen_var_1834 (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 gen_var_1839) (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 gen_var_1838)))) (Cast (App eq_refl (App list gen_var_1834) (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 gen_var_1838)) REVERTcast (App eq (App list gen_var_1834) (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 (App Coq.Init.Datatypes.app gen_var_1834 (App nil gen_var_1834) gen_var_1838)) (App Coq.Init.Datatypes.app gen_var_1834 (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 (App nil gen_var_1834)) (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 gen_var_1838)))) (Lambda gen_var_1840 gen_var_1834 (Lambda gen_var_1850 (App list gen_var_1834) (Lambda gen_var_1842 (App eq (App list gen_var_1834) (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 (App Coq.Init.Datatypes.app gen_var_1834 gen_var_1841 gen_var_1838)) (App Coq.Init.Datatypes.app gen_var_1834 (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 gen_var_1841) (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 gen_var_1838))) (Cast (LetIn gen_var_1846 (App gen_var_1835 gen_var_1840) bool (Case 0 (Lambda gen_var_1846 bool (App eq (App list gen_var_1834) (Case 0 (Lambda gen_var_1845 bool (App list gen_var_1834)) (CaseMatch gen_var_1845) (CaseBranches (App cons gen_var_1834 gen_var_1840 (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 (App Coq.Init.Datatypes.app gen_var_1834 gen_var_1841 gen_var_1838))) (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 (App Coq.Init.Datatypes.app gen_var_1834 gen_var_1841 gen_var_1838)))) (App Coq.Init.Datatypes.app gen_var_1834 (Case 0 (Lambda gen_var_1846 bool (App list gen_var_1834)) (CaseMatch gen_var_1846) (CaseBranches (App cons gen_var_1834 gen_var_1840 (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 gen_var_1841)) (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 gen_var_1841))) (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 gen_var_1838)))) (CaseMatch gen_var_1846) (CaseBranches (Cast (App Coq.Init.Logic.eq_trans (App list gen_var_1834) (App cons gen_var_1834 gen_var_1840 (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 (App Coq.Init.Datatypes.app gen_var_1834 gen_var_1841 gen_var_1838))) (App cons gen_var_1834 gen_var_1840 (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 (App Coq.Init.Datatypes.app gen_var_1834 gen_var_1841 gen_var_1838))) (App cons gen_var_1834 gen_var_1840 (App Coq.Init.Datatypes.app gen_var_1834 (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 gen_var_1841) (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 gen_var_1838))) (App Coq.Init.Logic.f_equal (Prod gen_var_1847 (App list gen_var_1834) (App list gen_var_1834)) (App list gen_var_1834) (Lambda gen_var_1848 (Prod gen_var_1849 (App list gen_var_1834) (App list gen_var_1834)) (App gen_var_1848 (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 (App Coq.Init.Datatypes.app gen_var_1834 gen_var_1849 gen_var_1838)))) (App cons gen_var_1834 gen_var_1840) (App cons gen_var_1834 gen_var_1840) (App eq_refl (Prod gen_var_1850 (App list gen_var_1834) (App list gen_var_1834)) (App cons gen_var_1834 gen_var_1840))) (App Coq.Init.Logic.f_equal (App list gen_var_1834) (App list gen_var_1834) (App cons gen_var_1834 gen_var_1840) (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 (App Coq.Init.Datatypes.app gen_var_1834 gen_var_1850 gen_var_1838)) (App Coq.Init.Datatypes.app gen_var_1834 (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 gen_var_1850) (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 gen_var_1838)) gen_var_1842)) REVERTcast (App eq (App list gen_var_1834) (App cons gen_var_1834 gen_var_1840 (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 (App Coq.Init.Datatypes.app gen_var_1834 gen_var_1850 gen_var_1838))) (App Coq.Init.Datatypes.app gen_var_1834 (App cons gen_var_1834 gen_var_1840 (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 gen_var_1850)) (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 gen_var_1838)))) (Cast gen_var_1842 REVERTcast (App eq (App list gen_var_1834) (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 (App Coq.Init.Datatypes.app gen_var_1834 gen_var_1850 gen_var_1838)) (App Coq.Init.Datatypes.app gen_var_1834 (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 gen_var_1850) (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 gen_var_1838))))))) REVERTcast (App eq (App list gen_var_1834) (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 (App Coq.Init.Datatypes.app gen_var_1834 (App cons gen_var_1834 gen_var_1840 gen_var_1850) gen_var_1838)) (App Coq.Init.Datatypes.app gen_var_1834 (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 (App cons gen_var_1834 gen_var_1840 gen_var_1850)) (App Coq.Lists.List.filter gen_var_1834 gen_var_1835 gen_var_1838))))))) gen_var_1839)))))) (Definition ExportProof.sublists_proper (Lambda gen_var_1834 (Sort Type) (Lambda gen_var_1853 (App list gen_var_1785) (App Coq.Init.Datatypes.list_ind gen_var_1785 (Lambda gen_var_1787 (App list gen_var_1785) (App eq (App list (App list gen_var_1785)) (App ExportProof.sublists gen_var_1785 gen_var_1787) (App cons (App list gen_var_1785) (App nil gen_var_1785) (App Coq.Lists.List.filter (App list gen_var_1785) (App ExportProof.nonempty gen_var_1785) (App ExportProof.sublists gen_var_1785 gen_var_1787))))) (App eq_refl (App list (App list gen_var_1785)) (App cons (App list gen_var_1785) (App nil gen_var_1785) (App Coq.Lists.List.filter (App list gen_var_1785) (App ExportProof.nonempty gen_var_1785) (App ExportProof.sublists gen_var_1785 (App nil gen_var_1785))))) (Lambda gen_var_1840 gen_var_1785 (Lambda gen_var_1853 (App list gen_var_1785) (Lambda gen_var_1842 (App eq (App list (App list gen_var_1785)) (App ExportProof.sublists gen_var_1785 gen_var_1789) (App cons (App list gen_var_1785) (App nil gen_var_1785) (App Coq.Lists.List.filter (App list gen_var_1785) (App ExportProof.nonempty gen_var_1785) (App ExportProof.sublists gen_var_1785 gen_var_1789)))) (Cast (App (Lambda gen_var_1791 (App eq (App list (App list gen_var_1785)) (App ExportProof.sublists gen_var_1785 gen_var_1789) (App cons (App list gen_var_1785) (App nil gen_var_1785) (App Coq.Lists.List.filter (App list gen_var_1785) (App ExportProof.nonempty gen_var_1785) (App ExportProof.sublists gen_var_1785 gen_var_1789)))) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (App list (App list gen_var_1785)) (App eq (App list (App list gen_var_1785))) (App Coq.Classes.RelationClasses.eq_Transitive (App list (App list gen_var_1785))) (App Coq.Init.Datatypes.app (App list gen_var_1785) (App ExportProof.sublists gen_var_1785 gen_var_1789) (App Coq.Lists.List.map (App list gen_var_1785) (App list gen_var_1785) (Lambda gen_var_1792 (App list gen_var_1785) (App cons gen_var_1785 gen_var_1788 gen_var_1792)) (App ExportProof.sublists gen_var_1785 gen_var_1792))) (App Coq.Init.Datatypes.app (App list gen_var_1785) (App cons (App list gen_var_1785) (App nil gen_var_1785) (App Coq.Lists.List.filter (App list gen_var_1785) (App ExportProof.nonempty gen_var_1785) (App ExportProof.sublists gen_var_1785 gen_var_1792))) (App Coq.Lists.List.map (App list gen_var_1785) (App list gen_var_1785) (Lambda gen_var_1793 (App list gen_var_1785) (App cons gen_var_1785 gen_var_1788 gen_var_1793)) (App ExportProof.sublists gen_var_1785 gen_var_1793))) (App Coq.Classes.Morphisms.reflexive_proper (Prod Anonymous (App list (App list gen_var_1785)) (Prod Anonymous (App list (App list gen_var_1785)) (App list (App list gen_var_1785)))) (App Coq.Classes.Morphisms.respectful (App list (App list gen_var_1785)) (Prod Anonymous (App list (App list gen_var_1785)) (App list (App list gen_var_1785))) (App eq (App list (App list gen_var_1785))) (App Coq.Classes.Morphisms.respectful (App list (App list gen_var_1785)) (App list (App list gen_var_1785)) (App eq (App list (App list gen_var_1785))) (App eq (App list (App list gen_var_1785))))) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive (App list (App list gen_var_1785)) (Prod Anonymous (App list (App list gen_var_1785)) (App list (App list gen_var_1785))) (App Coq.Classes.Morphisms.respectful (App list (App list gen_var_1785)) (App list (App list gen_var_1785)) (App eq (App list (App list gen_var_1785))) (App eq (App list (App list gen_var_1785)))) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive (App list (App list gen_var_1785)) (App list (App list gen_var_1785)) (App eq (App list (App list gen_var_1785))) (App Coq.Classes.RelationClasses.eq_Reflexive (App list (App list gen_var_1785))))) (App Coq.Init.Datatypes.app (App list gen_var_1785)) (App ExportProof.sublists gen_var_1785 gen_var_1793) (App cons (App list gen_var_1785) (App nil gen_var_1785) (App Coq.Lists.List.filter (App list gen_var_1785) (App ExportProof.nonempty gen_var_1785) (App ExportProof.sublists gen_var_1785 gen_var_1793))) gen_var_1791 (App Coq.Lists.List.map (App list gen_var_1785) (App list gen_var_1785) (Lambda gen_var_1798 (App list gen_var_1785) (App cons gen_var_1785 gen_var_1788 gen_var_1798)) (App ExportProof.sublists gen_var_1785 gen_var_1798)) (App Coq.Lists.List.map (App list gen_var_1785) (App list gen_var_1785) (Lambda gen_var_1799 (App list gen_var_1785) (App cons gen_var_1785 gen_var_1788 gen_var_1799)) (App ExportProof.sublists gen_var_1785 gen_var_1799)) (App Coq.Classes.Morphisms.eq_proper_proxy (App list (App list gen_var_1785)) (App Coq.Lists.List.map (App list gen_var_1785) (App list gen_var_1785) (Lambda gen_var_1800 (App list gen_var_1785) (App cons gen_var_1785 gen_var_1788 gen_var_1800)) (App ExportProof.sublists gen_var_1785 gen_var_1800)))) (App cons (App list gen_var_1785) (App nil gen_var_1785) (App Coq.Lists.List.filter (App list gen_var_1785) (App ExportProof.nonempty gen_var_1785) (App Coq.Init.Datatypes.app (App list gen_var_1785) (App ExportProof.sublists gen_var_1785 gen_var_1800) (App Coq.Lists.List.map (App list gen_var_1785) (App list gen_var_1785) (Lambda gen_var_1801 (App list gen_var_1785) (App cons gen_var_1785 gen_var_1788 gen_var_1801)) (App ExportProof.sublists gen_var_1785 gen_var_1801))))) (App cons (App list gen_var_1785) (App nil gen_var_1785) (App Coq.Lists.List.filter (App list gen_var_1785) (App ExportProof.nonempty gen_var_1785) (App Coq.Init.Datatypes.app (App list gen_var_1785) (App ExportProof.sublists gen_var_1785 gen_var_1801) (App Coq.Lists.List.map (App list gen_var_1785) (App list gen_var_1785) (Lambda gen_var_1802 (App list gen_var_1785) (App cons gen_var_1785 gen_var_1788 gen_var_1802)) (App ExportProof.sublists gen_var_1785 gen_var_1802))))) (App Coq.Classes.Morphisms.eq_proper_proxy (App list (App list gen_var_1785)) (App cons (App list gen_var_1785) (App nil gen_var_1785) (App Coq.Lists.List.filter (App list gen_var_1785) (App ExportProof.nonempty gen_var_1785) (App Coq.Init.Datatypes.app (App list gen_var_1785) (App ExportProof.sublists gen_var_1785 gen_var_1802) (App Coq.Lists.List.map (App list gen_var_1785) (App list gen_var_1785) (Lambda gen_var_1803 (App list gen_var_1785) (App cons gen_var_1785 gen_var_1788 gen_var_1803)) (App ExportProof.sublists gen_var_1785 gen_var_1803)))))))) gen_var_1790 (Cast (App Coq.Init.Logic.eq_ind_r (App list (App list gen_var_1785)) (App Coq.Init.Datatypes.app (App list gen_var_1785) (App Coq.Lists.List.filter (App list gen_var_1785) (App ExportProof.nonempty gen_var_1785) (App ExportProof.sublists gen_var_1785 gen_var_1803)) (App Coq.Lists.List.filter (App list gen_var_1785) (App ExportProof.nonempty gen_var_1785) (App Coq.Lists.List.map (App list gen_var_1785) (App list gen_var_1785) (Lambda gen_var_1804 (App list gen_var_1785) (App cons gen_var_1785 gen_var_1788 gen_var_1804)) (App ExportProof.sublists gen_var_1785 gen_var_1804)))) (Lambda gen_var_1806 (App list (App list gen_var_1785)) (App eq (App list (App list gen_var_1785)) (App cons (App list gen_var_1785) (App nil gen_var_1785) (App Coq.Init.Datatypes.app (App list gen_var_1785) (App Coq.Lists.List.filter (App list gen_var_1785) (App ExportProof.nonempty gen_var_1785) (App ExportProof.sublists gen_var_1785 gen_var_1805)) (App Coq.Lists.List.map (App list gen_var_1785) (App list gen_var_1785) (Lambda gen_var_1806 (App list gen_var_1785) (App cons gen_var_1785 gen_var_1788 gen_var_1806)) (App ExportProof.sublists gen_var_1785 gen_var_1806)))) (App cons (App list gen_var_1785) (App nil gen_var_1785) gen_var_1806))) (App Coq.Init.Logic.eq_ind_r (App list (App list gen_var_1785)) (App Coq.Lists.List.map (App list gen_var_1785) (App list gen_var_1785) (Lambda gen_var_1807 (App list gen_var_1785) (App cons gen_var_1785 gen_var_1788 gen_var_1807)) (App ExportProof.sublists gen_var_1785 gen_var_1807)) (Lambda gen_var_1809 (App list (App list gen_var_1785)) (App eq (App list (App list gen_var_1785)) (App cons (App list gen_var_1785) (App nil gen_var_1785) (App Coq.Init.Datatypes.app (App list gen_var_1785) (App Coq.Lists.List.filter (App list gen_var_1785) (App ExportProof.nonempty gen_var_1785) (App ExportProof.sublists gen_var_1785 gen_var_1808)) (App Coq.Lists.List.map (App list gen_var_1785) (App list gen_var_1785) (Lambda gen_var_1809 (App list gen_var_1785) (App cons gen_var_1785 gen_var_1788 gen_var_1809)) (App ExportProof.sublists gen_var_1785 gen_var_1809)))) (App cons (App list gen_var_1785) (App nil gen_var_1785) (App Coq.Init.Datatypes.app (App list gen_var_1785) (App Coq.Lists.List.filter (App list gen_var_1785) (App ExportProof.nonempty gen_var_1785) (App ExportProof.sublists gen_var_1785 gen_var_1809)) gen_var_1809)))) (App eq_refl (App list (App list gen_var_1785)) (App cons (App list gen_var_1785) (App nil gen_var_1785) (App Coq.Init.Datatypes.app (App list gen_var_1785) (App Coq.Lists.List.filter (App list gen_var_1785) (App ExportProof.nonempty gen_var_1785) (App ExportProof.sublists gen_var_1785 gen_var_1809)) (App Coq.Lists.List.map (App list gen_var_1785) (App list gen_var_1785) (Lambda gen_var_1810 (App list gen_var_1785) (App cons gen_var_1785 gen_var_1788 gen_var_1810)) (App ExportProof.sublists gen_var_1785 gen_var_1810))))) (App Coq.Lists.List.filter (App list gen_var_1785) (App ExportProof.nonempty gen_var_1785) (App Coq.Lists.List.map (App list gen_var_1785) (App list gen_var_1785) (Lambda gen_var_1811 (App list gen_var_1785) (App cons gen_var_1785 gen_var_1788 gen_var_1811)) (App ExportProof.sublists gen_var_1785 gen_var_1811))) (App ExportProof.filter_map_always (App list gen_var_1812) (App list gen_var_1812) (App ExportProof.nonempty gen_var_1812) (Lambda gen_var_1831 (App list gen_var_1812) (App cons gen_var_1812 gen_var_1822 gen_var_1831)) (App ExportProof.sublists gen_var_1812 gen_var_1831) (Lambda gen_var_1832 (App list gen_var_1812) (App eq_refl bool true)))) (App Coq.Lists.List.filter (App list gen_var_1812) (App ExportProof.nonempty gen_var_1812) (App Coq.Init.Datatypes.app (App list gen_var_1812) (App ExportProof.sublists gen_var_1812 gen_var_1831) (App Coq.Lists.List.map (App list gen_var_1812) (App list gen_var_1812) (Lambda gen_var_1833 (App list gen_var_1812) (App cons gen_var_1812 gen_var_1822 gen_var_1833)) (App ExportProof.sublists gen_var_1812 gen_var_1833)))) (App ExportProof.filter_app (App list gen_var_1834) (App ExportProof.nonempty gen_var_1834) (App ExportProof.sublists gen_var_1834 gen_var_1850) (App Coq.Lists.List.map (App list gen_var_1834) (App list gen_var_1834) (Lambda gen_var_1851 (App list gen_var_1834) (App cons gen_var_1834 gen_var_1840 gen_var_1851)) (App ExportProof.sublists gen_var_1834 gen_var_1851)))) REVERTcast (App eq (App list (App list gen_var_1834)) (App Coq.Init.Datatypes.app (App list gen_var_1834) (App cons (App list gen_var_1834) (App nil gen_var_1834) (App Coq.Lists.List.filter (App list gen_var_1834) (App ExportProof.nonempty gen_var_1834) (App ExportProof.sublists gen_var_1834 gen_var_1851))) (App Coq.Lists.List.map (App list gen_var_1834) (App list gen_var_1834) (Lambda gen_var_1852 (App list gen_var_1834) (App cons gen_var_1834 gen_var_1840 gen_var_1852)) (App ExportProof.sublists gen_var_1834 gen_var_1852))) (App cons (App list gen_var_1834) (App nil gen_var_1834) (App Coq.Lists.List.filter (App list gen_var_1834) (App ExportProof.nonempty gen_var_1834) (App Coq.Init.Datatypes.app (App list gen_var_1834) (App ExportProof.sublists gen_var_1834 gen_var_1852) (App Coq.Lists.List.map (App list gen_var_1834) (App list gen_var_1834) (Lambda gen_var_1853 (App list gen_var_1834) (App cons gen_var_1834 gen_var_1840 gen_var_1853)) (App ExportProof.sublists gen_var_1834 gen_var_1853)))))))) REVERTcast (App eq (App list (App list gen_var_1834)) (App ExportProof.sublists gen_var_1834 (App cons gen_var_1834 gen_var_1840 gen_var_1853)) (App cons (App list gen_var_1834) (App nil gen_var_1834) (App Coq.Lists.List.filter (App list gen_var_1834) (App ExportProof.nonempty gen_var_1834) (App ExportProof.sublists gen_var_1834 (App cons gen_var_1834 gen_var_1840 gen_var_1853))))))))) gen_var_1853)))) (Definition ExportProof.sum_app (Lambda gen_var_1877 (App list Z) (Lambda gen_var_1874 (App list Z) (App Coq.Init.Datatypes.list_ind Z (Lambda gen_var_1875 (App list Z) (App eq Z (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1875 gen_var_1874)) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum gen_var_1875) (App ExportProof.sum gen_var_1874)))) (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App nil Z)) (App ExportProof.sum gen_var_1874))) (Lambda gen_var_1876 Z (Lambda gen_var_1877 (App list Z) (Lambda gen_var_1878 (App eq Z (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1877 gen_var_1874)) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum gen_var_1877) (App ExportProof.sum gen_var_1874))) (Cast (App Coq.Logic.Decidable.dec_not_not (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1877 gen_var_1874))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 (App ExportProof.sum gen_var_1877)) (App ExportProof.sum gen_var_1874))) (App Coq.ZArith.BinInt.Z.eq_decidable (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1877 gen_var_1874))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 (App ExportProof.sum gen_var_1877)) (App ExportProof.sum gen_var_1874))) (Lambda gen_var_1935 (App Coq.Init.Logic.not (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1877 gen_var_1874))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 (App ExportProof.sum gen_var_1877)) (App ExportProof.sum gen_var_1874)))) (App Coq.Init.Logic.ex_ind Z (Lambda gen_var_1880 Z (App eq Z (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1877 gen_var_1874)) gen_var_1880)) False (Lambda gen_var_1881 Z (Lambda gen_var_1882 (App eq Z (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1877 gen_var_1874)) gen_var_1881) (App Coq.Init.Logic.ex_ind Z (Lambda gen_var_1883 Z (App eq Z (App ExportProof.sum gen_var_1877) gen_var_1883)) False (Lambda gen_var_1884 Z (Lambda gen_var_1885 (App eq Z (App ExportProof.sum gen_var_1877) gen_var_1884) (App Coq.Init.Logic.ex_ind Z (Lambda gen_var_1886 Z (App eq Z (App ExportProof.sum gen_var_1874) gen_var_1886)) False (Lambda gen_var_1887 Z (Lambda gen_var_1888 (App eq Z (App ExportProof.sum gen_var_1874) gen_var_1887) (App (Lambda gen_var_1889 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_1891 (App gen_var_1889 gen_var_1881) (App Coq.Init.Logic.eq_ind_r Z gen_var_1881 gen_var_1889 gen_var_1891 (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1877 gen_var_1874)) gen_var_1882))) (Lambda gen_var_1892 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_1892 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum gen_var_1877) (App ExportProof.sum gen_var_1874)))) Z0) False)) (App (Lambda gen_var_1894 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_1896 (App gen_var_1894 gen_var_1884) (App Coq.Init.Logic.eq_ind_r Z gen_var_1884 gen_var_1894 gen_var_1896 (App ExportProof.sum gen_var_1877) gen_var_1885))) (Lambda gen_var_1897 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_1881 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add gen_var_1897 (App ExportProof.sum gen_var_1874)))) Z0) False)) (App (Lambda gen_var_1899 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_1901 (App gen_var_1899 gen_var_1887) (App Coq.Init.Logic.eq_ind_r Z gen_var_1887 gen_var_1899 gen_var_1901 (App ExportProof.sum gen_var_1874) gen_var_1888))) (Lambda gen_var_1902 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_1881 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add gen_var_1884 gen_var_1902))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_comm gen_var_1884 gen_var_1887 (Lambda gen_var_1904 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_1881 (App Coq.ZArith.BinIntDef.Z.opp gen_var_1904)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_plus_distr gen_var_1887 gen_var_1884 (Lambda gen_var_1906 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_1881 gen_var_1906) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_1887 (Lambda gen_var_1908 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_1881 (App Coq.ZArith.BinIntDef.Z.add gen_var_1908 (App Coq.ZArith.BinIntDef.Z.opp gen_var_1884))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_1884 (Lambda gen_var_1910 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_1881 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1887 (App Zneg xH)) gen_var_1910)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_permute gen_var_1881 (App Coq.ZArith.BinIntDef.Z.mul gen_var_1887 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.mul gen_var_1884 (App Zneg xH)) (Lambda gen_var_1912 Z (Prod Anonymous (App eq Z gen_var_1912 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_comm gen_var_1881 (App Coq.ZArith.BinIntDef.Z.mul gen_var_1884 (App Zneg xH)) (Lambda gen_var_1914 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1887 (App Zneg xH)) gen_var_1914) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor0 gen_var_1881 (Lambda gen_var_1916 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1887 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1884 (App Zneg xH)) gen_var_1916)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor6 (App Coq.ZArith.BinIntDef.Z.mul gen_var_1881 (App Zpos xH)) (Lambda gen_var_1918 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1887 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1884 (App Zneg xH)) gen_var_1918)) Z0) False)) (Lambda gen_var_1920 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1887 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1884 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1881 (App Zpos xH)) Z0))) Z0) (App (Lambda gen_var_1921 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_1923 (App gen_var_1921 gen_var_1881) (App Coq.Init.Logic.eq_ind_r Z gen_var_1881 gen_var_1921 gen_var_1923 (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1877 gen_var_1874)) gen_var_1882))) (Lambda gen_var_1924 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 gen_var_1924) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 (App ExportProof.sum gen_var_1877)) (App ExportProof.sum gen_var_1874)))) Z0) False)) (App (Lambda gen_var_1926 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_1928 (App gen_var_1926 gen_var_1884) (App Coq.Init.Logic.eq_ind_r Z gen_var_1884 gen_var_1926 gen_var_1928 (App ExportProof.sum gen_var_1877) gen_var_1885))) (Lambda gen_var_1929 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 gen_var_1881) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 gen_var_1929) (App ExportProof.sum gen_var_1874)))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_comm gen_var_1876 gen_var_1884 (Lambda gen_var_1931 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 gen_var_1881) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add gen_var_1931 (App ExportProof.sum gen_var_1874)))) Z0) False)) (App (Lambda gen_var_1933 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_1935 (App gen_var_1933 gen_var_1887) (App Coq.Init.Logic.eq_ind_r Z gen_var_1887 gen_var_1933 gen_var_1935 (App ExportProof.sum gen_var_1874) gen_var_1888))) (Lambda gen_var_1936 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 gen_var_1881) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1884 gen_var_1876) gen_var_1936))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_comm (App Coq.ZArith.BinIntDef.Z.add gen_var_1884 gen_var_1876) gen_var_1887 (Lambda gen_var_1938 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 gen_var_1881) (App Coq.ZArith.BinIntDef.Z.opp gen_var_1938)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_plus_distr gen_var_1887 (App Coq.ZArith.BinIntDef.Z.add gen_var_1884 gen_var_1876) (Lambda gen_var_1940 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 gen_var_1881) gen_var_1940) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_1887 (Lambda gen_var_1942 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 gen_var_1881) (App Coq.ZArith.BinIntDef.Z.add gen_var_1942 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add gen_var_1884 gen_var_1876)))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_plus_distr gen_var_1884 gen_var_1876 (Lambda gen_var_1944 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 gen_var_1881) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1887 (App Zneg xH)) gen_var_1944)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_1884 (Lambda gen_var_1946 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 gen_var_1881) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1887 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add gen_var_1946 (App Coq.ZArith.BinIntDef.Z.opp gen_var_1876)))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_1876 (Lambda gen_var_1948 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 gen_var_1881) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1887 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1884 (App Zneg xH)) gen_var_1948))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_permute (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 gen_var_1881) (App Coq.ZArith.BinIntDef.Z.mul gen_var_1887 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1884 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.mul gen_var_1876 (App Zneg xH))) (Lambda gen_var_1950 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_1950 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_permute (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 gen_var_1881) (App Coq.ZArith.BinIntDef.Z.mul gen_var_1884 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.mul gen_var_1876 (App Zneg xH)) (Lambda gen_var_1952 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1887 (App Zneg xH)) gen_var_1952) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_comm (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 gen_var_1881) (App Coq.ZArith.BinIntDef.Z.mul gen_var_1876 (App Zneg xH)) (Lambda gen_var_1954 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1887 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1884 (App Zneg xH)) gen_var_1954)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_assoc (App Coq.ZArith.BinIntDef.Z.mul gen_var_1876 (App Zneg xH)) gen_var_1876 gen_var_1881 (Lambda gen_var_1956 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1887 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1884 (App Zneg xH)) gen_var_1956)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor3 gen_var_1876 (App Zneg xH) (Lambda gen_var_1958 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1887 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1884 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add gen_var_1958 gen_var_1881))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor0 gen_var_1881 (Lambda gen_var_1960 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1887 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1884 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1876 Z0) gen_var_1960))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor6 (App Coq.ZArith.BinIntDef.Z.mul gen_var_1881 (App Zpos xH)) (Lambda gen_var_1962 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1887 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1884 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1876 Z0) gen_var_1962))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 gen_var_1876 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1881 (App Zpos xH)) Z0) (Lambda gen_var_1964 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1887 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1884 (App Zneg xH)) gen_var_1964)) Z0) False)) (Lambda gen_var_1966 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1887 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1884 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1881 (App Zpos xH)) Z0))) Z0) (App Coq.omega.OmegaLemmas.fast_OMEGA15 gen_var_1887 (App Zneg xH) (App Zneg xH) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1884 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1881 (App Zpos xH)) Z0)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1884 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1881 (App Zpos xH)) Z0)) (App Zneg xH) (Lambda gen_var_1967 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_1967 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 gen_var_1887 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1884 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1881 (App Zpos xH)) Z0)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1884 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1881 (App Zpos xH)) Z0)) (App Zneg xH))) (Lambda gen_var_1969 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_1969 Z0) False)) (App Coq.omega.OmegaLemmas.fast_OMEGA15 gen_var_1884 (App Zneg xH) (App Zneg xH) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1881 (App Zpos xH)) Z0) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1881 (App Zpos xH)) Z0) (App Zneg xH) (Lambda gen_var_1971 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_1971 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 gen_var_1884 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1881 (App Zpos xH)) Z0) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1881 (App Zpos xH)) Z0) (App Zneg xH))) (Lambda gen_var_1973 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_1973 Z0) False)) (App Coq.omega.OmegaLemmas.fast_OMEGA15 gen_var_1881 (App Zpos xH) (App Zpos xH) Z0 Z0 (App Zneg xH) (Lambda gen_var_1975 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_1975 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 gen_var_1881 (App Coq.ZArith.BinIntDef.Z.add Z0 (App Coq.ZArith.BinIntDef.Z.mul Z0 (App Zneg xH))) (Lambda gen_var_1977 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_1977 Z0) False)) (Lambda gen_var_1979 (App Coq.ZArith.BinInt.Zne Z0 Z0) (App gen_var_1979 (App eq_refl Z Z0)))))))) (App Coq.omega.OmegaLemmas.OMEGA17 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1887 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1884 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1881 (App Zpos xH)) Z0))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1887 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1884 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1881 (App Zpos xH)) Z0))) (App Zneg xH) gen_var_1966 gen_var_1920)))))))))))))))))))) (App Coq.ZArith.auxiliary.Zne_left (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1877 gen_var_1874))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1876 (App ExportProof.sum gen_var_1877)) (App ExportProof.sum gen_var_1874)) gen_var_1935))))))))))))) (App Coq.ZArith.auxiliary.Zegal_left (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1877 gen_var_1874)) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum gen_var_1877) (App ExportProof.sum gen_var_1874)) gen_var_1878)))) (App Coq.omega.OmegaLemmas.new_var (App ExportProof.sum gen_var_1874))))) (App Coq.omega.OmegaLemmas.new_var (App ExportProof.sum gen_var_1877))))) (App Coq.omega.OmegaLemmas.new_var (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1877 gen_var_1874)))))) REVERTcast (App eq Z (App ExportProof.sum (App Coq.Init.Datatypes.app Z (App cons Z gen_var_1876 gen_var_1877) gen_var_1874)) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App cons Z gen_var_1876 gen_var_1877)) (App ExportProof.sum gen_var_1874))))))) gen_var_1877)))) (Definition ExportProof.cardinal_union_lemma (Lambda gen_var_2011 ExportProof.set (Lambda gen_var_2012 ExportProof.set (LetIn gen_var_2212 (Cast (App Coq.Init.Logic.eq_ind Z (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (App ExportProof.binary_union gen_var_2011 gen_var_2012) (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (App ExportProof.binary_intersection gen_var_2011 gen_var_2012) (Axiom ExportProof.enum_X))))) (Lambda gen_var_2014 Z (App eq Z gen_var_2014 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 (Axiom ExportProof.enum_X)))) (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 (Axiom ExportProof.enum_X))))))) (App Coq.Init.Logic.eq_ind Z (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 (Axiom ExportProof.enum_X))))) (Lambda gen_var_2015 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (App ExportProof.binary_union gen_var_2011 gen_var_2012) (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (App ExportProof.binary_intersection gen_var_2011 gen_var_2012) (Axiom ExportProof.enum_X))))) gen_var_2015)) (LetIn gen_var_2141 (Cast (LetIn gen_var_2022 (Axiom ExportProof.enum_X) (App list (Axiom ExportProof.X)) (App Coq.Init.Datatypes.list_ind (Axiom ExportProof.X) (Lambda gen_var_2018 (App list (Axiom ExportProof.X)) (App eq nat (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2019 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2019) (App gen_var_2012 gen_var_2019))) gen_var_2018)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2020 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2020) (App gen_var_2012 gen_var_2020))) gen_var_2018))) (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2018)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2018))))) (App eq_refl nat (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 (App nil (Axiom ExportProof.X)))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 (App nil (Axiom ExportProof.X)))))) (Lambda gen_var_2140 (Axiom ExportProof.X) (Lambda gen_var_2022 (App list (Axiom ExportProof.X)) (Lambda gen_var_2023 (App eq nat (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2024 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2024) (App gen_var_2012 gen_var_2024))) gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2025 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2025) (App gen_var_2012 gen_var_2025))) gen_var_2022))) (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022)))) (Cast (LetIn gen_var_2136 (App gen_var_2011 gen_var_2025) bool (Case 0 (Lambda gen_var_2035 bool (App eq nat (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2028 bool (App list (Axiom ExportProof.X))) (CaseMatch (App Coq.Init.Datatypes.orb gen_var_2028 (App gen_var_2012 gen_var_2025))) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_2025 (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2029 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2029) (App gen_var_2012 gen_var_2029))) gen_var_2022)) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2030 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2030) (App gen_var_2012 gen_var_2030))) gen_var_2022)))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2031 bool (App list (Axiom ExportProof.X))) (CaseMatch (App Coq.Init.Datatypes.andb gen_var_2031 (App gen_var_2012 gen_var_2030))) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_2030 (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2032 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2032) (App gen_var_2012 gen_var_2032))) gen_var_2022)) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2033 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2033) (App gen_var_2012 gen_var_2033))) gen_var_2022))))) (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2034 bool (App list (Axiom ExportProof.X))) (CaseMatch gen_var_2034) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_2033 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022)) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022)))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2035 bool (App list (Axiom ExportProof.X))) (CaseMatch (App gen_var_2012 gen_var_2033)) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_2033 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022)) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022))))))) (CaseMatch gen_var_2035) (CaseBranches (LetIn gen_var_2100 (App gen_var_2012 gen_var_2033) bool (Case 0 (Lambda gen_var_2044 bool (App eq nat (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2038 bool (App list (Axiom ExportProof.X))) (CaseMatch (App Coq.Init.Datatypes.orb true gen_var_2038)) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_2033 (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2039 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2039) (App gen_var_2012 gen_var_2039))) gen_var_2022)) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2040 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2040) (App gen_var_2012 gen_var_2040))) gen_var_2022)))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2041 bool (App list (Axiom ExportProof.X))) (CaseMatch (App Coq.Init.Datatypes.andb true gen_var_2041)) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_2040 (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2042 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2042) (App gen_var_2012 gen_var_2042))) gen_var_2022)) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2043 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2043) (App gen_var_2012 gen_var_2043))) gen_var_2022))))) (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App cons (Axiom ExportProof.X) gen_var_2043 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2044 bool (App list (Axiom ExportProof.X))) (CaseMatch gen_var_2044) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_2043 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022)) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022))))))) (CaseMatch gen_var_2044) (CaseBranches (Cast (App Coq.Init.Logic.eq_ind nat (App S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2045 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2045) (App gen_var_2012 gen_var_2045))) gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2046 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2046) (App gen_var_2012 gen_var_2046))) gen_var_2022)))) (Lambda gen_var_2047 nat (App eq nat (App S gen_var_2047) (App S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022)) (App S (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022))))))) (App Coq.Init.Logic.eq_ind nat (App S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022)))) (Lambda gen_var_2048 nat (App eq nat (App S (App S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2049 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2049) (App gen_var_2012 gen_var_2049))) gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2050 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2050) (App gen_var_2012 gen_var_2050))) gen_var_2022))))) (App S gen_var_2048))) (App Coq.Init.Logic.eq_trans nat (App S (App S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2051 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2051) (App gen_var_2012 gen_var_2051))) gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2052 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2052) (App gen_var_2012 gen_var_2052))) gen_var_2022))))) (App S (App S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2053 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2053) (App gen_var_2012 gen_var_2053))) gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2054 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2054) (App gen_var_2012 gen_var_2054))) gen_var_2022))))) (App S (App S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022))))) (App Coq.Init.Logic.f_equal (Prod Anonymous nat nat) nat (Lambda gen_var_2056 (Prod Anonymous nat nat) (App gen_var_2056 (App S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2058 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2058) (App gen_var_2012 gen_var_2058))) gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2059 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2059) (App gen_var_2012 gen_var_2059))) gen_var_2022)))))) S S (App eq_refl (Prod Anonymous nat nat) S)) (App Coq.Init.Logic.f_equal nat nat S (App S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2061 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2061) (App gen_var_2012 gen_var_2061))) gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2062 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2062) (App gen_var_2012 gen_var_2062))) gen_var_2022)))) (App S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022)))) (App Coq.Init.Logic.eq_trans nat (App S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2063 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2063) (App gen_var_2012 gen_var_2063))) gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2064 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2064) (App gen_var_2012 gen_var_2064))) gen_var_2022)))) (App S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2065 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2065) (App gen_var_2012 gen_var_2065))) gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2066 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2066) (App gen_var_2012 gen_var_2066))) gen_var_2022)))) (App S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022)))) (App Coq.Init.Logic.f_equal (Prod Anonymous nat nat) nat (Lambda gen_var_2068 (Prod Anonymous nat nat) (App gen_var_2068 (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2070 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2070) (App gen_var_2012 gen_var_2070))) gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2071 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2071) (App gen_var_2012 gen_var_2071))) gen_var_2022))))) S S (App eq_refl (Prod Anonymous nat nat) S)) (App Coq.Init.Logic.f_equal nat nat S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2073 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2073) (App gen_var_2012 gen_var_2073))) gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2074 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2074) (App gen_var_2012 gen_var_2074))) gen_var_2022))) (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022))) gen_var_2023)))) (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022)) (App S (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022)))) (App Coq.Init.Peano.plus_n_Sm (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022)))) (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2075 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2075) (App gen_var_2012 gen_var_2075))) gen_var_2022)) (App S (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2076 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2076) (App gen_var_2012 gen_var_2076))) gen_var_2022)))) (App Coq.Init.Peano.plus_n_Sm (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2077 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2077) (App gen_var_2012 gen_var_2077))) gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2078 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2078) (App gen_var_2012 gen_var_2078))) gen_var_2022)))) REVERTcast (App eq nat (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2079 bool (App list (Axiom ExportProof.X))) (CaseMatch (App Coq.Init.Datatypes.orb true true)) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_2078 (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2080 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2080) (App gen_var_2012 gen_var_2080))) gen_var_2022)) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2081 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2081) (App gen_var_2012 gen_var_2081))) gen_var_2022)))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2082 bool (App list (Axiom ExportProof.X))) (CaseMatch (App Coq.Init.Datatypes.andb true true)) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_2081 (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2083 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2083) (App gen_var_2012 gen_var_2083))) gen_var_2022)) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2084 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2084) (App gen_var_2012 gen_var_2084))) gen_var_2022))))) (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App cons (Axiom ExportProof.X) gen_var_2084 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App cons (Axiom ExportProof.X) gen_var_2084 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022)))))) (Cast (App Coq.Init.Logic.eq_trans nat (App S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2085 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2085) (App gen_var_2012 gen_var_2085))) gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2086 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2086) (App gen_var_2012 gen_var_2086))) gen_var_2022)))) (App S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2087 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2087) (App gen_var_2012 gen_var_2087))) gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2088 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2088) (App gen_var_2012 gen_var_2088))) gen_var_2022)))) (App S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022)))) (App Coq.Init.Logic.f_equal (Prod Anonymous nat nat) nat (Lambda gen_var_2090 (Prod Anonymous nat nat) (App gen_var_2090 (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2092 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2092) (App gen_var_2012 gen_var_2092))) gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2093 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2093) (App gen_var_2012 gen_var_2093))) gen_var_2022))))) S S (App eq_refl (Prod Anonymous nat nat) S)) (App Coq.Init.Logic.f_equal nat nat S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2095 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2095) (App gen_var_2012 gen_var_2095))) gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2096 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2096) (App gen_var_2012 gen_var_2096))) gen_var_2022))) (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022))) gen_var_2023)) REVERTcast (App eq nat (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2097 bool (App list (Axiom ExportProof.X))) (CaseMatch (App Coq.Init.Datatypes.orb true false)) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_2096 (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2098 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2098) (App gen_var_2012 gen_var_2098))) gen_var_2022)) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2099 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2099) (App gen_var_2012 gen_var_2099))) gen_var_2022)))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2100 bool (App list (Axiom ExportProof.X))) (CaseMatch (App Coq.Init.Datatypes.andb true false)) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_2099 (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2101 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2101) (App gen_var_2012 gen_var_2101))) gen_var_2022)) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2102 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2102) (App gen_var_2012 gen_var_2102))) gen_var_2022))))) (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App cons (Axiom ExportProof.X) gen_var_2102 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022)))))))) (LetIn gen_var_2136 (App gen_var_2012 gen_var_2102) bool (Case 0 (Lambda gen_var_2111 bool (App eq nat (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2105 bool (App list (Axiom ExportProof.X))) (CaseMatch (App Coq.Init.Datatypes.orb false gen_var_2105)) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_2102 (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2106 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2106) (App gen_var_2012 gen_var_2106))) gen_var_2022)) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2107 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2107) (App gen_var_2012 gen_var_2107))) gen_var_2022)))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2108 bool (App list (Axiom ExportProof.X))) (CaseMatch (App Coq.Init.Datatypes.andb false gen_var_2108)) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_2107 (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2109 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2109) (App gen_var_2012 gen_var_2109))) gen_var_2022)) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2110 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2110) (App gen_var_2012 gen_var_2110))) gen_var_2022))))) (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2111 bool (App list (Axiom ExportProof.X))) (CaseMatch gen_var_2111) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_2110 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022)) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022))))))) (CaseMatch gen_var_2111) (CaseBranches (Cast (App Coq.Init.Logic.eq_ind nat (App S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022)))) (Lambda gen_var_2112 nat (App eq nat (App S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2113 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2113) (App gen_var_2012 gen_var_2113))) gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2114 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2114) (App gen_var_2012 gen_var_2114))) gen_var_2022)))) gen_var_2112)) (App Coq.Init.Logic.eq_trans nat (App S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2115 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2115) (App gen_var_2012 gen_var_2115))) gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2116 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2116) (App gen_var_2012 gen_var_2116))) gen_var_2022)))) (App S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2117 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2117) (App gen_var_2012 gen_var_2117))) gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2118 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2118) (App gen_var_2012 gen_var_2118))) gen_var_2022)))) (App S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022)))) (App Coq.Init.Logic.f_equal (Prod Anonymous nat nat) nat (Lambda gen_var_2120 (Prod Anonymous nat nat) (App gen_var_2120 (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2122 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2122) (App gen_var_2012 gen_var_2122))) gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2123 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2123) (App gen_var_2012 gen_var_2123))) gen_var_2022))))) S S (App eq_refl (Prod Anonymous nat nat) S)) (App Coq.Init.Logic.f_equal nat nat S (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2125 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2125) (App gen_var_2012 gen_var_2125))) gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2126 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2126) (App gen_var_2012 gen_var_2126))) gen_var_2022))) (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022))) gen_var_2023)) (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022)) (App S (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022)))) (App Coq.Init.Peano.plus_n_Sm (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022)))) REVERTcast (App eq nat (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2127 bool (App list (Axiom ExportProof.X))) (CaseMatch (App Coq.Init.Datatypes.orb false true)) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_2126 (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2128 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2128) (App gen_var_2012 gen_var_2128))) gen_var_2022)) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2129 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2129) (App gen_var_2012 gen_var_2129))) gen_var_2022)))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2130 bool (App list (Axiom ExportProof.X))) (CaseMatch (App Coq.Init.Datatypes.andb false true)) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_2129 (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2131 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2131) (App gen_var_2012 gen_var_2131))) gen_var_2022)) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2132 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2132) (App gen_var_2012 gen_var_2132))) gen_var_2022))))) (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App cons (Axiom ExportProof.X) gen_var_2132 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022)))))) (Cast gen_var_2023 REVERTcast (App eq nat (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2133 bool (App list (Axiom ExportProof.X))) (CaseMatch (App Coq.Init.Datatypes.orb false false)) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_2132 (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2134 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2134) (App gen_var_2012 gen_var_2134))) gen_var_2022)) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2135 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2135) (App gen_var_2012 gen_var_2135))) gen_var_2022)))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_2136 bool (App list (Axiom ExportProof.X))) (CaseMatch (App Coq.Init.Datatypes.andb false false)) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_2135 (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2137 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2137) (App gen_var_2012 gen_var_2137))) gen_var_2022)) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2138 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2138) (App gen_var_2012 gen_var_2138))) gen_var_2022))))) (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 gen_var_2022)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 gen_var_2022))))))))))) REVERTcast (App eq nat (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2139 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_2011 gen_var_2139) (App gen_var_2012 gen_var_2139))) (App cons (Axiom ExportProof.X) gen_var_2139 gen_var_2022))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda gen_var_2140 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_2011 gen_var_2140) (App gen_var_2012 gen_var_2140))) (App cons (Axiom ExportProof.X) gen_var_2140 gen_var_2022)))) (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 (App cons (Axiom ExportProof.X) gen_var_2140 gen_var_2022))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 (App cons (Axiom ExportProof.X) gen_var_2140 gen_var_2022))))))))) gen_var_2022)) REVERTcast (App eq nat (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (App ExportProof.binary_union gen_var_2011 gen_var_2012) (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (App ExportProof.binary_intersection gen_var_2011 gen_var_2012) (Axiom ExportProof.enum_X)))) (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 (Axiom ExportProof.enum_X)))))) (App eq nat (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (App ExportProof.binary_union gen_var_2011 gen_var_2012) (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (App ExportProof.binary_intersection gen_var_2011 gen_var_2012) (Axiom ExportProof.enum_X)))) (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 (Axiom ExportProof.enum_X))))) (App (Lambda gen_var_2141 (App eq nat (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (App ExportProof.binary_union gen_var_2011 gen_var_2012) (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (App ExportProof.binary_intersection gen_var_2011 gen_var_2012) (Axiom ExportProof.enum_X)))) (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 (Axiom ExportProof.enum_X))))) (App Coq.Init.Logic.eq_trans Z (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (App ExportProof.binary_union gen_var_2011 gen_var_2012) (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (App ExportProof.binary_intersection gen_var_2011 gen_var_2012) (Axiom ExportProof.enum_X))))) (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (App ExportProof.binary_union gen_var_2011 gen_var_2012) (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (App ExportProof.binary_intersection gen_var_2011 gen_var_2012) (Axiom ExportProof.enum_X))))) (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 (Axiom ExportProof.enum_X))))) (App Coq.Init.Logic.f_equal (Prod gen_var_2142 nat Z) Z (Lambda gen_var_2143 (Prod gen_var_2144 nat Z) (App gen_var_2143 (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (App ExportProof.binary_union gen_var_2011 gen_var_2012) (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (App ExportProof.binary_intersection gen_var_2011 gen_var_2012) (Axiom ExportProof.enum_X)))))) Coq.ZArith.BinIntDef.Z.of_nat Coq.ZArith.BinIntDef.Z.of_nat (App eq_refl (Prod gen_var_2145 nat Z) Coq.ZArith.BinIntDef.Z.of_nat)) (App Coq.Init.Logic.f_equal nat Z Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (App ExportProof.binary_union gen_var_2011 gen_var_2012) (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (App ExportProof.binary_intersection gen_var_2011 gen_var_2012) (Axiom ExportProof.enum_X)))) (App Coq.Init.Nat.add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 (Axiom ExportProof.enum_X)))) gen_var_2141))) gen_var_2141)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 (Axiom ExportProof.enum_X)))) (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 (Axiom ExportProof.enum_X))))) (App Coq.ZArith.Znat.Nat2Z.inj_add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2011 (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_2012 (Axiom ExportProof.enum_X))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (App ExportProof.binary_union gen_var_2011 gen_var_2012) (Axiom ExportProof.enum_X)))) (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (App ExportProof.binary_intersection gen_var_2011 gen_var_2012) (Axiom ExportProof.enum_X))))) (App Coq.ZArith.Znat.Nat2Z.inj_add (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (App ExportProof.binary_union gen_var_2011 gen_var_2012) (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (App ExportProof.binary_intersection gen_var_2011 gen_var_2012) (Axiom ExportProof.enum_X))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2011 gen_var_2012)) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_2011 gen_var_2012))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2011) (App ExportProof.cardinal gen_var_2012)))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2011 gen_var_2012)) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_2011 gen_var_2012))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2011) (App ExportProof.cardinal gen_var_2012))) (App (Lambda gen_var_2212 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2011 gen_var_2012)) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_2011 gen_var_2012))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2011) (App ExportProof.cardinal gen_var_2012))) (App Coq.Logic.Decidable.dec_not_not (App eq Z (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2011 gen_var_2012)) (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2011) (App ExportProof.cardinal gen_var_2012)) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_2011 gen_var_2012)))) (App Coq.ZArith.BinInt.Z.eq_decidable (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2011 gen_var_2012)) (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2011) (App ExportProof.cardinal gen_var_2012)) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_2011 gen_var_2012)))) (Lambda gen_var_2147 (App Coq.Init.Logic.not (App eq Z (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2011 gen_var_2012)) (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2011) (App ExportProof.cardinal gen_var_2012)) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_2011 gen_var_2012))))) (App Coq.Init.Logic.ex_ind Z (Lambda gen_var_2148 Z (App eq Z (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2011 gen_var_2012)) gen_var_2148)) False (Lambda gen_var_2149 Z (Lambda gen_var_2150 (App eq Z (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2011 gen_var_2012)) gen_var_2149) (App Coq.Init.Logic.ex_ind Z (Lambda gen_var_2151 Z (App eq Z (App ExportProof.cardinal gen_var_2011) gen_var_2151)) False (Lambda gen_var_2152 Z (Lambda gen_var_2153 (App eq Z (App ExportProof.cardinal gen_var_2011) gen_var_2152) (App Coq.Init.Logic.ex_ind Z (Lambda gen_var_2154 Z (App eq Z (App ExportProof.cardinal gen_var_2012) gen_var_2154)) False (Lambda gen_var_2155 Z (Lambda gen_var_2156 (App eq Z (App ExportProof.cardinal gen_var_2012) gen_var_2155) (App Coq.Init.Logic.ex_ind Z (Lambda gen_var_2157 Z (App eq Z (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_2011 gen_var_2012)) gen_var_2157)) False (Lambda gen_var_2158 Z (Lambda gen_var_2159 (App eq Z (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_2011 gen_var_2012)) gen_var_2158) (App (Lambda gen_var_2160 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_2162 (App gen_var_2160 gen_var_2149) (App Coq.Init.Logic.eq_ind_r Z gen_var_2149 gen_var_2160 gen_var_2162 (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2011 gen_var_2012)) gen_var_2150))) (Lambda gen_var_2163 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2163 (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_2011 gen_var_2012))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2011) (App ExportProof.cardinal gen_var_2012)))) Z0) False)) (App (Lambda gen_var_2165 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_2167 (App gen_var_2165 gen_var_2158) (App Coq.Init.Logic.eq_ind_r Z gen_var_2158 gen_var_2165 gen_var_2167 (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_2011 gen_var_2012)) gen_var_2159))) (Lambda gen_var_2168 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2149 gen_var_2168) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2011) (App ExportProof.cardinal gen_var_2012)))) Z0) False)) (App (Lambda gen_var_2170 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_2172 (App gen_var_2170 gen_var_2152) (App Coq.Init.Logic.eq_ind_r Z gen_var_2152 gen_var_2170 gen_var_2172 (App ExportProof.cardinal gen_var_2011) gen_var_2153))) (Lambda gen_var_2173 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2149 gen_var_2158) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add gen_var_2173 (App ExportProof.cardinal gen_var_2012)))) Z0) False)) (App (Lambda gen_var_2175 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_2177 (App gen_var_2175 gen_var_2155) (App Coq.Init.Logic.eq_ind_r Z gen_var_2155 gen_var_2175 gen_var_2177 (App ExportProof.cardinal gen_var_2012) gen_var_2156))) (Lambda gen_var_2178 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2149 gen_var_2158) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add gen_var_2152 gen_var_2178))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_plus_distr gen_var_2152 gen_var_2155 (Lambda gen_var_2180 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2149 gen_var_2158) gen_var_2180) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_2152 (Lambda gen_var_2182 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2149 gen_var_2158) (App Coq.ZArith.BinIntDef.Z.add gen_var_2182 (App Coq.ZArith.BinIntDef.Z.opp gen_var_2155))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_2155 (Lambda gen_var_2184 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2149 gen_var_2158) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2152 (App Zneg xH)) gen_var_2184)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_assoc_reverse gen_var_2149 gen_var_2158 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2152 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.mul gen_var_2155 (App Zneg xH))) (Lambda gen_var_2186 Z (Prod Anonymous (App eq Z gen_var_2186 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor0 gen_var_2149 (Lambda gen_var_2188 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_2188 (App Coq.ZArith.BinIntDef.Z.add gen_var_2158 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2152 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.mul gen_var_2155 (App Zneg xH))))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor0 gen_var_2158 (Lambda gen_var_2190 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2149 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.add gen_var_2190 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2152 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.mul gen_var_2155 (App Zneg xH))))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor6 (App Coq.ZArith.BinIntDef.Z.mul gen_var_2155 (App Zneg xH)) (Lambda gen_var_2192 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2149 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2158 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2152 (App Zneg xH)) gen_var_2192))) Z0) False)) (Lambda gen_var_2194 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2149 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2158 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2152 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2155 (App Zneg xH)) Z0)))) Z0) (App (Lambda gen_var_2195 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_2197 (App gen_var_2195 gen_var_2149) (App Coq.Init.Logic.eq_ind_r Z gen_var_2149 gen_var_2195 gen_var_2197 (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2011 gen_var_2012)) gen_var_2150))) (Lambda gen_var_2198 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add gen_var_2198 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2011) (App ExportProof.cardinal gen_var_2012)) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_2011 gen_var_2012))))) Z0) False)) (Cast (App (Lambda gen_var_2200 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_2202 (App gen_var_2200 gen_var_2152) (App Coq.Init.Logic.eq_ind_r Z gen_var_2152 gen_var_2200 gen_var_2202 (App ExportProof.cardinal gen_var_2011) gen_var_2153))) (Lambda gen_var_2203 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add gen_var_2149 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2203 (App ExportProof.cardinal gen_var_2012)) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_2011 gen_var_2012)))))) Z0) False)) (App (Lambda gen_var_2205 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_2207 (App gen_var_2205 gen_var_2155) (App Coq.Init.Logic.eq_ind_r Z gen_var_2155 gen_var_2205 gen_var_2207 (App ExportProof.cardinal gen_var_2012) gen_var_2156))) (Lambda gen_var_2208 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add gen_var_2149 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2152 gen_var_2208) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_2011 gen_var_2012)))))) Z0) False)) (App (Lambda gen_var_2210 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_2212 (App gen_var_2210 gen_var_2158) (App Coq.Init.Logic.eq_ind_r Z gen_var_2158 gen_var_2210 gen_var_2212 (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_2011 gen_var_2012)) gen_var_2159))) (Lambda gen_var_2213 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add gen_var_2149 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2152 gen_var_2155) (App Coq.ZArith.BinIntDef.Z.opp gen_var_2213)))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_2158 (Lambda gen_var_2215 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add gen_var_2149 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_2152 gen_var_2155) gen_var_2215))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_comm (App Coq.ZArith.BinIntDef.Z.add gen_var_2152 gen_var_2155) (App Coq.ZArith.BinIntDef.Z.mul gen_var_2158 (App Zneg xH)) (Lambda gen_var_2217 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add gen_var_2149 (App Coq.ZArith.BinIntDef.Z.opp gen_var_2217)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_plus_distr (App Coq.ZArith.BinIntDef.Z.mul gen_var_2158 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add gen_var_2152 gen_var_2155) (Lambda gen_var_2219 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add gen_var_2149 gen_var_2219) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_mult_distr_r gen_var_2158 (App Zneg xH) (Lambda gen_var_2221 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add gen_var_2149 (App Coq.ZArith.BinIntDef.Z.add gen_var_2221 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add gen_var_2152 gen_var_2155)))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_plus_distr gen_var_2152 gen_var_2155 (Lambda gen_var_2223 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add gen_var_2149 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2158 (App Zpos xH)) gen_var_2223)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_2152 (Lambda gen_var_2225 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add gen_var_2149 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2158 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.add gen_var_2225 (App Coq.ZArith.BinIntDef.Z.opp gen_var_2155)))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_2155 (Lambda gen_var_2227 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add gen_var_2149 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2158 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2152 (App Zneg xH)) gen_var_2227))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor0 gen_var_2149 (Lambda gen_var_2229 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add gen_var_2229 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2158 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2152 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.mul gen_var_2155 (App Zneg xH))))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor6 (App Coq.ZArith.BinIntDef.Z.mul gen_var_2155 (App Zneg xH)) (Lambda gen_var_2231 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2149 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2158 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2152 (App Zneg xH)) gen_var_2231))) Z0) False)) (Lambda gen_var_2233 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2149 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2158 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2152 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2155 (App Zneg xH)) Z0)))) Z0) (App Coq.omega.OmegaLemmas.fast_OMEGA15 gen_var_2149 (App Zpos xH) (App Zpos xH) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2158 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2152 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2155 (App Zneg xH)) Z0))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2158 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2152 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2155 (App Zneg xH)) Z0))) (App Zneg xH) (Lambda gen_var_2234 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_2234 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 gen_var_2149 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2158 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2152 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2155 (App Zneg xH)) Z0))) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2158 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2152 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2155 (App Zneg xH)) Z0))) (App Zneg xH))) (Lambda gen_var_2236 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_2236 Z0) False)) (App Coq.omega.OmegaLemmas.fast_OMEGA15 gen_var_2158 (App Zpos xH) (App Zpos xH) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2152 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2155 (App Zneg xH)) Z0)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2152 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2155 (App Zneg xH)) Z0)) (App Zneg xH) (Lambda gen_var_2238 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_2238 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 gen_var_2158 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2152 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2155 (App Zneg xH)) Z0)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2152 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2155 (App Zneg xH)) Z0)) (App Zneg xH))) (Lambda gen_var_2240 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_2240 Z0) False)) (App Coq.omega.OmegaLemmas.fast_OMEGA15 gen_var_2152 (App Zneg xH) (App Zneg xH) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2155 (App Zneg xH)) Z0) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2155 (App Zneg xH)) Z0) (App Zneg xH) (Lambda gen_var_2242 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_2242 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 gen_var_2152 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2155 (App Zneg xH)) Z0) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2155 (App Zneg xH)) Z0) (App Zneg xH))) (Lambda gen_var_2244 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_2244 Z0) False)) (App Coq.omega.OmegaLemmas.fast_OMEGA15 gen_var_2155 (App Zneg xH) (App Zneg xH) Z0 Z0 (App Zneg xH) (Lambda gen_var_2246 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_2246 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 gen_var_2155 (App Coq.ZArith.BinIntDef.Z.add Z0 (App Coq.ZArith.BinIntDef.Z.mul Z0 (App Zneg xH))) (Lambda gen_var_2248 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_2248 Z0) False)) (Lambda gen_var_2250 (App Coq.ZArith.BinInt.Zne Z0 Z0) (App gen_var_2250 (App eq_refl Z Z0)))))))))) (App Coq.omega.OmegaLemmas.OMEGA17 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2149 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2158 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2152 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2155 (App Zneg xH)) Z0)))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2149 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2158 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2152 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2155 (App Zneg xH)) Z0)))) (App Zneg xH) gen_var_2233 gen_var_2194))))))))))))))) REVERTcast (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add gen_var_2149 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2011) (App ExportProof.cardinal gen_var_2012)) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_2011 gen_var_2012))))) Z0) False)) (App Coq.ZArith.auxiliary.Zne_left (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2011 gen_var_2012)) (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2011) (App ExportProof.cardinal gen_var_2012)) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_2011 gen_var_2012))) gen_var_2147))))))))))))) (App Coq.ZArith.auxiliary.Zegal_left (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2011 gen_var_2012)) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_2011 gen_var_2012))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_2011) (App ExportProof.cardinal gen_var_2012)) gen_var_2212)))) (App Coq.omega.OmegaLemmas.new_var (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_2011 gen_var_2012)))))) (App Coq.omega.OmegaLemmas.new_var (App ExportProof.cardinal gen_var_2012))))) (App Coq.omega.OmegaLemmas.new_var (App ExportProof.cardinal gen_var_2011))))) (App Coq.omega.OmegaLemmas.new_var (App ExportProof.cardinal (App ExportProof.binary_union gen_var_2011 gen_var_2012))))))) gen_var_2212))))) (Definition ExportProof.cardinal_binary_union (Lambda gen_var_2011 ExportProof.set (Lambda gen_var_2012 ExportProof.set (App Coq.Init.Logic.eq_ind Z (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1985 gen_var_1986)) (Lambda gen_var_1987 Z (App eq Z (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1985 gen_var_1986)) gen_var_1987)) (App Coq.Logic.Decidable.dec_not_not (App eq Z (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1985 gen_var_1986)) (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1985 gen_var_1986))) (App Coq.ZArith.BinInt.Z.eq_decidable (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1985 gen_var_1986)) (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1985 gen_var_1986))) (Lambda gen_var_1999 (App Coq.Init.Logic.not (App eq Z (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1985 gen_var_1986)) (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1985 gen_var_1986)))) (App Coq.Init.Logic.ex_ind Z (Lambda gen_var_1989 Z (App eq Z (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1985 gen_var_1986)) gen_var_1989)) False (Lambda gen_var_1990 Z (Lambda gen_var_1991 (App eq Z (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1985 gen_var_1986)) gen_var_1990) (App (Lambda gen_var_1992 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_1994 (App gen_var_1992 gen_var_1990) (App Coq.Init.Logic.eq_ind_r Z gen_var_1990 gen_var_1992 gen_var_1994 (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1985 gen_var_1986)) gen_var_1991))) (Lambda gen_var_1995 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add gen_var_1995 (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1985 gen_var_1986)))) Z0) False)) (App (Lambda gen_var_1997 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_1999 (App gen_var_1997 gen_var_1990) (App Coq.Init.Logic.eq_ind_r Z gen_var_1990 gen_var_1997 gen_var_1999 (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1985 gen_var_1986)) gen_var_1991))) (Lambda gen_var_2000 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add gen_var_1990 (App Coq.ZArith.BinIntDef.Z.opp gen_var_2000)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_1990 (Lambda gen_var_2002 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add gen_var_1990 gen_var_2002) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor2 gen_var_1990 (App Zneg xH) (Lambda gen_var_2004 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_2004 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor6 (App Coq.ZArith.BinIntDef.Z.mul gen_var_1990 Z0) (Lambda gen_var_2006 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_2006 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 gen_var_1990 Z0 (Lambda gen_var_2008 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_2008 Z0) False)) (Lambda gen_var_2010 (App Coq.ZArith.BinInt.Zne Z0 Z0) (App gen_var_2010 (App eq_refl Z Z0)))))))) (App Coq.ZArith.auxiliary.Zne_left (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1985 gen_var_1986)) (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1985 gen_var_1986)) gen_var_1999)))) (App Coq.omega.OmegaLemmas.new_var (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1985 gen_var_1986)))))) (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_1985) (App ExportProof.cardinal gen_var_1986)) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_1985 gen_var_1986))) (App ExportProof.cardinal_union_lemma gen_var_2011 gen_var_2012))))) (Definition ExportProof.inclusion_exclusion (Lambda gen_var_2022 (App list ExportProof.set) (LetIn gen_var_2143 (Lambda gen_var_4 (App list ExportProof.set) (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection gen_var_4)) (App ExportProof.alternating_sign (App Coq.Init.Nat.add (App S O) (App Coq.Init.Datatypes.length ExportProof.set gen_var_4))))) (Prod gen_var_25 (App list ExportProof.set) Z) (LetIn gen_var_2145 (App Coq.Init.Datatypes.length ExportProof.set gen_var_13) nat (LetIn gen_var_80 (App eq_refl nat gen_var_26) (App eq nat gen_var_26 (App Coq.Init.Datatypes.length ExportProof.set gen_var_13)) (App Coq.Init.Datatypes.nat_ind (Lambda gen_var_28 nat (Prod gen_var_55 (App list ExportProof.set) (Prod gen_var_30 (App eq nat gen_var_28 (App Coq.Init.Datatypes.length ExportProof.set gen_var_29)) (App eq Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_29)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_8 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_55)))))))) (Lambda gen_var_71 (App list ExportProof.set) (Lambda gen_var_72 (App eq nat O (App Coq.Init.Datatypes.length ExportProof.set gen_var_56)) (App (Case 1 (Lambda gen_var_58 (App list ExportProof.set) (Prod gen_var_59 (App eq nat O (App Coq.Init.Datatypes.length ExportProof.set gen_var_58)) (App eq Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_58)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_8 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_58))))))) (CaseMatch gen_var_58) (CaseBranches (Lambda gen_var_60 (App eq nat O (App Coq.Init.Datatypes.length ExportProof.set (App nil ExportProof.set))) (Cast (Cast (App Coq.Init.Logic.eq_ind_r Z Z0 (Lambda gen_var_61 Z (App eq Z gen_var_61 Z0)) (App eq_refl Z Z0) (App ExportProof.cardinal ExportProof.empty_set) ExportProof.cardinal_empty) REVERTcast (App eq Z (App ExportProof.cardinal (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_union ExportProof.empty_set (App nil ExportProof.set))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z (Lambda gen_var_69 (App list ExportProof.set) (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection gen_var_69)) (App ExportProof.alternating_sign (App Coq.Init.Nat.add (App S O) (App Coq.Init.Datatypes.length ExportProof.set gen_var_69))))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App nil ExportProof.set))))))) REVERTcast (App eq Z (App ExportProof.cardinal (App ExportProof.list_union (App nil ExportProof.set))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_8 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App nil ExportProof.set)))))))) (Lambda gen_var_70 ExportProof.set (Lambda gen_var_71 (App list ExportProof.set) (Lambda gen_var_72 (App eq nat O (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set gen_var_70 gen_var_71))) (LetIn gen_var_73 (App Coq.Init.Logic.eq_ind nat O (Lambda gen_var_74 nat (Case 0 (Lambda gen_var_75 nat (Sort Prop)) (CaseMatch gen_var_74) (CaseBranches True (Lambda Anonymous nat False)))) I (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set gen_var_70 gen_var_71)) gen_var_72) False (App Coq.Init.Logic.False_ind (App eq Z (App ExportProof.cardinal (App ExportProof.list_union (App cons ExportProof.set gen_var_70 gen_var_71))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_8 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App cons ExportProof.set gen_var_70 gen_var_71)))))) gen_var_73))))))) gen_var_72))) (Lambda gen_var_2145 nat (Lambda gen_var_78 (Prod gen_var_79 (App list ExportProof.set) (Prod gen_var_80 (App eq nat gen_var_77 (App Coq.Init.Datatypes.length ExportProof.set gen_var_79)) (App eq Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_79)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_8 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_79))))))) (Lambda gen_var_2022 (App list ExportProof.set) (Lambda gen_var_97 (App eq nat (App S gen_var_77) (App Coq.Init.Datatypes.length ExportProof.set gen_var_81)) (App (Case 1 (Lambda gen_var_83 (App list ExportProof.set) (Prod gen_var_84 (App eq nat (App S gen_var_77) (App Coq.Init.Datatypes.length ExportProof.set gen_var_83)) (App eq Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_83)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_8 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_83))))))) (CaseMatch gen_var_83) (CaseBranches (Lambda gen_var_85 (App eq nat (App S gen_var_77) (App Coq.Init.Datatypes.length ExportProof.set (App nil ExportProof.set))) (LetIn gen_var_86 (App Coq.Init.Logic.eq_ind nat (App S gen_var_77) (Lambda gen_var_87 nat (Case 0 (Lambda gen_var_88 nat (Sort Prop)) (CaseMatch gen_var_87) (CaseBranches False (Lambda Anonymous nat True)))) I (App Coq.Init.Datatypes.length ExportProof.set (App nil ExportProof.set)) gen_var_85) False (App Coq.Init.Logic.False_ind (App eq Z (App ExportProof.cardinal (App ExportProof.list_union (App nil ExportProof.set))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_8 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App nil ExportProof.set)))))) gen_var_86))) (Lambda gen_var_1876 ExportProof.set (Lambda gen_var_2022 (App list ExportProof.set) (Lambda gen_var_97 (App eq nat (App S gen_var_88) (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set gen_var_90 gen_var_91))) (LetIn gen_var_2212 (App Coq.Init.Logic.f_equal nat nat (Lambda gen_var_94 nat (Case 0 (Lambda gen_var_95 nat nat) (CaseMatch gen_var_94) (CaseBranches gen_var_95 (Lambda gen_var_96 nat gen_var_96)))) (App S gen_var_96) (App S (App Coq.Init.Datatypes.length ExportProof.set gen_var_91)) gen_var_92) (App eq nat gen_var_96 (App Coq.Init.Datatypes.length ExportProof.set gen_var_91)) (App (Lambda gen_var_97 (App eq nat gen_var_96 (App Coq.Init.Datatypes.length ExportProof.set gen_var_91)) (Cast (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_90) (App ExportProof.cardinal (App ExportProof.list_union gen_var_91))) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_90 (App ExportProof.list_union gen_var_91)))) (Lambda gen_var_98 Z (App eq Z gen_var_98 (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_8 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Init.Datatypes.app (App list ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_91) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_99 (App list ExportProof.set) (App cons ExportProof.set gen_var_90 gen_var_99)) (App ExportProof.sublists ExportProof.set gen_var_99)))))))) (App Coq.Init.Logic.eq_ind_r (App list (App list ExportProof.set)) (App Coq.Init.Datatypes.app (App list ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_99)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_100 (App list ExportProof.set) (App cons ExportProof.set gen_var_90 gen_var_100)) (App ExportProof.sublists ExportProof.set gen_var_100)))) (Lambda gen_var_101 (App list (App list ExportProof.set)) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_90) (App ExportProof.cardinal (App ExportProof.list_union gen_var_101))) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_90 (App ExportProof.list_union gen_var_101)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_8 gen_var_101)))) (App Coq.Init.Logic.eq_ind_r (App list Z) (App Coq.Init.Datatypes.app Z (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_8 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_101))) (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_8 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_102 (App list ExportProof.set) (App cons ExportProof.set gen_var_90 gen_var_102)) (App ExportProof.sublists ExportProof.set gen_var_102))))) (Lambda gen_var_103 (App list Z) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_90) (App ExportProof.cardinal (App ExportProof.list_union gen_var_103))) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_90 (App ExportProof.list_union gen_var_103)))) (App ExportProof.sum gen_var_103))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_8 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_103)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_8 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_104 (App list ExportProof.set) (App cons ExportProof.set gen_var_90 gen_var_104)) (App ExportProof.sublists ExportProof.set gen_var_104)))))) (Lambda gen_var_105 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_90) (App ExportProof.cardinal (App ExportProof.list_union gen_var_104))) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_90 (App ExportProof.list_union gen_var_104)))) gen_var_105)) (App Coq.Init.Logic.eq_ind_r Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_8 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_104)))) (Lambda gen_var_106 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_90) gen_var_106) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_90 (App ExportProof.list_union gen_var_104)))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_8 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_104)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_8 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_107 (App list ExportProof.set) (App cons ExportProof.set gen_var_90 gen_var_107)) (App ExportProof.sublists ExportProof.set gen_var_107)))))))) (LetIn gen_var_108 (App Coq.Lists.List.map ExportProof.set (Prod gen_var_109 (Axiom ExportProof.X) bool) (Lambda gen_var_110 ExportProof.set (App ExportProof.binary_intersection gen_var_90 gen_var_110)) gen_var_107) (App list (Prod gen_var_111 (Axiom ExportProof.X) bool)) (LetIn gen_var_1859 (App ExportProof.cardinal_set_eq (App ExportProof.list_union gen_var_108) (App ExportProof.binary_intersection gen_var_122 (App ExportProof.list_union gen_var_123)) (Cast (App Coq.Init.Datatypes.list_ind ExportProof.set (Lambda gen_var_141 (App list ExportProof.set) (App ExportProof.set_eq (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_142 (Axiom ExportProof.X) bool) (Lambda gen_var_143 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_143)) gen_var_141)) (App ExportProof.binary_intersection gen_var_122 (App ExportProof.list_union gen_var_141)))) (Cast (Cast (Lambda gen_var_144 (Axiom ExportProof.X) (Cast (LetIn gen_var_145 (App gen_var_122 gen_var_144) bool (Case 0 (Lambda gen_var_146 bool (App eq bool false (Case 0 (Lambda gen_var_147 bool bool) (CaseMatch gen_var_146) (CaseBranches false false)))) (CaseMatch gen_var_145) (CaseBranches (App eq_refl bool false) (App eq_refl bool false)))) REVERTcast (App eq bool (App ExportProof.empty_set gen_var_144) (App ExportProof.binary_intersection gen_var_122 ExportProof.empty_set gen_var_144)))) REVERTcast (App ExportProof.set_eq ExportProof.empty_set (App ExportProof.binary_intersection gen_var_122 ExportProof.empty_set))) REVERTcast (App ExportProof.set_eq (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_148 (Axiom ExportProof.X) bool) (Lambda gen_var_149 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_149)) (App nil ExportProof.set))) (App ExportProof.binary_intersection gen_var_122 (App ExportProof.list_union (App nil ExportProof.set))))) (Lambda gen_var_150 ExportProof.set (Lambda gen_var_368 (App list ExportProof.set) (Lambda gen_var_152 (App ExportProof.set_eq (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_153 (Axiom ExportProof.X) bool) (Lambda gen_var_154 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_154)) gen_var_151)) (App ExportProof.binary_intersection gen_var_122 (App ExportProof.list_union gen_var_151))) (Cast (App (Lambda gen_var_155 (App ExportProof.set_eq (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_156 (Axiom ExportProof.X) bool) (Lambda gen_var_157 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_157)) gen_var_151)) (App ExportProof.binary_intersection gen_var_122 (App ExportProof.list_union gen_var_151))) (App Coq.Classes.Morphisms.subrelation_proper (Prod gen_var_158 ExportProof.set (Prod gen_var_159 ExportProof.set (Sort Prop))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set (Sort Prop)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff)) ExportProof.set_eq (App Coq.Classes.Morphisms.PER_morphism ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PER ExportProof.set ExportProof.set_eq ExportProof.Set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_182 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_183 (Axiom ExportProof.X) bool) (Prod gen_var_184 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_185 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_186 (Axiom ExportProof.X) bool) (Prod gen_var_187 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_188 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Sort Prop) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App ExportProof.binary_union (App ExportProof.binary_intersection gen_var_122 gen_var_150) (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_189 (Axiom ExportProof.X) bool) (Lambda gen_var_190 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_190)) gen_var_151))) (App ExportProof.binary_union (App ExportProof.binary_intersection gen_var_122 gen_var_150) (App ExportProof.binary_intersection gen_var_122 (App ExportProof.list_union gen_var_151))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_191 ExportProof.set (Prod gen_var_192 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_193 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_194 (Axiom ExportProof.X) bool) (Prod gen_var_195 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_union (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_197 ExportProof.set (Prod gen_var_198 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_199 ExportProof.set (Prod gen_var_200 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_201 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_202 (Axiom ExportProof.X) bool) (Prod gen_var_203 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_205 ExportProof.set (Prod gen_var_206 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_208 ExportProof.set (Prod gen_var_209 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_210 ExportProof.set (Prod gen_var_211 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_212 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_213 (Axiom ExportProof.X) bool) (Prod gen_var_214 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_215 (Axiom ExportProof.X) bool) (Prod gen_var_216 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_217 ExportProof.set (Prod gen_var_218 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_219 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_220 (Axiom ExportProof.X) bool) (Prod gen_var_221 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_222 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_223 (Axiom ExportProof.X) bool) (Prod gen_var_224 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_225 (Axiom ExportProof.X) bool) (Prod gen_var_226 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_227 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_228 (Axiom ExportProof.X) bool) (Prod gen_var_229 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_230 (Axiom ExportProof.X) bool) (Prod gen_var_231 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_232 (Axiom ExportProof.X) bool) (Prod gen_var_233 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_234 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_235 (Axiom ExportProof.X) bool) (Prod gen_var_236 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_union (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_238 ExportProof.set (Prod gen_var_239 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_240 ExportProof.set (Prod gen_var_241 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_242 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_243 (Axiom ExportProof.X) bool) (Prod gen_var_244 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_245 (Axiom ExportProof.X) bool) (Prod gen_var_246 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_union (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_248 ExportProof.set (Prod gen_var_249 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_union ExportProof.union_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_263 ExportProof.set (Prod gen_var_264 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_265 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_266 (Axiom ExportProof.X) bool) (Prod gen_var_267 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_268 (Axiom ExportProof.X) bool) (Prod gen_var_269 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_270 ExportProof.set (Prod gen_var_271 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_272 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_273 (Axiom ExportProof.X) bool) (Prod gen_var_274 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_275 (Axiom ExportProof.X) bool) (Prod gen_var_276 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_277 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_278 (Axiom ExportProof.X) bool) (Prod gen_var_279 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_280 (Axiom ExportProof.X) bool) (Prod gen_var_281 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_282 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_283 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) (App ExportProof.binary_intersection gen_var_122 gen_var_150) (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) (App ExportProof.binary_intersection gen_var_122 gen_var_150)) (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_284 (Axiom ExportProof.X) bool) (Lambda gen_var_285 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_285)) gen_var_151)) (App ExportProof.binary_intersection gen_var_122 (App ExportProof.list_union gen_var_151)) gen_var_155) (App ExportProof.binary_intersection gen_var_122 (App ExportProof.binary_union gen_var_150 (App ExportProof.list_union gen_var_151))) (App ExportProof.binary_intersection gen_var_122 (App ExportProof.binary_union gen_var_150 (App ExportProof.list_union gen_var_151))) (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Reflexive (App ExportProof.binary_intersection gen_var_122 (App ExportProof.binary_union gen_var_150 (App ExportProof.list_union gen_var_151)))))) gen_var_152 (Cast (Lambda gen_var_376 (Axiom ExportProof.X) (Cast (LetIn gen_var_326 (App gen_var_122 gen_var_286) bool (Case 0 (Lambda gen_var_320 bool (App eq bool (Case 0 (Lambda gen_var_289 bool bool) (CaseMatch (Case 0 (Lambda gen_var_290 bool bool) (CaseMatch gen_var_288) (CaseBranches (App gen_var_150 gen_var_286) false))) (CaseBranches true (Case 0 (Lambda gen_var_291 bool bool) (CaseMatch gen_var_288) (CaseBranches (App (Fix (Functions (App gen_var_292 0 (Prod gen_var_293 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_298 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_298 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_298) (CaseBranches (Lambda Anonymous (Axiom ExportProof.X) false) (Lambda gen_var_302 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_304 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_306 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_307 bool bool) (CaseMatch (App gen_var_302 gen_var_306)) (CaseBranches true (App gen_var_292 gen_var_304 gen_var_306))))))))))) 0) gen_var_298 gen_var_306) false)))) (Case 0 (Lambda gen_var_308 bool bool) (CaseMatch gen_var_302) (CaseBranches (Case 0 (Lambda gen_var_309 bool bool) (CaseMatch (App gen_var_150 gen_var_306)) (CaseBranches true (App (Fix (Functions (App gen_var_310 0 (Prod gen_var_311 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_316 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_316 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_316) (CaseBranches (Lambda Anonymous (Axiom ExportProof.X) false) (Lambda gen_var_320 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_322 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_324 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_325 bool bool) (CaseMatch (App gen_var_320 gen_var_324)) (CaseBranches true (App gen_var_310 gen_var_322 gen_var_324))))))))))) 0) gen_var_316 gen_var_324))) false)))) (CaseMatch gen_var_287) (CaseBranches (LetIn gen_var_326 (App gen_var_150 gen_var_324) bool (Case 0 (Lambda gen_var_356 bool (App eq bool (Case 0 (Lambda gen_var_328 bool bool) (CaseMatch gen_var_327) (CaseBranches true (App (Fix (Functions (App gen_var_329 0 (Prod gen_var_330 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_335 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_335 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_335) (CaseBranches (Lambda Anonymous (Axiom ExportProof.X) false) (Lambda gen_var_339 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_341 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_343 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_344 bool bool) (CaseMatch (App gen_var_339 gen_var_343)) (CaseBranches true (App gen_var_329 gen_var_341 gen_var_343))))))))))) 0) gen_var_335 gen_var_343))) (Case 0 (Lambda gen_var_345 bool bool) (CaseMatch gen_var_339) (CaseBranches true (App (Fix (Functions (App gen_var_346 0 (Prod gen_var_347 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_352 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_352 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_352) (CaseBranches (Lambda Anonymous (Axiom ExportProof.X) false) (Lambda gen_var_356 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_358 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_360 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_361 bool bool) (CaseMatch (App gen_var_356 gen_var_360)) (CaseBranches true (App gen_var_346 gen_var_358 gen_var_360))))))))))) 0) gen_var_352 gen_var_360))))) (CaseMatch gen_var_326) (CaseBranches (App eq_refl bool true) (App eq_refl bool (App (Fix (Functions (App gen_var_362 0 (Prod gen_var_363 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_368 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_368 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_368) (CaseBranches (Lambda Anonymous (Axiom ExportProof.X) false) (Lambda gen_var_372 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_374 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_376 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_377 bool bool) (CaseMatch (App gen_var_372 gen_var_376)) (CaseBranches true (App gen_var_362 gen_var_374 gen_var_376))))))))))) 0) gen_var_368 gen_var_376))))) (App eq_refl bool false)))) REVERTcast (App eq bool (App ExportProof.binary_union (App ExportProof.binary_intersection gen_var_122 gen_var_150) (App ExportProof.binary_intersection gen_var_122 (App ExportProof.list_union gen_var_368)) gen_var_376) (App ExportProof.binary_intersection gen_var_122 (App ExportProof.binary_union gen_var_150 (App ExportProof.list_union gen_var_368)) gen_var_376)))) REVERTcast (App ExportProof.set_eq (App ExportProof.binary_union (App ExportProof.binary_intersection gen_var_122 gen_var_150) (App ExportProof.binary_intersection gen_var_122 (App ExportProof.list_union gen_var_368))) (App ExportProof.binary_intersection gen_var_122 (App ExportProof.binary_union gen_var_150 (App ExportProof.list_union gen_var_368)))))) REVERTcast (App ExportProof.set_eq (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_378 (Axiom ExportProof.X) bool) (Lambda gen_var_379 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_379)) (App cons ExportProof.set gen_var_150 gen_var_368))) (App ExportProof.binary_intersection gen_var_122 (App ExportProof.list_union (App cons ExportProof.set gen_var_150 gen_var_368)))))))) gen_var_368) REVERTcast (App ExportProof.set_eq (App ExportProof.list_union gen_var_108) (App ExportProof.binary_intersection gen_var_122 (App ExportProof.list_union gen_var_368))))) (App eq Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_108)) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_122 (App ExportProof.list_union gen_var_368)))) (App Coq.Init.Logic.eq_ind Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_108)) (Lambda gen_var_380 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_122) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_368))))) gen_var_380) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_368)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_381 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_381)) (App ExportProof.sublists ExportProof.set gen_var_381)))))))) (App Coq.Init.Logic.eq_ind_r Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_108)))) (Lambda gen_var_382 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_122) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_381))))) gen_var_382) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_381)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_383 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_383)) (App ExportProof.sublists ExportProof.set gen_var_383)))))))) (LetIn gen_var_1859 (Cast (App Coq.Init.Logic.eq_ind_r (App list (App list ExportProof.set)) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_385 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_385)) (App ExportProof.sublists ExportProof.set gen_var_385)) (Lambda gen_var_386 (App list (App list ExportProof.set)) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_122) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_387 (Axiom ExportProof.X) bool) (Lambda gen_var_388 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_388)) gen_var_386)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 gen_var_386)))) (App Coq.Init.Logic.eq_ind_r (App list (App list ExportProof.set)) (App cons (App list ExportProof.set) (App nil ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_386))) (Lambda gen_var_392 (App list (App list ExportProof.set)) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_122) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_390 (Axiom ExportProof.X) bool) (Lambda gen_var_391 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_391)) gen_var_389)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_392 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_392)) gen_var_392))))) (Cast (Cast (Cast (LetIn gen_var_797 (App cons Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_122) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_394 (Axiom ExportProof.X) bool) (Lambda gen_var_395 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_395)) gen_var_392)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_122) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_396 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_396)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_396)))))) (App nil Z))) (App list Z) (App (Cast (Cast (Lambda gen_var_799 (App eq (App list Z) gen_var_393 (App cons Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_122) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_398 (Axiom ExportProof.X) bool) (Lambda gen_var_399 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_399)) gen_var_396)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_122) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_400 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_400)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_400)))))) (App nil Z)))) (LetIn gen_var_801 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_802 (App nil (App prod (App prod Z Mon) (App Pol Z))) (App list (App prod (App prod Z Mon) (App Pol Z))) (LetIn gen_var_803 (Cast (App eq_refl (App list (App prod (App prod Z Mon) (App Pol Z))) gen_var_402) VMcast (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_401) gen_var_402)) (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_401) gen_var_402) (LetIn gen_var_804 (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma2 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_401 (App cons Z (App ExportProof.cardinal gen_var_122) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_405 (Axiom ExportProof.X) bool) (Lambda gen_var_406 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_406)) gen_var_400))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_407 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_407)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_407))))) (App nil Z)))) I gen_var_402 gen_var_403) (Prod gen_var_408 (App PExpr Z) (Prod gen_var_409 (App Pol Z) (Prod Anonymous (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_402 gen_var_408) gen_var_409) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal gen_var_122) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_411 (Axiom ExportProof.X) bool) (Lambda gen_var_412 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_412)) gen_var_407))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_413 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_413)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_413))))) (App nil Z)))) gen_var_408) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal gen_var_122) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_414 (Axiom ExportProof.X) bool) (Lambda gen_var_415 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_415)) gen_var_413))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_416 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_416)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_416))))) (App nil Z)))) gen_var_409))))) (LetIn gen_var_811 (App PX Z (App Pc Z (App Zpos xH)) xH (App PX Z (App Pc Z (App Zneg xH)) xH (App Pc Z Z0))) (App Pol Z) (LetIn gen_var_812 (Cast (App eq_refl (App Pol Z) gen_var_417) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_402 (App PEsub Z (App PEX Z xH) (App PEX Z (App xO xH)))) gen_var_417)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_402 (App PEsub Z (App PEX Z xH) (App PEX Z (App xO xH)))) gen_var_417) (LetIn gen_var_813 (App gen_var_404 (App PEsub Z (App PEX Z xH) (App PEX Z (App xO xH))) gen_var_417 gen_var_418) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal gen_var_122) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_420 (Axiom ExportProof.X) bool) (Lambda gen_var_421 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_421)) gen_var_416))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_422 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_422)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_422))))) (App nil Z)))) (App PEsub Z (App PEX Z xH) (App PEX Z (App xO xH)))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal gen_var_122) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_423 (Axiom ExportProof.X) bool) (Lambda gen_var_424 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_424)) gen_var_422))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_425 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_425)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_425))))) (App nil Z)))) gen_var_417)) (LetIn gen_var_818 (App PX Z (App Pc Z (App Zpos xH)) xH (App Pinj Z xH (App PX Z (App Pc Z (App Zpos xH)) xH (App Pc Z Z0)))) (App Pol Z) (LetIn gen_var_819 (Cast (App eq_refl (App Pol Z) gen_var_426) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_402 (App PEadd Z (App PEmul Z (App PEX Z xH) (App PEc Z (App Zpos xH))) (App PEX Z (App xI xH)))) gen_var_426)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_402 (App PEadd Z (App PEmul Z (App PEX Z xH) (App PEc Z (App Zpos xH))) (App PEX Z (App xI xH)))) gen_var_426) (LetIn gen_var_820 (App gen_var_404 (App PEadd Z (App PEmul Z (App PEX Z xH) (App PEc Z (App Zpos xH))) (App PEX Z (App xI xH))) gen_var_426 gen_var_427) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal gen_var_122) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_429 (Axiom ExportProof.X) bool) (Lambda gen_var_430 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_430)) gen_var_425))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_431 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_431)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_431))))) (App nil Z)))) (App PEadd Z (App PEmul Z (App PEX Z xH) (App PEc Z (App Zpos xH))) (App PEX Z (App xI xH)))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal gen_var_122) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_432 (Axiom ExportProof.X) bool) (Lambda gen_var_433 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_433)) gen_var_431))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_434 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_434)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_434))))) (App nil Z)))) gen_var_426)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_122) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_435 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_435)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_435)))))) (Lambda gen_var_436 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_122) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_437 (Axiom ExportProof.X) bool) (Lambda gen_var_438 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_438)) gen_var_435)))))) gen_var_436)) (Cast (LetIn gen_var_1734 (App Coq.Init.Logic.eq_ind_r (App list (App list ExportProof.set)) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_440 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_440))) (App ExportProof.sublists ExportProof.set gen_var_435)) (Lambda gen_var_442 (App list (App list ExportProof.set)) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_441)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_442 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_442)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_442))))))) (App (Lambda gen_var_1658 (App list (App list ExportProof.set)) (LetIn gen_var_1623 (App Coq.Init.Datatypes.list_ind (App list ExportProof.set) (Lambda gen_var_445 (App list (App list ExportProof.set)) (App eq (App list (App list (Prod gen_var_446 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_447 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_448 (Axiom ExportProof.X) bool) (Lambda gen_var_449 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_449))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_445)) (App Coq.Lists.List.filter (App list (Prod gen_var_450 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_451 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_452 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_453 (Axiom ExportProof.X) bool) (Lambda gen_var_454 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_454))) gen_var_445)))) (App eq_refl (App list (App list (Prod gen_var_455 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.filter (App list (Prod gen_var_456 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_457 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_458 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_459 (Axiom ExportProof.X) bool) (Lambda gen_var_460 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_460))) (App nil (App list ExportProof.set))))) (Lambda gen_var_711 (App list ExportProof.set) (Lambda gen_var_627 (App list (App list ExportProof.set)) (Lambda gen_var_463 (App eq (App list (App list (Prod gen_var_464 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_465 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_466 (Axiom ExportProof.X) bool) (Lambda gen_var_467 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_467))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_462)) (App Coq.Lists.List.filter (App list (Prod gen_var_468 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_469 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_470 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_471 (Axiom ExportProof.X) bool) (Lambda gen_var_472 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_472))) gen_var_462))) (Cast (Case 1 (Lambda gen_var_473 (App list ExportProof.set) (App eq (App list (App list (Prod gen_var_474 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_475 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_476 (Axiom ExportProof.X) bool) (Lambda gen_var_477 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_477))) (Case 0 (Lambda gen_var_478 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set gen_var_473)) (CaseBranches (App cons (App list ExportProof.set) gen_var_473 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_473)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_473)))) (Case 0 (Lambda gen_var_479 bool (App list (App list (Prod gen_var_480 (Axiom ExportProof.X) bool)))) (CaseMatch (App ExportProof.nonempty (Prod gen_var_481 (Axiom ExportProof.X) bool) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_482 (Axiom ExportProof.X) bool) (Lambda gen_var_483 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_483)) gen_var_473))) (CaseBranches (App cons (App list (Prod gen_var_484 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_485 (Axiom ExportProof.X) bool) (Lambda gen_var_486 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_486)) gen_var_473) (App Coq.Lists.List.filter (App list (Prod gen_var_487 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_488 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_489 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_490 (Axiom ExportProof.X) bool) (Lambda gen_var_491 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_491))) gen_var_473))) (App Coq.Lists.List.filter (App list (Prod gen_var_492 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_493 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_494 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_495 (Axiom ExportProof.X) bool) (Lambda gen_var_496 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_496))) gen_var_473)))))) (CaseMatch gen_var_496) (CaseBranches (Cast gen_var_463 REVERTcast (App eq (App list (App list (Prod gen_var_497 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_498 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_499 (Axiom ExportProof.X) bool) (Lambda gen_var_500 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_500))) (Case 0 (Lambda gen_var_501 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App nil ExportProof.set))) (CaseBranches (App cons (App list ExportProof.set) (App nil ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_473)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_473)))) (Case 0 (Lambda gen_var_502 bool (App list (App list (Prod gen_var_503 (Axiom ExportProof.X) bool)))) (CaseMatch (App ExportProof.nonempty (Prod gen_var_504 (Axiom ExportProof.X) bool) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_505 (Axiom ExportProof.X) bool) (Lambda gen_var_506 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_506)) (App nil ExportProof.set)))) (CaseBranches (App cons (App list (Prod gen_var_507 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_508 (Axiom ExportProof.X) bool) (Lambda gen_var_509 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_509)) (App nil ExportProof.set)) (App Coq.Lists.List.filter (App list (Prod gen_var_510 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_511 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_512 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_513 (Axiom ExportProof.X) bool) (Lambda gen_var_514 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_514))) gen_var_473))) (App Coq.Lists.List.filter (App list (Prod gen_var_515 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_516 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_517 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_518 (Axiom ExportProof.X) bool) (Lambda gen_var_519 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_519))) gen_var_473)))))) (Lambda gen_var_520 ExportProof.set (Lambda gen_var_702 (App list ExportProof.set) (Cast (App Coq.Init.Logic.eq_trans (App list (App list (App (Lambda gen_var_523 (Sort Set) (Lambda gen_var_523 (Sort Set) (Prod Anonymous gen_var_523 gen_var_523))) (Axiom ExportProof.X) bool))) (App cons (App list (App (Lambda gen_var_526 (Sort Set) (Lambda gen_var_526 (Sort Set) (Prod Anonymous gen_var_526 gen_var_526))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_529 (Sort Set) (Lambda gen_var_529 (Sort Set) (Prod Anonymous gen_var_529 gen_var_529))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_122 gen_var_520) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_532 (Sort Set) (Lambda gen_var_532 (Sort Set) (Prod Anonymous gen_var_532 gen_var_532))) (Axiom ExportProof.X) bool) (Lambda gen_var_534 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_534)) gen_var_534)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_536 (Sort Set) (Lambda gen_var_536 (Sort Set) (Prod Anonymous gen_var_536 gen_var_536))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_539 (Sort Set) (Lambda gen_var_539 (Sort Set) (Prod Anonymous gen_var_539 gen_var_539))) (Axiom ExportProof.X) bool) (Lambda gen_var_541 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_541))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_473))) (App cons (App list (App (Lambda gen_var_543 (Sort Set) (Lambda gen_var_543 (Sort Set) (Prod Anonymous gen_var_543 gen_var_543))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_546 (Sort Set) (Lambda gen_var_546 (Sort Set) (Prod Anonymous gen_var_546 gen_var_546))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_122 gen_var_520) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_549 (Sort Set) (Lambda gen_var_549 (Sort Set) (Prod Anonymous gen_var_549 gen_var_549))) (Axiom ExportProof.X) bool) (Lambda gen_var_551 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_551)) gen_var_551)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_553 (Sort Set) (Lambda gen_var_553 (Sort Set) (Prod Anonymous gen_var_553 gen_var_553))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_556 (Sort Set) (Lambda gen_var_556 (Sort Set) (Prod Anonymous gen_var_556 gen_var_556))) (Axiom ExportProof.X) bool) (Lambda gen_var_558 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_558))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_473))) (App cons (App list (App (Lambda gen_var_560 (Sort Set) (Lambda gen_var_560 (Sort Set) (Prod Anonymous gen_var_560 gen_var_560))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_563 (Sort Set) (Lambda gen_var_563 (Sort Set) (Prod Anonymous gen_var_563 gen_var_563))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_122 gen_var_520) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_566 (Sort Set) (Lambda gen_var_566 (Sort Set) (Prod Anonymous gen_var_566 gen_var_566))) (Axiom ExportProof.X) bool) (Lambda gen_var_568 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_568)) gen_var_568)) (App Coq.Lists.List.filter (App list (App (Lambda gen_var_570 (Sort Set) (Lambda gen_var_570 (Sort Set) (Prod Anonymous gen_var_570 gen_var_570))) (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (App (Lambda gen_var_573 (Sort Set) (Lambda gen_var_573 (Sort Set) (Prod Anonymous gen_var_573 gen_var_573))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_576 (Sort Set) (Lambda gen_var_576 (Sort Set) (Prod Anonymous gen_var_576 gen_var_576))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_579 (Sort Set) (Lambda gen_var_579 (Sort Set) (Prod Anonymous gen_var_579 gen_var_579))) (Axiom ExportProof.X) bool) (Lambda gen_var_581 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_581))) gen_var_473))) (App Coq.Init.Logic.f_equal (Prod gen_var_582 (App list (App list (App (Lambda gen_var_584 (Sort Set) (Lambda gen_var_584 (Sort Set) (Prod Anonymous gen_var_584 gen_var_584))) (Axiom ExportProof.X) bool))) (App list (App list (App (Lambda gen_var_587 (Sort Set) (Lambda gen_var_587 (Sort Set) (Prod Anonymous gen_var_587 gen_var_587))) (Axiom ExportProof.X) bool)))) (App list (App list (App (Lambda gen_var_590 (Sort Set) (Lambda gen_var_590 (Sort Set) (Prod Anonymous gen_var_590 gen_var_590))) (Axiom ExportProof.X) bool))) (Lambda gen_var_592 (Prod gen_var_593 (App list (App list (App (Lambda gen_var_595 (Sort Set) (Lambda gen_var_595 (Sort Set) (Prod Anonymous gen_var_595 gen_var_595))) (Axiom ExportProof.X) bool))) (App list (App list (App (Lambda gen_var_598 (Sort Set) (Lambda gen_var_598 (Sort Set) (Prod Anonymous gen_var_598 gen_var_598))) (Axiom ExportProof.X) bool)))) (App gen_var_592 (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_601 (Sort Set) (Lambda gen_var_601 (Sort Set) (Prod Anonymous gen_var_601 gen_var_601))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_604 (Sort Set) (Lambda gen_var_604 (Sort Set) (Prod Anonymous gen_var_604 gen_var_604))) (Axiom ExportProof.X) bool) (Lambda gen_var_606 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_606))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_593)))) (App cons (App list (App (Lambda gen_var_608 (Sort Set) (Lambda gen_var_608 (Sort Set) (Prod Anonymous gen_var_608 gen_var_608))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_611 (Sort Set) (Lambda gen_var_611 (Sort Set) (Prod Anonymous gen_var_611 gen_var_611))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_122 gen_var_520) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_614 (Sort Set) (Lambda gen_var_614 (Sort Set) (Prod Anonymous gen_var_614 gen_var_614))) (Axiom ExportProof.X) bool) (Lambda gen_var_616 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_616)) gen_var_616))) (App cons (App list (App (Lambda gen_var_618 (Sort Set) (Lambda gen_var_618 (Sort Set) (Prod Anonymous gen_var_618 gen_var_618))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_621 (Sort Set) (Lambda gen_var_621 (Sort Set) (Prod Anonymous gen_var_621 gen_var_621))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_122 gen_var_520) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_624 (Sort Set) (Lambda gen_var_624 (Sort Set) (Prod Anonymous gen_var_624 gen_var_624))) (Axiom ExportProof.X) bool) (Lambda gen_var_626 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_626)) gen_var_626))) (App eq_refl (Prod gen_var_627 (App list (App list (App (Lambda gen_var_629 (Sort Set) (Lambda gen_var_629 (Sort Set) (Prod Anonymous gen_var_629 gen_var_629))) (Axiom ExportProof.X) bool))) (App list (App list (App (Lambda gen_var_632 (Sort Set) (Lambda gen_var_632 (Sort Set) (Prod Anonymous gen_var_632 gen_var_632))) (Axiom ExportProof.X) bool)))) (App cons (App list (App (Lambda gen_var_635 (Sort Set) (Lambda gen_var_635 (Sort Set) (Prod Anonymous gen_var_635 gen_var_635))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_638 (Sort Set) (Lambda gen_var_638 (Sort Set) (Prod Anonymous gen_var_638 gen_var_638))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_122 gen_var_520) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_641 (Sort Set) (Lambda gen_var_641 (Sort Set) (Prod Anonymous gen_var_641 gen_var_641))) (Axiom ExportProof.X) bool) (Lambda gen_var_643 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_643)) gen_var_643))))) (App Coq.Init.Logic.f_equal (App list (App list (App (Lambda gen_var_645 (Sort Set) (Lambda gen_var_645 (Sort Set) (Prod Anonymous gen_var_645 gen_var_645))) (Axiom ExportProof.X) bool))) (App list (App list (App (Lambda gen_var_648 (Sort Set) (Lambda gen_var_648 (Sort Set) (Prod Anonymous gen_var_648 gen_var_648))) (Axiom ExportProof.X) bool))) (App cons (App list (App (Lambda gen_var_651 (Sort Set) (Lambda gen_var_651 (Sort Set) (Prod Anonymous gen_var_651 gen_var_651))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_654 (Sort Set) (Lambda gen_var_654 (Sort Set) (Prod Anonymous gen_var_654 gen_var_654))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_122 gen_var_520) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_657 (Sort Set) (Lambda gen_var_657 (Sort Set) (Prod Anonymous gen_var_657 gen_var_657))) (Axiom ExportProof.X) bool) (Lambda gen_var_659 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_659)) gen_var_659))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_661 (Sort Set) (Lambda gen_var_661 (Sort Set) (Prod Anonymous gen_var_661 gen_var_661))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_664 (Sort Set) (Lambda gen_var_664 (Sort Set) (Prod Anonymous gen_var_664 gen_var_664))) (Axiom ExportProof.X) bool) (Lambda gen_var_666 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_666))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_627)) (App Coq.Lists.List.filter (App list (App (Lambda gen_var_668 (Sort Set) (Lambda gen_var_668 (Sort Set) (Prod Anonymous gen_var_668 gen_var_668))) (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (App (Lambda gen_var_671 (Sort Set) (Lambda gen_var_671 (Sort Set) (Prod Anonymous gen_var_671 gen_var_671))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_674 (Sort Set) (Lambda gen_var_674 (Sort Set) (Prod Anonymous gen_var_674 gen_var_674))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_677 (Sort Set) (Lambda gen_var_677 (Sort Set) (Prod Anonymous gen_var_677 gen_var_677))) (Axiom ExportProof.X) bool) (Lambda gen_var_679 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_679))) gen_var_627)) gen_var_463)) REVERTcast (App eq (App list (App list (Prod gen_var_680 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_681 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_682 (Axiom ExportProof.X) bool) (Lambda gen_var_683 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_683))) (Case 0 (Lambda gen_var_684 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App cons ExportProof.set gen_var_520 gen_var_684))) (CaseBranches (App cons (App list ExportProof.set) (App cons ExportProof.set gen_var_520 gen_var_684) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_627)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_627)))) (Case 0 (Lambda gen_var_685 bool (App list (App list (Prod gen_var_686 (Axiom ExportProof.X) bool)))) (CaseMatch (App ExportProof.nonempty (Prod gen_var_687 (Axiom ExportProof.X) bool) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_688 (Axiom ExportProof.X) bool) (Lambda gen_var_689 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_689)) (App cons ExportProof.set gen_var_520 gen_var_689)))) (CaseBranches (App cons (App list (Prod gen_var_690 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_691 (Axiom ExportProof.X) bool) (Lambda gen_var_692 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_692)) (App cons ExportProof.set gen_var_520 gen_var_692)) (App Coq.Lists.List.filter (App list (Prod gen_var_693 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_694 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_695 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_696 (Axiom ExportProof.X) bool) (Lambda gen_var_697 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_697))) gen_var_627))) (App Coq.Lists.List.filter (App list (Prod gen_var_698 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_699 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_700 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_701 (Axiom ExportProof.X) bool) (Lambda gen_var_702 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_702))) gen_var_627)))))))))) REVERTcast (App eq (App list (App list (Prod gen_var_703 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_704 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_705 (Axiom ExportProof.X) bool) (Lambda gen_var_706 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_706))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App cons (App list ExportProof.set) gen_var_706 gen_var_627))) (App Coq.Lists.List.filter (App list (Prod gen_var_707 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_708 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_709 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_710 (Axiom ExportProof.X) bool) (Lambda gen_var_711 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_711))) (App cons (App list ExportProof.set) gen_var_711 gen_var_627)))))))) gen_var_627) (App eq (App list (App list (Prod gen_var_712 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_713 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_714 (Axiom ExportProof.X) bool) (Lambda gen_var_715 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_715))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_627)) (App Coq.Lists.List.filter (App list (Prod gen_var_716 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_717 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_718 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_719 (Axiom ExportProof.X) bool) (Lambda gen_var_720 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_720))) gen_var_627))) (App Coq.Init.Datatypes.list_ind (App list ExportProof.set) (Lambda gen_var_723 (App list (App list ExportProof.set)) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_722 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_722))) gen_var_721))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_723 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_723)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_723)))))) (App eq_refl Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_724 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_724)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App nil (App list ExportProof.set))))))) (Lambda gen_var_1657 (App list ExportProof.set) (Lambda gen_var_1658 (App list (App list ExportProof.set)) (Lambda gen_var_727 (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_728 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_728))) gen_var_726))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_729 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_729)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_729))))) (Cast (Case 1 (Lambda gen_var_736 (App list ExportProof.set) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (Case 0 (Lambda gen_var_731 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_732 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_732)) gen_var_730))) (CaseBranches (App cons (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_733 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_733)) gen_var_730) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_734 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_734))) gen_var_730))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_735 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_735))) gen_var_730))))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_736 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_736)) (Case 0 (Lambda gen_var_737 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set gen_var_736)) (CaseBranches (App cons (App list ExportProof.set) gen_var_736 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_736)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_736)))))))) (CaseMatch gen_var_737) (CaseBranches (Cast gen_var_727 REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (Case 0 (Lambda gen_var_738 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_739 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_739)) (App nil ExportProof.set)))) (CaseBranches (App cons (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_740 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_740)) (App nil ExportProof.set)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_741 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_741))) gen_var_736))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_742 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_742))) gen_var_736))))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_743 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_743)) (Case 0 (Lambda gen_var_744 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App nil ExportProof.set))) (CaseBranches (App cons (App list ExportProof.set) (App nil ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_743)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_743)))))))) (Lambda gen_var_1589 ExportProof.set (Lambda gen_var_959 (App list ExportProof.set) (Cast (App Coq.Init.Logic.eq_ind Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_747 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_747))) gen_var_743))))) (Lambda gen_var_748 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_138 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_749 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_749)) gen_var_746))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_750 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_750))) gen_var_743)))))) (App Coq.ZArith.BinIntDef.Z.add (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746))) gen_var_748))) (LetIn gen_var_797 (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_138 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_752 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_752)) gen_var_746))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_753 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_753))) gen_var_743)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_754 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_754))) gen_var_743)))))) (App nil Z))) (App list Z) (App (Cast (Cast (Lambda gen_var_799 (App eq (App list Z) gen_var_751 (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_138 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_756 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_756)) gen_var_746))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_757 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_757))) gen_var_743)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_758 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_758))) gen_var_743)))))) (App nil Z)))) (LetIn gen_var_801 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_802 (App nil (App prod (App prod Z Mon) (App Pol Z))) (App list (App prod (App prod Z Mon) (App Pol Z))) (LetIn gen_var_803 (Cast (App eq_refl (App list (App prod (App prod Z Mon) (App Pol Z))) gen_var_760) VMcast (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_759) gen_var_760)) (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_759) gen_var_760) (LetIn gen_var_804 (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma2 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_759 (App cons Z (App gen_var_138 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_763 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_763)) gen_var_746))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_764 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_764))) gen_var_743)))) (App cons Z (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746))) (App nil Z)))) I gen_var_760 gen_var_761) (Prod gen_var_765 (App PExpr Z) (Prod gen_var_766 (App Pol Z) (Prod Anonymous (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_760 gen_var_765) gen_var_766) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App gen_var_138 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_768 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_768)) gen_var_746))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_769 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_769))) gen_var_743)))) (App cons Z (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746))) (App nil Z)))) gen_var_765) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App gen_var_138 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_770 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_770)) gen_var_746))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_771 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_771))) gen_var_743)))) (App cons Z (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746))) (App nil Z)))) gen_var_766))))) (LetIn gen_var_811 (App PX Z (App Pc Z (App Zneg xH)) xH (App PX Z (App Pc Z (App Zneg xH)) xH (App Pc Z Z0))) (App Pol Z) (LetIn gen_var_812 (Cast (App eq_refl (App Pol Z) gen_var_772) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_760 (App PEopp Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH))))) gen_var_772)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_760 (App PEopp Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH))))) gen_var_772) (LetIn gen_var_813 (App gen_var_762 (App PEopp Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH)))) gen_var_772 gen_var_773) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App gen_var_138 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_775 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_775)) gen_var_746))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_776 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_776))) gen_var_743)))) (App cons Z (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746))) (App nil Z)))) (App PEopp Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH))))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App gen_var_138 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_777 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_777)) gen_var_746))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_778 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_778))) gen_var_743)))) (App cons Z (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746))) (App nil Z)))) gen_var_772)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_138 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_779 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_779)) gen_var_746)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_780 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_780))) gen_var_743))))) (Lambda gen_var_781 Z (App eq Z gen_var_781 (App Coq.ZArith.BinIntDef.Z.add (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_782 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_782))) gen_var_743)))))))) (LetIn gen_var_818 (App Pinj Z xH (App PX Z (App Pc Z (App Zneg xH)) xH (App PX Z (App Pc Z (App Zpos xH)) xH (App Pc Z Z0)))) (App Pol Z) (LetIn gen_var_819 (Cast (App eq_refl (App Pol Z) gen_var_783) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_760 (App PEadd Z (App PEX Z (App xI xH)) (App PEopp Z (App PEX Z (App xO xH))))) gen_var_783)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_760 (App PEadd Z (App PEX Z (App xI xH)) (App PEopp Z (App PEX Z (App xO xH))))) gen_var_783) (LetIn gen_var_820 (App gen_var_762 (App PEadd Z (App PEX Z (App xI xH)) (App PEopp Z (App PEX Z (App xO xH)))) gen_var_783 gen_var_784) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App gen_var_138 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_786 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_786)) gen_var_746))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_787 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_787))) gen_var_743)))) (App cons Z (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746))) (App nil Z)))) (App PEadd Z (App PEX Z (App xI xH)) (App PEopp Z (App PEX Z (App xO xH))))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App gen_var_138 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_788 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_788)) gen_var_746))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_789 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_789))) gen_var_743)))) (App cons Z (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746))) (App nil Z)))) gen_var_783)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_790 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_790))) gen_var_743))))) (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746)))) (Lambda gen_var_791 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_138 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_792 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_792)) gen_var_746)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_793 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_793))) gen_var_743))))) gen_var_791)) (LetIn gen_var_1623 (Cast (Cast (App Coq.Init.Logic.eq_ind_r nat (App Coq.Init.Datatypes.length ExportProof.set gen_var_746) (Lambda gen_var_795 nat (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_796 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_796)) gen_var_746)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign gen_var_795)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_746))))))))) (LetIn gen_var_797 (App cons Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_798 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_798)) gen_var_746)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_746))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_746))))))) (App nil Z))) (App list Z) (App (Cast (Cast (Lambda gen_var_799 (App eq (App list Z) gen_var_797 (App cons Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_800 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_800)) gen_var_746)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_746))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_746))))))) (App nil Z)))) (LetIn gen_var_801 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_802 (App nil (App prod (App prod Z Mon) (App Pol Z))) (App list (App prod (App prod Z Mon) (App Pol Z))) (LetIn gen_var_803 (Cast (App eq_refl (App list (App prod (App prod Z Mon) (App Pol Z))) gen_var_802) VMcast (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_801) gen_var_802)) (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_801) gen_var_802) (LetIn gen_var_804 (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma2 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_801 (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_805 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_805)) gen_var_746)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_746)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746)))) (App nil Z)))) I gen_var_802 gen_var_803) (Prod gen_var_806 (App PExpr Z) (Prod gen_var_807 (App Pol Z) (Prod Anonymous (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_802 gen_var_806) gen_var_807) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_809 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_809)) gen_var_746)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_746)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746)))) (App nil Z)))) gen_var_806) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_810 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_810)) gen_var_746)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_746)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746)))) (App nil Z)))) gen_var_807))))) (LetIn gen_var_811 (App PX Z (App Pinj Z xH (App PX Z (App Pc Z (App Zpos xH)) xH (App Pc Z Z0))) xH (App Pc Z Z0)) (App Pol Z) (LetIn gen_var_812 (Cast (App eq_refl (App Pol Z) gen_var_811) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_802 (App PEmul Z (App PEX Z xH) (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))) gen_var_811)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_802 (App PEmul Z (App PEX Z xH) (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))) gen_var_811) (LetIn gen_var_813 (App gen_var_804 (App PEmul Z (App PEX Z xH) (App PEopp Z (App PEopp Z (App PEX Z (App xO xH))))) gen_var_811 gen_var_812) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_814 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_814)) gen_var_746)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_746)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746)))) (App nil Z)))) (App PEmul Z (App PEX Z xH) (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_815 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_815)) gen_var_746)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_746)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746)))) (App nil Z)))) gen_var_811)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_816 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_816)) gen_var_746)))) (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_746))) (Lambda gen_var_817 Z (App eq Z gen_var_817 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_746))))))))) (LetIn gen_var_818 (App Pinj Z xH (App PX Z (App Pinj Z xH (App PX Z (App Pc Z (App Zpos xH)) xH (App Pc Z Z0))) xH (App Pc Z Z0))) (App Pol Z) (LetIn gen_var_819 (Cast (App eq_refl (App Pol Z) gen_var_818) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_802 (App PEopp Z (App PEmul Z (App PEX Z (App xI xH)) (App PEopp Z (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))))) gen_var_818)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_802 (App PEopp Z (App PEmul Z (App PEX Z (App xI xH)) (App PEopp Z (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))))) gen_var_818) (LetIn gen_var_820 (App gen_var_804 (App PEopp Z (App PEmul Z (App PEX Z (App xI xH)) (App PEopp Z (App PEopp Z (App PEopp Z (App PEX Z (App xO xH))))))) gen_var_818 gen_var_819) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_821 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_821)) gen_var_746)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_746)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746)))) (App nil Z)))) (App PEopp Z (App PEmul Z (App PEX Z (App xI xH)) (App PEopp Z (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_822 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_822)) gen_var_746)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_746)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746)))) (App nil Z)))) gen_var_818)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_746)) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_745 gen_var_746))))) (Lambda gen_var_823 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_824 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_824)) gen_var_746)))) (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_746))) gen_var_823)) (LetIn gen_var_1604 (Cast (App ExportProof.cardinal_set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_826 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_826)) gen_var_746)) (App ExportProof.binary_intersection gen_var_745 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_746)) (App Coq.Init.Datatypes.list_ind ExportProof.set (Lambda gen_var_827 (App list ExportProof.set) (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_828 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_828)) gen_var_827)) (App ExportProof.binary_intersection gen_var_745 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_827)))) (Cast (Cast (Lambda gen_var_829 (Axiom ExportProof.X) (Cast (LetIn gen_var_837 (App gen_var_122 gen_var_829) bool (Case 0 (Lambda gen_var_831 bool (App eq bool (Case 0 (Lambda gen_var_832 bool bool) (CaseMatch gen_var_831) (CaseBranches (App gen_var_745 gen_var_829) false)) (Case 0 (Lambda gen_var_833 bool bool) (CaseMatch (App gen_var_745 gen_var_829)) (CaseBranches gen_var_831 false)))) (CaseMatch gen_var_830) (CaseBranches (LetIn gen_var_834 (App gen_var_745 gen_var_829) bool (Case 0 (Lambda gen_var_835 bool (App eq bool gen_var_835 (Case 0 (Lambda gen_var_836 bool bool) (CaseMatch gen_var_835) (CaseBranches true false)))) (CaseMatch gen_var_834) (CaseBranches (App eq_refl bool true) (App eq_refl bool false)))) (LetIn gen_var_837 (App gen_var_745 gen_var_829) bool (Case 0 (Lambda gen_var_838 bool (App eq bool false (Case 0 (Lambda gen_var_839 bool bool) (CaseMatch gen_var_838) (CaseBranches false false)))) (CaseMatch gen_var_837) (CaseBranches (App eq_refl bool false) (App eq_refl bool false))))))) REVERTcast (App eq bool (App ExportProof.binary_intersection gen_var_122 gen_var_745 gen_var_829) (App ExportProof.binary_intersection gen_var_745 gen_var_122 gen_var_829)))) REVERTcast (App ExportProof.set_eq (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App ExportProof.binary_intersection gen_var_745 gen_var_122))) REVERTcast (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_840 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_840)) (App nil ExportProof.set))) (App ExportProof.binary_intersection gen_var_745 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 (App nil ExportProof.set))))) (Lambda gen_var_841 ExportProof.set (Lambda gen_var_959 (App list ExportProof.set) (Lambda gen_var_960 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_844 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_844)) gen_var_842)) (App ExportProof.binary_intersection gen_var_745 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_842))) (Cast (App (Lambda gen_var_845 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_122 gen_var_745) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_846 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_846)) gen_var_842)) (App ExportProof.binary_intersection gen_var_745 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_842))) (App Coq.Classes.Morphisms.subrelation_proper (Prod gen_var_847 ExportProof.set (Prod gen_var_848 ExportProof.set (Sort Prop))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set (Sort Prop)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff)) ExportProof.set_eq (App Coq.Classes.Morphisms.PER_morphism ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PER ExportProof.set ExportProof.set_eq ExportProof.Set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_850 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_851 (Axiom ExportProof.X) bool) (Prod gen_var_852 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_853 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_854 (Axiom ExportProof.X) bool) (Prod gen_var_855 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_856 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Sort Prop) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_122 gen_var_841) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_122 gen_var_856) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_857 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_857)) gen_var_842))) (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_122 gen_var_841) (App ExportProof.binary_intersection gen_var_856 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_842))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_858 ExportProof.set (Prod gen_var_859 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_860 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_861 (Axiom ExportProof.X) bool) (Prod gen_var_862 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_864 ExportProof.set (Prod gen_var_865 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_866 ExportProof.set (Prod gen_var_867 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_868 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_869 (Axiom ExportProof.X) bool) (Prod gen_var_870 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_872 ExportProof.set (Prod gen_var_873 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_875 ExportProof.set (Prod gen_var_876 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_877 ExportProof.set (Prod gen_var_878 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_879 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_880 (Axiom ExportProof.X) bool) (Prod gen_var_881 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_882 (Axiom ExportProof.X) bool) (Prod gen_var_883 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_884 ExportProof.set (Prod gen_var_885 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_886 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_887 (Axiom ExportProof.X) bool) (Prod gen_var_888 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_889 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_890 (Axiom ExportProof.X) bool) (Prod gen_var_891 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_892 (Axiom ExportProof.X) bool) (Prod gen_var_893 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_894 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_895 (Axiom ExportProof.X) bool) (Prod gen_var_896 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_897 (Axiom ExportProof.X) bool) (Prod gen_var_898 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_899 (Axiom ExportProof.X) bool) (Prod gen_var_900 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_901 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_902 (Axiom ExportProof.X) bool) (Prod gen_var_903 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_905 ExportProof.set (Prod gen_var_906 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_907 ExportProof.set (Prod gen_var_908 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_909 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_910 (Axiom ExportProof.X) bool) (Prod gen_var_911 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_912 (Axiom ExportProof.X) bool) (Prod gen_var_913 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_915 ExportProof.set (Prod gen_var_916 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_930 ExportProof.set (Prod gen_var_931 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_932 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_933 (Axiom ExportProof.X) bool) (Prod gen_var_934 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_935 (Axiom ExportProof.X) bool) (Prod gen_var_936 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_937 ExportProof.set (Prod gen_var_938 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_939 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_940 (Axiom ExportProof.X) bool) (Prod gen_var_941 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_942 (Axiom ExportProof.X) bool) (Prod gen_var_943 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_944 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_945 (Axiom ExportProof.X) bool) (Prod gen_var_946 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_947 (Axiom ExportProof.X) bool) (Prod gen_var_948 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_949 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_950 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) (App ExportProof.binary_intersection gen_var_122 gen_var_841) (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) (App ExportProof.binary_intersection gen_var_122 gen_var_841)) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_122 gen_var_950) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_951 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_951)) gen_var_842)) (App ExportProof.binary_intersection gen_var_950 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_842)) gen_var_845) (App ExportProof.binary_intersection gen_var_950 (App ExportProof.binary_intersection gen_var_841 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_842))) (App ExportProof.binary_intersection gen_var_950 (App ExportProof.binary_intersection gen_var_841 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_842))) (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Reflexive (App ExportProof.binary_intersection gen_var_950 (App ExportProof.binary_intersection gen_var_841 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_842)))))) gen_var_843 (LetIn gen_var_1249 (App Coq.Init.Datatypes.list_ind ExportProof.set (Lambda gen_var_953 (App list ExportProof.set) (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_953) (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_953)))) (Cast (Cast (Lambda gen_var_954 (Axiom ExportProof.X) (Cast (LetIn gen_var_955 (App gen_var_122 gen_var_954) bool (Case 0 (Lambda gen_var_956 bool (App eq bool gen_var_956 (Case 0 (Lambda gen_var_957 bool bool) (CaseMatch gen_var_956) (CaseBranches gen_var_956 false)))) (CaseMatch gen_var_955) (CaseBranches (App eq_refl bool true) (App eq_refl bool false)))) REVERTcast (App eq bool (App gen_var_122 gen_var_954) (App ExportProof.binary_intersection gen_var_122 gen_var_122 gen_var_954)))) REVERTcast (App ExportProof.set_eq gen_var_122 (App ExportProof.binary_intersection gen_var_122 gen_var_122))) REVERTcast (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 (App nil ExportProof.set)) (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 (App nil ExportProof.set))))) (Lambda gen_var_958 ExportProof.set (Lambda gen_var_959 (App list ExportProof.set) (Lambda gen_var_960 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959) (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959))) (Cast (App (Lambda gen_var_961 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959) (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959))) (App Coq.Classes.Morphisms.subrelation_proper (Prod gen_var_962 ExportProof.set (Prod gen_var_963 ExportProof.set (Sort Prop))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set (Sort Prop)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff)) ExportProof.set_eq (App Coq.Classes.Morphisms.PER_morphism ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PER ExportProof.set ExportProof.set_eq ExportProof.Set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_965 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_966 (Axiom ExportProof.X) bool) (Prod gen_var_967 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_968 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_969 (Axiom ExportProof.X) bool) (Prod gen_var_970 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_971 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Sort Prop) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App ExportProof.binary_intersection gen_var_958 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959)) (App ExportProof.binary_intersection gen_var_958 (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_972 ExportProof.set (Prod gen_var_973 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_974 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_975 (Axiom ExportProof.X) bool) (Prod gen_var_976 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_978 ExportProof.set (Prod gen_var_979 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_980 ExportProof.set (Prod gen_var_981 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_982 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_983 (Axiom ExportProof.X) bool) (Prod gen_var_984 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_986 ExportProof.set (Prod gen_var_987 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_989 ExportProof.set (Prod gen_var_990 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_991 ExportProof.set (Prod gen_var_992 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_993 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_994 (Axiom ExportProof.X) bool) (Prod gen_var_995 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_996 (Axiom ExportProof.X) bool) (Prod gen_var_997 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_998 ExportProof.set (Prod gen_var_999 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1000 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1001 (Axiom ExportProof.X) bool) (Prod gen_var_1002 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1003 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1004 (Axiom ExportProof.X) bool) (Prod gen_var_1005 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1006 (Axiom ExportProof.X) bool) (Prod gen_var_1007 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1008 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1009 (Axiom ExportProof.X) bool) (Prod gen_var_1010 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1011 (Axiom ExportProof.X) bool) (Prod gen_var_1012 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1013 (Axiom ExportProof.X) bool) (Prod gen_var_1014 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_1015 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1016 (Axiom ExportProof.X) bool) (Prod gen_var_1017 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_1019 ExportProof.set (Prod gen_var_1020 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1021 ExportProof.set (Prod gen_var_1022 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1023 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1024 (Axiom ExportProof.X) bool) (Prod gen_var_1025 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1026 (Axiom ExportProof.X) bool) (Prod gen_var_1027 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1029 ExportProof.set (Prod gen_var_1030 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1032 ExportProof.set (Prod gen_var_1033 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1034 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1035 (Axiom ExportProof.X) bool) (Prod gen_var_1036 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1037 (Axiom ExportProof.X) bool) (Prod gen_var_1038 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1039 ExportProof.set (Prod gen_var_1040 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1041 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1042 (Axiom ExportProof.X) bool) (Prod gen_var_1043 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1044 (Axiom ExportProof.X) bool) (Prod gen_var_1045 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1046 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1047 (Axiom ExportProof.X) bool) (Prod gen_var_1048 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1049 (Axiom ExportProof.X) bool) (Prod gen_var_1050 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_1051 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1052 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) gen_var_958 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) gen_var_958) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959) (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959)) gen_var_961) (App ExportProof.binary_intersection gen_var_122 (App ExportProof.binary_intersection gen_var_958 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959))) (App ExportProof.binary_intersection gen_var_122 (App ExportProof.binary_intersection gen_var_958 (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959)))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1053 ExportProof.set (Prod gen_var_1054 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1055 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1056 (Axiom ExportProof.X) bool) (Prod gen_var_1057 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1059 ExportProof.set (Prod gen_var_1060 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1062 ExportProof.set (Prod gen_var_1063 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1064 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1065 (Axiom ExportProof.X) bool) (Prod gen_var_1066 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq)) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1067 ExportProof.set (Prod gen_var_1068 (Axiom ExportProof.X) bool)) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1069 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1070 (Axiom ExportProof.X) bool) (Prod gen_var_1071 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1072 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1073 (Axiom ExportProof.X) bool) (Prod gen_var_1074 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_1075 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1076 (Axiom ExportProof.X) bool) ExportProof.set_eq)))) gen_var_122 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Reflexive gen_var_122) (App ExportProof.binary_intersection gen_var_958 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959)) (App ExportProof.binary_intersection gen_var_958 (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1077 ExportProof.set (Prod gen_var_1078 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1079 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1080 (Axiom ExportProof.X) bool) (Prod gen_var_1081 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_1083 ExportProof.set (Prod gen_var_1084 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1085 ExportProof.set (Prod gen_var_1086 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1087 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1088 (Axiom ExportProof.X) bool) (Prod gen_var_1089 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_1091 ExportProof.set (Prod gen_var_1092 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_1094 ExportProof.set (Prod gen_var_1095 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1096 ExportProof.set (Prod gen_var_1097 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1098 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1099 (Axiom ExportProof.X) bool) (Prod gen_var_1100 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1101 (Axiom ExportProof.X) bool) (Prod gen_var_1102 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1103 ExportProof.set (Prod gen_var_1104 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1105 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1106 (Axiom ExportProof.X) bool) (Prod gen_var_1107 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1108 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1109 (Axiom ExportProof.X) bool) (Prod gen_var_1110 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1111 (Axiom ExportProof.X) bool) (Prod gen_var_1112 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1113 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1114 (Axiom ExportProof.X) bool) (Prod gen_var_1115 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1116 (Axiom ExportProof.X) bool) (Prod gen_var_1117 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1118 (Axiom ExportProof.X) bool) (Prod gen_var_1119 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_1120 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1121 (Axiom ExportProof.X) bool) (Prod gen_var_1122 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_1124 ExportProof.set (Prod gen_var_1125 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1126 ExportProof.set (Prod gen_var_1127 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1128 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1129 (Axiom ExportProof.X) bool) (Prod gen_var_1130 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1131 (Axiom ExportProof.X) bool) (Prod gen_var_1132 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1134 ExportProof.set (Prod gen_var_1135 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1137 ExportProof.set (Prod gen_var_1138 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1139 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1140 (Axiom ExportProof.X) bool) (Prod gen_var_1141 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1142 (Axiom ExportProof.X) bool) (Prod gen_var_1143 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1144 ExportProof.set (Prod gen_var_1145 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1146 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1147 (Axiom ExportProof.X) bool) (Prod gen_var_1148 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1149 (Axiom ExportProof.X) bool) (Prod gen_var_1150 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1151 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1152 (Axiom ExportProof.X) bool) (Prod gen_var_1153 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1154 (Axiom ExportProof.X) bool) (Prod gen_var_1155 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_1156 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1157 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) gen_var_958 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) gen_var_958) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959) (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959)) gen_var_961)))) gen_var_960 (Cast (Lambda gen_var_1244 (Axiom ExportProof.X) (Cast (LetIn gen_var_1246 (App gen_var_958 gen_var_1158) bool (Case 0 (Lambda gen_var_1190 bool (App eq bool (Case 0 (Lambda gen_var_1161 bool bool) (CaseMatch gen_var_1160) (CaseBranches (Case 0 (Lambda gen_var_1162 bool bool) (CaseMatch (App gen_var_122 gen_var_1158)) (CaseBranches (App (Fix (Functions (App gen_var_1163 0 (Prod gen_var_1164 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1169 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1169 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1169) (CaseBranches gen_var_122 (Lambda gen_var_1172 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1174 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1176 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1177 bool bool) (CaseMatch (App gen_var_1172 gen_var_1176)) (CaseBranches (App gen_var_1163 gen_var_1174 gen_var_1176) false)))))))))) 0) gen_var_959 gen_var_1176) false)) false)) (Case 0 (Lambda gen_var_1178 bool bool) (CaseMatch (App gen_var_122 gen_var_1176)) (CaseBranches (Case 0 (Lambda gen_var_1179 bool bool) (CaseMatch gen_var_1172) (CaseBranches (Case 0 (Lambda gen_var_1180 bool bool) (CaseMatch (App gen_var_122 gen_var_1176)) (CaseBranches (App (Fix (Functions (App gen_var_1181 0 (Prod gen_var_1182 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1187 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1187 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1187) (CaseBranches gen_var_122 (Lambda gen_var_1190 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1192 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1194 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1195 bool bool) (CaseMatch (App gen_var_1190 gen_var_1194)) (CaseBranches (App gen_var_1181 gen_var_1192 gen_var_1194) false)))))))))) 0) gen_var_959 gen_var_1194) false)) false)) false)))) (CaseMatch gen_var_1159) (CaseBranches (LetIn gen_var_1196 (App gen_var_122 gen_var_1194) bool (Case 0 (Lambda gen_var_1225 bool (App eq bool (Case 0 (Lambda gen_var_1198 bool bool) (CaseMatch gen_var_1197) (CaseBranches (App (Fix (Functions (App gen_var_1199 0 (Prod gen_var_1200 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1205 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1205 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1205) (CaseBranches gen_var_122 (Lambda gen_var_1208 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1210 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1212 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1213 bool bool) (CaseMatch (App gen_var_1208 gen_var_1212)) (CaseBranches (App gen_var_1199 gen_var_1210 gen_var_1212) false)))))))))) 0) gen_var_959 gen_var_1212) false)) (Case 0 (Lambda gen_var_1214 bool bool) (CaseMatch gen_var_1208) (CaseBranches (Case 0 (Lambda gen_var_1215 bool bool) (CaseMatch gen_var_1208) (CaseBranches (App (Fix (Functions (App gen_var_1216 0 (Prod gen_var_1217 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1222 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1222 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1222) (CaseBranches gen_var_122 (Lambda gen_var_1225 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1227 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1229 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1230 bool bool) (CaseMatch (App gen_var_1225 gen_var_1229)) (CaseBranches (App gen_var_1216 gen_var_1227 gen_var_1229) false)))))))))) 0) gen_var_959 gen_var_1229) false)) false)))) (CaseMatch gen_var_1196) (CaseBranches (App eq_refl bool (App (Fix (Functions (App gen_var_1231 0 (Prod gen_var_1232 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1237 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1237 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1237) (CaseBranches gen_var_122 (Lambda gen_var_1240 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1242 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1244 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1245 bool bool) (CaseMatch (App gen_var_1240 gen_var_1244)) (CaseBranches (App gen_var_1231 gen_var_1242 gen_var_1244) false)))))))))) 0) gen_var_959 gen_var_1244)) (App eq_refl bool false)))) (LetIn gen_var_1246 (App gen_var_122 gen_var_1244) bool (Case 0 (Lambda gen_var_1247 bool (App eq bool false (Case 0 (Lambda gen_var_1248 bool bool) (CaseMatch gen_var_1247) (CaseBranches false false)))) (CaseMatch gen_var_1246) (CaseBranches (App eq_refl bool false) (App eq_refl bool false))))))) REVERTcast (App eq bool (App ExportProof.binary_intersection gen_var_958 (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959)) gen_var_1244) (App ExportProof.binary_intersection gen_var_122 (App ExportProof.binary_intersection gen_var_958 (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959))) gen_var_1244)))) REVERTcast (App ExportProof.set_eq (App ExportProof.binary_intersection gen_var_958 (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959))) (App ExportProof.binary_intersection gen_var_122 (App ExportProof.binary_intersection gen_var_958 (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959))))))) REVERTcast (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 (App cons ExportProof.set gen_var_958 gen_var_959)) (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 (App cons ExportProof.set gen_var_958 gen_var_959)))))))) gen_var_959) (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959) (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959))) (App (Lambda gen_var_1249 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959) (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959))) (App (Lambda gen_var_1250 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959) (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959))) (App Coq.Classes.Morphisms.subrelation_proper (Prod gen_var_1251 ExportProof.set (Prod gen_var_1252 ExportProof.set (Sort Prop))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set (Sort Prop)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff)) ExportProof.set_eq (App Coq.Classes.Morphisms.PER_morphism ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PER ExportProof.set ExportProof.set_eq ExportProof.Set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1254 ExportProof.set (Sort Prop)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1255 ExportProof.set (Sort Prop)) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Sort Prop) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_122 gen_var_841) (App ExportProof.binary_intersection gen_var_1244 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959))) (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_122 gen_var_841) (App ExportProof.binary_intersection gen_var_1244 (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959)))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1256 ExportProof.set (Prod gen_var_1257 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1258 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1259 (Axiom ExportProof.X) bool) (Prod gen_var_1260 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1262 ExportProof.set (Prod gen_var_1263 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1265 ExportProof.set (Prod gen_var_1266 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1267 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1268 (Axiom ExportProof.X) bool) (Prod gen_var_1269 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq)) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1270 ExportProof.set (Prod gen_var_1271 (Axiom ExportProof.X) bool)) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1272 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1273 (Axiom ExportProof.X) bool) (Prod gen_var_1274 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1275 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1276 (Axiom ExportProof.X) bool) (Prod gen_var_1277 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_1278 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1279 (Axiom ExportProof.X) bool) ExportProof.set_eq)))) (App ExportProof.binary_intersection gen_var_122 gen_var_841) (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Reflexive (App ExportProof.binary_intersection gen_var_122 gen_var_841)) (App ExportProof.binary_intersection gen_var_1279 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959)) (App ExportProof.binary_intersection gen_var_1279 (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1280 ExportProof.set (Prod gen_var_1281 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1282 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1283 (Axiom ExportProof.X) bool) (Prod gen_var_1284 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_1286 ExportProof.set (Prod gen_var_1287 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1288 ExportProof.set (Prod gen_var_1289 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1290 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1291 (Axiom ExportProof.X) bool) (Prod gen_var_1292 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_1294 ExportProof.set (Prod gen_var_1295 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_1297 ExportProof.set (Prod gen_var_1298 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1299 ExportProof.set (Prod gen_var_1300 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1301 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1302 (Axiom ExportProof.X) bool) (Prod gen_var_1303 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1304 (Axiom ExportProof.X) bool) (Prod gen_var_1305 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1306 ExportProof.set (Prod gen_var_1307 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1308 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1309 (Axiom ExportProof.X) bool) (Prod gen_var_1310 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1311 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1312 (Axiom ExportProof.X) bool) (Prod gen_var_1313 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1314 (Axiom ExportProof.X) bool) (Prod gen_var_1315 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1316 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1317 (Axiom ExportProof.X) bool) (Prod gen_var_1318 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1319 (Axiom ExportProof.X) bool) (Prod gen_var_1320 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1321 (Axiom ExportProof.X) bool) (Prod gen_var_1322 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_1323 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1324 (Axiom ExportProof.X) bool) (Prod gen_var_1325 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_1327 ExportProof.set (Prod gen_var_1328 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1329 ExportProof.set (Prod gen_var_1330 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1331 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1332 (Axiom ExportProof.X) bool) (Prod gen_var_1333 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1334 (Axiom ExportProof.X) bool) (Prod gen_var_1335 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1337 ExportProof.set (Prod gen_var_1338 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1340 ExportProof.set (Prod gen_var_1341 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1342 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1343 (Axiom ExportProof.X) bool) (Prod gen_var_1344 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1345 (Axiom ExportProof.X) bool) (Prod gen_var_1346 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1347 ExportProof.set (Prod gen_var_1348 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1349 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1350 (Axiom ExportProof.X) bool) (Prod gen_var_1351 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1352 (Axiom ExportProof.X) bool) (Prod gen_var_1353 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1354 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1355 (Axiom ExportProof.X) bool) (Prod gen_var_1356 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1357 (Axiom ExportProof.X) bool) (Prod gen_var_1358 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_1359 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1360 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) gen_var_1360 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) gen_var_1360) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959) (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959)) gen_var_1250)) (App ExportProof.binary_intersection gen_var_1360 (App ExportProof.binary_intersection gen_var_841 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959))) (App ExportProof.binary_intersection gen_var_1360 (App ExportProof.binary_intersection gen_var_841 (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959)))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1361 ExportProof.set (Prod gen_var_1362 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1363 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1364 (Axiom ExportProof.X) bool) (Prod gen_var_1365 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1367 ExportProof.set (Prod gen_var_1368 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1370 ExportProof.set (Prod gen_var_1371 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1372 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1373 (Axiom ExportProof.X) bool) (Prod gen_var_1374 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq)) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1375 ExportProof.set (Prod gen_var_1376 (Axiom ExportProof.X) bool)) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1377 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1378 (Axiom ExportProof.X) bool) (Prod gen_var_1379 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1380 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1381 (Axiom ExportProof.X) bool) (Prod gen_var_1382 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_1383 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1384 (Axiom ExportProof.X) bool) ExportProof.set_eq)))) gen_var_1384 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Reflexive gen_var_1384) (App ExportProof.binary_intersection gen_var_841 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959)) (App ExportProof.binary_intersection gen_var_841 (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1385 ExportProof.set (Prod gen_var_1386 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1387 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1388 (Axiom ExportProof.X) bool) (Prod gen_var_1389 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_1391 ExportProof.set (Prod gen_var_1392 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1393 ExportProof.set (Prod gen_var_1394 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1395 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1396 (Axiom ExportProof.X) bool) (Prod gen_var_1397 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_1399 ExportProof.set (Prod gen_var_1400 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_1402 ExportProof.set (Prod gen_var_1403 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1404 ExportProof.set (Prod gen_var_1405 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1406 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1407 (Axiom ExportProof.X) bool) (Prod gen_var_1408 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1409 (Axiom ExportProof.X) bool) (Prod gen_var_1410 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1411 ExportProof.set (Prod gen_var_1412 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1413 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1414 (Axiom ExportProof.X) bool) (Prod gen_var_1415 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1416 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1417 (Axiom ExportProof.X) bool) (Prod gen_var_1418 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1419 (Axiom ExportProof.X) bool) (Prod gen_var_1420 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1421 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1422 (Axiom ExportProof.X) bool) (Prod gen_var_1423 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1424 (Axiom ExportProof.X) bool) (Prod gen_var_1425 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1426 (Axiom ExportProof.X) bool) (Prod gen_var_1427 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_1428 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1429 (Axiom ExportProof.X) bool) (Prod gen_var_1430 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_1432 ExportProof.set (Prod gen_var_1433 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1434 ExportProof.set (Prod gen_var_1435 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1436 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1437 (Axiom ExportProof.X) bool) (Prod gen_var_1438 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1439 (Axiom ExportProof.X) bool) (Prod gen_var_1440 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1442 ExportProof.set (Prod gen_var_1443 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1445 ExportProof.set (Prod gen_var_1446 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1447 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1448 (Axiom ExportProof.X) bool) (Prod gen_var_1449 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1450 (Axiom ExportProof.X) bool) (Prod gen_var_1451 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1452 ExportProof.set (Prod gen_var_1453 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1454 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1455 (Axiom ExportProof.X) bool) (Prod gen_var_1456 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1457 (Axiom ExportProof.X) bool) (Prod gen_var_1458 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1459 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1460 (Axiom ExportProof.X) bool) (Prod gen_var_1461 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1462 (Axiom ExportProof.X) bool) (Prod gen_var_1463 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_1464 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1465 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) gen_var_841 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) gen_var_841) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959) (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959)) gen_var_1250)))) gen_var_1249 (Cast (Lambda gen_var_1466 (Axiom ExportProof.X) (Cast (LetIn gen_var_1598 (App gen_var_122 gen_var_1466) bool (Case 0 (Lambda gen_var_1500 bool (App eq bool (Case 0 (Lambda gen_var_1469 bool bool) (CaseMatch (Case 0 (Lambda gen_var_1470 bool bool) (CaseMatch gen_var_1468) (CaseBranches (App gen_var_841 gen_var_1466) false))) (CaseBranches (Case 0 (Lambda gen_var_1471 bool bool) (CaseMatch (App gen_var_1465 gen_var_1466)) (CaseBranches (Case 0 (Lambda gen_var_1472 bool bool) (CaseMatch gen_var_1468) (CaseBranches (App (Fix (Functions (App gen_var_1473 0 (Prod gen_var_1474 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1479 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1479 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1479) (CaseBranches gen_var_122 (Lambda gen_var_1482 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1484 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1486 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1487 bool bool) (CaseMatch (App gen_var_1482 gen_var_1486)) (CaseBranches (App gen_var_1473 gen_var_1484 gen_var_1486) false)))))))))) 0) gen_var_959 gen_var_1466) false)) false)) false)) (Case 0 (Lambda gen_var_1488 bool bool) (CaseMatch (App gen_var_1486 gen_var_1466)) (CaseBranches (Case 0 (Lambda gen_var_1489 bool bool) (CaseMatch (App gen_var_841 gen_var_1466)) (CaseBranches (Case 0 (Lambda gen_var_1490 bool bool) (CaseMatch gen_var_1482) (CaseBranches (App (Fix (Functions (App gen_var_1491 0 (Prod gen_var_1492 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1497 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1497 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1497) (CaseBranches gen_var_122 (Lambda gen_var_1500 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1502 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1504 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1505 bool bool) (CaseMatch (App gen_var_1500 gen_var_1504)) (CaseBranches (App gen_var_1491 gen_var_1502 gen_var_1504) false)))))))))) 0) gen_var_959 gen_var_1466) false)) false)) false)))) (CaseMatch gen_var_1467) (CaseBranches (LetIn gen_var_1591 (App gen_var_841 gen_var_1466) bool (Case 0 (Lambda gen_var_1536 bool (App eq bool (Case 0 (Lambda gen_var_1508 bool bool) (CaseMatch gen_var_1507) (CaseBranches (Case 0 (Lambda gen_var_1509 bool bool) (CaseMatch (App gen_var_1504 gen_var_1466)) (CaseBranches (App (Fix (Functions (App gen_var_1510 0 (Prod gen_var_1511 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1516 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1516 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1516) (CaseBranches gen_var_122 (Lambda gen_var_1519 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1521 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1523 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1524 bool bool) (CaseMatch (App gen_var_1519 gen_var_1523)) (CaseBranches (App gen_var_1510 gen_var_1521 gen_var_1523) false)))))))))) 0) gen_var_959 gen_var_1466) false)) false)) (Case 0 (Lambda gen_var_1525 bool bool) (CaseMatch (App gen_var_1523 gen_var_1466)) (CaseBranches (Case 0 (Lambda gen_var_1526 bool bool) (CaseMatch gen_var_1519) (CaseBranches (App (Fix (Functions (App gen_var_1527 0 (Prod gen_var_1528 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1533 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1533 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1533) (CaseBranches gen_var_122 (Lambda gen_var_1536 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1538 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1540 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1541 bool bool) (CaseMatch (App gen_var_1536 gen_var_1540)) (CaseBranches (App gen_var_1527 gen_var_1538 gen_var_1540) false)))))))))) 0) gen_var_959 gen_var_1466) false)) false)))) (CaseMatch gen_var_1506) (CaseBranches (LetIn gen_var_1542 (App gen_var_1540 gen_var_1466) bool (Case 0 (Lambda gen_var_1570 bool (App eq bool (Case 0 (Lambda gen_var_1544 bool bool) (CaseMatch gen_var_1543) (CaseBranches (App (Fix (Functions (App gen_var_1545 0 (Prod gen_var_1546 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1551 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1551 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1551) (CaseBranches gen_var_122 (Lambda gen_var_1554 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1556 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1558 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1559 bool bool) (CaseMatch (App gen_var_1554 gen_var_1558)) (CaseBranches (App gen_var_1545 gen_var_1556 gen_var_1558) false)))))))))) 0) gen_var_959 gen_var_1466) false)) (Case 0 (Lambda gen_var_1560 bool bool) (CaseMatch gen_var_1554) (CaseBranches (App (Fix (Functions (App gen_var_1561 0 (Prod gen_var_1562 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1567 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1567 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1567) (CaseBranches gen_var_122 (Lambda gen_var_1570 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1572 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1574 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1575 bool bool) (CaseMatch (App gen_var_1570 gen_var_1574)) (CaseBranches (App gen_var_1561 gen_var_1572 gen_var_1574) false)))))))))) 0) gen_var_959 gen_var_1466) false)))) (CaseMatch gen_var_1542) (CaseBranches (App eq_refl bool (App (Fix (Functions (App gen_var_1576 0 (Prod gen_var_1577 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1582 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1582 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1582) (CaseBranches gen_var_122 (Lambda gen_var_1585 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1587 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1589 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1590 bool bool) (CaseMatch (App gen_var_1585 gen_var_1589)) (CaseBranches (App gen_var_1576 gen_var_1587 gen_var_1589) false)))))))))) 0) gen_var_959 gen_var_1466)) (App eq_refl bool false)))) (LetIn gen_var_1591 (App gen_var_1589 gen_var_1466) bool (Case 0 (Lambda gen_var_1592 bool (App eq bool false (Case 0 (Lambda gen_var_1593 bool bool) (CaseMatch gen_var_1592) (CaseBranches false false)))) (CaseMatch gen_var_1591) (CaseBranches (App eq_refl bool false) (App eq_refl bool false))))))) (LetIn gen_var_1598 (App gen_var_1589 gen_var_1466) bool (Case 0 (Lambda gen_var_1595 bool (App eq bool false (Case 0 (Lambda gen_var_1596 bool bool) (CaseMatch gen_var_1595) (CaseBranches (Case 0 (Lambda gen_var_1597 bool bool) (CaseMatch (App gen_var_841 gen_var_1466)) (CaseBranches false false)) false)))) (CaseMatch gen_var_1594) (CaseBranches (LetIn gen_var_1598 (App gen_var_841 gen_var_1466) bool (Case 0 (Lambda gen_var_1599 bool (App eq bool false (Case 0 (Lambda gen_var_1600 bool bool) (CaseMatch gen_var_1599) (CaseBranches false false)))) (CaseMatch gen_var_1598) (CaseBranches (App eq_refl bool false) (App eq_refl bool false)))) (App eq_refl bool false))))))) REVERTcast (App eq bool (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_122 gen_var_841) (App ExportProof.binary_intersection gen_var_1589 (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959))) gen_var_1466) (App ExportProof.binary_intersection gen_var_1589 (App ExportProof.binary_intersection gen_var_841 (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959))) gen_var_1466)))) REVERTcast (App ExportProof.set_eq (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_122 gen_var_841) (App ExportProof.binary_intersection gen_var_1589 (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959)))) (App ExportProof.binary_intersection gen_var_1589 (App ExportProof.binary_intersection gen_var_841 (App ExportProof.binary_intersection gen_var_122 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 gen_var_959)))))))) gen_var_1249))) REVERTcast (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_122 gen_var_1589) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1601 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1601)) (App cons ExportProof.set gen_var_841 gen_var_959))) (App ExportProof.binary_intersection gen_var_1589 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_122 (App cons ExportProof.set gen_var_841 gen_var_959)))))))) gen_var_959)) REVERTcast (App eq Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1589) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1602 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1602)) gen_var_959)))) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959)))))) (App eq Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1589) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1603 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1603)) gen_var_959)))) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959))))) (App (Lambda gen_var_1604 (App eq Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1589) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1605 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1605)) gen_var_959)))) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959))))) (App Coq.Init.Logic.eq_ind_r Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959)))) (Lambda gen_var_1606 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul gen_var_1606 (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_959))) (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_959)) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959))))))) (Cast (LetIn gen_var_1607 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_1608 (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_959)) (App nil Z))) (App list Z) (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma1 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1608 gen_var_1607 (App PEmul Z (App PEX Z xH) (App PEX Z (App xO xH))) (App PEmul Z (App PEX Z (App xO xH)) (App PEX Z xH)) I (Cast (App eq_refl bool true) VMcast (App eq bool (LetIn gen_var_1609 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_1607) (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.Peq Z Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1609 (App PEmul Z (App PEX Z xH) (App PEX Z (App xO xH)))) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1609 (App PEmul Z (App PEX Z (App xO xH)) (App PEX Z xH))))) true))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959)))) (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_959))) (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_959)) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959))))))) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1589) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1610 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1610)) gen_var_959)))) gen_var_1604)) gen_var_1604)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_959))))))) gen_var_820)))) (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1589) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1611 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1611)) gen_var_959)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_959))))) gen_var_813))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_797 (App cons Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1589) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1613 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1613)) gen_var_959)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_959))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_959))))))) (App nil Z)))) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1589) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1614 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1614)) gen_var_959)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_959))))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_959)))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_797 gen_var_797) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1589) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1616 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1616)) gen_var_959)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_959))))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_959)))))))))) (App eq_refl (App list Z) gen_var_797))) (App Coq.Init.Datatypes.length ExportProof.set (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1617 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1617)) gen_var_959)) (App Coq.Lists.List.map_length ExportProof.set ExportProof.set (Lambda gen_var_1618 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1618)) gen_var_959)) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1589) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1619 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1619)) gen_var_959)))) (App ExportProof.alternating_sign (App Coq.Init.Nat.add (App S O) (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1589) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1620 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1620)) gen_var_959)))))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959)))) (App ExportProof.alternating_sign (App Coq.Init.Nat.add (App S O) (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959))))))))) REVERTcast (App eq Z (App gen_var_138 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1589) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1621 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1621)) gen_var_959))) (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959)))))) (App eq Z (App gen_var_138 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1589) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1622 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1622)) gen_var_959))) (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959))))) (App (Lambda gen_var_1623 (App eq Z (App gen_var_138 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1589) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1624 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1624)) gen_var_959))) (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959))))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959)))) (Lambda gen_var_1625 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.opp gen_var_1625) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1626 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1626))) gen_var_1582))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1627 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1627))) gen_var_1582))))) (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959)))))) (Cast (LetIn gen_var_1628 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_1629 (App cons Z (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1630 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1630))) gen_var_1582)))) (App nil Z))) (App list Z) (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma1 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1629 gen_var_1628 (App PEsub Z (App PEopp Z (App PEopp Z (App PEX Z xH))) (App PEX Z (App xO xH))) (App PEadd Z (App PEopp Z (App PEX Z (App xO xH))) (App PEX Z xH)) I (Cast (App eq_refl bool true) VMcast (App eq bool (LetIn gen_var_1631 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_1628) (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.Peq Z Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1631 (App PEsub Z (App PEopp Z (App PEopp Z (App PEX Z xH))) (App PEX Z (App xO xH)))) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1631 (App PEadd Z (App PEopp Z (App PEX Z (App xO xH))) (App PEX Z xH))))) true))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1632 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1632))) gen_var_1582))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1633 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1633))) gen_var_1582))))) (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959)))))) (App gen_var_138 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1589) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1634 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1634)) gen_var_959))) gen_var_1623)) gen_var_1623)) (App Coq.ZArith.BinIntDef.Z.add (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1635 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1635))) gen_var_1582)))))) gen_var_820)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_138 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1589) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1636 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1636)) gen_var_959))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1637 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1637))) gen_var_1582)))))) gen_var_813))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_797 (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_138 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1589) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1639 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1639)) gen_var_959))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1640 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1640))) gen_var_1582)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1641 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1641))) gen_var_1582)))))) (App nil Z)))) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_138 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1589) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1642 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1642)) gen_var_959))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1643 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1643))) gen_var_1582)))))) (App Coq.ZArith.BinIntDef.Z.add (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1644 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1644))) gen_var_1582))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_797 gen_var_797) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_138 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1589) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1646 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1646)) gen_var_959))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1647 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1647))) gen_var_1582)))))) (App Coq.ZArith.BinIntDef.Z.add (App gen_var_138 (App cons ExportProof.set gen_var_122 (App cons ExportProof.set gen_var_1589 gen_var_959))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1648 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1648))) gen_var_1582))))))))) (App eq_refl (App list Z) gen_var_797))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1649 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_1649)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1649)))) gen_var_727) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (Case 0 (Lambda gen_var_1650 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1651 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1651)) (App cons ExportProof.set gen_var_1589 gen_var_959)))) (CaseBranches (App cons (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1652 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1652)) (App cons ExportProof.set gen_var_1589 gen_var_959)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1653 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1653))) gen_var_1649))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1654 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1654))) gen_var_1649))))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1655 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_1655)) (Case 0 (Lambda gen_var_1656 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App cons ExportProof.set gen_var_1589 gen_var_959))) (CaseBranches (App cons (App list ExportProof.set) (App cons ExportProof.set gen_var_1589 gen_var_959) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1655)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1655)))))))))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1657 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1657))) (App cons (App list ExportProof.set) gen_var_1657 gen_var_1655)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_138 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1658 (App list ExportProof.set) (App cons ExportProof.set gen_var_122 gen_var_1658)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App cons (App list ExportProof.set) gen_var_1657 gen_var_1658)))))))))) gen_var_1658))) (App ExportProof.sublists ExportProof.set gen_var_1658)) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1659 ExportProof.set (App ExportProof.binary_intersection gen_var_122 gen_var_1659)) gen_var_1658)) (App ExportProof.sublists_map ExportProof.set ExportProof.set (Lambda gen_var_1729 ExportProof.set (App ExportProof.binary_intersection gen_var_1666 gen_var_1729)) gen_var_1728)) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1730 (Axiom ExportProof.X) bool) (Lambda gen_var_1731 ExportProof.set (App ExportProof.binary_intersection gen_var_1666 gen_var_1731)) gen_var_1728)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1732 (App list ExportProof.set) (App cons ExportProof.set gen_var_1666 gen_var_1732)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1732)))))) (App (LetIn gen_var_1734 (App eq_refl Z (App ExportProof.cardinal gen_var_1666)) (App eq Z (App ExportProof.cardinal gen_var_1666) (App ExportProof.cardinal gen_var_1666)) (App (Lambda gen_var_1734 (App eq Z (App ExportProof.cardinal gen_var_1666) (App ExportProof.cardinal gen_var_1666)) (Lambda gen_var_1735 (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1736 (Axiom ExportProof.X) bool) (Lambda gen_var_1737 ExportProof.set (App ExportProof.binary_intersection gen_var_1666 gen_var_1737)) gen_var_1732)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1738 (App list ExportProof.set) (App cons ExportProof.set gen_var_1666 gen_var_1738)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1738)))))) (App Coq.Init.Logic.eq_trans Z (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_1666) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1740 (Sort Set) (Lambda gen_var_1740 (Sort Set) (Prod Anonymous gen_var_1740 gen_var_1740))) (Axiom ExportProof.X) bool) (Lambda gen_var_1742 ExportProof.set (App ExportProof.binary_intersection gen_var_1666 gen_var_1742)) gen_var_1738))))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_1666) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1744 (Sort Set) (Lambda gen_var_1744 (Sort Set) (Prod Anonymous gen_var_1744 gen_var_1744))) (Axiom ExportProof.X) bool) (Lambda gen_var_1746 ExportProof.set (App ExportProof.binary_intersection gen_var_1666 gen_var_1746)) gen_var_1738))))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_1666) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1747 (App list ExportProof.set) (App cons ExportProof.set gen_var_1666 gen_var_1747)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1747)))))) (App Coq.Init.Logic.f_equal (Prod gen_var_1748 Z Z) Z (Lambda gen_var_1749 (Prod gen_var_1750 Z Z) (App gen_var_1749 (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1752 (Sort Set) (Lambda gen_var_1752 (Sort Set) (Prod Anonymous gen_var_1752 gen_var_1752))) (Axiom ExportProof.X) bool) (Lambda gen_var_1754 ExportProof.set (App ExportProof.binary_intersection gen_var_1666 gen_var_1754)) gen_var_1747)))))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_1666)) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_1666)) (App eq_refl (Prod gen_var_1755 Z Z) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_1666)))) (App Coq.Init.Logic.f_equal Z Z (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_1666)) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1757 (Sort Set) (Lambda gen_var_1757 (Sort Set) (Prod Anonymous gen_var_1757 gen_var_1757))) (Axiom ExportProof.X) bool) (Lambda gen_var_1759 ExportProof.set (App ExportProof.binary_intersection gen_var_1666 gen_var_1759)) gen_var_1747)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1760 (App list ExportProof.set) (App cons ExportProof.set gen_var_1666 gen_var_1760)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1760))))) gen_var_1735)))) gen_var_1734)) gen_var_1734)) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1666) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1761 (Axiom ExportProof.X) bool) (Lambda gen_var_1762 ExportProof.set (App ExportProof.binary_intersection gen_var_1666 gen_var_1762)) gen_var_1760)))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_1666) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1763 (App list ExportProof.set) (App cons ExportProof.set gen_var_1666 gen_var_1763)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1763)))))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_1666) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1764 (App list ExportProof.set) (App cons ExportProof.set gen_var_1666 gen_var_1764)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1764)))))) gen_var_820)))))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_797 (App cons Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1666) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1766 (Axiom ExportProof.X) bool) (Lambda gen_var_1767 ExportProof.set (App ExportProof.binary_intersection gen_var_1666 gen_var_1767)) gen_var_1764)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_1666) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1768 (App list ExportProof.set) (App cons ExportProof.set gen_var_1666 gen_var_1768)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1768)))))) (App nil Z)))) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1666) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1769 (Axiom ExportProof.X) bool) (Lambda gen_var_1770 ExportProof.set (App ExportProof.binary_intersection gen_var_1666 gen_var_1770)) gen_var_1768)))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_1666) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1771 (App list ExportProof.set) (App cons ExportProof.set gen_var_1666 gen_var_1771)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1771))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_797 gen_var_797) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1666) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1773 (Axiom ExportProof.X) bool) (Lambda gen_var_1774 ExportProof.set (App ExportProof.binary_intersection gen_var_1666 gen_var_1774)) gen_var_1771)))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_1666) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1775 (App list ExportProof.set) (App cons ExportProof.set gen_var_1666 gen_var_1775)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1775))))))))) (App eq_refl (App list Z) gen_var_797))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1666) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1776 (Axiom ExportProof.X) bool) (Lambda gen_var_1777 ExportProof.set (App ExportProof.binary_intersection gen_var_1666 gen_var_1777)) gen_var_1775)))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_1666 (App nil ExportProof.set)))) (App ExportProof.alternating_sign (App Coq.Init.Nat.add (App S O) (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set gen_var_1666 (App nil ExportProof.set)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1778 (App list ExportProof.set) (App cons ExportProof.set gen_var_1666 gen_var_1778)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1778)))))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1666) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1779 (Axiom ExportProof.X) bool) (Lambda gen_var_1780 ExportProof.set (App ExportProof.binary_intersection gen_var_1666 gen_var_1780)) gen_var_1778)))))) (App Coq.ZArith.BinIntDef.Z.add (App gen_var_1662 (App cons ExportProof.set gen_var_1666 (App nil ExportProof.set))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1781 (App list ExportProof.set) (App cons ExportProof.set gen_var_1666 gen_var_1781)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1781)))))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1666) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1782 (Axiom ExportProof.X) bool) (Lambda gen_var_1783 ExportProof.set (App ExportProof.binary_intersection gen_var_1666 gen_var_1783)) gen_var_1781)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1662 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1784 (App list ExportProof.set) (App cons ExportProof.set gen_var_1666 gen_var_1784)) (App cons (App list ExportProof.set) (App nil ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1784)))))))) (App ExportProof.sublists ExportProof.set gen_var_1784) (App ExportProof.sublists_proper ExportProof.set gen_var_1853)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1854 (App list ExportProof.set) (App cons ExportProof.set gen_var_1840 gen_var_1854)) (App ExportProof.sublists ExportProof.set gen_var_1854))) (App ExportProof.filter_map_always (App list ExportProof.set) (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (Lambda gen_var_1855 (App list ExportProof.set) (App cons ExportProof.set gen_var_1840 gen_var_1855)) (App ExportProof.sublists ExportProof.set gen_var_1855) (Lambda gen_var_1856 (App list ExportProof.set) (App eq_refl bool true)))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1840) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1835 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_108))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1835 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1857 (App list ExportProof.set) (App cons ExportProof.set gen_var_1840 gen_var_1857)) (App ExportProof.sublists ExportProof.set gen_var_1857))))))) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1840) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1835 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_108))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1835 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1858 (App list ExportProof.set) (App cons ExportProof.set gen_var_1840 gen_var_1858)) (App ExportProof.sublists ExportProof.set gen_var_1858)))))) (App (Lambda gen_var_1859 (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1840) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1835 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_108))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1835 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1860 (App list ExportProof.set) (App cons ExportProof.set gen_var_1840 gen_var_1860)) (App ExportProof.sublists ExportProof.set gen_var_1860)))))) (App Coq.Init.Logic.eq_ind Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1840) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1835 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_108))))) (Lambda gen_var_1861 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_1840) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1835 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1860))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1835 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_108))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1835 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1860)))) gen_var_1861))) (Cast (LetIn gen_var_1862 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_1863 (App cons Z (App ExportProof.cardinal gen_var_1840) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1835 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1860)))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1835 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_108)))) (App nil Z)))) (App list Z) (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma1 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1863 gen_var_1862 (App PEsub Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH))) (App PEX Z (App xI xH))) (App PEadd Z (App PEX Z (App xO xH)) (App PEsub Z (App PEX Z xH) (App PEX Z (App xI xH)))) I (Cast (App eq_refl bool true) VMcast (App eq bool (LetIn gen_var_1864 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_1862) (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.Peq Z Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1864 (App PEsub Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH))) (App PEX Z (App xI xH)))) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1864 (App PEadd Z (App PEX Z (App xO xH)) (App PEsub Z (App PEX Z xH) (App PEX Z (App xI xH))))))) true))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_1840) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1835 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1860))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1835 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_108))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1835 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1860)))) (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1840) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1835 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_108)))))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1835 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1865 (App list ExportProof.set) (App cons ExportProof.set gen_var_1840 gen_var_1865)) (App ExportProof.sublists ExportProof.set gen_var_1865))))) gen_var_1859)) gen_var_1859)) (App ExportProof.cardinal (App ExportProof.list_union gen_var_108)) (App gen_var_78 gen_var_108 (Cast (App Coq.Init.Logic.eq_ind_r nat (App Coq.Init.Datatypes.length ExportProof.set gen_var_1865) (Lambda gen_var_1866 nat (App eq nat gen_var_1866 gen_var_1866)) gen_var_97 (App Coq.Init.Datatypes.length (Prod gen_var_1867 (Axiom ExportProof.X) bool) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1868 (Axiom ExportProof.X) bool) (Lambda gen_var_1869 ExportProof.set (App ExportProof.binary_intersection gen_var_1840 gen_var_1869)) gen_var_1865)) (App Coq.Lists.List.map_length ExportProof.set (Prod gen_var_1870 (Axiom ExportProof.X) bool) (Lambda gen_var_1871 ExportProof.set (App ExportProof.binary_intersection gen_var_1840 gen_var_1871)) gen_var_1865)) REVERTcast (App eq nat gen_var_1866 (App Coq.Init.Datatypes.length ExportProof.set gen_var_108))))) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_1840 (App ExportProof.list_union gen_var_1865))) gen_var_1859))) (App ExportProof.cardinal (App ExportProof.list_union gen_var_1865)) (App gen_var_78 gen_var_1865 gen_var_97)) (App ExportProof.sum (App Coq.Init.Datatypes.app Z (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1835 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1865))) (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1835 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1872 (App list ExportProof.set) (App cons ExportProof.set gen_var_1840 gen_var_1872)) (App ExportProof.sublists ExportProof.set gen_var_1872)))))) (App ExportProof.sum_app (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1835 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1872))) (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1835 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1980 (App list ExportProof.set) (App cons ExportProof.set gen_var_1876 gen_var_1980)) (App ExportProof.sublists ExportProof.set gen_var_1980)))))) (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1835 (App Coq.Init.Datatypes.app (App list ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1980)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1981 (App list ExportProof.set) (App cons ExportProof.set gen_var_1876 gen_var_1981)) (App ExportProof.sublists ExportProof.set gen_var_1981))))) (App Coq.Lists.List.map_app (App list ExportProof.set) Z gen_var_1835 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1981)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1982 (App list ExportProof.set) (App cons ExportProof.set gen_var_1876 gen_var_1982)) (App ExportProof.sublists ExportProof.set gen_var_1982))))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Init.Datatypes.app (App list ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1982) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1983 (App list ExportProof.set) (App cons ExportProof.set gen_var_1876 gen_var_1983)) (App ExportProof.sublists ExportProof.set gen_var_1983)))) (App ExportProof.filter_app (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1983) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1984 (App list ExportProof.set) (App cons ExportProof.set gen_var_1876 gen_var_1984)) (App ExportProof.sublists ExportProof.set gen_var_1984)))) (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1876 (App ExportProof.list_union gen_var_1984))) (App ExportProof.cardinal_binary_union gen_var_1876 (App ExportProof.list_union gen_var_2022))) REVERTcast (App eq Z (App ExportProof.cardinal (App ExportProof.list_union (App cons ExportProof.set gen_var_1876 gen_var_2022))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_2143 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App cons ExportProof.set gen_var_1876 gen_var_2022)))))))) gen_var_2212))))))) gen_var_97))))) gen_var_2145 gen_var_2022 gen_var_80)))))) 