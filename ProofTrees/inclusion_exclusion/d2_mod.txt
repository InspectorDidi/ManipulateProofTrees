(Definition ExportProof.set (Prod Anonymous (Axiom ExportProof.X) bool)) (Definition ExportProof.cardinal (Lambda gen_var_5 ExportProof.set (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_5 (Axiom ExportProof.enum_X)))))) (Definition ExportProof.list_intersection (Lambda gen_var_6 (App list ExportProof.set) (App ExportProof.fold1 ExportProof.set ExportProof.binary_intersection gen_var_6 ExportProof.empty_set))) (Definition ExportProof.alternating_sign (Fix (Functions (App gen_var_7 0 (Prod gen_var_8 nat Z) (Lambda gen_var_11 nat (Case 0 (Lambda gen_var_10 nat Z) (CaseMatch gen_var_10) (CaseBranches (App Zpos xH) (Lambda gen_var_11 nat (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_7 gen_var_11)))))))) 0)) (Definition ExportProof.list_union (Lambda gen_var_18 (App list ExportProof.set) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_union ExportProof.empty_set gen_var_18))) (Definition ExportProof.sum (Fix (Functions (App gen_var_19 0 (Prod gen_var_20 (App list Z) Z) (Lambda gen_var_24 (App list Z) (Case 1 (Lambda gen_var_22 (App list Z) Z) (CaseMatch gen_var_22) (CaseBranches Z0 (Lambda gen_var_23 Z (Lambda gen_var_24 (App list Z) (App Coq.ZArith.BinIntDef.Z.add gen_var_23 (App gen_var_19 gen_var_24))))))))) 0)) (Definition ExportProof.nonempty (Lambda gen_var_25 (Sort Type) (Lambda gen_var_27 (App list gen_var_25) (Case 1 (Lambda gen_var_27 (App list gen_var_25) bool) (CaseMatch gen_var_27) (CaseBranches false (Lambda gen_var_28 gen_var_25 (Lambda gen_var_29 (App list gen_var_25) true))))))) (Definition ExportProof.sublists (Fix (Functions (App gen_var_30 0 (Prod gen_var_31 (Sort Type) (Prod gen_var_32 (App list gen_var_31) (App list (App list gen_var_31)))) (Lambda gen_var_33 (Sort Type) (Lambda gen_var_37 (App list gen_var_33) (Case 1 (Lambda gen_var_35 (App list gen_var_33) (App list (App list gen_var_33))) (CaseMatch gen_var_35) (CaseBranches (App cons (App list gen_var_33) (App nil gen_var_33) (App nil (App list gen_var_33))) (Lambda gen_var_36 gen_var_33 (Lambda gen_var_37 (App list gen_var_33) (LetIn gen_var_38 (App gen_var_30 gen_var_33 gen_var_37) (App list (App list gen_var_33)) (App Coq.Init.Datatypes.app (App list gen_var_33) gen_var_38 (App Coq.Lists.List.map (App list gen_var_33) (App list gen_var_33) (Lambda gen_var_39 (App list gen_var_33) (App cons gen_var_33 gen_var_36 gen_var_39)) gen_var_38))))))))))) 0)) (Definition ExportProof.empty_set (Lambda Anonymous (Axiom ExportProof.X) false)) (Definition ExportProof.cardinal_empty (Cast (LetIn gen_var_51 (Axiom ExportProof.enum_X) (App list (Axiom ExportProof.X)) (App Coq.Init.Datatypes.list_ind (Axiom ExportProof.X) (Lambda gen_var_48 (App list (Axiom ExportProof.X)) (App eq Z (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda Anonymous (Axiom ExportProof.X) false) gen_var_48))) Z0)) (App eq_refl Z Z0) (Lambda gen_var_50 (Axiom ExportProof.X) (Lambda gen_var_51 (App list (Axiom ExportProof.X)) (Lambda gen_var_52 (App eq Z (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) (Lambda Anonymous (Axiom ExportProof.X) false) gen_var_51))) Z0) gen_var_52))) gen_var_51)) REVERTcast (App eq Z (App ExportProof.cardinal ExportProof.empty_set) Z0))) (Definition ExportProof.binary_union (Lambda gen_var_54 ExportProof.set (Lambda gen_var_55 ExportProof.set (Lambda gen_var_56 (Axiom ExportProof.X) (App Coq.Init.Datatypes.orb (App gen_var_54 gen_var_56) (App gen_var_55 gen_var_56)))))) (Definition ExportProof.binary_intersection (Lambda gen_var_86 ExportProof.set (Lambda gen_var_87 ExportProof.set (Lambda gen_var_88 (Axiom ExportProof.X) (App Coq.Init.Datatypes.andb (App gen_var_86 gen_var_88) (App gen_var_87 gen_var_88)))))) (Definition ExportProof.cardinal_set_eq (Lambda gen_var_104 ExportProof.set (Lambda gen_var_105 ExportProof.set (Lambda gen_var_106 (App ExportProof.set_eq gen_var_104 gen_var_105) (Cast (LetIn gen_var_124 (LetIn gen_var_111 (Axiom ExportProof.enum_X) (App list (Axiom ExportProof.X)) (App Coq.Init.Datatypes.list_ind (Axiom ExportProof.X) (Lambda gen_var_109 (App list (Axiom ExportProof.X)) (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_104 gen_var_109)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_105 gen_var_109)))) (Cast (App eq_refl nat O) REVERTcast (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_104 (App nil (Axiom ExportProof.X)))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_105 (App nil (Axiom ExportProof.X)))))) (Lambda gen_var_110 (Axiom ExportProof.X) (Lambda gen_var_111 (App list (Axiom ExportProof.X)) (Lambda gen_var_112 (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_104 gen_var_111)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_105 gen_var_111))) (Cast (App Coq.Init.Logic.eq_ind_r bool (App gen_var_105 gen_var_110) (Lambda gen_var_115 bool (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_114 bool (App list (Axiom ExportProof.X))) (CaseMatch gen_var_114) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_110 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_104 gen_var_111)) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_104 gen_var_111)))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_115 bool (App list (Axiom ExportProof.X))) (CaseMatch (App gen_var_105 gen_var_110)) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_110 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_105 gen_var_111)) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_105 gen_var_111)))))) (LetIn gen_var_119 (App gen_var_105 gen_var_110) bool (Case 0 (Lambda gen_var_119 bool (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_118 bool (App list (Axiom ExportProof.X))) (CaseMatch gen_var_118) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_110 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_104 gen_var_111)) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_104 gen_var_111)))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (Case 0 (Lambda gen_var_119 bool (App list (Axiom ExportProof.X))) (CaseMatch gen_var_119) (CaseBranches (App cons (Axiom ExportProof.X) gen_var_110 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_105 gen_var_111)) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_105 gen_var_111)))))) (CaseMatch gen_var_119) (CaseBranches (Cast (App Coq.Init.Logic.eq_trans nat (App S (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_104 gen_var_111))) (App S (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_104 gen_var_111))) (App S (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_105 gen_var_111))) (App Coq.Init.Logic.f_equal (Prod Anonymous nat nat) nat (Lambda gen_var_121 (Prod Anonymous nat nat) (App gen_var_121 (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_104 gen_var_111)))) S S (App eq_refl (Prod Anonymous nat nat) S)) (App Coq.Init.Logic.f_equal nat nat S (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_104 gen_var_111)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_105 gen_var_111)) gen_var_112)) REVERTcast (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App cons (Axiom ExportProof.X) gen_var_110 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_104 gen_var_111))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App cons (Axiom ExportProof.X) gen_var_110 (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_105 gen_var_111))))) (Cast gen_var_112 REVERTcast (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_104 gen_var_111)) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_105 gen_var_111))))))) (App gen_var_104 gen_var_110) (App gen_var_106 gen_var_110)) REVERTcast (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_104 (App cons (Axiom ExportProof.X) gen_var_110 gen_var_111))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_105 (App cons (Axiom ExportProof.X) gen_var_110 gen_var_111)))))))) gen_var_111)) (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_104 (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_105 (Axiom ExportProof.enum_X)))) (App (Lambda gen_var_124 (App eq nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_104 (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_105 (Axiom ExportProof.enum_X)))) (App Coq.Init.Logic.eq_trans Z (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_104 (Axiom ExportProof.enum_X)))) (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_104 (Axiom ExportProof.enum_X)))) (App Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_105 (Axiom ExportProof.enum_X)))) (App Coq.Init.Logic.f_equal (Prod gen_var_125 nat Z) Z (Lambda gen_var_126 (Prod gen_var_127 nat Z) (App gen_var_126 (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_104 (Axiom ExportProof.enum_X))))) Coq.ZArith.BinIntDef.Z.of_nat Coq.ZArith.BinIntDef.Z.of_nat (App eq_refl (Prod gen_var_128 nat Z) Coq.ZArith.BinIntDef.Z.of_nat)) (App Coq.Init.Logic.f_equal nat Z Coq.ZArith.BinIntDef.Z.of_nat (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_104 (Axiom ExportProof.enum_X))) (App Coq.Init.Datatypes.length (Axiom ExportProof.X) (App Coq.Lists.List.filter (Axiom ExportProof.X) gen_var_105 (Axiom ExportProof.enum_X))) gen_var_124))) gen_var_124)) REVERTcast (App eq Z (App ExportProof.cardinal gen_var_104) (App ExportProof.cardinal gen_var_105))))))) (Definition ExportProof.set_eq (Lambda gen_var_130 ExportProof.set (Lambda gen_var_131 ExportProof.set (Prod gen_var_132 (Axiom ExportProof.X) (App eq bool (App gen_var_130 gen_var_132) (App gen_var_131 gen_var_132)))))) (Definition ExportProof.Set_eq (App Build_Equivalence ExportProof.set ExportProof.set_eq ExportProof.set_eq_refl ExportProof.set_eq_sym ExportProof.set_eq_trans)) (Definition ExportProof.Set_eq_Symmetric ExportProof.set_eq_sym) (Definition ExportProof.union_morphism (Cast (Lambda gen_var_221 ExportProof.set (Lambda gen_var_222 ExportProof.set (Lambda gen_var_223 (App ExportProof.set_eq gen_var_221 gen_var_222) (Cast (Lambda gen_var_224 ExportProof.set (Lambda gen_var_225 ExportProof.set (Lambda gen_var_226 (App ExportProof.set_eq gen_var_224 gen_var_225) (Cast (Lambda gen_var_227 (Axiom ExportProof.X) (Cast (App Coq.Init.Logic.eq_ind_r bool (App gen_var_222 gen_var_227) (Lambda gen_var_228 bool (App eq bool (App Coq.Init.Datatypes.orb gen_var_228 (App gen_var_224 gen_var_227)) (App Coq.Init.Datatypes.orb (App gen_var_222 gen_var_227) (App gen_var_225 gen_var_227)))) (App Coq.Init.Logic.eq_ind_r bool (App gen_var_225 gen_var_227) (Lambda gen_var_229 bool (App eq bool (App Coq.Init.Datatypes.orb (App gen_var_222 gen_var_227) gen_var_229) (App Coq.Init.Datatypes.orb (App gen_var_222 gen_var_227) (App gen_var_225 gen_var_227)))) (App eq_refl bool (App Coq.Init.Datatypes.orb (App gen_var_222 gen_var_227) (App gen_var_225 gen_var_227))) (App gen_var_224 gen_var_227) (App gen_var_226 gen_var_227)) (App gen_var_221 gen_var_227) (App gen_var_223 gen_var_227)) REVERTcast (App eq bool (App ExportProof.binary_union gen_var_221 gen_var_224 gen_var_227) (App ExportProof.binary_union gen_var_222 gen_var_225 gen_var_227)))) REVERTcast (App ExportProof.set_eq (App ExportProof.binary_union gen_var_221 gen_var_224) (App ExportProof.binary_union gen_var_222 gen_var_225)))))) REVERTcast (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq (App ExportProof.binary_union gen_var_221) (App ExportProof.binary_union gen_var_222)))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod Anonymous ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_union))) (Definition ExportProof.Set_eq_Reflexive ExportProof.set_eq_refl) (Definition ExportProof.intersection_morphism (Cast (Lambda gen_var_888 ExportProof.set (Lambda gen_var_889 ExportProof.set (Lambda gen_var_890 (App ExportProof.set_eq gen_var_888 gen_var_889) (Cast (Lambda gen_var_891 ExportProof.set (Lambda gen_var_892 ExportProof.set (Lambda gen_var_893 (App ExportProof.set_eq gen_var_891 gen_var_892) (Cast (Lambda gen_var_894 (Axiom ExportProof.X) (Cast (App Coq.Init.Logic.eq_ind_r bool (App gen_var_889 gen_var_894) (Lambda gen_var_895 bool (App eq bool (App Coq.Init.Datatypes.andb gen_var_895 (App gen_var_891 gen_var_894)) (App Coq.Init.Datatypes.andb (App gen_var_889 gen_var_894) (App gen_var_892 gen_var_894)))) (App Coq.Init.Logic.eq_ind_r bool (App gen_var_892 gen_var_894) (Lambda gen_var_896 bool (App eq bool (App Coq.Init.Datatypes.andb (App gen_var_889 gen_var_894) gen_var_896) (App Coq.Init.Datatypes.andb (App gen_var_889 gen_var_894) (App gen_var_892 gen_var_894)))) (App eq_refl bool (App Coq.Init.Datatypes.andb (App gen_var_889 gen_var_894) (App gen_var_892 gen_var_894))) (App gen_var_891 gen_var_894) (App gen_var_893 gen_var_894)) (App gen_var_888 gen_var_894) (App gen_var_890 gen_var_894)) REVERTcast (App eq bool (App ExportProof.binary_intersection gen_var_888 gen_var_891 gen_var_894) (App ExportProof.binary_intersection gen_var_889 gen_var_892 gen_var_894)))) REVERTcast (App ExportProof.set_eq (App ExportProof.binary_intersection gen_var_888 gen_var_891) (App ExportProof.binary_intersection gen_var_889 gen_var_892)))))) REVERTcast (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq (App ExportProof.binary_intersection gen_var_888) (App ExportProof.binary_intersection gen_var_889)))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod Anonymous ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection))) (Definition ExportProof.sublists_map (Lambda gen_var_1630 (Sort Type) (Lambda gen_var_1631 (Sort Type) (Lambda gen_var_1632 (Prod Anonymous gen_var_1630 gen_var_1631) (Lambda gen_var_1698 (App list gen_var_1630) (App Coq.Init.Datatypes.list_ind gen_var_1630 (Lambda gen_var_1635 (App list gen_var_1630) (App eq (App list (App list gen_var_1631)) (App ExportProof.sublists gen_var_1631 (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632 gen_var_1635)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1635)))) (App eq_refl (App list (App list gen_var_1631)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 (App nil gen_var_1630)))) (Lambda gen_var_1636 gen_var_1630 (Lambda gen_var_1698 (App list gen_var_1630) (Lambda gen_var_1638 (App eq (App list (App list gen_var_1631)) (App ExportProof.sublists gen_var_1631 (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632 gen_var_1637)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1637))) (Cast (App Coq.Init.Logic.eq_ind_r (App list (App list gen_var_1631)) (App Coq.Init.Datatypes.app (App list gen_var_1631) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1637)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1630) (Lambda gen_var_1639 (App list gen_var_1630) (App cons gen_var_1630 gen_var_1636 gen_var_1639)) (App ExportProof.sublists gen_var_1630 gen_var_1639)))) (Lambda gen_var_1641 (App list (App list gen_var_1631)) (App eq (App list (App list gen_var_1631)) (App Coq.Init.Datatypes.app (App list gen_var_1631) (App ExportProof.sublists gen_var_1631 (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632 gen_var_1640)) (App Coq.Lists.List.map (App list gen_var_1631) (App list gen_var_1631) (Lambda gen_var_1641 (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) gen_var_1641)) (App ExportProof.sublists gen_var_1631 (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632 gen_var_1641)))) gen_var_1641)) (App Coq.Init.Logic.eq_ind_r (App list (App list gen_var_1631)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1641)) (Lambda gen_var_1644 (App list (App list gen_var_1631)) (App eq (App list (App list gen_var_1631)) (App Coq.Init.Datatypes.app (App list gen_var_1631) gen_var_1642 (App Coq.Lists.List.map (App list gen_var_1631) (App list gen_var_1631) (Lambda gen_var_1643 (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) gen_var_1643)) gen_var_1643)) (App Coq.Init.Datatypes.app (App list gen_var_1631) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1643)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1630) (Lambda gen_var_1644 (App list gen_var_1630) (App cons gen_var_1630 gen_var_1636 gen_var_1644)) (App ExportProof.sublists gen_var_1630 gen_var_1644)))))) (LetIn gen_var_1682 (LetIn gen_var_1647 (App ExportProof.sublists gen_var_1630 gen_var_1644) (App list (App list gen_var_1630)) (App Coq.Init.Datatypes.list_ind (App list gen_var_1630) (Lambda gen_var_1647 (App list (App list gen_var_1630)) (App eq (App list (App list gen_var_1631)) (App Coq.Lists.List.map (App list gen_var_1631) (App list gen_var_1631) (Lambda gen_var_1648 (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) gen_var_1648)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) gen_var_1647)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1630) (Lambda gen_var_1649 (App list gen_var_1630) (App cons gen_var_1630 gen_var_1636 gen_var_1649)) gen_var_1647)))) (App eq_refl (App list (App list gen_var_1631)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1630) (Lambda gen_var_1650 (App list gen_var_1630) (App cons gen_var_1630 gen_var_1636 gen_var_1650)) (App nil (App list gen_var_1630))))) (Lambda gen_var_1651 (App list gen_var_1630) (Lambda gen_var_1652 (App list (App list gen_var_1630)) (Lambda gen_var_1653 (App eq (App list (App list gen_var_1631)) (App Coq.Lists.List.map (App list gen_var_1631) (App list gen_var_1631) (Lambda gen_var_1654 (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) gen_var_1654)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) gen_var_1652)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1630) (Lambda gen_var_1655 (App list gen_var_1630) (App cons gen_var_1630 gen_var_1636 gen_var_1655)) gen_var_1652))) (Cast (LetIn gen_var_1661 gen_var_1653 (App eq (App list (App list gen_var_1631)) (App Coq.Lists.List.map (App list gen_var_1631) (App list gen_var_1631) (Lambda gen_var_1657 (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) gen_var_1657)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) gen_var_1652)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1630) (Lambda gen_var_1658 (App list gen_var_1630) (App cons gen_var_1630 gen_var_1636 gen_var_1658)) gen_var_1652))) (App (LetIn gen_var_1661 (App eq_refl (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632 gen_var_1651))) (App eq (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632 gen_var_1651)) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632 gen_var_1651))) (App (LetIn gen_var_1661 (App eq_refl (Sort Type) (App list gen_var_1631)) (App eq (Sort Type) (App list gen_var_1631) (App list gen_var_1631)) (App (Lambda gen_var_1661 (App eq (Sort Type) (App list gen_var_1631) (App list gen_var_1631)) (Lambda gen_var_1662 (App eq (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632 gen_var_1651)) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632 gen_var_1651))) (Lambda gen_var_1663 (App eq (App list (App list gen_var_1631)) (App Coq.Lists.List.map (App list gen_var_1631) (App list gen_var_1631) (Lambda gen_var_1664 (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) gen_var_1664)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) gen_var_1652)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1630) (Lambda gen_var_1665 (App list gen_var_1630) (App cons gen_var_1630 gen_var_1636 gen_var_1665)) gen_var_1652))) (App Coq.Init.Logic.eq_trans (App list (App list gen_var_1631)) (App cons (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632 gen_var_1651)) (App Coq.Lists.List.map (App list gen_var_1631) (App list gen_var_1631) (Lambda gen_var_1666 (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) gen_var_1666)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) gen_var_1652))) (App cons (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632 gen_var_1651)) (App Coq.Lists.List.map (App list gen_var_1631) (App list gen_var_1631) (Lambda gen_var_1667 (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) gen_var_1667)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) gen_var_1652))) (App cons (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632 gen_var_1651)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1630) (Lambda gen_var_1668 (App list gen_var_1630) (App cons gen_var_1630 gen_var_1636 gen_var_1668)) gen_var_1652))) (App Coq.Init.Logic.f_equal (Prod gen_var_1669 (App list (App list gen_var_1631)) (App list (App list gen_var_1631))) (App list (App list gen_var_1631)) (Lambda gen_var_1670 (Prod gen_var_1671 (App list (App list gen_var_1631)) (App list (App list gen_var_1631))) (App gen_var_1670 (App Coq.Lists.List.map (App list gen_var_1631) (App list gen_var_1631) (Lambda gen_var_1672 (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) gen_var_1672)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) gen_var_1652)))) (App cons (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632 gen_var_1651))) (App cons (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632 gen_var_1651))) (App eq_refl (Prod gen_var_1673 (App list (App list gen_var_1631)) (App list (App list gen_var_1631))) (App cons (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632 gen_var_1651))))) (App Coq.Init.Logic.f_equal (App list (App list gen_var_1631)) (App list (App list gen_var_1631)) (App cons (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632 gen_var_1651))) (App Coq.Lists.List.map (App list gen_var_1631) (App list gen_var_1631) (Lambda gen_var_1674 (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) gen_var_1674)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) gen_var_1652)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1630) (Lambda gen_var_1675 (App list gen_var_1630) (App cons gen_var_1630 gen_var_1636 gen_var_1675)) gen_var_1652)) gen_var_1663))))) gen_var_1661)) gen_var_1661)) gen_var_1661)) REVERTcast (App eq (App list (App list gen_var_1631)) (App Coq.Lists.List.map (App list gen_var_1631) (App list gen_var_1631) (Lambda gen_var_1676 (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) gen_var_1676)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App cons (App list gen_var_1630) gen_var_1651 gen_var_1652))) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1630) (Lambda gen_var_1677 (App list gen_var_1630) (App cons gen_var_1630 gen_var_1636 gen_var_1677)) (App cons (App list gen_var_1630) gen_var_1651 gen_var_1652)))))))) gen_var_1647)) (App eq (App list (App list gen_var_1631)) (App Coq.Lists.List.map (App list gen_var_1631) (App list gen_var_1631) (Lambda gen_var_1678 (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) gen_var_1678)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1678))) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1630) (Lambda gen_var_1679 (App list gen_var_1630) (App cons gen_var_1630 gen_var_1636 gen_var_1679)) (App ExportProof.sublists gen_var_1630 gen_var_1679)))) (App (LetIn gen_var_1682 (App eq_refl (App list (App list gen_var_1631)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1679))) (App eq (App list (App list gen_var_1631)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1679)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1679))) (App (LetIn gen_var_1682 (App eq_refl (Sort Type) (App list gen_var_1631)) (App eq (Sort Type) (App list gen_var_1631) (App list gen_var_1631)) (App (Lambda gen_var_1682 (App eq (Sort Type) (App list gen_var_1631) (App list gen_var_1631)) (Lambda gen_var_1683 (App eq (App list (App list gen_var_1631)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1679)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1679))) (Lambda gen_var_1684 (App eq (App list (App list gen_var_1631)) (App Coq.Lists.List.map (App list gen_var_1631) (App list gen_var_1631) (Lambda gen_var_1685 (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) gen_var_1685)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1685))) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1630) (Lambda gen_var_1686 (App list gen_var_1630) (App cons gen_var_1630 gen_var_1636 gen_var_1686)) (App ExportProof.sublists gen_var_1630 gen_var_1686)))) (App Coq.Init.Logic.eq_trans (App list (App list gen_var_1631)) (App Coq.Init.Datatypes.app (App list gen_var_1631) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1686)) (App Coq.Lists.List.map (App list gen_var_1631) (App list gen_var_1631) (Lambda gen_var_1687 (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) gen_var_1687)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1687)))) (App Coq.Init.Datatypes.app (App list gen_var_1631) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1687)) (App Coq.Lists.List.map (App list gen_var_1631) (App list gen_var_1631) (Lambda gen_var_1688 (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) gen_var_1688)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1688)))) (App Coq.Init.Datatypes.app (App list gen_var_1631) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1688)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1630) (Lambda gen_var_1689 (App list gen_var_1630) (App cons gen_var_1630 gen_var_1636 gen_var_1689)) (App ExportProof.sublists gen_var_1630 gen_var_1689)))) (App Coq.Init.Logic.f_equal (Prod Anonymous (App list (App list gen_var_1631)) (App list (App list gen_var_1631))) (App list (App list gen_var_1631)) (Lambda gen_var_1691 (Prod Anonymous (App list (App list gen_var_1631)) (App list (App list gen_var_1631))) (App gen_var_1691 (App Coq.Lists.List.map (App list gen_var_1631) (App list gen_var_1631) (Lambda gen_var_1693 (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) gen_var_1693)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1693))))) (App Coq.Init.Datatypes.app (App list gen_var_1631) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1693))) (App Coq.Init.Datatypes.app (App list gen_var_1631) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1693))) (App eq_refl (Prod Anonymous (App list (App list gen_var_1631)) (App list (App list gen_var_1631))) (App Coq.Init.Datatypes.app (App list gen_var_1631) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1693))))) (App Coq.Init.Logic.f_equal (App list (App list gen_var_1631)) (App list (App list gen_var_1631)) (App Coq.Init.Datatypes.app (App list gen_var_1631) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1693))) (App Coq.Lists.List.map (App list gen_var_1631) (App list gen_var_1631) (Lambda gen_var_1695 (App list gen_var_1631) (App cons gen_var_1631 (App gen_var_1632 gen_var_1636) gen_var_1695)) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1695))) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1630) (Lambda gen_var_1696 (App list gen_var_1630) (App cons gen_var_1630 gen_var_1636 gen_var_1696)) (App ExportProof.sublists gen_var_1630 gen_var_1696))) gen_var_1684))))) gen_var_1682)) gen_var_1682)) gen_var_1682)) (App ExportProof.sublists gen_var_1631 (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632 gen_var_1696)) gen_var_1638) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App Coq.Init.Datatypes.app (App list gen_var_1630) (App ExportProof.sublists gen_var_1630 gen_var_1696) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1630) (Lambda gen_var_1697 (App list gen_var_1630) (App cons gen_var_1630 gen_var_1636 gen_var_1697)) (App ExportProof.sublists gen_var_1630 gen_var_1697)))) (App Coq.Lists.List.map_app (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 gen_var_1697) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1630) (Lambda gen_var_1698 (App list gen_var_1630) (App cons gen_var_1630 gen_var_1636 gen_var_1698)) (App ExportProof.sublists gen_var_1630 gen_var_1698)))) REVERTcast (App eq (App list (App list gen_var_1631)) (App ExportProof.sublists gen_var_1631 (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632 (App cons gen_var_1630 gen_var_1636 gen_var_1698))) (App Coq.Lists.List.map (App list gen_var_1630) (App list gen_var_1631) (App Coq.Lists.List.map gen_var_1630 gen_var_1631 gen_var_1632) (App ExportProof.sublists gen_var_1630 (App cons gen_var_1630 gen_var_1636 gen_var_1698)))))))) gen_var_1698)))))) (Definition ExportProof.sublists_proper (Lambda gen_var_1755 (Sort Type) (Lambda gen_var_1787 (App list gen_var_1755) (App Coq.Init.Datatypes.list_ind gen_var_1755 (Lambda gen_var_1757 (App list gen_var_1755) (App eq (App list (App list gen_var_1755)) (App ExportProof.sublists gen_var_1755 gen_var_1757) (App cons (App list gen_var_1755) (App nil gen_var_1755) (App Coq.Lists.List.filter (App list gen_var_1755) (App ExportProof.nonempty gen_var_1755) (App ExportProof.sublists gen_var_1755 gen_var_1757))))) (App eq_refl (App list (App list gen_var_1755)) (App cons (App list gen_var_1755) (App nil gen_var_1755) (App Coq.Lists.List.filter (App list gen_var_1755) (App ExportProof.nonempty gen_var_1755) (App ExportProof.sublists gen_var_1755 (App nil gen_var_1755))))) (Lambda gen_var_1758 gen_var_1755 (Lambda gen_var_1787 (App list gen_var_1755) (Lambda gen_var_1760 (App eq (App list (App list gen_var_1755)) (App ExportProof.sublists gen_var_1755 gen_var_1759) (App cons (App list gen_var_1755) (App nil gen_var_1755) (App Coq.Lists.List.filter (App list gen_var_1755) (App ExportProof.nonempty gen_var_1755) (App ExportProof.sublists gen_var_1755 gen_var_1759)))) (Cast (App (Lambda gen_var_1761 (App eq (App list (App list gen_var_1755)) (App ExportProof.sublists gen_var_1755 gen_var_1759) (App cons (App list gen_var_1755) (App nil gen_var_1755) (App Coq.Lists.List.filter (App list gen_var_1755) (App ExportProof.nonempty gen_var_1755) (App ExportProof.sublists gen_var_1755 gen_var_1759)))) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (App list (App list gen_var_1755)) (App eq (App list (App list gen_var_1755))) (App Coq.Classes.RelationClasses.eq_Transitive (App list (App list gen_var_1755))) (App Coq.Init.Datatypes.app (App list gen_var_1755) (App ExportProof.sublists gen_var_1755 gen_var_1759) (App Coq.Lists.List.map (App list gen_var_1755) (App list gen_var_1755) (Lambda gen_var_1762 (App list gen_var_1755) (App cons gen_var_1755 gen_var_1758 gen_var_1762)) (App ExportProof.sublists gen_var_1755 gen_var_1762))) (App Coq.Init.Datatypes.app (App list gen_var_1755) (App cons (App list gen_var_1755) (App nil gen_var_1755) (App Coq.Lists.List.filter (App list gen_var_1755) (App ExportProof.nonempty gen_var_1755) (App ExportProof.sublists gen_var_1755 gen_var_1762))) (App Coq.Lists.List.map (App list gen_var_1755) (App list gen_var_1755) (Lambda gen_var_1763 (App list gen_var_1755) (App cons gen_var_1755 gen_var_1758 gen_var_1763)) (App ExportProof.sublists gen_var_1755 gen_var_1763))) (App Coq.Classes.Morphisms.reflexive_proper (Prod Anonymous (App list (App list gen_var_1755)) (Prod Anonymous (App list (App list gen_var_1755)) (App list (App list gen_var_1755)))) (App Coq.Classes.Morphisms.respectful (App list (App list gen_var_1755)) (Prod Anonymous (App list (App list gen_var_1755)) (App list (App list gen_var_1755))) (App eq (App list (App list gen_var_1755))) (App Coq.Classes.Morphisms.respectful (App list (App list gen_var_1755)) (App list (App list gen_var_1755)) (App eq (App list (App list gen_var_1755))) (App eq (App list (App list gen_var_1755))))) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive (App list (App list gen_var_1755)) (Prod Anonymous (App list (App list gen_var_1755)) (App list (App list gen_var_1755))) (App Coq.Classes.Morphisms.respectful (App list (App list gen_var_1755)) (App list (App list gen_var_1755)) (App eq (App list (App list gen_var_1755))) (App eq (App list (App list gen_var_1755)))) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive (App list (App list gen_var_1755)) (App list (App list gen_var_1755)) (App eq (App list (App list gen_var_1755))) (App Coq.Classes.RelationClasses.eq_Reflexive (App list (App list gen_var_1755))))) (App Coq.Init.Datatypes.app (App list gen_var_1755)) (App ExportProof.sublists gen_var_1755 gen_var_1763) (App cons (App list gen_var_1755) (App nil gen_var_1755) (App Coq.Lists.List.filter (App list gen_var_1755) (App ExportProof.nonempty gen_var_1755) (App ExportProof.sublists gen_var_1755 gen_var_1763))) gen_var_1761 (App Coq.Lists.List.map (App list gen_var_1755) (App list gen_var_1755) (Lambda gen_var_1768 (App list gen_var_1755) (App cons gen_var_1755 gen_var_1758 gen_var_1768)) (App ExportProof.sublists gen_var_1755 gen_var_1768)) (App Coq.Lists.List.map (App list gen_var_1755) (App list gen_var_1755) (Lambda gen_var_1769 (App list gen_var_1755) (App cons gen_var_1755 gen_var_1758 gen_var_1769)) (App ExportProof.sublists gen_var_1755 gen_var_1769)) (App Coq.Classes.Morphisms.eq_proper_proxy (App list (App list gen_var_1755)) (App Coq.Lists.List.map (App list gen_var_1755) (App list gen_var_1755) (Lambda gen_var_1770 (App list gen_var_1755) (App cons gen_var_1755 gen_var_1758 gen_var_1770)) (App ExportProof.sublists gen_var_1755 gen_var_1770)))) (App cons (App list gen_var_1755) (App nil gen_var_1755) (App Coq.Lists.List.filter (App list gen_var_1755) (App ExportProof.nonempty gen_var_1755) (App Coq.Init.Datatypes.app (App list gen_var_1755) (App ExportProof.sublists gen_var_1755 gen_var_1770) (App Coq.Lists.List.map (App list gen_var_1755) (App list gen_var_1755) (Lambda gen_var_1771 (App list gen_var_1755) (App cons gen_var_1755 gen_var_1758 gen_var_1771)) (App ExportProof.sublists gen_var_1755 gen_var_1771))))) (App cons (App list gen_var_1755) (App nil gen_var_1755) (App Coq.Lists.List.filter (App list gen_var_1755) (App ExportProof.nonempty gen_var_1755) (App Coq.Init.Datatypes.app (App list gen_var_1755) (App ExportProof.sublists gen_var_1755 gen_var_1771) (App Coq.Lists.List.map (App list gen_var_1755) (App list gen_var_1755) (Lambda gen_var_1772 (App list gen_var_1755) (App cons gen_var_1755 gen_var_1758 gen_var_1772)) (App ExportProof.sublists gen_var_1755 gen_var_1772))))) (App Coq.Classes.Morphisms.eq_proper_proxy (App list (App list gen_var_1755)) (App cons (App list gen_var_1755) (App nil gen_var_1755) (App Coq.Lists.List.filter (App list gen_var_1755) (App ExportProof.nonempty gen_var_1755) (App Coq.Init.Datatypes.app (App list gen_var_1755) (App ExportProof.sublists gen_var_1755 gen_var_1772) (App Coq.Lists.List.map (App list gen_var_1755) (App list gen_var_1755) (Lambda gen_var_1773 (App list gen_var_1755) (App cons gen_var_1755 gen_var_1758 gen_var_1773)) (App ExportProof.sublists gen_var_1755 gen_var_1773)))))))) gen_var_1760 (Cast (App Coq.Init.Logic.eq_ind_r (App list (App list gen_var_1755)) (App Coq.Init.Datatypes.app (App list gen_var_1755) (App Coq.Lists.List.filter (App list gen_var_1755) (App ExportProof.nonempty gen_var_1755) (App ExportProof.sublists gen_var_1755 gen_var_1773)) (App Coq.Lists.List.filter (App list gen_var_1755) (App ExportProof.nonempty gen_var_1755) (App Coq.Lists.List.map (App list gen_var_1755) (App list gen_var_1755) (Lambda gen_var_1774 (App list gen_var_1755) (App cons gen_var_1755 gen_var_1758 gen_var_1774)) (App ExportProof.sublists gen_var_1755 gen_var_1774)))) (Lambda gen_var_1776 (App list (App list gen_var_1755)) (App eq (App list (App list gen_var_1755)) (App cons (App list gen_var_1755) (App nil gen_var_1755) (App Coq.Init.Datatypes.app (App list gen_var_1755) (App Coq.Lists.List.filter (App list gen_var_1755) (App ExportProof.nonempty gen_var_1755) (App ExportProof.sublists gen_var_1755 gen_var_1775)) (App Coq.Lists.List.map (App list gen_var_1755) (App list gen_var_1755) (Lambda gen_var_1776 (App list gen_var_1755) (App cons gen_var_1755 gen_var_1758 gen_var_1776)) (App ExportProof.sublists gen_var_1755 gen_var_1776)))) (App cons (App list gen_var_1755) (App nil gen_var_1755) gen_var_1776))) (App Coq.Init.Logic.eq_ind_r (App list (App list gen_var_1755)) (App Coq.Lists.List.map (App list gen_var_1755) (App list gen_var_1755) (Lambda gen_var_1777 (App list gen_var_1755) (App cons gen_var_1755 gen_var_1758 gen_var_1777)) (App ExportProof.sublists gen_var_1755 gen_var_1777)) (Lambda gen_var_1779 (App list (App list gen_var_1755)) (App eq (App list (App list gen_var_1755)) (App cons (App list gen_var_1755) (App nil gen_var_1755) (App Coq.Init.Datatypes.app (App list gen_var_1755) (App Coq.Lists.List.filter (App list gen_var_1755) (App ExportProof.nonempty gen_var_1755) (App ExportProof.sublists gen_var_1755 gen_var_1778)) (App Coq.Lists.List.map (App list gen_var_1755) (App list gen_var_1755) (Lambda gen_var_1779 (App list gen_var_1755) (App cons gen_var_1755 gen_var_1758 gen_var_1779)) (App ExportProof.sublists gen_var_1755 gen_var_1779)))) (App cons (App list gen_var_1755) (App nil gen_var_1755) (App Coq.Init.Datatypes.app (App list gen_var_1755) (App Coq.Lists.List.filter (App list gen_var_1755) (App ExportProof.nonempty gen_var_1755) (App ExportProof.sublists gen_var_1755 gen_var_1779)) gen_var_1779)))) (App eq_refl (App list (App list gen_var_1755)) (App cons (App list gen_var_1755) (App nil gen_var_1755) (App Coq.Init.Datatypes.app (App list gen_var_1755) (App Coq.Lists.List.filter (App list gen_var_1755) (App ExportProof.nonempty gen_var_1755) (App ExportProof.sublists gen_var_1755 gen_var_1779)) (App Coq.Lists.List.map (App list gen_var_1755) (App list gen_var_1755) (Lambda gen_var_1780 (App list gen_var_1755) (App cons gen_var_1755 gen_var_1758 gen_var_1780)) (App ExportProof.sublists gen_var_1755 gen_var_1780))))) (App Coq.Lists.List.filter (App list gen_var_1755) (App ExportProof.nonempty gen_var_1755) (App Coq.Lists.List.map (App list gen_var_1755) (App list gen_var_1755) (Lambda gen_var_1781 (App list gen_var_1755) (App cons gen_var_1755 gen_var_1758 gen_var_1781)) (App ExportProof.sublists gen_var_1755 gen_var_1781))) (App ExportProof.filter_map_always (App list gen_var_1755) (App list gen_var_1755) (App ExportProof.nonempty gen_var_1755) (Lambda gen_var_1782 (App list gen_var_1755) (App cons gen_var_1755 gen_var_1758 gen_var_1782)) (App ExportProof.sublists gen_var_1755 gen_var_1782) (Lambda gen_var_1783 (App list gen_var_1755) (App eq_refl bool true)))) (App Coq.Lists.List.filter (App list gen_var_1755) (App ExportProof.nonempty gen_var_1755) (App Coq.Init.Datatypes.app (App list gen_var_1755) (App ExportProof.sublists gen_var_1755 gen_var_1782) (App Coq.Lists.List.map (App list gen_var_1755) (App list gen_var_1755) (Lambda gen_var_1784 (App list gen_var_1755) (App cons gen_var_1755 gen_var_1758 gen_var_1784)) (App ExportProof.sublists gen_var_1755 gen_var_1784)))) (App ExportProof.filter_app (App list gen_var_1755) (App ExportProof.nonempty gen_var_1755) (App ExportProof.sublists gen_var_1755 gen_var_1784) (App Coq.Lists.List.map (App list gen_var_1755) (App list gen_var_1755) (Lambda gen_var_1785 (App list gen_var_1755) (App cons gen_var_1755 gen_var_1758 gen_var_1785)) (App ExportProof.sublists gen_var_1755 gen_var_1785)))) REVERTcast (App eq (App list (App list gen_var_1755)) (App Coq.Init.Datatypes.app (App list gen_var_1755) (App cons (App list gen_var_1755) (App nil gen_var_1755) (App Coq.Lists.List.filter (App list gen_var_1755) (App ExportProof.nonempty gen_var_1755) (App ExportProof.sublists gen_var_1755 gen_var_1785))) (App Coq.Lists.List.map (App list gen_var_1755) (App list gen_var_1755) (Lambda gen_var_1786 (App list gen_var_1755) (App cons gen_var_1755 gen_var_1758 gen_var_1786)) (App ExportProof.sublists gen_var_1755 gen_var_1786))) (App cons (App list gen_var_1755) (App nil gen_var_1755) (App Coq.Lists.List.filter (App list gen_var_1755) (App ExportProof.nonempty gen_var_1755) (App Coq.Init.Datatypes.app (App list gen_var_1755) (App ExportProof.sublists gen_var_1755 gen_var_1786) (App Coq.Lists.List.map (App list gen_var_1755) (App list gen_var_1755) (Lambda gen_var_1787 (App list gen_var_1755) (App cons gen_var_1755 gen_var_1758 gen_var_1787)) (App ExportProof.sublists gen_var_1755 gen_var_1787)))))))) REVERTcast (App eq (App list (App list gen_var_1755)) (App ExportProof.sublists gen_var_1755 (App cons gen_var_1755 gen_var_1758 gen_var_1787)) (App cons (App list gen_var_1755) (App nil gen_var_1755) (App Coq.Lists.List.filter (App list gen_var_1755) (App ExportProof.nonempty gen_var_1755) (App ExportProof.sublists gen_var_1755 (App cons gen_var_1755 gen_var_1758 gen_var_1787))))))))) gen_var_1787)))) (Definition ExportProof.filter_map_always (Lambda gen_var_1789 (Sort Type) (Lambda gen_var_1790 (Sort Type) (Lambda gen_var_1791 (Prod gen_var_1792 gen_var_1790 bool) (Lambda gen_var_1793 (Prod Anonymous gen_var_1789 gen_var_1790) (Lambda gen_var_1807 (App list gen_var_1789) (Lambda gen_var_1796 (Prod gen_var_1797 gen_var_1789 (App eq bool (App gen_var_1791 (App gen_var_1793 gen_var_1797)) true)) (App Coq.Init.Datatypes.list_ind gen_var_1789 (Lambda gen_var_1798 (App list gen_var_1789) (App eq (App list gen_var_1790) (App Coq.Lists.List.filter gen_var_1790 gen_var_1791 (App Coq.Lists.List.map gen_var_1789 gen_var_1790 gen_var_1793 gen_var_1798)) (App Coq.Lists.List.map gen_var_1789 gen_var_1790 gen_var_1793 gen_var_1798))) (App eq_refl (App list gen_var_1790) (App Coq.Lists.List.map gen_var_1789 gen_var_1790 gen_var_1793 (App nil gen_var_1789))) (Lambda gen_var_1799 gen_var_1789 (Lambda gen_var_1807 (App list gen_var_1789) (Lambda gen_var_1801 (App eq (App list gen_var_1790) (App Coq.Lists.List.filter gen_var_1790 gen_var_1791 (App Coq.Lists.List.map gen_var_1789 gen_var_1790 gen_var_1793 gen_var_1800)) (App Coq.Lists.List.map gen_var_1789 gen_var_1790 gen_var_1793 gen_var_1800)) (Cast (App Coq.Init.Logic.eq_ind_r bool true (Lambda gen_var_1803 bool (App eq (App list gen_var_1790) (Case 0 (Lambda gen_var_1803 bool (App list gen_var_1790)) (CaseMatch gen_var_1803) (CaseBranches (App cons gen_var_1790 (App gen_var_1793 gen_var_1799) (App Coq.Lists.List.filter gen_var_1790 gen_var_1791 (App Coq.Lists.List.map gen_var_1789 gen_var_1790 gen_var_1793 gen_var_1800))) (App Coq.Lists.List.filter gen_var_1790 gen_var_1791 (App Coq.Lists.List.map gen_var_1789 gen_var_1790 gen_var_1793 gen_var_1800)))) (App cons gen_var_1790 (App gen_var_1793 gen_var_1799) (App Coq.Lists.List.map gen_var_1789 gen_var_1790 gen_var_1793 gen_var_1800)))) (App Coq.Init.Logic.eq_trans (App list gen_var_1790) (App cons gen_var_1790 (App gen_var_1793 gen_var_1799) (App Coq.Lists.List.filter gen_var_1790 gen_var_1791 (App Coq.Lists.List.map gen_var_1789 gen_var_1790 gen_var_1793 gen_var_1800))) (App cons gen_var_1790 (App gen_var_1793 gen_var_1799) (App Coq.Lists.List.filter gen_var_1790 gen_var_1791 (App Coq.Lists.List.map gen_var_1789 gen_var_1790 gen_var_1793 gen_var_1800))) (App cons gen_var_1790 (App gen_var_1793 gen_var_1799) (App Coq.Lists.List.map gen_var_1789 gen_var_1790 gen_var_1793 gen_var_1800)) (App Coq.Init.Logic.f_equal (Prod gen_var_1804 (App list gen_var_1790) (App list gen_var_1790)) (App list gen_var_1790) (Lambda gen_var_1805 (Prod gen_var_1806 (App list gen_var_1790) (App list gen_var_1790)) (App gen_var_1805 (App Coq.Lists.List.filter gen_var_1790 gen_var_1791 (App Coq.Lists.List.map gen_var_1789 gen_var_1790 gen_var_1793 gen_var_1806)))) (App cons gen_var_1790 (App gen_var_1793 gen_var_1799)) (App cons gen_var_1790 (App gen_var_1793 gen_var_1799)) (App eq_refl (Prod gen_var_1807 (App list gen_var_1790) (App list gen_var_1790)) (App cons gen_var_1790 (App gen_var_1793 gen_var_1799)))) (App Coq.Init.Logic.f_equal (App list gen_var_1790) (App list gen_var_1790) (App cons gen_var_1790 (App gen_var_1793 gen_var_1799)) (App Coq.Lists.List.filter gen_var_1790 gen_var_1791 (App Coq.Lists.List.map gen_var_1789 gen_var_1790 gen_var_1793 gen_var_1807)) (App Coq.Lists.List.map gen_var_1789 gen_var_1790 gen_var_1793 gen_var_1807) gen_var_1801)) (App gen_var_1791 (App gen_var_1793 gen_var_1799)) (App gen_var_1796 gen_var_1799)) REVERTcast (App eq (App list gen_var_1790) (App Coq.Lists.List.filter gen_var_1790 gen_var_1791 (App Coq.Lists.List.map gen_var_1789 gen_var_1790 gen_var_1793 (App cons gen_var_1789 gen_var_1799 gen_var_1807))) (App Coq.Lists.List.map gen_var_1789 gen_var_1790 gen_var_1793 (App cons gen_var_1789 gen_var_1799 gen_var_1807))))))) gen_var_1807)))))))) (Definition ExportProof.sum_app (Lambda gen_var_1830 (App list Z) (Lambda gen_var_1827 (App list Z) (App Coq.Init.Datatypes.list_ind Z (Lambda gen_var_1828 (App list Z) (App eq Z (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1828 gen_var_1827)) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum gen_var_1828) (App ExportProof.sum gen_var_1827)))) (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App nil Z)) (App ExportProof.sum gen_var_1827))) (Lambda gen_var_1829 Z (Lambda gen_var_1830 (App list Z) (Lambda gen_var_1831 (App eq Z (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1830 gen_var_1827)) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum gen_var_1830) (App ExportProof.sum gen_var_1827))) (Cast (App Coq.Logic.Decidable.dec_not_not (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1830 gen_var_1827))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 (App ExportProof.sum gen_var_1830)) (App ExportProof.sum gen_var_1827))) (App Coq.ZArith.BinInt.Z.eq_decidable (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1830 gen_var_1827))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 (App ExportProof.sum gen_var_1830)) (App ExportProof.sum gen_var_1827))) (Lambda gen_var_1888 (App Coq.Init.Logic.not (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1830 gen_var_1827))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 (App ExportProof.sum gen_var_1830)) (App ExportProof.sum gen_var_1827)))) (App Coq.Init.Logic.ex_ind Z (Lambda gen_var_1833 Z (App eq Z (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1830 gen_var_1827)) gen_var_1833)) False (Lambda gen_var_1834 Z (Lambda gen_var_1835 (App eq Z (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1830 gen_var_1827)) gen_var_1834) (App Coq.Init.Logic.ex_ind Z (Lambda gen_var_1836 Z (App eq Z (App ExportProof.sum gen_var_1830) gen_var_1836)) False (Lambda gen_var_1837 Z (Lambda gen_var_1838 (App eq Z (App ExportProof.sum gen_var_1830) gen_var_1837) (App Coq.Init.Logic.ex_ind Z (Lambda gen_var_1839 Z (App eq Z (App ExportProof.sum gen_var_1827) gen_var_1839)) False (Lambda gen_var_1840 Z (Lambda gen_var_1841 (App eq Z (App ExportProof.sum gen_var_1827) gen_var_1840) (App (Lambda gen_var_1842 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_1844 (App gen_var_1842 gen_var_1834) (App Coq.Init.Logic.eq_ind_r Z gen_var_1834 gen_var_1842 gen_var_1844 (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1830 gen_var_1827)) gen_var_1835))) (Lambda gen_var_1845 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_1845 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum gen_var_1830) (App ExportProof.sum gen_var_1827)))) Z0) False)) (App (Lambda gen_var_1847 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_1849 (App gen_var_1847 gen_var_1837) (App Coq.Init.Logic.eq_ind_r Z gen_var_1837 gen_var_1847 gen_var_1849 (App ExportProof.sum gen_var_1830) gen_var_1838))) (Lambda gen_var_1850 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_1834 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add gen_var_1850 (App ExportProof.sum gen_var_1827)))) Z0) False)) (App (Lambda gen_var_1852 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_1854 (App gen_var_1852 gen_var_1840) (App Coq.Init.Logic.eq_ind_r Z gen_var_1840 gen_var_1852 gen_var_1854 (App ExportProof.sum gen_var_1827) gen_var_1841))) (Lambda gen_var_1855 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_1834 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add gen_var_1837 gen_var_1855))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_comm gen_var_1837 gen_var_1840 (Lambda gen_var_1857 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_1834 (App Coq.ZArith.BinIntDef.Z.opp gen_var_1857)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_plus_distr gen_var_1840 gen_var_1837 (Lambda gen_var_1859 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_1834 gen_var_1859) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_1840 (Lambda gen_var_1861 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_1834 (App Coq.ZArith.BinIntDef.Z.add gen_var_1861 (App Coq.ZArith.BinIntDef.Z.opp gen_var_1837))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_1837 (Lambda gen_var_1863 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add gen_var_1834 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1840 (App Zneg xH)) gen_var_1863)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_permute gen_var_1834 (App Coq.ZArith.BinIntDef.Z.mul gen_var_1840 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.mul gen_var_1837 (App Zneg xH)) (Lambda gen_var_1865 Z (Prod Anonymous (App eq Z gen_var_1865 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_comm gen_var_1834 (App Coq.ZArith.BinIntDef.Z.mul gen_var_1837 (App Zneg xH)) (Lambda gen_var_1867 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1840 (App Zneg xH)) gen_var_1867) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor0 gen_var_1834 (Lambda gen_var_1869 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1840 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1837 (App Zneg xH)) gen_var_1869)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor6 (App Coq.ZArith.BinIntDef.Z.mul gen_var_1834 (App Zpos xH)) (Lambda gen_var_1871 Z (Prod Anonymous (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1840 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1837 (App Zneg xH)) gen_var_1871)) Z0) False)) (Lambda gen_var_1873 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1840 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1837 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1834 (App Zpos xH)) Z0))) Z0) (App (Lambda gen_var_1874 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_1876 (App gen_var_1874 gen_var_1834) (App Coq.Init.Logic.eq_ind_r Z gen_var_1834 gen_var_1874 gen_var_1876 (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1830 gen_var_1827)) gen_var_1835))) (Lambda gen_var_1877 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 gen_var_1877) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 (App ExportProof.sum gen_var_1830)) (App ExportProof.sum gen_var_1827)))) Z0) False)) (App (Lambda gen_var_1879 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_1881 (App gen_var_1879 gen_var_1837) (App Coq.Init.Logic.eq_ind_r Z gen_var_1837 gen_var_1879 gen_var_1881 (App ExportProof.sum gen_var_1830) gen_var_1838))) (Lambda gen_var_1882 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 gen_var_1834) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 gen_var_1882) (App ExportProof.sum gen_var_1827)))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_comm gen_var_1829 gen_var_1837 (Lambda gen_var_1884 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 gen_var_1834) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add gen_var_1884 (App ExportProof.sum gen_var_1827)))) Z0) False)) (App (Lambda gen_var_1886 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_1888 (App gen_var_1886 gen_var_1840) (App Coq.Init.Logic.eq_ind_r Z gen_var_1840 gen_var_1886 gen_var_1888 (App ExportProof.sum gen_var_1827) gen_var_1841))) (Lambda gen_var_1889 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 gen_var_1834) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1837 gen_var_1829) gen_var_1889))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_comm (App Coq.ZArith.BinIntDef.Z.add gen_var_1837 gen_var_1829) gen_var_1840 (Lambda gen_var_1891 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 gen_var_1834) (App Coq.ZArith.BinIntDef.Z.opp gen_var_1891)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_plus_distr gen_var_1840 (App Coq.ZArith.BinIntDef.Z.add gen_var_1837 gen_var_1829) (Lambda gen_var_1893 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 gen_var_1834) gen_var_1893) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_1840 (Lambda gen_var_1895 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 gen_var_1834) (App Coq.ZArith.BinIntDef.Z.add gen_var_1895 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add gen_var_1837 gen_var_1829)))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_plus_distr gen_var_1837 gen_var_1829 (Lambda gen_var_1897 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 gen_var_1834) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1840 (App Zneg xH)) gen_var_1897)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_1837 (Lambda gen_var_1899 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 gen_var_1834) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1840 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add gen_var_1899 (App Coq.ZArith.BinIntDef.Z.opp gen_var_1829)))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_1829 (Lambda gen_var_1901 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 gen_var_1834) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1840 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1837 (App Zneg xH)) gen_var_1901))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_permute (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 gen_var_1834) (App Coq.ZArith.BinIntDef.Z.mul gen_var_1840 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1837 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.mul gen_var_1829 (App Zneg xH))) (Lambda gen_var_1903 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_1903 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_permute (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 gen_var_1834) (App Coq.ZArith.BinIntDef.Z.mul gen_var_1837 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.mul gen_var_1829 (App Zneg xH)) (Lambda gen_var_1905 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1840 (App Zneg xH)) gen_var_1905) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_comm (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 gen_var_1834) (App Coq.ZArith.BinIntDef.Z.mul gen_var_1829 (App Zneg xH)) (Lambda gen_var_1907 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1840 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1837 (App Zneg xH)) gen_var_1907)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_assoc (App Coq.ZArith.BinIntDef.Z.mul gen_var_1829 (App Zneg xH)) gen_var_1829 gen_var_1834 (Lambda gen_var_1909 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1840 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1837 (App Zneg xH)) gen_var_1909)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor3 gen_var_1829 (App Zneg xH) (Lambda gen_var_1911 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1840 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1837 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add gen_var_1911 gen_var_1834))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor0 gen_var_1834 (Lambda gen_var_1913 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1840 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1837 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1829 Z0) gen_var_1913))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor6 (App Coq.ZArith.BinIntDef.Z.mul gen_var_1834 (App Zpos xH)) (Lambda gen_var_1915 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1840 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1837 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1829 Z0) gen_var_1915))) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 gen_var_1829 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1834 (App Zpos xH)) Z0) (Lambda gen_var_1917 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1840 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1837 (App Zneg xH)) gen_var_1917)) Z0) False)) (Lambda gen_var_1919 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1840 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1837 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1834 (App Zpos xH)) Z0))) Z0) (App Coq.omega.OmegaLemmas.fast_OMEGA15 gen_var_1840 (App Zneg xH) (App Zneg xH) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1837 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1834 (App Zpos xH)) Z0)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1837 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1834 (App Zpos xH)) Z0)) (App Zneg xH) (Lambda gen_var_1920 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_1920 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 gen_var_1840 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1837 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1834 (App Zpos xH)) Z0)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1837 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1834 (App Zpos xH)) Z0)) (App Zneg xH))) (Lambda gen_var_1922 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_1922 Z0) False)) (App Coq.omega.OmegaLemmas.fast_OMEGA15 gen_var_1837 (App Zneg xH) (App Zneg xH) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1834 (App Zpos xH)) Z0) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1834 (App Zpos xH)) Z0) (App Zneg xH) (Lambda gen_var_1924 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_1924 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 gen_var_1837 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1834 (App Zpos xH)) Z0) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1834 (App Zpos xH)) Z0) (App Zneg xH))) (Lambda gen_var_1926 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_1926 Z0) False)) (App Coq.omega.OmegaLemmas.fast_OMEGA15 gen_var_1834 (App Zpos xH) (App Zpos xH) Z0 Z0 (App Zneg xH) (Lambda gen_var_1928 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_1928 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 gen_var_1834 (App Coq.ZArith.BinIntDef.Z.add Z0 (App Coq.ZArith.BinIntDef.Z.mul Z0 (App Zneg xH))) (Lambda gen_var_1930 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_1930 Z0) False)) (Lambda gen_var_1932 (App Coq.ZArith.BinInt.Zne Z0 Z0) (App gen_var_1932 (App eq_refl Z Z0)))))))) (App Coq.omega.OmegaLemmas.OMEGA17 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1840 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1837 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1834 (App Zpos xH)) Z0))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1840 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1837 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1834 (App Zpos xH)) Z0))) (App Zneg xH) gen_var_1919 gen_var_1873)))))))))))))))))))) (App Coq.ZArith.auxiliary.Zne_left (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1830 gen_var_1827))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add gen_var_1829 (App ExportProof.sum gen_var_1830)) (App ExportProof.sum gen_var_1827)) gen_var_1888))))))))))))) (App Coq.ZArith.auxiliary.Zegal_left (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1830 gen_var_1827)) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum gen_var_1830) (App ExportProof.sum gen_var_1827)) gen_var_1831)))) (App Coq.omega.OmegaLemmas.new_var (App ExportProof.sum gen_var_1827))))) (App Coq.omega.OmegaLemmas.new_var (App ExportProof.sum gen_var_1830))))) (App Coq.omega.OmegaLemmas.new_var (App ExportProof.sum (App Coq.Init.Datatypes.app Z gen_var_1830 gen_var_1827)))))) REVERTcast (App eq Z (App ExportProof.sum (App Coq.Init.Datatypes.app Z (App cons Z gen_var_1829 gen_var_1830) gen_var_1827)) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App cons Z gen_var_1829 gen_var_1830)) (App ExportProof.sum gen_var_1827))))))) gen_var_1830)))) (Definition ExportProof.filter_app (Lambda gen_var_1937 (Sort Type) (Lambda gen_var_1938 (Prod Anonymous gen_var_1937 bool) (Lambda gen_var_1942 (App list gen_var_1937) (Lambda gen_var_1941 (App list gen_var_1937) (App Coq.Init.Datatypes.list_ind gen_var_1937 (Lambda gen_var_1942 (App list gen_var_1937) (App eq (App list gen_var_1937) (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 (App Coq.Init.Datatypes.app gen_var_1937 gen_var_1942 gen_var_1941)) (App Coq.Init.Datatypes.app gen_var_1937 (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 gen_var_1942) (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 gen_var_1941)))) (Cast (App eq_refl (App list gen_var_1937) (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 gen_var_1941)) REVERTcast (App eq (App list gen_var_1937) (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 (App Coq.Init.Datatypes.app gen_var_1937 (App nil gen_var_1937) gen_var_1941)) (App Coq.Init.Datatypes.app gen_var_1937 (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 (App nil gen_var_1937)) (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 gen_var_1941)))) (Lambda gen_var_1943 gen_var_1937 (Lambda gen_var_1953 (App list gen_var_1937) (Lambda gen_var_1945 (App eq (App list gen_var_1937) (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 (App Coq.Init.Datatypes.app gen_var_1937 gen_var_1944 gen_var_1941)) (App Coq.Init.Datatypes.app gen_var_1937 (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 gen_var_1944) (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 gen_var_1941))) (Cast (LetIn gen_var_1949 (App gen_var_1938 gen_var_1943) bool (Case 0 (Lambda gen_var_1949 bool (App eq (App list gen_var_1937) (Case 0 (Lambda gen_var_1948 bool (App list gen_var_1937)) (CaseMatch gen_var_1948) (CaseBranches (App cons gen_var_1937 gen_var_1943 (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 (App Coq.Init.Datatypes.app gen_var_1937 gen_var_1944 gen_var_1941))) (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 (App Coq.Init.Datatypes.app gen_var_1937 gen_var_1944 gen_var_1941)))) (App Coq.Init.Datatypes.app gen_var_1937 (Case 0 (Lambda gen_var_1949 bool (App list gen_var_1937)) (CaseMatch gen_var_1949) (CaseBranches (App cons gen_var_1937 gen_var_1943 (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 gen_var_1944)) (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 gen_var_1944))) (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 gen_var_1941)))) (CaseMatch gen_var_1949) (CaseBranches (Cast (App Coq.Init.Logic.eq_trans (App list gen_var_1937) (App cons gen_var_1937 gen_var_1943 (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 (App Coq.Init.Datatypes.app gen_var_1937 gen_var_1944 gen_var_1941))) (App cons gen_var_1937 gen_var_1943 (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 (App Coq.Init.Datatypes.app gen_var_1937 gen_var_1944 gen_var_1941))) (App cons gen_var_1937 gen_var_1943 (App Coq.Init.Datatypes.app gen_var_1937 (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 gen_var_1944) (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 gen_var_1941))) (App Coq.Init.Logic.f_equal (Prod gen_var_1950 (App list gen_var_1937) (App list gen_var_1937)) (App list gen_var_1937) (Lambda gen_var_1951 (Prod gen_var_1952 (App list gen_var_1937) (App list gen_var_1937)) (App gen_var_1951 (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 (App Coq.Init.Datatypes.app gen_var_1937 gen_var_1952 gen_var_1941)))) (App cons gen_var_1937 gen_var_1943) (App cons gen_var_1937 gen_var_1943) (App eq_refl (Prod gen_var_1953 (App list gen_var_1937) (App list gen_var_1937)) (App cons gen_var_1937 gen_var_1943))) (App Coq.Init.Logic.f_equal (App list gen_var_1937) (App list gen_var_1937) (App cons gen_var_1937 gen_var_1943) (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 (App Coq.Init.Datatypes.app gen_var_1937 gen_var_1953 gen_var_1941)) (App Coq.Init.Datatypes.app gen_var_1937 (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 gen_var_1953) (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 gen_var_1941)) gen_var_1945)) REVERTcast (App eq (App list gen_var_1937) (App cons gen_var_1937 gen_var_1943 (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 (App Coq.Init.Datatypes.app gen_var_1937 gen_var_1953 gen_var_1941))) (App Coq.Init.Datatypes.app gen_var_1937 (App cons gen_var_1937 gen_var_1943 (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 gen_var_1953)) (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 gen_var_1941)))) (Cast gen_var_1945 REVERTcast (App eq (App list gen_var_1937) (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 (App Coq.Init.Datatypes.app gen_var_1937 gen_var_1953 gen_var_1941)) (App Coq.Init.Datatypes.app gen_var_1937 (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 gen_var_1953) (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 gen_var_1941))))))) REVERTcast (App eq (App list gen_var_1937) (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 (App Coq.Init.Datatypes.app gen_var_1937 (App cons gen_var_1937 gen_var_1943 gen_var_1953) gen_var_1941)) (App Coq.Init.Datatypes.app gen_var_1937 (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 (App cons gen_var_1937 gen_var_1943 gen_var_1953)) (App Coq.Lists.List.filter gen_var_1937 gen_var_1938 gen_var_1941))))))) gen_var_1942)))))) (Definition ExportProof.cardinal_binary_union (Lambda gen_var_1955 ExportProof.set (Lambda gen_var_1956 ExportProof.set (App Coq.Init.Logic.eq_ind Z (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1955 gen_var_1956)) (Lambda gen_var_1957 Z (App eq Z (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1955 gen_var_1956)) gen_var_1957)) (App Coq.Logic.Decidable.dec_not_not (App eq Z (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1955 gen_var_1956)) (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1955 gen_var_1956))) (App Coq.ZArith.BinInt.Z.eq_decidable (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1955 gen_var_1956)) (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1955 gen_var_1956))) (Lambda gen_var_1969 (App Coq.Init.Logic.not (App eq Z (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1955 gen_var_1956)) (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1955 gen_var_1956)))) (App Coq.Init.Logic.ex_ind Z (Lambda gen_var_1959 Z (App eq Z (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1955 gen_var_1956)) gen_var_1959)) False (Lambda gen_var_1960 Z (Lambda gen_var_1961 (App eq Z (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1955 gen_var_1956)) gen_var_1960) (App (Lambda gen_var_1962 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_1964 (App gen_var_1962 gen_var_1960) (App Coq.Init.Logic.eq_ind_r Z gen_var_1960 gen_var_1962 gen_var_1964 (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1955 gen_var_1956)) gen_var_1961))) (Lambda gen_var_1965 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add gen_var_1965 (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1955 gen_var_1956)))) Z0) False)) (App (Lambda gen_var_1967 (Prod Anonymous Z (Sort Prop)) (Lambda gen_var_1969 (App gen_var_1967 gen_var_1960) (App Coq.Init.Logic.eq_ind_r Z gen_var_1960 gen_var_1967 gen_var_1969 (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1955 gen_var_1956)) gen_var_1961))) (Lambda gen_var_1970 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add gen_var_1960 (App Coq.ZArith.BinIntDef.Z.opp gen_var_1970)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 gen_var_1960 (Lambda gen_var_1972 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add gen_var_1960 gen_var_1972) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor2 gen_var_1960 (App Zneg xH) (Lambda gen_var_1974 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_1974 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor6 (App Coq.ZArith.BinIntDef.Z.mul gen_var_1960 Z0) (Lambda gen_var_1976 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_1976 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 gen_var_1960 Z0 (Lambda gen_var_1978 Z (Prod Anonymous (App Coq.ZArith.BinInt.Zne gen_var_1978 Z0) False)) (Lambda gen_var_1980 (App Coq.ZArith.BinInt.Zne Z0 Z0) (App gen_var_1980 (App eq_refl Z Z0)))))))) (App Coq.ZArith.auxiliary.Zne_left (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1955 gen_var_1956)) (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1955 gen_var_1956)) gen_var_1969)))) (App Coq.omega.OmegaLemmas.new_var (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1955 gen_var_1956)))))) (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_1955) (App ExportProof.cardinal gen_var_1956)) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_1955 gen_var_1956))) (App ExportProof.cardinal_union_lemma gen_var_1955 gen_var_1956))))) (Definition ExportProof.inclusion_exclusion (Lambda gen_var_1954 (App list ExportProof.set) (LetIn gen_var_1938 (Lambda gen_var_4 (App list ExportProof.set) (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection gen_var_4)) (App ExportProof.alternating_sign (App Coq.Init.Nat.add (App S O) (App Coq.Init.Datatypes.length ExportProof.set gen_var_4))))) (Prod gen_var_12 (App list ExportProof.set) Z) (LetIn gen_var_1819 (App Coq.Init.Datatypes.length ExportProof.set gen_var_1) nat (LetIn gen_var_68 (App eq_refl nat gen_var_13) (App eq nat gen_var_13 (App Coq.Init.Datatypes.length ExportProof.set gen_var_1)) (App Coq.Init.Datatypes.nat_ind (Lambda gen_var_15 nat (Prod gen_var_39 (App list ExportProof.set) (Prod gen_var_17 (App eq nat gen_var_15 (App Coq.Init.Datatypes.length ExportProof.set gen_var_16)) (App eq Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_16)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_3 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_39)))))))) (Lambda gen_var_59 (App list ExportProof.set) (Lambda gen_var_60 (App eq nat O (App Coq.Init.Datatypes.length ExportProof.set gen_var_40)) (App (Case 1 (Lambda gen_var_42 (App list ExportProof.set) (Prod gen_var_43 (App eq nat O (App Coq.Init.Datatypes.length ExportProof.set gen_var_42)) (App eq Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_42)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_3 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_42))))))) (CaseMatch gen_var_42) (CaseBranches (Lambda gen_var_44 (App eq nat O (App Coq.Init.Datatypes.length ExportProof.set (App nil ExportProof.set))) (Cast (Cast (App Coq.Init.Logic.eq_ind_r Z Z0 (Lambda gen_var_45 Z (App eq Z gen_var_45 Z0)) (App eq_refl Z Z0) (App ExportProof.cardinal ExportProof.empty_set) ExportProof.cardinal_empty) REVERTcast (App eq Z (App ExportProof.cardinal (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_union ExportProof.empty_set (App nil ExportProof.set))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z (Lambda gen_var_57 (App list ExportProof.set) (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection gen_var_57)) (App ExportProof.alternating_sign (App Coq.Init.Nat.add (App S O) (App Coq.Init.Datatypes.length ExportProof.set gen_var_57))))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App nil ExportProof.set))))))) REVERTcast (App eq Z (App ExportProof.cardinal (App ExportProof.list_union (App nil ExportProof.set))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_3 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App nil ExportProof.set)))))))) (Lambda gen_var_58 ExportProof.set (Lambda gen_var_59 (App list ExportProof.set) (Lambda gen_var_60 (App eq nat O (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set gen_var_58 gen_var_59))) (LetIn gen_var_61 (App Coq.Init.Logic.eq_ind nat O (Lambda gen_var_62 nat (Case 0 (Lambda gen_var_63 nat (Sort Prop)) (CaseMatch gen_var_62) (CaseBranches True (Lambda Anonymous nat False)))) I (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set gen_var_58 gen_var_59)) gen_var_60) False (App Coq.Init.Logic.False_ind (App eq Z (App ExportProof.cardinal (App ExportProof.list_union (App cons ExportProof.set gen_var_58 gen_var_59))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_3 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App cons ExportProof.set gen_var_58 gen_var_59)))))) gen_var_61))))))) gen_var_60))) (Lambda gen_var_1819 nat (Lambda gen_var_66 (Prod gen_var_67 (App list ExportProof.set) (Prod gen_var_68 (App eq nat gen_var_65 (App Coq.Init.Datatypes.length ExportProof.set gen_var_67)) (App eq Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_67)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_3 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_67))))))) (Lambda gen_var_1954 (App list ExportProof.set) (Lambda gen_var_85 (App eq nat (App S gen_var_65) (App Coq.Init.Datatypes.length ExportProof.set gen_var_69)) (App (Case 1 (Lambda gen_var_71 (App list ExportProof.set) (Prod gen_var_72 (App eq nat (App S gen_var_65) (App Coq.Init.Datatypes.length ExportProof.set gen_var_71)) (App eq Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_71)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_3 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_71))))))) (CaseMatch gen_var_71) (CaseBranches (Lambda gen_var_73 (App eq nat (App S gen_var_65) (App Coq.Init.Datatypes.length ExportProof.set (App nil ExportProof.set))) (LetIn gen_var_74 (App Coq.Init.Logic.eq_ind nat (App S gen_var_65) (Lambda gen_var_75 nat (Case 0 (Lambda gen_var_76 nat (Sort Prop)) (CaseMatch gen_var_75) (CaseBranches False (Lambda Anonymous nat True)))) I (App Coq.Init.Datatypes.length ExportProof.set (App nil ExportProof.set)) gen_var_73) False (App Coq.Init.Logic.False_ind (App eq Z (App ExportProof.cardinal (App ExportProof.list_union (App nil ExportProof.set))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_3 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App nil ExportProof.set)))))) gen_var_74))) (Lambda gen_var_1943 ExportProof.set (Lambda gen_var_1954 (App list ExportProof.set) (Lambda gen_var_85 (App eq nat (App S gen_var_76) (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set gen_var_78 gen_var_79))) (LetIn gen_var_1969 (App Coq.Init.Logic.f_equal nat nat (Lambda gen_var_82 nat (Case 0 (Lambda gen_var_83 nat nat) (CaseMatch gen_var_82) (CaseBranches gen_var_83 (Lambda gen_var_84 nat gen_var_84)))) (App S gen_var_84) (App S (App Coq.Init.Datatypes.length ExportProof.set gen_var_79)) gen_var_80) (App eq nat gen_var_84 (App Coq.Init.Datatypes.length ExportProof.set gen_var_79)) (App (Lambda gen_var_85 (App eq nat gen_var_84 (App Coq.Init.Datatypes.length ExportProof.set gen_var_79)) (Cast (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_78) (App ExportProof.cardinal (App ExportProof.list_union gen_var_79))) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_78 (App ExportProof.list_union gen_var_79)))) (Lambda gen_var_89 Z (App eq Z gen_var_89 (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_3 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Init.Datatypes.app (App list ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_79) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_90 (App list ExportProof.set) (App cons ExportProof.set gen_var_78 gen_var_90)) (App ExportProof.sublists ExportProof.set gen_var_90)))))))) (App Coq.Init.Logic.eq_ind_r (App list (App list ExportProof.set)) (App Coq.Init.Datatypes.app (App list ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_90)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_91 (App list ExportProof.set) (App cons ExportProof.set gen_var_78 gen_var_91)) (App ExportProof.sublists ExportProof.set gen_var_91)))) (Lambda gen_var_92 (App list (App list ExportProof.set)) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_78) (App ExportProof.cardinal (App ExportProof.list_union gen_var_92))) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_78 (App ExportProof.list_union gen_var_92)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_3 gen_var_92)))) (App Coq.Init.Logic.eq_ind_r (App list Z) (App Coq.Init.Datatypes.app Z (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_3 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_92))) (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_3 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_93 (App list ExportProof.set) (App cons ExportProof.set gen_var_78 gen_var_93)) (App ExportProof.sublists ExportProof.set gen_var_93))))) (Lambda gen_var_94 (App list Z) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_78) (App ExportProof.cardinal (App ExportProof.list_union gen_var_94))) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_78 (App ExportProof.list_union gen_var_94)))) (App ExportProof.sum gen_var_94))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_3 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_94)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_3 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_95 (App list ExportProof.set) (App cons ExportProof.set gen_var_78 gen_var_95)) (App ExportProof.sublists ExportProof.set gen_var_95)))))) (Lambda gen_var_96 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_78) (App ExportProof.cardinal (App ExportProof.list_union gen_var_95))) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_78 (App ExportProof.list_union gen_var_95)))) gen_var_96)) (App Coq.Init.Logic.eq_ind_r Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_3 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_95)))) (Lambda gen_var_97 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_78) gen_var_97) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_78 (App ExportProof.list_union gen_var_95)))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_3 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_95)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_3 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_98 (App list ExportProof.set) (App cons ExportProof.set gen_var_78 gen_var_98)) (App ExportProof.sublists ExportProof.set gen_var_98)))))))) (LetIn gen_var_99 (App Coq.Lists.List.map ExportProof.set (Prod gen_var_100 (Axiom ExportProof.X) bool) (Lambda gen_var_101 ExportProof.set (App ExportProof.binary_intersection gen_var_78 gen_var_101)) gen_var_98) (App list (Prod gen_var_102 (Axiom ExportProof.X) bool)) (LetIn gen_var_1812 (App ExportProof.cardinal_set_eq (App ExportProof.list_union gen_var_99) (App ExportProof.binary_intersection gen_var_110 (App ExportProof.list_union gen_var_111)) (Cast (App Coq.Init.Datatypes.list_ind ExportProof.set (Lambda gen_var_129 (App list ExportProof.set) (App ExportProof.set_eq (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_133 (Axiom ExportProof.X) bool) (Lambda gen_var_134 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_134)) gen_var_129)) (App ExportProof.binary_intersection gen_var_110 (App ExportProof.list_union gen_var_129)))) (Cast (Cast (Lambda gen_var_135 (Axiom ExportProof.X) (Cast (LetIn gen_var_136 (App gen_var_110 gen_var_135) bool (Case 0 (Lambda gen_var_137 bool (App eq bool false (Case 0 (Lambda gen_var_138 bool bool) (CaseMatch gen_var_137) (CaseBranches false false)))) (CaseMatch gen_var_136) (CaseBranches (App eq_refl bool false) (App eq_refl bool false)))) REVERTcast (App eq bool (App ExportProof.empty_set gen_var_135) (App ExportProof.binary_intersection gen_var_110 ExportProof.empty_set gen_var_135)))) REVERTcast (App ExportProof.set_eq ExportProof.empty_set (App ExportProof.binary_intersection gen_var_110 ExportProof.empty_set))) REVERTcast (App ExportProof.set_eq (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_139 (Axiom ExportProof.X) bool) (Lambda gen_var_140 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_140)) (App nil ExportProof.set))) (App ExportProof.binary_intersection gen_var_110 (App ExportProof.list_union (App nil ExportProof.set))))) (Lambda gen_var_141 ExportProof.set (Lambda gen_var_338 (App list ExportProof.set) (Lambda gen_var_143 (App ExportProof.set_eq (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_144 (Axiom ExportProof.X) bool) (Lambda gen_var_145 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_145)) gen_var_142)) (App ExportProof.binary_intersection gen_var_110 (App ExportProof.list_union gen_var_142))) (Cast (App (Lambda gen_var_146 (App ExportProof.set_eq (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_147 (Axiom ExportProof.X) bool) (Lambda gen_var_148 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_148)) gen_var_142)) (App ExportProof.binary_intersection gen_var_110 (App ExportProof.list_union gen_var_142))) (App Coq.Classes.Morphisms.subrelation_proper (Prod gen_var_149 ExportProof.set (Prod gen_var_150 ExportProof.set (Sort Prop))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set (Sort Prop)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff)) ExportProof.set_eq (App Coq.Classes.Morphisms.PER_morphism ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PER ExportProof.set ExportProof.set_eq ExportProof.Set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_152 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_153 (Axiom ExportProof.X) bool) (Prod gen_var_154 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_155 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_156 (Axiom ExportProof.X) bool) (Prod gen_var_157 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_158 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Sort Prop) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App ExportProof.binary_union (App ExportProof.binary_intersection gen_var_110 gen_var_141) (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_159 (Axiom ExportProof.X) bool) (Lambda gen_var_160 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_160)) gen_var_142))) (App ExportProof.binary_union (App ExportProof.binary_intersection gen_var_110 gen_var_141) (App ExportProof.binary_intersection gen_var_110 (App ExportProof.list_union gen_var_142))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_161 ExportProof.set (Prod gen_var_162 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_163 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_164 (Axiom ExportProof.X) bool) (Prod gen_var_165 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_union (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_167 ExportProof.set (Prod gen_var_168 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_169 ExportProof.set (Prod gen_var_170 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_171 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_172 (Axiom ExportProof.X) bool) (Prod gen_var_173 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_175 ExportProof.set (Prod gen_var_176 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_178 ExportProof.set (Prod gen_var_179 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_180 ExportProof.set (Prod gen_var_181 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_182 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_183 (Axiom ExportProof.X) bool) (Prod gen_var_184 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_185 (Axiom ExportProof.X) bool) (Prod gen_var_186 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_187 ExportProof.set (Prod gen_var_188 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_189 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_190 (Axiom ExportProof.X) bool) (Prod gen_var_191 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_192 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_193 (Axiom ExportProof.X) bool) (Prod gen_var_194 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_195 (Axiom ExportProof.X) bool) (Prod gen_var_196 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_197 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_198 (Axiom ExportProof.X) bool) (Prod gen_var_199 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_200 (Axiom ExportProof.X) bool) (Prod gen_var_201 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_202 (Axiom ExportProof.X) bool) (Prod gen_var_203 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_204 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_205 (Axiom ExportProof.X) bool) (Prod gen_var_206 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_union (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_208 ExportProof.set (Prod gen_var_209 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_210 ExportProof.set (Prod gen_var_211 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_212 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_213 (Axiom ExportProof.X) bool) (Prod gen_var_214 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_215 (Axiom ExportProof.X) bool) (Prod gen_var_216 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_union (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_218 ExportProof.set (Prod gen_var_219 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_union ExportProof.union_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_233 ExportProof.set (Prod gen_var_234 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_235 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_236 (Axiom ExportProof.X) bool) (Prod gen_var_237 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_238 (Axiom ExportProof.X) bool) (Prod gen_var_239 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_240 ExportProof.set (Prod gen_var_241 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_242 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_243 (Axiom ExportProof.X) bool) (Prod gen_var_244 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_245 (Axiom ExportProof.X) bool) (Prod gen_var_246 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_247 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_248 (Axiom ExportProof.X) bool) (Prod gen_var_249 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_250 (Axiom ExportProof.X) bool) (Prod gen_var_251 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_252 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_253 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) (App ExportProof.binary_intersection gen_var_110 gen_var_141) (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) (App ExportProof.binary_intersection gen_var_110 gen_var_141)) (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_254 (Axiom ExportProof.X) bool) (Lambda gen_var_255 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_255)) gen_var_142)) (App ExportProof.binary_intersection gen_var_110 (App ExportProof.list_union gen_var_142)) gen_var_146) (App ExportProof.binary_intersection gen_var_110 (App ExportProof.binary_union gen_var_141 (App ExportProof.list_union gen_var_142))) (App ExportProof.binary_intersection gen_var_110 (App ExportProof.binary_union gen_var_141 (App ExportProof.list_union gen_var_142))) (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Reflexive (App ExportProof.binary_intersection gen_var_110 (App ExportProof.binary_union gen_var_141 (App ExportProof.list_union gen_var_142)))))) gen_var_143 (Cast (Lambda gen_var_346 (Axiom ExportProof.X) (Cast (LetIn gen_var_296 (App gen_var_110 gen_var_256) bool (Case 0 (Lambda gen_var_290 bool (App eq bool (Case 0 (Lambda gen_var_259 bool bool) (CaseMatch (Case 0 (Lambda gen_var_260 bool bool) (CaseMatch gen_var_258) (CaseBranches (App gen_var_141 gen_var_256) false))) (CaseBranches true (Case 0 (Lambda gen_var_261 bool bool) (CaseMatch gen_var_258) (CaseBranches (App (Fix (Functions (App gen_var_262 0 (Prod gen_var_263 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_268 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_268 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_268) (CaseBranches (Lambda Anonymous (Axiom ExportProof.X) false) (Lambda gen_var_272 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_274 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_276 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_277 bool bool) (CaseMatch (App gen_var_272 gen_var_276)) (CaseBranches true (App gen_var_262 gen_var_274 gen_var_276))))))))))) 0) gen_var_268 gen_var_276) false)))) (Case 0 (Lambda gen_var_278 bool bool) (CaseMatch gen_var_272) (CaseBranches (Case 0 (Lambda gen_var_279 bool bool) (CaseMatch (App gen_var_141 gen_var_276)) (CaseBranches true (App (Fix (Functions (App gen_var_280 0 (Prod gen_var_281 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_286 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_286 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_286) (CaseBranches (Lambda Anonymous (Axiom ExportProof.X) false) (Lambda gen_var_290 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_292 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_294 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_295 bool bool) (CaseMatch (App gen_var_290 gen_var_294)) (CaseBranches true (App gen_var_280 gen_var_292 gen_var_294))))))))))) 0) gen_var_286 gen_var_294))) false)))) (CaseMatch gen_var_257) (CaseBranches (LetIn gen_var_296 (App gen_var_141 gen_var_294) bool (Case 0 (Lambda gen_var_326 bool (App eq bool (Case 0 (Lambda gen_var_298 bool bool) (CaseMatch gen_var_297) (CaseBranches true (App (Fix (Functions (App gen_var_299 0 (Prod gen_var_300 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_305 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_305 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_305) (CaseBranches (Lambda Anonymous (Axiom ExportProof.X) false) (Lambda gen_var_309 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_311 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_313 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_314 bool bool) (CaseMatch (App gen_var_309 gen_var_313)) (CaseBranches true (App gen_var_299 gen_var_311 gen_var_313))))))))))) 0) gen_var_305 gen_var_313))) (Case 0 (Lambda gen_var_315 bool bool) (CaseMatch gen_var_309) (CaseBranches true (App (Fix (Functions (App gen_var_316 0 (Prod gen_var_317 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_322 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_322 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_322) (CaseBranches (Lambda Anonymous (Axiom ExportProof.X) false) (Lambda gen_var_326 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_328 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_330 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_331 bool bool) (CaseMatch (App gen_var_326 gen_var_330)) (CaseBranches true (App gen_var_316 gen_var_328 gen_var_330))))))))))) 0) gen_var_322 gen_var_330))))) (CaseMatch gen_var_296) (CaseBranches (App eq_refl bool true) (App eq_refl bool (App (Fix (Functions (App gen_var_332 0 (Prod gen_var_333 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_338 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_338 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_338) (CaseBranches (Lambda Anonymous (Axiom ExportProof.X) false) (Lambda gen_var_342 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_344 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_346 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_347 bool bool) (CaseMatch (App gen_var_342 gen_var_346)) (CaseBranches true (App gen_var_332 gen_var_344 gen_var_346))))))))))) 0) gen_var_338 gen_var_346))))) (App eq_refl bool false)))) REVERTcast (App eq bool (App ExportProof.binary_union (App ExportProof.binary_intersection gen_var_110 gen_var_141) (App ExportProof.binary_intersection gen_var_110 (App ExportProof.list_union gen_var_338)) gen_var_346) (App ExportProof.binary_intersection gen_var_110 (App ExportProof.binary_union gen_var_141 (App ExportProof.list_union gen_var_338)) gen_var_346)))) REVERTcast (App ExportProof.set_eq (App ExportProof.binary_union (App ExportProof.binary_intersection gen_var_110 gen_var_141) (App ExportProof.binary_intersection gen_var_110 (App ExportProof.list_union gen_var_338))) (App ExportProof.binary_intersection gen_var_110 (App ExportProof.binary_union gen_var_141 (App ExportProof.list_union gen_var_338)))))) REVERTcast (App ExportProof.set_eq (App ExportProof.list_union (App Coq.Lists.List.map ExportProof.set (Prod gen_var_348 (Axiom ExportProof.X) bool) (Lambda gen_var_349 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_349)) (App cons ExportProof.set gen_var_141 gen_var_338))) (App ExportProof.binary_intersection gen_var_110 (App ExportProof.list_union (App cons ExportProof.set gen_var_141 gen_var_338)))))))) gen_var_338) REVERTcast (App ExportProof.set_eq (App ExportProof.list_union gen_var_99) (App ExportProof.binary_intersection gen_var_110 (App ExportProof.list_union gen_var_338))))) (App eq Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_99)) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_110 (App ExportProof.list_union gen_var_338)))) (App Coq.Init.Logic.eq_ind Z (App ExportProof.cardinal (App ExportProof.list_union gen_var_99)) (Lambda gen_var_350 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_110) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_338))))) gen_var_350) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_338)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_351 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_351)) (App ExportProof.sublists ExportProof.set gen_var_351)))))))) (App Coq.Init.Logic.eq_ind_r Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_99)))) (Lambda gen_var_352 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_110) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_351))))) gen_var_352) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_351)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_353 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_353)) (App ExportProof.sublists ExportProof.set gen_var_353)))))))) (LetIn gen_var_1812 (Cast (App Coq.Init.Logic.eq_ind_r (App list (App list ExportProof.set)) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_355 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_355)) (App ExportProof.sublists ExportProof.set gen_var_355)) (Lambda gen_var_356 (App list (App list ExportProof.set)) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_110) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_357 (Axiom ExportProof.X) bool) (Lambda gen_var_358 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_358)) gen_var_356)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 gen_var_356)))) (App Coq.Init.Logic.eq_ind_r (App list (App list ExportProof.set)) (App cons (App list ExportProof.set) (App nil ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_356))) (Lambda gen_var_362 (App list (App list ExportProof.set)) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_110) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_360 (Axiom ExportProof.X) bool) (Lambda gen_var_361 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_361)) gen_var_359)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_362 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_362)) gen_var_362))))) (Cast (Cast (Cast (LetIn gen_var_767 (App cons Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_110) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_364 (Axiom ExportProof.X) bool) (Lambda gen_var_365 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_365)) gen_var_362)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_110) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_366 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_366)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_366)))))) (App nil Z))) (App list Z) (App (Cast (Cast (Lambda gen_var_769 (App eq (App list Z) gen_var_363 (App cons Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_110) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_368 (Axiom ExportProof.X) bool) (Lambda gen_var_369 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_369)) gen_var_366)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_110) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_370 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_370)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_370)))))) (App nil Z)))) (LetIn gen_var_771 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_772 (App nil (App prod (App prod Z Mon) (App Pol Z))) (App list (App prod (App prod Z Mon) (App Pol Z))) (LetIn gen_var_773 (Cast (App eq_refl (App list (App prod (App prod Z Mon) (App Pol Z))) gen_var_372) VMcast (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_371) gen_var_372)) (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_371) gen_var_372) (LetIn gen_var_774 (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma2 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_371 (App cons Z (App ExportProof.cardinal gen_var_110) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_375 (Axiom ExportProof.X) bool) (Lambda gen_var_376 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_376)) gen_var_370))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_377 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_377)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_377))))) (App nil Z)))) I gen_var_372 gen_var_373) (Prod gen_var_378 (App PExpr Z) (Prod gen_var_379 (App Pol Z) (Prod Anonymous (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_372 gen_var_378) gen_var_379) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal gen_var_110) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_381 (Axiom ExportProof.X) bool) (Lambda gen_var_382 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_382)) gen_var_377))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_383 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_383)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_383))))) (App nil Z)))) gen_var_378) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal gen_var_110) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_384 (Axiom ExportProof.X) bool) (Lambda gen_var_385 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_385)) gen_var_383))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_386 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_386)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_386))))) (App nil Z)))) gen_var_379))))) (LetIn gen_var_781 (App PX Z (App Pc Z (App Zpos xH)) xH (App PX Z (App Pc Z (App Zneg xH)) xH (App Pc Z Z0))) (App Pol Z) (LetIn gen_var_782 (Cast (App eq_refl (App Pol Z) gen_var_387) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_372 (App PEsub Z (App PEX Z xH) (App PEX Z (App xO xH)))) gen_var_387)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_372 (App PEsub Z (App PEX Z xH) (App PEX Z (App xO xH)))) gen_var_387) (LetIn gen_var_783 (App gen_var_374 (App PEsub Z (App PEX Z xH) (App PEX Z (App xO xH))) gen_var_387 gen_var_388) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal gen_var_110) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_390 (Axiom ExportProof.X) bool) (Lambda gen_var_391 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_391)) gen_var_386))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_392 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_392)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_392))))) (App nil Z)))) (App PEsub Z (App PEX Z xH) (App PEX Z (App xO xH)))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal gen_var_110) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_393 (Axiom ExportProof.X) bool) (Lambda gen_var_394 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_394)) gen_var_392))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_395 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_395)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_395))))) (App nil Z)))) gen_var_387)) (LetIn gen_var_788 (App PX Z (App Pc Z (App Zpos xH)) xH (App Pinj Z xH (App PX Z (App Pc Z (App Zpos xH)) xH (App Pc Z Z0)))) (App Pol Z) (LetIn gen_var_789 (Cast (App eq_refl (App Pol Z) gen_var_396) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_372 (App PEadd Z (App PEmul Z (App PEX Z xH) (App PEc Z (App Zpos xH))) (App PEX Z (App xI xH)))) gen_var_396)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_372 (App PEadd Z (App PEmul Z (App PEX Z xH) (App PEc Z (App Zpos xH))) (App PEX Z (App xI xH)))) gen_var_396) (LetIn gen_var_790 (App gen_var_374 (App PEadd Z (App PEmul Z (App PEX Z xH) (App PEc Z (App Zpos xH))) (App PEX Z (App xI xH))) gen_var_396 gen_var_397) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal gen_var_110) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_399 (Axiom ExportProof.X) bool) (Lambda gen_var_400 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_400)) gen_var_395))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_401 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_401)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_401))))) (App nil Z)))) (App PEadd Z (App PEmul Z (App PEX Z xH) (App PEc Z (App Zpos xH))) (App PEX Z (App xI xH)))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal gen_var_110) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_402 (Axiom ExportProof.X) bool) (Lambda gen_var_403 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_403)) gen_var_401))))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_404 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_404)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_404))))) (App nil Z)))) gen_var_396)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_110) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_405 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_405)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_405)))))) (Lambda gen_var_406 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_110) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_407 (Axiom ExportProof.X) bool) (Lambda gen_var_408 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_408)) gen_var_405)))))) gen_var_406)) (Cast (LetIn gen_var_1704 (App Coq.Init.Logic.eq_ind_r (App list (App list ExportProof.set)) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_410 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_410))) (App ExportProof.sublists ExportProof.set gen_var_405)) (Lambda gen_var_412 (App list (App list ExportProof.set)) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_411)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_412 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_412)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_412))))))) (App (Lambda gen_var_1628 (App list (App list ExportProof.set)) (LetIn gen_var_1593 (App Coq.Init.Datatypes.list_ind (App list ExportProof.set) (Lambda gen_var_415 (App list (App list ExportProof.set)) (App eq (App list (App list (Prod gen_var_416 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_417 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_418 (Axiom ExportProof.X) bool) (Lambda gen_var_419 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_419))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_415)) (App Coq.Lists.List.filter (App list (Prod gen_var_420 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_421 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_422 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_423 (Axiom ExportProof.X) bool) (Lambda gen_var_424 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_424))) gen_var_415)))) (App eq_refl (App list (App list (Prod gen_var_425 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.filter (App list (Prod gen_var_426 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_427 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_428 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_429 (Axiom ExportProof.X) bool) (Lambda gen_var_430 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_430))) (App nil (App list ExportProof.set))))) (Lambda gen_var_681 (App list ExportProof.set) (Lambda gen_var_597 (App list (App list ExportProof.set)) (Lambda gen_var_433 (App eq (App list (App list (Prod gen_var_434 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_435 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_436 (Axiom ExportProof.X) bool) (Lambda gen_var_437 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_437))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_432)) (App Coq.Lists.List.filter (App list (Prod gen_var_438 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_439 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_440 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_441 (Axiom ExportProof.X) bool) (Lambda gen_var_442 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_442))) gen_var_432))) (Cast (Case 1 (Lambda gen_var_443 (App list ExportProof.set) (App eq (App list (App list (Prod gen_var_444 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_445 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_446 (Axiom ExportProof.X) bool) (Lambda gen_var_447 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_447))) (Case 0 (Lambda gen_var_448 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set gen_var_443)) (CaseBranches (App cons (App list ExportProof.set) gen_var_443 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_443)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_443)))) (Case 0 (Lambda gen_var_449 bool (App list (App list (Prod gen_var_450 (Axiom ExportProof.X) bool)))) (CaseMatch (App ExportProof.nonempty (Prod gen_var_451 (Axiom ExportProof.X) bool) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_452 (Axiom ExportProof.X) bool) (Lambda gen_var_453 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_453)) gen_var_443))) (CaseBranches (App cons (App list (Prod gen_var_454 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_455 (Axiom ExportProof.X) bool) (Lambda gen_var_456 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_456)) gen_var_443) (App Coq.Lists.List.filter (App list (Prod gen_var_457 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_458 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_459 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_460 (Axiom ExportProof.X) bool) (Lambda gen_var_461 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_461))) gen_var_443))) (App Coq.Lists.List.filter (App list (Prod gen_var_462 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_463 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_464 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_465 (Axiom ExportProof.X) bool) (Lambda gen_var_466 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_466))) gen_var_443)))))) (CaseMatch gen_var_466) (CaseBranches (Cast gen_var_433 REVERTcast (App eq (App list (App list (Prod gen_var_467 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_468 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_469 (Axiom ExportProof.X) bool) (Lambda gen_var_470 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_470))) (Case 0 (Lambda gen_var_471 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App nil ExportProof.set))) (CaseBranches (App cons (App list ExportProof.set) (App nil ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_443)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_443)))) (Case 0 (Lambda gen_var_472 bool (App list (App list (Prod gen_var_473 (Axiom ExportProof.X) bool)))) (CaseMatch (App ExportProof.nonempty (Prod gen_var_474 (Axiom ExportProof.X) bool) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_475 (Axiom ExportProof.X) bool) (Lambda gen_var_476 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_476)) (App nil ExportProof.set)))) (CaseBranches (App cons (App list (Prod gen_var_477 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_478 (Axiom ExportProof.X) bool) (Lambda gen_var_479 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_479)) (App nil ExportProof.set)) (App Coq.Lists.List.filter (App list (Prod gen_var_480 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_481 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_482 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_483 (Axiom ExportProof.X) bool) (Lambda gen_var_484 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_484))) gen_var_443))) (App Coq.Lists.List.filter (App list (Prod gen_var_485 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_486 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_487 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_488 (Axiom ExportProof.X) bool) (Lambda gen_var_489 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_489))) gen_var_443)))))) (Lambda gen_var_490 ExportProof.set (Lambda gen_var_672 (App list ExportProof.set) (Cast (App Coq.Init.Logic.eq_trans (App list (App list (App (Lambda gen_var_493 (Sort Set) (Lambda gen_var_493 (Sort Set) (Prod Anonymous gen_var_493 gen_var_493))) (Axiom ExportProof.X) bool))) (App cons (App list (App (Lambda gen_var_496 (Sort Set) (Lambda gen_var_496 (Sort Set) (Prod Anonymous gen_var_496 gen_var_496))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_499 (Sort Set) (Lambda gen_var_499 (Sort Set) (Prod Anonymous gen_var_499 gen_var_499))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_110 gen_var_490) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_502 (Sort Set) (Lambda gen_var_502 (Sort Set) (Prod Anonymous gen_var_502 gen_var_502))) (Axiom ExportProof.X) bool) (Lambda gen_var_504 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_504)) gen_var_504)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_506 (Sort Set) (Lambda gen_var_506 (Sort Set) (Prod Anonymous gen_var_506 gen_var_506))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_509 (Sort Set) (Lambda gen_var_509 (Sort Set) (Prod Anonymous gen_var_509 gen_var_509))) (Axiom ExportProof.X) bool) (Lambda gen_var_511 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_511))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_443))) (App cons (App list (App (Lambda gen_var_513 (Sort Set) (Lambda gen_var_513 (Sort Set) (Prod Anonymous gen_var_513 gen_var_513))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_516 (Sort Set) (Lambda gen_var_516 (Sort Set) (Prod Anonymous gen_var_516 gen_var_516))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_110 gen_var_490) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_519 (Sort Set) (Lambda gen_var_519 (Sort Set) (Prod Anonymous gen_var_519 gen_var_519))) (Axiom ExportProof.X) bool) (Lambda gen_var_521 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_521)) gen_var_521)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_523 (Sort Set) (Lambda gen_var_523 (Sort Set) (Prod Anonymous gen_var_523 gen_var_523))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_526 (Sort Set) (Lambda gen_var_526 (Sort Set) (Prod Anonymous gen_var_526 gen_var_526))) (Axiom ExportProof.X) bool) (Lambda gen_var_528 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_528))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_443))) (App cons (App list (App (Lambda gen_var_530 (Sort Set) (Lambda gen_var_530 (Sort Set) (Prod Anonymous gen_var_530 gen_var_530))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_533 (Sort Set) (Lambda gen_var_533 (Sort Set) (Prod Anonymous gen_var_533 gen_var_533))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_110 gen_var_490) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_536 (Sort Set) (Lambda gen_var_536 (Sort Set) (Prod Anonymous gen_var_536 gen_var_536))) (Axiom ExportProof.X) bool) (Lambda gen_var_538 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_538)) gen_var_538)) (App Coq.Lists.List.filter (App list (App (Lambda gen_var_540 (Sort Set) (Lambda gen_var_540 (Sort Set) (Prod Anonymous gen_var_540 gen_var_540))) (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (App (Lambda gen_var_543 (Sort Set) (Lambda gen_var_543 (Sort Set) (Prod Anonymous gen_var_543 gen_var_543))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_546 (Sort Set) (Lambda gen_var_546 (Sort Set) (Prod Anonymous gen_var_546 gen_var_546))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_549 (Sort Set) (Lambda gen_var_549 (Sort Set) (Prod Anonymous gen_var_549 gen_var_549))) (Axiom ExportProof.X) bool) (Lambda gen_var_551 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_551))) gen_var_443))) (App Coq.Init.Logic.f_equal (Prod gen_var_552 (App list (App list (App (Lambda gen_var_554 (Sort Set) (Lambda gen_var_554 (Sort Set) (Prod Anonymous gen_var_554 gen_var_554))) (Axiom ExportProof.X) bool))) (App list (App list (App (Lambda gen_var_557 (Sort Set) (Lambda gen_var_557 (Sort Set) (Prod Anonymous gen_var_557 gen_var_557))) (Axiom ExportProof.X) bool)))) (App list (App list (App (Lambda gen_var_560 (Sort Set) (Lambda gen_var_560 (Sort Set) (Prod Anonymous gen_var_560 gen_var_560))) (Axiom ExportProof.X) bool))) (Lambda gen_var_562 (Prod gen_var_563 (App list (App list (App (Lambda gen_var_565 (Sort Set) (Lambda gen_var_565 (Sort Set) (Prod Anonymous gen_var_565 gen_var_565))) (Axiom ExportProof.X) bool))) (App list (App list (App (Lambda gen_var_568 (Sort Set) (Lambda gen_var_568 (Sort Set) (Prod Anonymous gen_var_568 gen_var_568))) (Axiom ExportProof.X) bool)))) (App gen_var_562 (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_571 (Sort Set) (Lambda gen_var_571 (Sort Set) (Prod Anonymous gen_var_571 gen_var_571))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_574 (Sort Set) (Lambda gen_var_574 (Sort Set) (Prod Anonymous gen_var_574 gen_var_574))) (Axiom ExportProof.X) bool) (Lambda gen_var_576 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_576))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_563)))) (App cons (App list (App (Lambda gen_var_578 (Sort Set) (Lambda gen_var_578 (Sort Set) (Prod Anonymous gen_var_578 gen_var_578))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_581 (Sort Set) (Lambda gen_var_581 (Sort Set) (Prod Anonymous gen_var_581 gen_var_581))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_110 gen_var_490) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_584 (Sort Set) (Lambda gen_var_584 (Sort Set) (Prod Anonymous gen_var_584 gen_var_584))) (Axiom ExportProof.X) bool) (Lambda gen_var_586 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_586)) gen_var_586))) (App cons (App list (App (Lambda gen_var_588 (Sort Set) (Lambda gen_var_588 (Sort Set) (Prod Anonymous gen_var_588 gen_var_588))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_591 (Sort Set) (Lambda gen_var_591 (Sort Set) (Prod Anonymous gen_var_591 gen_var_591))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_110 gen_var_490) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_594 (Sort Set) (Lambda gen_var_594 (Sort Set) (Prod Anonymous gen_var_594 gen_var_594))) (Axiom ExportProof.X) bool) (Lambda gen_var_596 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_596)) gen_var_596))) (App eq_refl (Prod gen_var_597 (App list (App list (App (Lambda gen_var_599 (Sort Set) (Lambda gen_var_599 (Sort Set) (Prod Anonymous gen_var_599 gen_var_599))) (Axiom ExportProof.X) bool))) (App list (App list (App (Lambda gen_var_602 (Sort Set) (Lambda gen_var_602 (Sort Set) (Prod Anonymous gen_var_602 gen_var_602))) (Axiom ExportProof.X) bool)))) (App cons (App list (App (Lambda gen_var_605 (Sort Set) (Lambda gen_var_605 (Sort Set) (Prod Anonymous gen_var_605 gen_var_605))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_608 (Sort Set) (Lambda gen_var_608 (Sort Set) (Prod Anonymous gen_var_608 gen_var_608))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_110 gen_var_490) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_611 (Sort Set) (Lambda gen_var_611 (Sort Set) (Prod Anonymous gen_var_611 gen_var_611))) (Axiom ExportProof.X) bool) (Lambda gen_var_613 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_613)) gen_var_613))))) (App Coq.Init.Logic.f_equal (App list (App list (App (Lambda gen_var_615 (Sort Set) (Lambda gen_var_615 (Sort Set) (Prod Anonymous gen_var_615 gen_var_615))) (Axiom ExportProof.X) bool))) (App list (App list (App (Lambda gen_var_618 (Sort Set) (Lambda gen_var_618 (Sort Set) (Prod Anonymous gen_var_618 gen_var_618))) (Axiom ExportProof.X) bool))) (App cons (App list (App (Lambda gen_var_621 (Sort Set) (Lambda gen_var_621 (Sort Set) (Prod Anonymous gen_var_621 gen_var_621))) (Axiom ExportProof.X) bool)) (App cons (App (Lambda gen_var_624 (Sort Set) (Lambda gen_var_624 (Sort Set) (Prod Anonymous gen_var_624 gen_var_624))) (Axiom ExportProof.X) bool) (App ExportProof.binary_intersection gen_var_110 gen_var_490) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_627 (Sort Set) (Lambda gen_var_627 (Sort Set) (Prod Anonymous gen_var_627 gen_var_627))) (Axiom ExportProof.X) bool) (Lambda gen_var_629 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_629)) gen_var_629))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_631 (Sort Set) (Lambda gen_var_631 (Sort Set) (Prod Anonymous gen_var_631 gen_var_631))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_634 (Sort Set) (Lambda gen_var_634 (Sort Set) (Prod Anonymous gen_var_634 gen_var_634))) (Axiom ExportProof.X) bool) (Lambda gen_var_636 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_636))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_597)) (App Coq.Lists.List.filter (App list (App (Lambda gen_var_638 (Sort Set) (Lambda gen_var_638 (Sort Set) (Prod Anonymous gen_var_638 gen_var_638))) (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (App (Lambda gen_var_641 (Sort Set) (Lambda gen_var_641 (Sort Set) (Prod Anonymous gen_var_641 gen_var_641))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (App (Lambda gen_var_644 (Sort Set) (Lambda gen_var_644 (Sort Set) (Prod Anonymous gen_var_644 gen_var_644))) (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_647 (Sort Set) (Lambda gen_var_647 (Sort Set) (Prod Anonymous gen_var_647 gen_var_647))) (Axiom ExportProof.X) bool) (Lambda gen_var_649 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_649))) gen_var_597)) gen_var_433)) REVERTcast (App eq (App list (App list (Prod gen_var_650 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_651 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_652 (Axiom ExportProof.X) bool) (Lambda gen_var_653 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_653))) (Case 0 (Lambda gen_var_654 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App cons ExportProof.set gen_var_490 gen_var_654))) (CaseBranches (App cons (App list ExportProof.set) (App cons ExportProof.set gen_var_490 gen_var_654) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_597)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_597)))) (Case 0 (Lambda gen_var_655 bool (App list (App list (Prod gen_var_656 (Axiom ExportProof.X) bool)))) (CaseMatch (App ExportProof.nonempty (Prod gen_var_657 (Axiom ExportProof.X) bool) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_658 (Axiom ExportProof.X) bool) (Lambda gen_var_659 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_659)) (App cons ExportProof.set gen_var_490 gen_var_659)))) (CaseBranches (App cons (App list (Prod gen_var_660 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_661 (Axiom ExportProof.X) bool) (Lambda gen_var_662 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_662)) (App cons ExportProof.set gen_var_490 gen_var_662)) (App Coq.Lists.List.filter (App list (Prod gen_var_663 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_664 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_665 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_666 (Axiom ExportProof.X) bool) (Lambda gen_var_667 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_667))) gen_var_597))) (App Coq.Lists.List.filter (App list (Prod gen_var_668 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_669 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_670 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_671 (Axiom ExportProof.X) bool) (Lambda gen_var_672 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_672))) gen_var_597)))))))))) REVERTcast (App eq (App list (App list (Prod gen_var_673 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_674 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_675 (Axiom ExportProof.X) bool) (Lambda gen_var_676 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_676))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App cons (App list ExportProof.set) gen_var_676 gen_var_597))) (App Coq.Lists.List.filter (App list (Prod gen_var_677 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_678 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_679 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_680 (Axiom ExportProof.X) bool) (Lambda gen_var_681 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_681))) (App cons (App list ExportProof.set) gen_var_681 gen_var_597)))))))) gen_var_597) (App eq (App list (App list (Prod gen_var_682 (Axiom ExportProof.X) bool))) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_683 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_684 (Axiom ExportProof.X) bool) (Lambda gen_var_685 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_685))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_597)) (App Coq.Lists.List.filter (App list (Prod gen_var_686 (Axiom ExportProof.X) bool)) (App ExportProof.nonempty (Prod gen_var_687 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map (App list ExportProof.set) (App list (Prod gen_var_688 (Axiom ExportProof.X) bool)) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_689 (Axiom ExportProof.X) bool) (Lambda gen_var_690 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_690))) gen_var_597))) (App Coq.Init.Datatypes.list_ind (App list ExportProof.set) (Lambda gen_var_693 (App list (App list ExportProof.set)) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_692 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_692))) gen_var_691))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_693 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_693)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_693)))))) (App eq_refl Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_694 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_694)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App nil (App list ExportProof.set))))))) (Lambda gen_var_1627 (App list ExportProof.set) (Lambda gen_var_1628 (App list (App list ExportProof.set)) (Lambda gen_var_697 (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_698 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_698))) gen_var_696))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_699 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_699)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_699))))) (Cast (Case 1 (Lambda gen_var_706 (App list ExportProof.set) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (Case 0 (Lambda gen_var_701 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_702 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_702)) gen_var_700))) (CaseBranches (App cons (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_703 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_703)) gen_var_700) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_704 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_704))) gen_var_700))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_705 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_705))) gen_var_700))))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_706 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_706)) (Case 0 (Lambda gen_var_707 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set gen_var_706)) (CaseBranches (App cons (App list ExportProof.set) gen_var_706 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_706)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_706)))))))) (CaseMatch gen_var_707) (CaseBranches (Cast gen_var_697 REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (Case 0 (Lambda gen_var_708 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_709 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_709)) (App nil ExportProof.set)))) (CaseBranches (App cons (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_710 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_710)) (App nil ExportProof.set)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_711 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_711))) gen_var_706))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_712 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_712))) gen_var_706))))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_713 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_713)) (Case 0 (Lambda gen_var_714 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App nil ExportProof.set))) (CaseBranches (App cons (App list ExportProof.set) (App nil ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_713)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_713)))))))) (Lambda gen_var_1559 ExportProof.set (Lambda gen_var_929 (App list ExportProof.set) (Cast (App Coq.Init.Logic.eq_ind Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_717 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_717))) gen_var_713))))) (Lambda gen_var_718 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_126 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_719 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_719)) gen_var_716))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_720 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_720))) gen_var_713)))))) (App Coq.ZArith.BinIntDef.Z.add (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716))) gen_var_718))) (LetIn gen_var_767 (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_126 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_722 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_722)) gen_var_716))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_723 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_723))) gen_var_713)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_724 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_724))) gen_var_713)))))) (App nil Z))) (App list Z) (App (Cast (Cast (Lambda gen_var_769 (App eq (App list Z) gen_var_721 (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_126 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_726 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_726)) gen_var_716))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_727 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_727))) gen_var_713)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_728 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_728))) gen_var_713)))))) (App nil Z)))) (LetIn gen_var_771 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_772 (App nil (App prod (App prod Z Mon) (App Pol Z))) (App list (App prod (App prod Z Mon) (App Pol Z))) (LetIn gen_var_773 (Cast (App eq_refl (App list (App prod (App prod Z Mon) (App Pol Z))) gen_var_730) VMcast (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_729) gen_var_730)) (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_729) gen_var_730) (LetIn gen_var_774 (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma2 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_729 (App cons Z (App gen_var_126 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_733 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_733)) gen_var_716))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_734 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_734))) gen_var_713)))) (App cons Z (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716))) (App nil Z)))) I gen_var_730 gen_var_731) (Prod gen_var_735 (App PExpr Z) (Prod gen_var_736 (App Pol Z) (Prod Anonymous (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_730 gen_var_735) gen_var_736) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App gen_var_126 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_738 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_738)) gen_var_716))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_739 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_739))) gen_var_713)))) (App cons Z (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716))) (App nil Z)))) gen_var_735) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App gen_var_126 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_740 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_740)) gen_var_716))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_741 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_741))) gen_var_713)))) (App cons Z (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716))) (App nil Z)))) gen_var_736))))) (LetIn gen_var_781 (App PX Z (App Pc Z (App Zneg xH)) xH (App PX Z (App Pc Z (App Zneg xH)) xH (App Pc Z Z0))) (App Pol Z) (LetIn gen_var_782 (Cast (App eq_refl (App Pol Z) gen_var_742) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_730 (App PEopp Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH))))) gen_var_742)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_730 (App PEopp Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH))))) gen_var_742) (LetIn gen_var_783 (App gen_var_732 (App PEopp Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH)))) gen_var_742 gen_var_743) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App gen_var_126 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_745 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_745)) gen_var_716))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_746 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_746))) gen_var_713)))) (App cons Z (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716))) (App nil Z)))) (App PEopp Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH))))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App gen_var_126 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_747 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_747)) gen_var_716))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_748 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_748))) gen_var_713)))) (App cons Z (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716))) (App nil Z)))) gen_var_742)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_126 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_749 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_749)) gen_var_716)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_750 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_750))) gen_var_713))))) (Lambda gen_var_751 Z (App eq Z gen_var_751 (App Coq.ZArith.BinIntDef.Z.add (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_752 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_752))) gen_var_713)))))))) (LetIn gen_var_788 (App Pinj Z xH (App PX Z (App Pc Z (App Zneg xH)) xH (App PX Z (App Pc Z (App Zpos xH)) xH (App Pc Z Z0)))) (App Pol Z) (LetIn gen_var_789 (Cast (App eq_refl (App Pol Z) gen_var_753) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_730 (App PEadd Z (App PEX Z (App xI xH)) (App PEopp Z (App PEX Z (App xO xH))))) gen_var_753)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_730 (App PEadd Z (App PEX Z (App xI xH)) (App PEopp Z (App PEX Z (App xO xH))))) gen_var_753) (LetIn gen_var_790 (App gen_var_732 (App PEadd Z (App PEX Z (App xI xH)) (App PEopp Z (App PEX Z (App xO xH)))) gen_var_753 gen_var_754) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App gen_var_126 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_756 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_756)) gen_var_716))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_757 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_757))) gen_var_713)))) (App cons Z (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716))) (App nil Z)))) (App PEadd Z (App PEX Z (App xI xH)) (App PEopp Z (App PEX Z (App xO xH))))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App gen_var_126 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_758 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_758)) gen_var_716))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_759 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_759))) gen_var_713)))) (App cons Z (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716))) (App nil Z)))) gen_var_753)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_760 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_760))) gen_var_713))))) (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716)))) (Lambda gen_var_761 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_126 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_762 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_762)) gen_var_716)))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_763 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_763))) gen_var_713))))) gen_var_761)) (LetIn gen_var_1593 (Cast (Cast (App Coq.Init.Logic.eq_ind_r nat (App Coq.Init.Datatypes.length ExportProof.set gen_var_716) (Lambda gen_var_765 nat (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_766 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_766)) gen_var_716)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign gen_var_765)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_716))))))))) (LetIn gen_var_767 (App cons Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_768 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_768)) gen_var_716)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_716))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_716))))))) (App nil Z))) (App list Z) (App (Cast (Cast (Lambda gen_var_769 (App eq (App list Z) gen_var_767 (App cons Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_770 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_770)) gen_var_716)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_716))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_716))))))) (App nil Z)))) (LetIn gen_var_771 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_772 (App nil (App prod (App prod Z Mon) (App Pol Z))) (App list (App prod (App prod Z Mon) (App Pol Z))) (LetIn gen_var_773 (Cast (App eq_refl (App list (App prod (App prod Z Mon) (App Pol Z))) gen_var_772) VMcast (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_771) gen_var_772)) (App eq (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_771) gen_var_772) (LetIn gen_var_774 (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma2 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_771 (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_775 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_775)) gen_var_716)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_716)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716)))) (App nil Z)))) I gen_var_772 gen_var_773) (Prod gen_var_776 (App PExpr Z) (Prod gen_var_777 (App Pol Z) (Prod Anonymous (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_772 gen_var_776) gen_var_777) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_779 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_779)) gen_var_716)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_716)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716)))) (App nil Z)))) gen_var_776) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_780 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_780)) gen_var_716)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_716)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716)))) (App nil Z)))) gen_var_777))))) (LetIn gen_var_781 (App PX Z (App Pinj Z xH (App PX Z (App Pc Z (App Zpos xH)) xH (App Pc Z Z0))) xH (App Pc Z Z0)) (App Pol Z) (LetIn gen_var_782 (Cast (App eq_refl (App Pol Z) gen_var_781) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_772 (App PEmul Z (App PEX Z xH) (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))) gen_var_781)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_772 (App PEmul Z (App PEX Z xH) (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))) gen_var_781) (LetIn gen_var_783 (App gen_var_774 (App PEmul Z (App PEX Z xH) (App PEopp Z (App PEopp Z (App PEX Z (App xO xH))))) gen_var_781 gen_var_782) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_784 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_784)) gen_var_716)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_716)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716)))) (App nil Z)))) (App PEmul Z (App PEX Z xH) (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_785 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_785)) gen_var_716)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_716)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716)))) (App nil Z)))) gen_var_781)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_786 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_786)) gen_var_716)))) (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_716))) (Lambda gen_var_787 Z (App eq Z gen_var_787 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_716))))))))) (LetIn gen_var_788 (App Pinj Z xH (App PX Z (App Pinj Z xH (App PX Z (App Pc Z (App Zpos xH)) xH (App Pc Z Z0))) xH (App Pc Z Z0))) (App Pol Z) (LetIn gen_var_789 (Cast (App eq_refl (App Pol Z) gen_var_788) VMcast (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_772 (App PEopp Z (App PEmul Z (App PEX Z (App xI xH)) (App PEopp Z (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))))) gen_var_788)) (App eq (App Pol Z) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_772 (App PEopp Z (App PEmul Z (App PEX Z (App xI xH)) (App PEopp Z (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))))) gen_var_788) (LetIn gen_var_790 (App gen_var_774 (App PEopp Z (App PEmul Z (App PEX Z (App xI xH)) (App PEopp Z (App PEopp Z (App PEopp Z (App PEX Z (App xO xH))))))) gen_var_788 gen_var_789) (App eq Z (App Coq.setoid_ring.Ring_polynom.PEeval Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_791 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_791)) gen_var_716)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_716)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716)))) (App nil Z)))) (App PEopp Z (App PEmul Z (App PEX Z (App xI xH)) (App PEopp Z (App PEopp Z (App PEopp Z (App PEX Z (App xO xH)))))))) (App Coq.setoid_ring.Ring_polynom.Pphi_pow Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Z Z0 (App Zpos xH) Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.setoid_ring.InitialRing.get_signZ (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_792 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_792)) gen_var_716)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_716)) (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716)))) (App nil Z)))) gen_var_788)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_716)) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_715 gen_var_716))))) (Lambda gen_var_793 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_794 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_794)) gen_var_716)))) (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_716))) gen_var_793)) (LetIn gen_var_1574 (Cast (App ExportProof.cardinal_set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_796 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_796)) gen_var_716)) (App ExportProof.binary_intersection gen_var_715 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_716)) (App Coq.Init.Datatypes.list_ind ExportProof.set (Lambda gen_var_797 (App list ExportProof.set) (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_798 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_798)) gen_var_797)) (App ExportProof.binary_intersection gen_var_715 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_797)))) (Cast (Cast (Lambda gen_var_799 (Axiom ExportProof.X) (Cast (LetIn gen_var_807 (App gen_var_110 gen_var_799) bool (Case 0 (Lambda gen_var_801 bool (App eq bool (Case 0 (Lambda gen_var_802 bool bool) (CaseMatch gen_var_801) (CaseBranches (App gen_var_715 gen_var_799) false)) (Case 0 (Lambda gen_var_803 bool bool) (CaseMatch (App gen_var_715 gen_var_799)) (CaseBranches gen_var_801 false)))) (CaseMatch gen_var_800) (CaseBranches (LetIn gen_var_804 (App gen_var_715 gen_var_799) bool (Case 0 (Lambda gen_var_805 bool (App eq bool gen_var_805 (Case 0 (Lambda gen_var_806 bool bool) (CaseMatch gen_var_805) (CaseBranches true false)))) (CaseMatch gen_var_804) (CaseBranches (App eq_refl bool true) (App eq_refl bool false)))) (LetIn gen_var_807 (App gen_var_715 gen_var_799) bool (Case 0 (Lambda gen_var_808 bool (App eq bool false (Case 0 (Lambda gen_var_809 bool bool) (CaseMatch gen_var_808) (CaseBranches false false)))) (CaseMatch gen_var_807) (CaseBranches (App eq_refl bool false) (App eq_refl bool false))))))) REVERTcast (App eq bool (App ExportProof.binary_intersection gen_var_110 gen_var_715 gen_var_799) (App ExportProof.binary_intersection gen_var_715 gen_var_110 gen_var_799)))) REVERTcast (App ExportProof.set_eq (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App ExportProof.binary_intersection gen_var_715 gen_var_110))) REVERTcast (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_810 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_810)) (App nil ExportProof.set))) (App ExportProof.binary_intersection gen_var_715 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 (App nil ExportProof.set))))) (Lambda gen_var_811 ExportProof.set (Lambda gen_var_929 (App list ExportProof.set) (Lambda gen_var_930 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_814 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_814)) gen_var_812)) (App ExportProof.binary_intersection gen_var_715 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_812))) (Cast (App (Lambda gen_var_815 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_110 gen_var_715) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_816 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_816)) gen_var_812)) (App ExportProof.binary_intersection gen_var_715 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_812))) (App Coq.Classes.Morphisms.subrelation_proper (Prod gen_var_817 ExportProof.set (Prod gen_var_818 ExportProof.set (Sort Prop))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set (Sort Prop)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff)) ExportProof.set_eq (App Coq.Classes.Morphisms.PER_morphism ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PER ExportProof.set ExportProof.set_eq ExportProof.Set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_820 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_821 (Axiom ExportProof.X) bool) (Prod gen_var_822 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_823 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_824 (Axiom ExportProof.X) bool) (Prod gen_var_825 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_826 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Sort Prop) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_110 gen_var_811) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_110 gen_var_826) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_827 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_827)) gen_var_812))) (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_110 gen_var_811) (App ExportProof.binary_intersection gen_var_826 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_812))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_828 ExportProof.set (Prod gen_var_829 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_830 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_831 (Axiom ExportProof.X) bool) (Prod gen_var_832 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_834 ExportProof.set (Prod gen_var_835 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_836 ExportProof.set (Prod gen_var_837 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_838 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_839 (Axiom ExportProof.X) bool) (Prod gen_var_840 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_842 ExportProof.set (Prod gen_var_843 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_845 ExportProof.set (Prod gen_var_846 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_847 ExportProof.set (Prod gen_var_848 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_849 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_850 (Axiom ExportProof.X) bool) (Prod gen_var_851 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_852 (Axiom ExportProof.X) bool) (Prod gen_var_853 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_854 ExportProof.set (Prod gen_var_855 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_856 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_857 (Axiom ExportProof.X) bool) (Prod gen_var_858 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_859 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_860 (Axiom ExportProof.X) bool) (Prod gen_var_861 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_862 (Axiom ExportProof.X) bool) (Prod gen_var_863 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_864 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_865 (Axiom ExportProof.X) bool) (Prod gen_var_866 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_867 (Axiom ExportProof.X) bool) (Prod gen_var_868 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_869 (Axiom ExportProof.X) bool) (Prod gen_var_870 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_871 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_872 (Axiom ExportProof.X) bool) (Prod gen_var_873 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_875 ExportProof.set (Prod gen_var_876 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_877 ExportProof.set (Prod gen_var_878 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_879 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_880 (Axiom ExportProof.X) bool) (Prod gen_var_881 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_882 (Axiom ExportProof.X) bool) (Prod gen_var_883 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_885 ExportProof.set (Prod gen_var_886 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_900 ExportProof.set (Prod gen_var_901 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_902 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_903 (Axiom ExportProof.X) bool) (Prod gen_var_904 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_905 (Axiom ExportProof.X) bool) (Prod gen_var_906 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_907 ExportProof.set (Prod gen_var_908 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_909 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_910 (Axiom ExportProof.X) bool) (Prod gen_var_911 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_912 (Axiom ExportProof.X) bool) (Prod gen_var_913 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_914 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_915 (Axiom ExportProof.X) bool) (Prod gen_var_916 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_917 (Axiom ExportProof.X) bool) (Prod gen_var_918 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_919 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_920 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) (App ExportProof.binary_intersection gen_var_110 gen_var_811) (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) (App ExportProof.binary_intersection gen_var_110 gen_var_811)) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_110 gen_var_920) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_921 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_921)) gen_var_812)) (App ExportProof.binary_intersection gen_var_920 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_812)) gen_var_815) (App ExportProof.binary_intersection gen_var_920 (App ExportProof.binary_intersection gen_var_811 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_812))) (App ExportProof.binary_intersection gen_var_920 (App ExportProof.binary_intersection gen_var_811 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_812))) (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Reflexive (App ExportProof.binary_intersection gen_var_920 (App ExportProof.binary_intersection gen_var_811 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_812)))))) gen_var_813 (LetIn gen_var_1219 (App Coq.Init.Datatypes.list_ind ExportProof.set (Lambda gen_var_923 (App list ExportProof.set) (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_923) (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_923)))) (Cast (Cast (Lambda gen_var_924 (Axiom ExportProof.X) (Cast (LetIn gen_var_925 (App gen_var_110 gen_var_924) bool (Case 0 (Lambda gen_var_926 bool (App eq bool gen_var_926 (Case 0 (Lambda gen_var_927 bool bool) (CaseMatch gen_var_926) (CaseBranches gen_var_926 false)))) (CaseMatch gen_var_925) (CaseBranches (App eq_refl bool true) (App eq_refl bool false)))) REVERTcast (App eq bool (App gen_var_110 gen_var_924) (App ExportProof.binary_intersection gen_var_110 gen_var_110 gen_var_924)))) REVERTcast (App ExportProof.set_eq gen_var_110 (App ExportProof.binary_intersection gen_var_110 gen_var_110))) REVERTcast (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 (App nil ExportProof.set)) (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 (App nil ExportProof.set))))) (Lambda gen_var_928 ExportProof.set (Lambda gen_var_929 (App list ExportProof.set) (Lambda gen_var_930 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929) (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929))) (Cast (App (Lambda gen_var_931 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929) (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929))) (App Coq.Classes.Morphisms.subrelation_proper (Prod gen_var_932 ExportProof.set (Prod gen_var_933 ExportProof.set (Sort Prop))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set (Sort Prop)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff)) ExportProof.set_eq (App Coq.Classes.Morphisms.PER_morphism ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PER ExportProof.set ExportProof.set_eq ExportProof.Set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_935 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_936 (Axiom ExportProof.X) bool) (Prod gen_var_937 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_938 ExportProof.set (Sort Prop)) (App Coq.Program.Basics.flip (Prod gen_var_939 (Axiom ExportProof.X) bool) (Prod gen_var_940 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_941 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Sort Prop) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App ExportProof.binary_intersection gen_var_928 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929)) (App ExportProof.binary_intersection gen_var_928 (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_942 ExportProof.set (Prod gen_var_943 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_944 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_945 (Axiom ExportProof.X) bool) (Prod gen_var_946 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_948 ExportProof.set (Prod gen_var_949 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_950 ExportProof.set (Prod gen_var_951 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_952 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_953 (Axiom ExportProof.X) bool) (Prod gen_var_954 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_956 ExportProof.set (Prod gen_var_957 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_959 ExportProof.set (Prod gen_var_960 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_961 ExportProof.set (Prod gen_var_962 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_963 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_964 (Axiom ExportProof.X) bool) (Prod gen_var_965 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_966 (Axiom ExportProof.X) bool) (Prod gen_var_967 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_968 ExportProof.set (Prod gen_var_969 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_970 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_971 (Axiom ExportProof.X) bool) (Prod gen_var_972 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_973 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_974 (Axiom ExportProof.X) bool) (Prod gen_var_975 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_976 (Axiom ExportProof.X) bool) (Prod gen_var_977 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_978 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_979 (Axiom ExportProof.X) bool) (Prod gen_var_980 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_981 (Axiom ExportProof.X) bool) (Prod gen_var_982 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_983 (Axiom ExportProof.X) bool) (Prod gen_var_984 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_985 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_986 (Axiom ExportProof.X) bool) (Prod gen_var_987 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_989 ExportProof.set (Prod gen_var_990 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_991 ExportProof.set (Prod gen_var_992 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_993 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_994 (Axiom ExportProof.X) bool) (Prod gen_var_995 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_996 (Axiom ExportProof.X) bool) (Prod gen_var_997 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_999 ExportProof.set (Prod gen_var_1000 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1002 ExportProof.set (Prod gen_var_1003 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1004 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1005 (Axiom ExportProof.X) bool) (Prod gen_var_1006 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1007 (Axiom ExportProof.X) bool) (Prod gen_var_1008 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1009 ExportProof.set (Prod gen_var_1010 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1011 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1012 (Axiom ExportProof.X) bool) (Prod gen_var_1013 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1014 (Axiom ExportProof.X) bool) (Prod gen_var_1015 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1016 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1017 (Axiom ExportProof.X) bool) (Prod gen_var_1018 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1019 (Axiom ExportProof.X) bool) (Prod gen_var_1020 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_1021 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1022 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) gen_var_928 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) gen_var_928) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929) (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929)) gen_var_931) (App ExportProof.binary_intersection gen_var_110 (App ExportProof.binary_intersection gen_var_928 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929))) (App ExportProof.binary_intersection gen_var_110 (App ExportProof.binary_intersection gen_var_928 (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929)))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1023 ExportProof.set (Prod gen_var_1024 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1025 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1026 (Axiom ExportProof.X) bool) (Prod gen_var_1027 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1029 ExportProof.set (Prod gen_var_1030 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1032 ExportProof.set (Prod gen_var_1033 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1034 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1035 (Axiom ExportProof.X) bool) (Prod gen_var_1036 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq)) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1037 ExportProof.set (Prod gen_var_1038 (Axiom ExportProof.X) bool)) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1039 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1040 (Axiom ExportProof.X) bool) (Prod gen_var_1041 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1042 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1043 (Axiom ExportProof.X) bool) (Prod gen_var_1044 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_1045 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1046 (Axiom ExportProof.X) bool) ExportProof.set_eq)))) gen_var_110 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Reflexive gen_var_110) (App ExportProof.binary_intersection gen_var_928 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929)) (App ExportProof.binary_intersection gen_var_928 (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1047 ExportProof.set (Prod gen_var_1048 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1049 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1050 (Axiom ExportProof.X) bool) (Prod gen_var_1051 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_1053 ExportProof.set (Prod gen_var_1054 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1055 ExportProof.set (Prod gen_var_1056 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1057 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1058 (Axiom ExportProof.X) bool) (Prod gen_var_1059 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_1061 ExportProof.set (Prod gen_var_1062 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_1064 ExportProof.set (Prod gen_var_1065 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1066 ExportProof.set (Prod gen_var_1067 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1068 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1069 (Axiom ExportProof.X) bool) (Prod gen_var_1070 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1071 (Axiom ExportProof.X) bool) (Prod gen_var_1072 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1073 ExportProof.set (Prod gen_var_1074 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1075 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1076 (Axiom ExportProof.X) bool) (Prod gen_var_1077 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1078 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1079 (Axiom ExportProof.X) bool) (Prod gen_var_1080 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1081 (Axiom ExportProof.X) bool) (Prod gen_var_1082 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1083 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1084 (Axiom ExportProof.X) bool) (Prod gen_var_1085 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1086 (Axiom ExportProof.X) bool) (Prod gen_var_1087 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1088 (Axiom ExportProof.X) bool) (Prod gen_var_1089 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_1090 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1091 (Axiom ExportProof.X) bool) (Prod gen_var_1092 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_1094 ExportProof.set (Prod gen_var_1095 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1096 ExportProof.set (Prod gen_var_1097 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1098 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1099 (Axiom ExportProof.X) bool) (Prod gen_var_1100 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1101 (Axiom ExportProof.X) bool) (Prod gen_var_1102 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1104 ExportProof.set (Prod gen_var_1105 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1107 ExportProof.set (Prod gen_var_1108 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1109 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1110 (Axiom ExportProof.X) bool) (Prod gen_var_1111 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1112 (Axiom ExportProof.X) bool) (Prod gen_var_1113 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1114 ExportProof.set (Prod gen_var_1115 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1116 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1117 (Axiom ExportProof.X) bool) (Prod gen_var_1118 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1119 (Axiom ExportProof.X) bool) (Prod gen_var_1120 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1121 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1122 (Axiom ExportProof.X) bool) (Prod gen_var_1123 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1124 (Axiom ExportProof.X) bool) (Prod gen_var_1125 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_1126 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1127 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) gen_var_928 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) gen_var_928) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929) (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929)) gen_var_931)))) gen_var_930 (Cast (Lambda gen_var_1214 (Axiom ExportProof.X) (Cast (LetIn gen_var_1216 (App gen_var_928 gen_var_1128) bool (Case 0 (Lambda gen_var_1160 bool (App eq bool (Case 0 (Lambda gen_var_1131 bool bool) (CaseMatch gen_var_1130) (CaseBranches (Case 0 (Lambda gen_var_1132 bool bool) (CaseMatch (App gen_var_110 gen_var_1128)) (CaseBranches (App (Fix (Functions (App gen_var_1133 0 (Prod gen_var_1134 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1139 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1139 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1139) (CaseBranches gen_var_110 (Lambda gen_var_1142 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1144 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1146 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1147 bool bool) (CaseMatch (App gen_var_1142 gen_var_1146)) (CaseBranches (App gen_var_1133 gen_var_1144 gen_var_1146) false)))))))))) 0) gen_var_929 gen_var_1146) false)) false)) (Case 0 (Lambda gen_var_1148 bool bool) (CaseMatch (App gen_var_110 gen_var_1146)) (CaseBranches (Case 0 (Lambda gen_var_1149 bool bool) (CaseMatch gen_var_1142) (CaseBranches (Case 0 (Lambda gen_var_1150 bool bool) (CaseMatch (App gen_var_110 gen_var_1146)) (CaseBranches (App (Fix (Functions (App gen_var_1151 0 (Prod gen_var_1152 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1157 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1157 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1157) (CaseBranches gen_var_110 (Lambda gen_var_1160 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1162 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1164 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1165 bool bool) (CaseMatch (App gen_var_1160 gen_var_1164)) (CaseBranches (App gen_var_1151 gen_var_1162 gen_var_1164) false)))))))))) 0) gen_var_929 gen_var_1164) false)) false)) false)))) (CaseMatch gen_var_1129) (CaseBranches (LetIn gen_var_1166 (App gen_var_110 gen_var_1164) bool (Case 0 (Lambda gen_var_1195 bool (App eq bool (Case 0 (Lambda gen_var_1168 bool bool) (CaseMatch gen_var_1167) (CaseBranches (App (Fix (Functions (App gen_var_1169 0 (Prod gen_var_1170 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1175 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1175 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1175) (CaseBranches gen_var_110 (Lambda gen_var_1178 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1180 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1182 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1183 bool bool) (CaseMatch (App gen_var_1178 gen_var_1182)) (CaseBranches (App gen_var_1169 gen_var_1180 gen_var_1182) false)))))))))) 0) gen_var_929 gen_var_1182) false)) (Case 0 (Lambda gen_var_1184 bool bool) (CaseMatch gen_var_1178) (CaseBranches (Case 0 (Lambda gen_var_1185 bool bool) (CaseMatch gen_var_1178) (CaseBranches (App (Fix (Functions (App gen_var_1186 0 (Prod gen_var_1187 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1192 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1192 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1192) (CaseBranches gen_var_110 (Lambda gen_var_1195 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1197 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1199 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1200 bool bool) (CaseMatch (App gen_var_1195 gen_var_1199)) (CaseBranches (App gen_var_1186 gen_var_1197 gen_var_1199) false)))))))))) 0) gen_var_929 gen_var_1199) false)) false)))) (CaseMatch gen_var_1166) (CaseBranches (App eq_refl bool (App (Fix (Functions (App gen_var_1201 0 (Prod gen_var_1202 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1207 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1207 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1207) (CaseBranches gen_var_110 (Lambda gen_var_1210 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1212 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1214 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1215 bool bool) (CaseMatch (App gen_var_1210 gen_var_1214)) (CaseBranches (App gen_var_1201 gen_var_1212 gen_var_1214) false)))))))))) 0) gen_var_929 gen_var_1214)) (App eq_refl bool false)))) (LetIn gen_var_1216 (App gen_var_110 gen_var_1214) bool (Case 0 (Lambda gen_var_1217 bool (App eq bool false (Case 0 (Lambda gen_var_1218 bool bool) (CaseMatch gen_var_1217) (CaseBranches false false)))) (CaseMatch gen_var_1216) (CaseBranches (App eq_refl bool false) (App eq_refl bool false))))))) REVERTcast (App eq bool (App ExportProof.binary_intersection gen_var_928 (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929)) gen_var_1214) (App ExportProof.binary_intersection gen_var_110 (App ExportProof.binary_intersection gen_var_928 (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929))) gen_var_1214)))) REVERTcast (App ExportProof.set_eq (App ExportProof.binary_intersection gen_var_928 (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929))) (App ExportProof.binary_intersection gen_var_110 (App ExportProof.binary_intersection gen_var_928 (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929))))))) REVERTcast (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 (App cons ExportProof.set gen_var_928 gen_var_929)) (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 (App cons ExportProof.set gen_var_928 gen_var_929)))))))) gen_var_929) (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929) (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929))) (App (Lambda gen_var_1219 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929) (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929))) (App (Lambda gen_var_1220 (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929) (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929))) (App Coq.Classes.Morphisms.subrelation_proper (Prod gen_var_1221 ExportProof.set (Prod gen_var_1222 ExportProof.set (Sort Prop))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set (Sort Prop)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff)) ExportProof.set_eq (App Coq.Classes.Morphisms.PER_morphism ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PER ExportProof.set ExportProof.set_eq ExportProof.Set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1224 ExportProof.set (Sort Prop)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1225 ExportProof.set (Sort Prop)) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful ExportProof.set (Sort Prop) ExportProof.set_eq (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Sort Prop) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_110 gen_var_811) (App ExportProof.binary_intersection gen_var_1214 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929))) (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_110 gen_var_811) (App ExportProof.binary_intersection gen_var_1214 (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929)))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1226 ExportProof.set (Prod gen_var_1227 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1228 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1229 (Axiom ExportProof.X) bool) (Prod gen_var_1230 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1232 ExportProof.set (Prod gen_var_1233 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1235 ExportProof.set (Prod gen_var_1236 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1237 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1238 (Axiom ExportProof.X) bool) (Prod gen_var_1239 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq)) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1240 ExportProof.set (Prod gen_var_1241 (Axiom ExportProof.X) bool)) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1242 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1243 (Axiom ExportProof.X) bool) (Prod gen_var_1244 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1245 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1246 (Axiom ExportProof.X) bool) (Prod gen_var_1247 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_1248 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1249 (Axiom ExportProof.X) bool) ExportProof.set_eq)))) (App ExportProof.binary_intersection gen_var_110 gen_var_811) (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Reflexive (App ExportProof.binary_intersection gen_var_110 gen_var_811)) (App ExportProof.binary_intersection gen_var_1249 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929)) (App ExportProof.binary_intersection gen_var_1249 (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1250 ExportProof.set (Prod gen_var_1251 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1252 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1253 (Axiom ExportProof.X) bool) (Prod gen_var_1254 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_1256 ExportProof.set (Prod gen_var_1257 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1258 ExportProof.set (Prod gen_var_1259 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1260 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1261 (Axiom ExportProof.X) bool) (Prod gen_var_1262 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_1264 ExportProof.set (Prod gen_var_1265 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_1267 ExportProof.set (Prod gen_var_1268 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1269 ExportProof.set (Prod gen_var_1270 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1271 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1272 (Axiom ExportProof.X) bool) (Prod gen_var_1273 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1274 (Axiom ExportProof.X) bool) (Prod gen_var_1275 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1276 ExportProof.set (Prod gen_var_1277 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1278 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1279 (Axiom ExportProof.X) bool) (Prod gen_var_1280 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1281 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1282 (Axiom ExportProof.X) bool) (Prod gen_var_1283 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1284 (Axiom ExportProof.X) bool) (Prod gen_var_1285 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1286 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1287 (Axiom ExportProof.X) bool) (Prod gen_var_1288 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1289 (Axiom ExportProof.X) bool) (Prod gen_var_1290 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1291 (Axiom ExportProof.X) bool) (Prod gen_var_1292 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_1293 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1294 (Axiom ExportProof.X) bool) (Prod gen_var_1295 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_1297 ExportProof.set (Prod gen_var_1298 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1299 ExportProof.set (Prod gen_var_1300 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1301 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1302 (Axiom ExportProof.X) bool) (Prod gen_var_1303 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1304 (Axiom ExportProof.X) bool) (Prod gen_var_1305 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1307 ExportProof.set (Prod gen_var_1308 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1310 ExportProof.set (Prod gen_var_1311 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1312 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1313 (Axiom ExportProof.X) bool) (Prod gen_var_1314 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1315 (Axiom ExportProof.X) bool) (Prod gen_var_1316 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1317 ExportProof.set (Prod gen_var_1318 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1319 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1320 (Axiom ExportProof.X) bool) (Prod gen_var_1321 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1322 (Axiom ExportProof.X) bool) (Prod gen_var_1323 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1324 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1325 (Axiom ExportProof.X) bool) (Prod gen_var_1326 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1327 (Axiom ExportProof.X) bool) (Prod gen_var_1328 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_1329 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1330 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) gen_var_1330 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) gen_var_1330) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929) (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929)) gen_var_1220)) (App ExportProof.binary_intersection gen_var_1330 (App ExportProof.binary_intersection gen_var_811 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929))) (App ExportProof.binary_intersection gen_var_1330 (App ExportProof.binary_intersection gen_var_811 (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929)))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1331 ExportProof.set (Prod gen_var_1332 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1333 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1334 (Axiom ExportProof.X) bool) (Prod gen_var_1335 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1337 ExportProof.set (Prod gen_var_1338 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1340 ExportProof.set (Prod gen_var_1341 (Axiom ExportProof.X) bool)) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1342 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1343 (Axiom ExportProof.X) bool) (Prod gen_var_1344 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq)) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1345 ExportProof.set (Prod gen_var_1346 (Axiom ExportProof.X) bool)) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1347 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1348 (Axiom ExportProof.X) bool) (Prod gen_var_1349 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1350 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1351 (Axiom ExportProof.X) bool) (Prod gen_var_1352 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric (Prod gen_var_1353 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1354 (Axiom ExportProof.X) bool) ExportProof.set_eq)))) gen_var_1354 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Reflexive gen_var_1354) (App ExportProof.binary_intersection gen_var_811 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929)) (App ExportProof.binary_intersection gen_var_811 (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism ExportProof.set (Prod gen_var_1355 ExportProof.set (Prod gen_var_1356 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1357 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1358 (Axiom ExportProof.X) bool) (Prod gen_var_1359 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_normalizes_proper (Prod Anonymous ExportProof.set (Prod gen_var_1361 ExportProof.set (Prod gen_var_1362 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1363 ExportProof.set (Prod gen_var_1364 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1365 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1366 (Axiom ExportProof.X) bool) (Prod gen_var_1367 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Program.Basics.flip (Prod Anonymous ExportProof.set (Prod gen_var_1369 ExportProof.set (Prod gen_var_1370 (Axiom ExportProof.X) bool))) (Prod Anonymous ExportProof.set (Prod gen_var_1372 ExportProof.set (Prod gen_var_1373 (Axiom ExportProof.X) bool))) (Sort Prop) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1374 ExportProof.set (Prod gen_var_1375 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1376 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1377 (Axiom ExportProof.X) bool) (Prod gen_var_1378 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1379 (Axiom ExportProof.X) bool) (Prod gen_var_1380 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1381 ExportProof.set (Prod gen_var_1382 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1383 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1384 (Axiom ExportProof.X) bool) (Prod gen_var_1385 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1386 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1387 (Axiom ExportProof.X) bool) (Prod gen_var_1388 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1389 (Axiom ExportProof.X) bool) (Prod gen_var_1390 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.flip_arrow ExportProof.set (Prod gen_var_1391 (Axiom ExportProof.X) bool) ExportProof.set_eq (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.Morphisms.flip_atom ExportProof.set ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1392 (Axiom ExportProof.X) bool) (Prod gen_var_1393 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1394 (Axiom ExportProof.X) bool) (Prod gen_var_1395 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1396 (Axiom ExportProof.X) bool) (Prod gen_var_1397 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip_atom (Prod gen_var_1398 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip (Prod gen_var_1399 (Axiom ExportProof.X) bool) (Prod gen_var_1400 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.proper_flip_proper (Prod Anonymous ExportProof.set (Prod gen_var_1402 ExportProof.set (Prod gen_var_1403 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1404 ExportProof.set (Prod gen_var_1405 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1406 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1407 (Axiom ExportProof.X) bool) (Prod gen_var_1408 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1409 (Axiom ExportProof.X) bool) (Prod gen_var_1410 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) ExportProof.binary_intersection (App Coq.Classes.Morphisms.subrelation_proper (Prod Anonymous ExportProof.set (Prod gen_var_1412 ExportProof.set (Prod gen_var_1413 (Axiom ExportProof.X) bool))) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod Anonymous ExportProof.set ExportProof.set) ExportProof.set_eq (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq)) ExportProof.binary_intersection ExportProof.intersection_morphism (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1415 ExportProof.set (Prod gen_var_1416 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1417 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1418 (Axiom ExportProof.X) bool) (Prod gen_var_1419 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1420 (Axiom ExportProof.X) bool) (Prod gen_var_1421 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)))) tt (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1422 ExportProof.set (Prod gen_var_1423 (Axiom ExportProof.X) bool)) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq)) ExportProof.set_eq (App Coq.Classes.Morphisms.flip1 ExportProof.set ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl ExportProof.set ExportProof.set_eq)) (App Coq.Classes.Morphisms.respectful ExportProof.set ExportProof.set ExportProof.set_eq ExportProof.set_eq) (App Coq.Classes.Morphisms.respectful ExportProof.set (Prod gen_var_1424 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Program.Basics.flip (Prod gen_var_1425 (Axiom ExportProof.X) bool) (Prod gen_var_1426 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1427 (Axiom ExportProof.X) bool) (Prod gen_var_1428 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq))) (App Coq.Classes.Morphisms.subrelation_respectful ExportProof.set (Prod gen_var_1429 (Axiom ExportProof.X) bool) (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) ExportProof.set_eq (App Coq.Classes.RelationClasses.subrelation_symmetric ExportProof.set ExportProof.set_eq ExportProof.Set_eq_Symmetric) ExportProof.set_eq (App Coq.Program.Basics.flip (Prod gen_var_1430 (Axiom ExportProof.X) bool) (Prod gen_var_1431 (Axiom ExportProof.X) bool) (Sort Prop) (App Coq.Program.Basics.flip (Prod gen_var_1432 (Axiom ExportProof.X) bool) (Prod gen_var_1433 (Axiom ExportProof.X) bool) (Sort Prop) ExportProof.set_eq)) (App Coq.Classes.Morphisms.flip2 (Prod gen_var_1434 (Axiom ExportProof.X) bool) ExportProof.set_eq ExportProof.set_eq (App Coq.Classes.Morphisms.subrelation_refl (Prod gen_var_1435 (Axiom ExportProof.X) bool) ExportProof.set_eq))))))) gen_var_811 (App Coq.Classes.Morphisms.reflexive_proper_proxy ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.PreOrder_Reflexive ExportProof.set (App Coq.Program.Basics.flip ExportProof.set ExportProof.set (Sort Prop) ExportProof.set_eq) (App Coq.Classes.RelationClasses.flip_PreOrder ExportProof.set ExportProof.set_eq (App Coq.Classes.RelationClasses.Equivalence_PreOrder ExportProof.set ExportProof.set_eq ExportProof.Set_eq))) gen_var_811) (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929) (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929)) gen_var_1220)))) gen_var_1219 (Cast (Lambda gen_var_1436 (Axiom ExportProof.X) (Cast (LetIn gen_var_1568 (App gen_var_110 gen_var_1436) bool (Case 0 (Lambda gen_var_1470 bool (App eq bool (Case 0 (Lambda gen_var_1439 bool bool) (CaseMatch (Case 0 (Lambda gen_var_1440 bool bool) (CaseMatch gen_var_1438) (CaseBranches (App gen_var_811 gen_var_1436) false))) (CaseBranches (Case 0 (Lambda gen_var_1441 bool bool) (CaseMatch (App gen_var_1435 gen_var_1436)) (CaseBranches (Case 0 (Lambda gen_var_1442 bool bool) (CaseMatch gen_var_1438) (CaseBranches (App (Fix (Functions (App gen_var_1443 0 (Prod gen_var_1444 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1449 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1449 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1449) (CaseBranches gen_var_110 (Lambda gen_var_1452 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1454 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1456 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1457 bool bool) (CaseMatch (App gen_var_1452 gen_var_1456)) (CaseBranches (App gen_var_1443 gen_var_1454 gen_var_1456) false)))))))))) 0) gen_var_929 gen_var_1436) false)) false)) false)) (Case 0 (Lambda gen_var_1458 bool bool) (CaseMatch (App gen_var_1456 gen_var_1436)) (CaseBranches (Case 0 (Lambda gen_var_1459 bool bool) (CaseMatch (App gen_var_811 gen_var_1436)) (CaseBranches (Case 0 (Lambda gen_var_1460 bool bool) (CaseMatch gen_var_1452) (CaseBranches (App (Fix (Functions (App gen_var_1461 0 (Prod gen_var_1462 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1467 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1467 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1467) (CaseBranches gen_var_110 (Lambda gen_var_1470 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1472 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1474 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1475 bool bool) (CaseMatch (App gen_var_1470 gen_var_1474)) (CaseBranches (App gen_var_1461 gen_var_1472 gen_var_1474) false)))))))))) 0) gen_var_929 gen_var_1436) false)) false)) false)))) (CaseMatch gen_var_1437) (CaseBranches (LetIn gen_var_1561 (App gen_var_811 gen_var_1436) bool (Case 0 (Lambda gen_var_1506 bool (App eq bool (Case 0 (Lambda gen_var_1478 bool bool) (CaseMatch gen_var_1477) (CaseBranches (Case 0 (Lambda gen_var_1479 bool bool) (CaseMatch (App gen_var_1474 gen_var_1436)) (CaseBranches (App (Fix (Functions (App gen_var_1480 0 (Prod gen_var_1481 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1486 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1486 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1486) (CaseBranches gen_var_110 (Lambda gen_var_1489 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1491 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1493 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1494 bool bool) (CaseMatch (App gen_var_1489 gen_var_1493)) (CaseBranches (App gen_var_1480 gen_var_1491 gen_var_1493) false)))))))))) 0) gen_var_929 gen_var_1436) false)) false)) (Case 0 (Lambda gen_var_1495 bool bool) (CaseMatch (App gen_var_1493 gen_var_1436)) (CaseBranches (Case 0 (Lambda gen_var_1496 bool bool) (CaseMatch gen_var_1489) (CaseBranches (App (Fix (Functions (App gen_var_1497 0 (Prod gen_var_1498 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1503 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1503 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1503) (CaseBranches gen_var_110 (Lambda gen_var_1506 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1508 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1510 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1511 bool bool) (CaseMatch (App gen_var_1506 gen_var_1510)) (CaseBranches (App gen_var_1497 gen_var_1508 gen_var_1510) false)))))))))) 0) gen_var_929 gen_var_1436) false)) false)))) (CaseMatch gen_var_1476) (CaseBranches (LetIn gen_var_1512 (App gen_var_1510 gen_var_1436) bool (Case 0 (Lambda gen_var_1540 bool (App eq bool (Case 0 (Lambda gen_var_1514 bool bool) (CaseMatch gen_var_1513) (CaseBranches (App (Fix (Functions (App gen_var_1515 0 (Prod gen_var_1516 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1521 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1521 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1521) (CaseBranches gen_var_110 (Lambda gen_var_1524 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1526 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1528 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1529 bool bool) (CaseMatch (App gen_var_1524 gen_var_1528)) (CaseBranches (App gen_var_1515 gen_var_1526 gen_var_1528) false)))))))))) 0) gen_var_929 gen_var_1436) false)) (Case 0 (Lambda gen_var_1530 bool bool) (CaseMatch gen_var_1524) (CaseBranches (App (Fix (Functions (App gen_var_1531 0 (Prod gen_var_1532 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1537 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1537 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1537) (CaseBranches gen_var_110 (Lambda gen_var_1540 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1542 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1544 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1545 bool bool) (CaseMatch (App gen_var_1540 gen_var_1544)) (CaseBranches (App gen_var_1531 gen_var_1542 gen_var_1544) false)))))))))) 0) gen_var_929 gen_var_1436) false)))) (CaseMatch gen_var_1512) (CaseBranches (App eq_refl bool (App (Fix (Functions (App gen_var_1546 0 (Prod gen_var_1547 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1552 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Case 1 (Lambda gen_var_1552 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Prod Anonymous (Axiom ExportProof.X) bool)) (CaseMatch gen_var_1552) (CaseBranches gen_var_110 (Lambda gen_var_1555 (Prod Anonymous (Axiom ExportProof.X) bool) (Lambda gen_var_1557 (App list (Prod Anonymous (Axiom ExportProof.X) bool)) (Lambda gen_var_1559 (Axiom ExportProof.X) (Case 0 (Lambda gen_var_1560 bool bool) (CaseMatch (App gen_var_1555 gen_var_1559)) (CaseBranches (App gen_var_1546 gen_var_1557 gen_var_1559) false)))))))))) 0) gen_var_929 gen_var_1436)) (App eq_refl bool false)))) (LetIn gen_var_1561 (App gen_var_1559 gen_var_1436) bool (Case 0 (Lambda gen_var_1562 bool (App eq bool false (Case 0 (Lambda gen_var_1563 bool bool) (CaseMatch gen_var_1562) (CaseBranches false false)))) (CaseMatch gen_var_1561) (CaseBranches (App eq_refl bool false) (App eq_refl bool false))))))) (LetIn gen_var_1568 (App gen_var_1559 gen_var_1436) bool (Case 0 (Lambda gen_var_1565 bool (App eq bool false (Case 0 (Lambda gen_var_1566 bool bool) (CaseMatch gen_var_1565) (CaseBranches (Case 0 (Lambda gen_var_1567 bool bool) (CaseMatch (App gen_var_811 gen_var_1436)) (CaseBranches false false)) false)))) (CaseMatch gen_var_1564) (CaseBranches (LetIn gen_var_1568 (App gen_var_811 gen_var_1436) bool (Case 0 (Lambda gen_var_1569 bool (App eq bool false (Case 0 (Lambda gen_var_1570 bool bool) (CaseMatch gen_var_1569) (CaseBranches false false)))) (CaseMatch gen_var_1568) (CaseBranches (App eq_refl bool false) (App eq_refl bool false)))) (App eq_refl bool false))))))) REVERTcast (App eq bool (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_110 gen_var_811) (App ExportProof.binary_intersection gen_var_1559 (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929))) gen_var_1436) (App ExportProof.binary_intersection gen_var_1559 (App ExportProof.binary_intersection gen_var_811 (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929))) gen_var_1436)))) REVERTcast (App ExportProof.set_eq (App ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_110 gen_var_811) (App ExportProof.binary_intersection gen_var_1559 (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929)))) (App ExportProof.binary_intersection gen_var_1559 (App ExportProof.binary_intersection gen_var_811 (App ExportProof.binary_intersection gen_var_110 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 gen_var_929)))))))) gen_var_1219))) REVERTcast (App ExportProof.set_eq (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection (App ExportProof.binary_intersection gen_var_110 gen_var_1559) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1571 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1571)) (App cons ExportProof.set gen_var_811 gen_var_929))) (App ExportProof.binary_intersection gen_var_1559 (App Coq.Lists.List.fold_right ExportProof.set ExportProof.set ExportProof.binary_intersection gen_var_110 (App cons ExportProof.set gen_var_811 gen_var_929)))))))) gen_var_929)) REVERTcast (App eq Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1559) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1572 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1572)) gen_var_929)))) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929)))))) (App eq Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1559) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1573 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1573)) gen_var_929)))) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929))))) (App (Lambda gen_var_1574 (App eq Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1559) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1575 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1575)) gen_var_929)))) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929))))) (App Coq.Init.Logic.eq_ind_r Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929)))) (Lambda gen_var_1576 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul gen_var_1576 (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_929))) (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_929)) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929))))))) (Cast (LetIn gen_var_1577 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_1578 (App cons Z (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929)))) (App cons Z (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_929)) (App nil Z))) (App list Z) (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma1 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1578 gen_var_1577 (App PEmul Z (App PEX Z xH) (App PEX Z (App xO xH))) (App PEmul Z (App PEX Z (App xO xH)) (App PEX Z xH)) I (Cast (App eq_refl bool true) VMcast (App eq bool (LetIn gen_var_1579 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_1577) (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.Peq Z Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1579 (App PEmul Z (App PEX Z xH) (App PEX Z (App xO xH)))) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1579 (App PEmul Z (App PEX Z (App xO xH)) (App PEX Z xH))))) true))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929)))) (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_929))) (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_929)) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929))))))) (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1559) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1580 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1580)) gen_var_929)))) gen_var_1574)) gen_var_1574)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_929))))))) gen_var_790)))) (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1559) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1581 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1581)) gen_var_929)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_929))))) gen_var_783))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_767 (App cons Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1559) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1583 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1583)) gen_var_929)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_929))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_929))))))) (App nil Z)))) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1559) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1584 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1584)) gen_var_929)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_929))))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_929)))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_767 gen_var_767) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1559) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1586 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1586)) gen_var_929)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_929))))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.alternating_sign (App Coq.Init.Datatypes.length ExportProof.set gen_var_929)))))))))) (App eq_refl (App list Z) gen_var_767))) (App Coq.Init.Datatypes.length ExportProof.set (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1587 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1587)) gen_var_929)) (App Coq.Lists.List.map_length ExportProof.set ExportProof.set (Lambda gen_var_1588 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1588)) gen_var_929)) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1559) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1589 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1589)) gen_var_929)))) (App ExportProof.alternating_sign (App Coq.Init.Nat.add (App S O) (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1559) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1590 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1590)) gen_var_929)))))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929)))) (App ExportProof.alternating_sign (App Coq.Init.Nat.add (App S O) (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929))))))))) REVERTcast (App eq Z (App gen_var_126 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1559) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1591 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1591)) gen_var_929))) (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929)))))) (App eq Z (App gen_var_126 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1559) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1592 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1592)) gen_var_929))) (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929))))) (App (Lambda gen_var_1593 (App eq Z (App gen_var_126 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1559) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1594 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1594)) gen_var_929))) (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929))))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929)))) (Lambda gen_var_1595 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.opp gen_var_1595) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1596 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1596))) gen_var_1552))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1597 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1597))) gen_var_1552))))) (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929)))))) (Cast (LetIn gen_var_1598 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_1599 (App cons Z (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1600 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1600))) gen_var_1552)))) (App nil Z))) (App list Z) (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma1 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1599 gen_var_1598 (App PEsub Z (App PEopp Z (App PEopp Z (App PEX Z xH))) (App PEX Z (App xO xH))) (App PEadd Z (App PEopp Z (App PEX Z (App xO xH))) (App PEX Z xH)) I (Cast (App eq_refl bool true) VMcast (App eq bool (LetIn gen_var_1601 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_1598) (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.Peq Z Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1601 (App PEsub Z (App PEopp Z (App PEopp Z (App PEX Z xH))) (App PEX Z (App xO xH)))) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1601 (App PEadd Z (App PEopp Z (App PEX Z (App xO xH))) (App PEX Z xH))))) true))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1602 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1602))) gen_var_1552))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1603 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1603))) gen_var_1552))))) (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929)))))) (App gen_var_126 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1559) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1604 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1604)) gen_var_929))) gen_var_1593)) gen_var_1593)) (App Coq.ZArith.BinIntDef.Z.add (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1605 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1605))) gen_var_1552)))))) gen_var_790)))) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_126 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1559) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1606 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1606)) gen_var_929))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1607 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1607))) gen_var_1552)))))) gen_var_783))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_767 (App cons Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_126 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1559) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1609 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1609)) gen_var_929))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1610 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1610))) gen_var_1552)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1611 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1611))) gen_var_1552)))))) (App nil Z)))) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_126 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1559) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1612 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1612)) gen_var_929))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1613 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1613))) gen_var_1552)))))) (App Coq.ZArith.BinIntDef.Z.add (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1614 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1614))) gen_var_1552))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_767 gen_var_767) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App gen_var_126 (App cons ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1559) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1616 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1616)) gen_var_929))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1617 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1617))) gen_var_1552)))))) (App Coq.ZArith.BinIntDef.Z.add (App gen_var_126 (App cons ExportProof.set gen_var_110 (App cons ExportProof.set gen_var_1559 gen_var_929))) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1618 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1618))) gen_var_1552))))))))) (App eq_refl (App list Z) gen_var_767))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1619 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_1619)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1619)))) gen_var_697) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (Case 0 (Lambda gen_var_1620 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1621 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1621)) (App cons ExportProof.set gen_var_1559 gen_var_929)))) (CaseBranches (App cons (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1622 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1622)) (App cons ExportProof.set gen_var_1559 gen_var_929)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1623 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1623))) gen_var_1619))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1624 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1624))) gen_var_1619))))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1625 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_1625)) (Case 0 (Lambda gen_var_1626 bool (App list (App list ExportProof.set))) (CaseMatch (App ExportProof.nonempty ExportProof.set (App cons ExportProof.set gen_var_1559 gen_var_929))) (CaseBranches (App cons (App list ExportProof.set) (App cons ExportProof.set gen_var_1559 gen_var_929) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1625)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) gen_var_1625)))))))))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1627 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1627))) (App cons (App list ExportProof.set) gen_var_1627 gen_var_1625)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_126 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1628 (App list ExportProof.set) (App cons ExportProof.set gen_var_110 gen_var_1628)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App cons (App list ExportProof.set) gen_var_1627 gen_var_1628)))))))))) gen_var_1628))) (App ExportProof.sublists ExportProof.set gen_var_1628)) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set ExportProof.set (Lambda gen_var_1629 ExportProof.set (App ExportProof.binary_intersection gen_var_110 gen_var_1629)) gen_var_1628)) (App ExportProof.sublists_map ExportProof.set ExportProof.set (Lambda gen_var_1699 ExportProof.set (App ExportProof.binary_intersection gen_var_1636 gen_var_1699)) gen_var_1698)) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1700 (Axiom ExportProof.X) bool) (Lambda gen_var_1701 ExportProof.set (App ExportProof.binary_intersection gen_var_1636 gen_var_1701)) gen_var_1698)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1702 (App list ExportProof.set) (App cons ExportProof.set gen_var_1636 gen_var_1702)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1702)))))) (App (LetIn gen_var_1704 (App eq_refl Z (App ExportProof.cardinal gen_var_1636)) (App eq Z (App ExportProof.cardinal gen_var_1636) (App ExportProof.cardinal gen_var_1636)) (App (Lambda gen_var_1704 (App eq Z (App ExportProof.cardinal gen_var_1636) (App ExportProof.cardinal gen_var_1636)) (Lambda gen_var_1705 (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1706 (Axiom ExportProof.X) bool) (Lambda gen_var_1707 ExportProof.set (App ExportProof.binary_intersection gen_var_1636 gen_var_1707)) gen_var_1702)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1708 (App list ExportProof.set) (App cons ExportProof.set gen_var_1636 gen_var_1708)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1708)))))) (App Coq.Init.Logic.eq_trans Z (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_1636) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1710 (Sort Set) (Lambda gen_var_1710 (Sort Set) (Prod Anonymous gen_var_1710 gen_var_1710))) (Axiom ExportProof.X) bool) (Lambda gen_var_1712 ExportProof.set (App ExportProof.binary_intersection gen_var_1636 gen_var_1712)) gen_var_1708))))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_1636) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1714 (Sort Set) (Lambda gen_var_1714 (Sort Set) (Prod Anonymous gen_var_1714 gen_var_1714))) (Axiom ExportProof.X) bool) (Lambda gen_var_1716 ExportProof.set (App ExportProof.binary_intersection gen_var_1636 gen_var_1716)) gen_var_1708))))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_1636) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1717 (App list ExportProof.set) (App cons ExportProof.set gen_var_1636 gen_var_1717)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1717)))))) (App Coq.Init.Logic.f_equal (Prod gen_var_1718 Z Z) Z (Lambda gen_var_1719 (Prod gen_var_1720 Z Z) (App gen_var_1719 (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1722 (Sort Set) (Lambda gen_var_1722 (Sort Set) (Prod Anonymous gen_var_1722 gen_var_1722))) (Axiom ExportProof.X) bool) (Lambda gen_var_1724 ExportProof.set (App ExportProof.binary_intersection gen_var_1636 gen_var_1724)) gen_var_1717)))))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_1636)) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_1636)) (App eq_refl (Prod gen_var_1725 Z Z) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_1636)))) (App Coq.Init.Logic.f_equal Z Z (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_1636)) (App Coq.ZArith.BinIntDef.Z.opp (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (App (Lambda gen_var_1727 (Sort Set) (Lambda gen_var_1727 (Sort Set) (Prod Anonymous gen_var_1727 gen_var_1727))) (Axiom ExportProof.X) bool) (Lambda gen_var_1729 ExportProof.set (App ExportProof.binary_intersection gen_var_1636 gen_var_1729)) gen_var_1717)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1730 (App list ExportProof.set) (App cons ExportProof.set gen_var_1636 gen_var_1730)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1730))))) gen_var_1705)))) gen_var_1704)) gen_var_1704)) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1636) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1731 (Axiom ExportProof.X) bool) (Lambda gen_var_1732 ExportProof.set (App ExportProof.binary_intersection gen_var_1636 gen_var_1732)) gen_var_1730)))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_1636) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1733 (App list ExportProof.set) (App cons ExportProof.set gen_var_1636 gen_var_1733)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1733)))))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_1636) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1734 (App list ExportProof.set) (App cons ExportProof.set gen_var_1636 gen_var_1734)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1734)))))) gen_var_790)))))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_767 (App cons Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1636) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1736 (Axiom ExportProof.X) bool) (Lambda gen_var_1737 ExportProof.set (App ExportProof.binary_intersection gen_var_1636 gen_var_1737)) gen_var_1734)))))) (App cons Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_1636) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1738 (App list ExportProof.set) (App cons ExportProof.set gen_var_1636 gen_var_1738)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1738)))))) (App nil Z)))) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1636) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1739 (Axiom ExportProof.X) bool) (Lambda gen_var_1740 ExportProof.set (App ExportProof.binary_intersection gen_var_1636 gen_var_1740)) gen_var_1738)))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_1636) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1741 (App list ExportProof.set) (App cons ExportProof.set gen_var_1636 gen_var_1741)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1741))))))))) REVERTcast (Prod Anonymous (App eq (App list Z) gen_var_767 gen_var_767) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1636) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1743 (Axiom ExportProof.X) bool) (Lambda gen_var_1744 ExportProof.set (App ExportProof.binary_intersection gen_var_1636 gen_var_1744)) gen_var_1741)))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal gen_var_1636) (App Zpos xH)) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1745 (App list ExportProof.set) (App cons ExportProof.set gen_var_1636 gen_var_1745)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1745))))))))) (App eq_refl (App list Z) gen_var_767))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1636) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1746 (Axiom ExportProof.X) bool) (Lambda gen_var_1747 ExportProof.set (App ExportProof.binary_intersection gen_var_1636 gen_var_1747)) gen_var_1745)))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App ExportProof.cardinal (App ExportProof.list_intersection (App cons ExportProof.set gen_var_1636 (App nil ExportProof.set)))) (App ExportProof.alternating_sign (App Coq.Init.Nat.add (App S O) (App Coq.Init.Datatypes.length ExportProof.set (App cons ExportProof.set gen_var_1636 (App nil ExportProof.set)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1748 (App list ExportProof.set) (App cons ExportProof.set gen_var_1636 gen_var_1748)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1748)))))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1636) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1749 (Axiom ExportProof.X) bool) (Lambda gen_var_1750 ExportProof.set (App ExportProof.binary_intersection gen_var_1636 gen_var_1750)) gen_var_1748)))))) (App Coq.ZArith.BinIntDef.Z.add (App gen_var_1632 (App cons ExportProof.set gen_var_1636 (App nil ExportProof.set))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1751 (App list ExportProof.set) (App cons ExportProof.set gen_var_1636 gen_var_1751)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1751)))))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1636) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1752 (Axiom ExportProof.X) bool) (Lambda gen_var_1753 ExportProof.set (App ExportProof.binary_intersection gen_var_1636 gen_var_1753)) gen_var_1751)))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1632 (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1754 (App list ExportProof.set) (App cons ExportProof.set gen_var_1636 gen_var_1754)) (App cons (App list ExportProof.set) (App nil ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1754)))))))) (App ExportProof.sublists ExportProof.set gen_var_1754) (App ExportProof.sublists_proper ExportProof.set gen_var_1787)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1788 (App list ExportProof.set) (App cons ExportProof.set gen_var_1758 gen_var_1788)) (App ExportProof.sublists ExportProof.set gen_var_1788))) (App ExportProof.filter_map_always (App list ExportProof.set) (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (Lambda gen_var_1808 (App list ExportProof.set) (App cons ExportProof.set gen_var_1799 gen_var_1808)) (App ExportProof.sublists ExportProof.set gen_var_1808) (Lambda gen_var_1809 (App list ExportProof.set) (App eq_refl bool true)))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1799) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1791 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_99))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1791 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1810 (App list ExportProof.set) (App cons ExportProof.set gen_var_1799 gen_var_1810)) (App ExportProof.sublists ExportProof.set gen_var_1810))))))) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1799) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1791 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_99))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1791 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1811 (App list ExportProof.set) (App cons ExportProof.set gen_var_1799 gen_var_1811)) (App ExportProof.sublists ExportProof.set gen_var_1811)))))) (App (Lambda gen_var_1812 (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1799) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1791 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_99))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1791 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1813 (App list ExportProof.set) (App cons ExportProof.set gen_var_1799 gen_var_1813)) (App ExportProof.sublists ExportProof.set gen_var_1813)))))) (App Coq.Init.Logic.eq_ind Z (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1799) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1791 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_99))))) (Lambda gen_var_1814 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_1799) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1791 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1813))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1791 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_99))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1791 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1813)))) gen_var_1814))) (Cast (LetIn gen_var_1815 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn gen_var_1816 (App cons Z (App ExportProof.cardinal gen_var_1799) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1791 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1813)))) (App cons Z (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1791 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_99)))) (App nil Z)))) (App list Z) (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma1 Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1816 gen_var_1815 (App PEsub Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH))) (App PEX Z (App xI xH))) (App PEadd Z (App PEX Z (App xO xH)) (App PEsub Z (App PEX Z xH) (App PEX Z (App xI xH)))) I (Cast (App eq_refl bool true) VMcast (App eq bool (LetIn gen_var_1817 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem gen_var_1815) (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.Peq Z Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1817 (App PEsub Z (App PEadd Z (App PEX Z xH) (App PEX Z (App xO xH))) (App PEX Z (App xI xH)))) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter gen_var_1817 (App PEadd Z (App PEX Z (App xO xH)) (App PEsub Z (App PEX Z xH) (App PEX Z (App xI xH))))))) true))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.cardinal gen_var_1799) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1791 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1813))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1791 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_99))))) (App Coq.ZArith.BinIntDef.Z.add (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1791 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1813)))) (App Coq.ZArith.BinIntDef.Z.sub (App ExportProof.cardinal gen_var_1799) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1791 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_99)))))))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1791 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1818 (App list ExportProof.set) (App cons ExportProof.set gen_var_1799 gen_var_1818)) (App ExportProof.sublists ExportProof.set gen_var_1818))))) gen_var_1812)) gen_var_1812)) (App ExportProof.cardinal (App ExportProof.list_union gen_var_99)) (App gen_var_66 gen_var_99 (Cast (App Coq.Init.Logic.eq_ind_r nat (App Coq.Init.Datatypes.length ExportProof.set gen_var_1818) (Lambda gen_var_1819 nat (App eq nat gen_var_1819 gen_var_1819)) gen_var_85 (App Coq.Init.Datatypes.length (Prod gen_var_1820 (Axiom ExportProof.X) bool) (App Coq.Lists.List.map ExportProof.set (Prod gen_var_1821 (Axiom ExportProof.X) bool) (Lambda gen_var_1822 ExportProof.set (App ExportProof.binary_intersection gen_var_1799 gen_var_1822)) gen_var_1818)) (App Coq.Lists.List.map_length ExportProof.set (Prod gen_var_1823 (Axiom ExportProof.X) bool) (Lambda gen_var_1824 ExportProof.set (App ExportProof.binary_intersection gen_var_1799 gen_var_1824)) gen_var_1818)) REVERTcast (App eq nat gen_var_1819 (App Coq.Init.Datatypes.length ExportProof.set gen_var_99))))) (App ExportProof.cardinal (App ExportProof.binary_intersection gen_var_1799 (App ExportProof.list_union gen_var_1818))) gen_var_1812))) (App ExportProof.cardinal (App ExportProof.list_union gen_var_1818)) (App gen_var_66 gen_var_1818 gen_var_85)) (App ExportProof.sum (App Coq.Init.Datatypes.app Z (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1791 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1818))) (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1791 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1825 (App list ExportProof.set) (App cons ExportProof.set gen_var_1799 gen_var_1825)) (App ExportProof.sublists ExportProof.set gen_var_1825)))))) (App ExportProof.sum_app (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1791 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1825))) (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1791 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1933 (App list ExportProof.set) (App cons ExportProof.set gen_var_1829 gen_var_1933)) (App ExportProof.sublists ExportProof.set gen_var_1933)))))) (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1791 (App Coq.Init.Datatypes.app (App list ExportProof.set) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1933)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1934 (App list ExportProof.set) (App cons ExportProof.set gen_var_1829 gen_var_1934)) (App ExportProof.sublists ExportProof.set gen_var_1934))))) (App Coq.Lists.List.map_app (App list ExportProof.set) Z gen_var_1791 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1934)) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1935 (App list ExportProof.set) (App cons ExportProof.set gen_var_1829 gen_var_1935)) (App ExportProof.sublists ExportProof.set gen_var_1935))))) (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App Coq.Init.Datatypes.app (App list ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1935) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1936 (App list ExportProof.set) (App cons ExportProof.set gen_var_1829 gen_var_1936)) (App ExportProof.sublists ExportProof.set gen_var_1936)))) (App ExportProof.filter_app (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set gen_var_1953) (App Coq.Lists.List.map (App list ExportProof.set) (App list ExportProof.set) (Lambda gen_var_1954 (App list ExportProof.set) (App cons ExportProof.set gen_var_1943 gen_var_1954)) (App ExportProof.sublists ExportProof.set gen_var_1954)))) (App ExportProof.cardinal (App ExportProof.binary_union gen_var_1943 (App ExportProof.list_union gen_var_1954))) (App ExportProof.cardinal_binary_union gen_var_1943 (App ExportProof.list_union gen_var_1954))) REVERTcast (App eq Z (App ExportProof.cardinal (App ExportProof.list_union (App cons ExportProof.set gen_var_1943 gen_var_1954))) (App ExportProof.sum (App Coq.Lists.List.map (App list ExportProof.set) Z gen_var_1938 (App Coq.Lists.List.filter (App list ExportProof.set) (App ExportProof.nonempty ExportProof.set) (App ExportProof.sublists ExportProof.set (App cons ExportProof.set gen_var_1943 gen_var_1954)))))))) gen_var_1969))))))) gen_var_85))))) gen_var_1819 gen_var_1954 gen_var_68)))))) 