(Definition Coq.PArith.BinPosDef.Pos.add (Fix (Functions (App add 0 (Prod x_222222211122221 positive (Prod y_2222222111222211 positive positive)) (Lambda x_222222211122222 positive (Lambda y_2222222111222222 positive (Case 0 (Lambda x_22222221112222222 positive positive) (CaseMatch x_222222211122222) (CaseBranches (Lambda p_22222221112222222 positive (Case 0 (Lambda y_222222211122222222 positive positive) (CaseMatch y_2222222111222222) (CaseBranches (Lambda q_222222211122222222 positive (App xO (App add p_22222221112222222 q_222222211122222222))) (Lambda q_222222211122222222 positive (App xI (App add_carry p_22222221112222222 q_222222211122222222))) (App xO (App Coq.PArith.BinPosDef.Pos.succ p_22222221112222222))))) (Lambda p_22222221112222222 positive (Case 0 (Lambda y_222222211122222222 positive positive) (CaseMatch y_2222222111222222) (CaseBranches (Lambda q_222222211122222222 positive (App xI (App add_carry p_22222221112222222 q_222222211122222222))) (Lambda q_222222211122222222 positive (App xO (App add_carry p_22222221112222222 q_222222211122222222))) (App xI p_22222221112222222)))) (Case 0 (Lambda y_22222221112222222 positive positive) (CaseMatch y_2222222111222222) (CaseBranches (Lambda q_22222221112222222 positive (App xO (App Coq.PArith.BinPosDef.Pos.succ q_22222221112222222))) (Lambda q_22222221112222222 positive (App xI q_22222221112222222)) (App xO xH)))))))) (App add_carry 1 (Prod x_222222211122221 positive (Prod y_2222222111222211 positive positive)) (Lambda x_222222211122222 positive (Lambda y_2222222111222222 positive (Case 0 (Lambda x_22222221112222222 positive positive) (CaseMatch x_222222211122222) (CaseBranches (Lambda p_22222221112222222 positive (Case 0 (Lambda y_222222211122222222 positive positive) (CaseMatch y_2222222111222222) (CaseBranches (Lambda q_222222211122222222 positive (App xI (App add p_22222221112222222 q_222222211122222222))) (Lambda q_222222211122222222 positive (App xO (App add p_22222221112222222 q_222222211122222222))) (App xI (App Coq.PArith.BinPosDef.Pos.succ p_22222221112222222))))) (Lambda p_22222221112222222 positive (Case 0 (Lambda y_222222211122222222 positive positive) (CaseMatch y_2222222111222222) (CaseBranches (Lambda q_222222211122222222 positive (App xO (App add p_22222221112222222 q_222222211122222222))) (Lambda q_222222211122222222 positive (App xI (App add_carry p_22222221112222222 q_222222211122222222))) (App xO (App Coq.PArith.BinPosDef.Pos.succ p_22222221112222222))))) (Case 0 (Lambda y_22222221112222222 positive positive) (CaseMatch y_2222222111222222) (CaseBranches (Lambda q_22222221112222222 positive (App xI (App Coq.PArith.BinPosDef.Pos.succ q_22222221112222222))) (Lambda q_22222221112222222 positive (App xO (App Coq.PArith.BinPosDef.Pos.succ q_22222221112222222))) (App xI xH))))))))) 0)) (Definition Coq.ZArith.BinIntDef.Z.pos_sub (Fix (Functions (App pos_sub 0 (Prod x_222222211122221 positive (Prod y_2222222111222211 positive Z)) (Lambda x_222222211122222 positive (Lambda y_2222222111222222 positive (Case 0 (Lambda x_22222221112222222 positive Z) (CaseMatch x_222222211122222) (CaseBranches (Lambda p_22222221112222222 positive (Case 0 (Lambda y_222222211122222222 positive Z) (CaseMatch y_2222222111222222) (CaseBranches (Lambda q_222222211122222222 positive (App Coq.ZArith.BinIntDef.Z.double (App pos_sub p_22222221112222222 q_222222211122222222))) (Lambda q_222222211122222222 positive (App Coq.ZArith.BinIntDef.Z.succ_double (App pos_sub p_22222221112222222 q_222222211122222222))) (App Zpos (App xO p_22222221112222222))))) (Lambda p_22222221112222222 positive (Case 0 (Lambda y_222222211122222222 positive Z) (CaseMatch y_2222222111222222) (CaseBranches (Lambda q_222222211122222222 positive (App Coq.ZArith.BinIntDef.Z.pred_double (App pos_sub p_22222221112222222 q_222222211122222222))) (Lambda q_222222211122222222 positive (App Coq.ZArith.BinIntDef.Z.double (App pos_sub p_22222221112222222 q_222222211122222222))) (App Zpos (App Coq.PArith.BinPosDef.Pos.pred_double p_22222221112222222))))) (Case 0 (Lambda y_22222221112222222 positive Z) (CaseMatch y_2222222111222222) (CaseBranches (Lambda q_22222221112222222 positive (App Zneg (App xO q_22222221112222222))) (Lambda q_22222221112222222 positive (App Zneg (App Coq.PArith.BinPosDef.Pos.pred_double q_22222221112222222))) Z0)))))))) 0)) (Definition Coq.ZArith.BinIntDef.Z.add (Lambda x_22222221112 Z (Lambda y_222222211122 Z (Case 0 (Lambda x_2222222111222 Z Z) (CaseMatch x_22222221112) (CaseBranches y_222222211122 (Lambda x'_2222222111222 positive (Case 0 (Lambda y_22222221112222 Z Z) (CaseMatch y_222222211122) (CaseBranches x_22222221112 (Lambda y'_22222221112222 positive (App Zpos (App Coq.PArith.BinPosDef.Pos.add x'_2222222111222 y'_22222221112222))) (Lambda y'_22222221112222 positive (App Coq.ZArith.BinIntDef.Z.pos_sub x'_2222222111222 y'_22222221112222))))) (Lambda x'_2222222111222 positive (Case 0 (Lambda y_22222221112222 Z Z) (CaseMatch y_222222211122) (CaseBranches x_22222221112 (Lambda y'_22222221112222 positive (App Coq.ZArith.BinIntDef.Z.pos_sub y'_22222221112222 x'_2222222111222)) (Lambda y'_22222221112222 positive (App Zneg (App Coq.PArith.BinPosDef.Pos.add x'_2222222111222 y'_22222221112222))))))))))) (Definition Coq.PArith.BinPosDef.Pos.mul (Fix (Functions (App mul 0 (Prod x_222222211122221 positive (Prod y_2222222111222211 positive positive)) (Lambda x_222222211122222 positive (Lambda y_2222222111222222 positive (Case 0 (Lambda x_22222221112222222 positive positive) (CaseMatch x_222222211122222) (CaseBranches (Lambda p_22222221112222222 positive (App Coq.PArith.BinPosDef.Pos.add y_2222222111222222 (App xO (App mul p_22222221112222222 y_2222222111222222)))) (Lambda p_22222221112222222 positive (App xO (App mul p_22222221112222222 y_2222222111222222))) y_2222222111222222)))))) 0)) (Definition Coq.ZArith.BinIntDef.Z.mul (Lambda x_22222221112 Z (Lambda y_222222211122 Z (Case 0 (Lambda x_2222222111222 Z Z) (CaseMatch x_22222221112) (CaseBranches Z0 (Lambda x'_2222222111222 positive (Case 0 (Lambda y_22222221112222 Z Z) (CaseMatch y_222222211122) (CaseBranches Z0 (Lambda y'_22222221112222 positive (App Zpos (App Coq.PArith.BinPosDef.Pos.mul x'_2222222111222 y'_22222221112222))) (Lambda y'_22222221112222 positive (App Zneg (App Coq.PArith.BinPosDef.Pos.mul x'_2222222111222 y'_22222221112222)))))) (Lambda x'_2222222111222 positive (Case 0 (Lambda y_22222221112222 Z Z) (CaseMatch y_222222211122) (CaseBranches Z0 (Lambda y'_22222221112222 positive (App Zneg (App Coq.PArith.BinPosDef.Pos.mul x'_2222222111222 y'_22222221112222))) (Lambda y'_22222221112222 positive (App Zpos (App Coq.PArith.BinPosDef.Pos.mul x'_2222222111222 y'_22222221112222))))))))))) (Definition Coq.ZArith.Znumtheory.Euclid_ind (Lambda a_22222 Z (Lambda b_222222 Z (Lambda P_2222222 (Prod e_2222221 (App Euclid a_22222 b_222222) (Sort Prop)) (Lambda f_22222222 (Prod u_22222221 Z (Prod v_222222211 Z (Prod d_2222222111 Z (Prod e_22222221111 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul u_22222221 a_22222) (App Coq.ZArith.BinIntDef.Z.mul v_222222211 b_222222)) d_2222222111) (Prod z_222222211111 (App Zis_gcd a_22222 b_222222 d_2222222111) (App P_2222222 (App Euclid_intro a_22222 b_222222 u_22222221 v_222222211 d_2222222111 e_22222221111 z_222222211111))))))) (Lambda e_222222222 (App Euclid a_22222 b_222222) (Case 2 (Lambda e_2222222222 (App Euclid a_22222 b_222222) (App P_2222222 e_2222222222)) (CaseMatch e_222222222) (CaseBranches f_22222222)))))))) (Definition Coq.ZArith.BinIntDef.Z.opp (Lambda x_2222222222 Z (Case 0 (Lambda x_22222222222 Z Z) (CaseMatch x_2222222222) (CaseBranches Z0 (Lambda x_22222222222 positive (App Zneg x_22222222222)) (Lambda x_22222222222 positive (App Zpos x_22222222222)))))) (Definition Coq.Init.Logic.or_ind (Lambda A_22222222222 (Sort Prop) (Lambda B_222222222222 (Sort Prop) (Lambda P_2222222222222 (Sort Prop) (Lambda f_22222222222222 (Prod out_22222222222221 A_22222222222 P_2222222222222) (Lambda f_222222222222222 (Prod out_222222222222221 B_222222222222 P_2222222222222) (Lambda o_2222222222222222 (App or A_22222222222 B_222222222222) (Case 2 (Lambda out_22222222222222222 (App or A_22222222222 B_222222222222) P_2222222222222) (CaseMatch o_2222222222222222) (CaseBranches f_22222222222222 f_222222222222222))))))))) (Definition Coq.Init.Logic.eq_ind (Lambda A_222222222222222222 (Sort Type) (Lambda x_2222222222222222222 A_222222222222222222 (Lambda P_22222222222222222222 (Prod out_22222222222222222221 A_222222222222222222 (Sort Prop)) (Lambda f_222222222222222222222 (App P_22222222222222222222 x_2222222222222222222) (Lambda y_2222222222222222222222 A_222222222222222222 (Lambda e_22222222222222222222222 (App eq A_222222222222222222 x_2222222222222222222 y_2222222222222222222222) (Case 2 (Lambda y_222222222222222222222222 A_222222222222222222 (Lambda out_2222222222222222222222222 (App eq A_222222222222222222 x_2222222222222222222 y_222222222222222222222222) (App P_22222222222222222222 y_222222222222222222222222))) (CaseMatch e_22222222222222222222222) (CaseBranches f_222222222222222222222))))))))) (Definition Coq.Init.Logic.eq_sym (Lambda A_222222222222222222 (Sort Type) (Lambda x_2222222222222222222 A_222222222222222222 (Lambda y_22222222222222222222 A_222222222222222222 (Lambda H_222222222222222222222 (App eq A_222222222222222222 x_2222222222222222222 y_22222222222222222222) (Case 2 (Lambda y_2222222222222222222222 A_222222222222222222 (Lambda out_22222222222222222222222 (App eq A_222222222222222222 x_2222222222222222222 y_2222222222222222222222) (App eq A_222222222222222222 y_2222222222222222222222 x_2222222222222222222))) (CaseMatch H_222222222222222222222) (CaseBranches (App eq_refl A_222222222222222222 x_2222222222222222222)))))))) (Definition Coq.Init.Logic.eq_ind_r (Lambda A_222222222222 (Sort Type) (Lambda x_2222222222222 A_222222222222 (Lambda P_22222222222222 (Prod out_22222222222221 A_222222222222 (Sort Prop)) (Lambda H_222222222222222 (App P_22222222222222 x_2222222222222) (Lambda y_2222222222222222 A_222222222222 (Lambda H0_22222222222222222 (App eq A_222222222222 y_2222222222222222 x_2222222222222) (App Coq.Init.Logic.eq_ind A_222222222222 x_2222222222222 (Lambda y_222222222222222222 A_222222222222 (App P_22222222222222 y_222222222222222222)) H_222222222222222 y_2222222222222222 (App Coq.Init.Logic.eq_sym A_222222222222 y_2222222222222222 x_2222222222222 H0_22222222222222222))))))))) (Definition Coq.setoid_ring.Ring_polynom.interp_PElist (Lambda R_2222222222233222222222222222222222222222222222 (Sort Type) (Lambda rO_22222222222332222222222222222222222222222222222 R_2222222222233222222222222222222222222222222222 (Lambda rI_222222222223322222222222222222222222222222222222 R_2222222222233222222222222222222222222222222222 (Lambda radd_2222222222233222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222221 R_2222222222233222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222211 R_2222222222233222222222222222222222222222222222 R_2222222222233222222222222222222222222222222222)) (Lambda rmul_22222222222332222222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222221 R_2222222222233222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222211 R_2222222222233222222222222222222222222222222222 R_2222222222233222222222222222222222222222222222)) (Lambda rsub_222222222223322222222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222221 R_2222222222233222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222211 R_2222222222233222222222222222222222222222222222 R_2222222222233222222222222222222222222222222222)) (Lambda ropp_2222222222233222222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222221 R_2222222222233222222222222222222222222222222222 R_2222222222233222222222222222222222222222222222) (Lambda req_22222222222332222222222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222221 R_2222222222233222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222222211 R_2222222222233222222222222222222222222222222222 (Sort Prop))) (Lambda C_222222222223322222222222222222222222222222222222222222 (Sort Type) (Lambda phi_2222222222233222222222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222222221 C_222222222223322222222222222222222222222222222222222222 R_2222222222233222222222222222222222222222222222) (Lambda Cpow_22222222222332222222222222222222222222222222222222222222 (Sort Type) (Lambda Cp_phi_222222222223322222222222222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222222222221 N Cpow_22222222222332222222222222222222222222222222222222222222) (Lambda rpow_2222222222233222222222222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222222222221 R_2222222222233222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222222222211 Cpow_22222222222332222222222222222222222222222222222222222222 R_2222222222233222222222222222222222222222222222)) (Fix (Functions (App interp_PElist 0 (Prod l_22222222222332222222222222222222222222222222222222222222221 (App list R_2222222222233222222222222222222222222222222222) (Prod lpe_222222222223322222222222222222222222222222222222222222222211 (App list (App prod (App PExpr C_222222222223322222222222222222222222222222222222222222) (App PExpr C_222222222223322222222222222222222222222222222222222222))) (Sort Prop))) (Lambda l_22222222222332222222222222222222222222222222222222222222222 (App list R_2222222222233222222222222222222222222222222222) (Lambda lpe_222222222223322222222222222222222222222222222222222222222222 (App list (App prod (App PExpr C_222222222223322222222222222222222222222222222222222222) (App PExpr C_222222222223322222222222222222222222222222222222222222))) (Case 1 (Lambda lpe_2222222222233222222222222222222222222222222222222222222222222 (App list (App prod (App PExpr C_222222222223322222222222222222222222222222222222222222) (App PExpr C_222222222223322222222222222222222222222222222222222222))) (Sort Prop)) (CaseMatch lpe_222222222223322222222222222222222222222222222222222222222222) (CaseBranches True (Lambda p_2222222222233222222222222222222222222222222222222222222222222 (App prod (App PExpr C_222222222223322222222222222222222222222222222222222222) (App PExpr C_222222222223322222222222222222222222222222222222222222)) (Lambda lpe_22222222222332222222222222222222222222222222222222222222222222 (App list (App prod (App PExpr C_222222222223322222222222222222222222222222222222222222) (App PExpr C_222222222223322222222222222222222222222222222222222222))) (Case 2 (Lambda p_222222222223322222222222222222222222222222222222222222222222222 (App prod (App PExpr C_222222222223322222222222222222222222222222222222222222) (App PExpr C_222222222223322222222222222222222222222222222222222222)) (Sort Prop)) (CaseMatch p_2222222222233222222222222222222222222222222222222222222222222) (CaseBranches (Lambda me_222222222223322222222222222222222222222222222222222222222222222 (App PExpr C_222222222223322222222222222222222222222222222222222222) (Lambda pe_2222222222233222222222222222222222222222222222222222222222222222 (App PExpr C_222222222223322222222222222222222222222222222222222222) (Case 1 (Lambda lpe_22222222222332222222222222222222222222222222222222222222222222222 (App list (App prod (App PExpr C_222222222223322222222222222222222222222222222222222222) (App PExpr C_222222222223322222222222222222222222222222222222222222))) (Sort Prop)) (CaseMatch lpe_22222222222332222222222222222222222222222222222222222222222222) (CaseBranches (App req_22222222222332222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.PEeval R_2222222222233222222222222222222222222222222222 rO_22222222222332222222222222222222222222222222222 rI_222222222223322222222222222222222222222222222222 radd_2222222222233222222222222222222222222222222222222 rmul_22222222222332222222222222222222222222222222222222 rsub_222222222223322222222222222222222222222222222222222 ropp_2222222222233222222222222222222222222222222222222222 C_222222222223322222222222222222222222222222222222222222 phi_2222222222233222222222222222222222222222222222222222222 Cpow_22222222222332222222222222222222222222222222222222222222 Cp_phi_222222222223322222222222222222222222222222222222222222222 rpow_2222222222233222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222 me_222222222223322222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.PEeval R_2222222222233222222222222222222222222222222222 rO_22222222222332222222222222222222222222222222222 rI_222222222223322222222222222222222222222222222222 radd_2222222222233222222222222222222222222222222222222 rmul_22222222222332222222222222222222222222222222222222 rsub_222222222223322222222222222222222222222222222222222 ropp_2222222222233222222222222222222222222222222222222222 C_222222222223322222222222222222222222222222222222222222 phi_2222222222233222222222222222222222222222222222222222222 Cpow_22222222222332222222222222222222222222222222222222222222 Cp_phi_222222222223322222222222222222222222222222222222222222222 rpow_2222222222233222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222 pe_2222222222233222222222222222222222222222222222222222222222222222)) (Lambda p_22222222222332222222222222222222222222222222222222222222222222222 (App prod (App PExpr C_222222222223322222222222222222222222222222222222222222) (App PExpr C_222222222223322222222222222222222222222222222222222222)) (Lambda l_222222222223322222222222222222222222222222222222222222222222222222 (App list (App prod (App PExpr C_222222222223322222222222222222222222222222222222222222) (App PExpr C_222222222223322222222222222222222222222222222222222222))) (App and (App req_22222222222332222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.PEeval R_2222222222233222222222222222222222222222222222 rO_22222222222332222222222222222222222222222222222 rI_222222222223322222222222222222222222222222222222 radd_2222222222233222222222222222222222222222222222222 rmul_22222222222332222222222222222222222222222222222222 rsub_222222222223322222222222222222222222222222222222222 ropp_2222222222233222222222222222222222222222222222222222 C_222222222223322222222222222222222222222222222222222222 phi_2222222222233222222222222222222222222222222222222222222 Cpow_22222222222332222222222222222222222222222222222222222222 Cp_phi_222222222223322222222222222222222222222222222222222222222 rpow_2222222222233222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222 me_222222222223322222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.PEeval R_2222222222233222222222222222222222222222222222 rO_22222222222332222222222222222222222222222222222 rI_222222222223322222222222222222222222222222222222 radd_2222222222233222222222222222222222222222222222222 rmul_22222222222332222222222222222222222222222222222222 rsub_222222222223322222222222222222222222222222222222222 ropp_2222222222233222222222222222222222222222222222222222 C_222222222223322222222222222222222222222222222222222222 phi_2222222222233222222222222222222222222222222222222222222 Cpow_22222222222332222222222222222222222222222222222222222222 Cp_phi_222222222223322222222222222222222222222222222222222222222 rpow_2222222222233222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222 pe_2222222222233222222222222222222222222222222222222222222222222222)) (App interp_PElist l_22222222222332222222222222222222222222222222222222222222222 lpe_22222222222332222222222222222222222222222222222222222222222222)))))))))))))))))) 0))))))))))))))) (Definition Coq.setoid_ring.Ring_polynom.Peq (Lambda C_22222222222332222222222222222222222222222222222 (Sort Type) (Lambda ceqb_222222222223322222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222221 C_22222222222332222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222211 C_22222222222332222222222222222222222222222222222 bool)) (Fix (Functions (App Peq 0 (Prod P_2222222222233222222222222222222222222222222222221 (App Pol C_22222222222332222222222222222222222222222222222) (Prod P'_22222222222332222222222222222222222222222222222211 (App Pol C_22222222222332222222222222222222222222222222222) bool)) (Lambda P_2222222222233222222222222222222222222222222222222 (App Pol C_22222222222332222222222222222222222222222222222) (Lambda P'_22222222222332222222222222222222222222222222222222 (App Pol C_22222222222332222222222222222222222222222222222) (Case 1 (Lambda P_222222222223322222222222222222222222222222222222222 (App Pol C_22222222222332222222222222222222222222222222222) bool) (CaseMatch P_2222222222233222222222222222222222222222222222222) (CaseBranches (Lambda c_222222222223322222222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222 (Case 1 (Lambda P'_2222222222233222222222222222222222222222222222222222 (App Pol C_22222222222332222222222222222222222222222222222) bool) (CaseMatch P'_22222222222332222222222222222222222222222222222222) (CaseBranches (Lambda c'_2222222222233222222222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222 (App ceqb_222222222223322222222222222222222222222222222222 c_222222222223322222222222222222222222222222222222222 c'_2222222222233222222222222222222222222222222222222222)) (Lambda p_2222222222233222222222222222222222222222222222222222 positive (Lambda p0_22222222222332222222222222222222222222222222222222222 (App Pol C_22222222222332222222222222222222222222222222222) false)) (Lambda p_2222222222233222222222222222222222222222222222222222 (App Pol C_22222222222332222222222222222222222222222222222) (Lambda p0_22222222222332222222222222222222222222222222222222222 positive (Lambda p1_222222222223322222222222222222222222222222222222222222 (App Pol C_22222222222332222222222222222222222222222222222) false)))))) (Lambda j_222222222223322222222222222222222222222222222222222 positive (Lambda Q_2222222222233222222222222222222222222222222222222222 (App Pol C_22222222222332222222222222222222222222222222222) (Case 1 (Lambda P'_22222222222332222222222222222222222222222222222222222 (App Pol C_22222222222332222222222222222222222222222222222) bool) (CaseMatch P'_22222222222332222222222222222222222222222222222222) (CaseBranches (Lambda c_22222222222332222222222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222 false) (Lambda j'_22222222222332222222222222222222222222222222222222222 positive (Lambda Q'_222222222223322222222222222222222222222222222222222222 (App Pol C_22222222222332222222222222222222222222222222222) (Case 0 (Lambda x_2222222222233222222222222222222222222222222222222222222 comparison bool) (CaseMatch (App Coq.PArith.BinPosDef.Pos.compare j_222222222223322222222222222222222222222222222222222 j'_22222222222332222222222222222222222222222222222222222)) (CaseBranches (App Peq Q_2222222222233222222222222222222222222222222222222222 Q'_222222222223322222222222222222222222222222222222222222) false false)))) (Lambda p_22222222222332222222222222222222222222222222222222222 (App Pol C_22222222222332222222222222222222222222222222222) (Lambda p0_222222222223322222222222222222222222222222222222222222 positive (Lambda p1_2222222222233222222222222222222222222222222222222222222 (App Pol C_22222222222332222222222222222222222222222222222) false))))))) (Lambda P_222222222223322222222222222222222222222222222222222 (App Pol C_22222222222332222222222222222222222222222222222) (Lambda i_2222222222233222222222222222222222222222222222222222 positive (Lambda Q_22222222222332222222222222222222222222222222222222222 (App Pol C_22222222222332222222222222222222222222222222222) (Case 1 (Lambda P'_222222222223322222222222222222222222222222222222222222 (App Pol C_22222222222332222222222222222222222222222222222) bool) (CaseMatch P'_22222222222332222222222222222222222222222222222222) (CaseBranches (Lambda c_222222222223322222222222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222 false) (Lambda p_222222222223322222222222222222222222222222222222222222 positive (Lambda p0_2222222222233222222222222222222222222222222222222222222 (App Pol C_22222222222332222222222222222222222222222222222) false)) (Lambda P'_222222222223322222222222222222222222222222222222222222 (App Pol C_22222222222332222222222222222222222222222222222) (Lambda i'_2222222222233222222222222222222222222222222222222222222 positive (Lambda Q'_22222222222332222222222222222222222222222222222222222222 (App Pol C_22222222222332222222222222222222222222222222222) (Case 0 (Lambda x_222222222223322222222222222222222222222222222222222222222 comparison bool) (CaseMatch (App Coq.PArith.BinPosDef.Pos.compare i_2222222222233222222222222222222222222222222222222222 i'_2222222222233222222222222222222222222222222222222222222)) (CaseBranches (Case 0 (Lambda b_222222222223322222222222222222222222222222222222222222222 bool bool) (CaseMatch (App Peq P_222222222223322222222222222222222222222222222222222 P'_222222222223322222222222222222222222222222222222222222)) (CaseBranches (App Peq Q_22222222222332222222222222222222222222222222222222222 Q'_22222222222332222222222222222222222222222222222222222222) false)) false false)))))))))))))))) 0)))) (Definition Coq.setoid_ring.Ring_polynom.norm_subst (Lambda C_22222222222332222222222222222222222222222222222 (Sort Type) (Lambda cO_222222222223322222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222 (Lambda cI_2222222222233222222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222 (Lambda cadd_22222222222332222222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222221 C_22222222222332222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222211 C_22222222222332222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222)) (Lambda cmul_222222222223322222222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222221 C_22222222222332222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222211 C_22222222222332222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222)) (Lambda csub_2222222222233222222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222221 C_22222222222332222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222211 C_22222222222332222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222)) (Lambda copp_22222222222332222222222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222221 C_22222222222332222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222) (Lambda ceqb_222222222223322222222222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222222221 C_22222222222332222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222222211 C_22222222222332222222222222222222222222222222222 bool)) (Lambda cdiv_2222222222233222222222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222222221 C_22222222222332222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222222211 C_22222222222332222222222222222222222222222222222 (App prod C_22222222222332222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222))) (Lambda n_22222222222332222222222222222222222222222222222222222222 nat (Lambda lmp_222222222223322222222222222222222222222222222222222222222 (App list (App prod (App prod C_22222222222332222222222222222222222222222222222 Mon) (App Pol C_22222222222332222222222222222222222222222222222))) (LetIn subst_l_2222222222233222222222222222222222222222222222222222222223 (Lambda P_2222222222233222222222222222222222222222222222222222222222 (App Pol C_22222222222332222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.PNSubstL C_22222222222332222222222222222222222222222222222 cO_222222222223322222222222222222222222222222222222 cI_2222222222233222222222222222222222222222222222222 cadd_22222222222332222222222222222222222222222222222222 cmul_222222222223322222222222222222222222222222222222222 ceqb_222222222223322222222222222222222222222222222222222222 cdiv_2222222222233222222222222222222222222222222222222222222 P_2222222222233222222222222222222222222222222222222222222222 lmp_222222222223322222222222222222222222222222222222222222222 n_22222222222332222222222222222222222222222222222222222222 n_22222222222332222222222222222222222222222222222222222222)) (Prod P_2222222222233222222222222222222222222222222222222222222221 (App Pol C_22222222222332222222222222222222222222222222222) (App Pol C_22222222222332222222222222222222222222222222222)) (Lambda pe_22222222222332222222222222222222222222222222222222222222232 (App PExpr C_22222222222332222222222222222222222222222222222) (App subst_l_2222222222233222222222222222222222222222222222222222222223 (App Coq.setoid_ring.Ring_polynom.norm_aux C_22222222222332222222222222222222222222222222222 cO_222222222223322222222222222222222222222222222222 cI_2222222222233222222222222222222222222222222222222 cadd_22222222222332222222222222222222222222222222222222 cmul_222222222223322222222222222222222222222222222222222 csub_2222222222233222222222222222222222222222222222222222 copp_22222222222332222222222222222222222222222222222222222 ceqb_222222222223322222222222222222222222222222222222222222 pe_22222222222332222222222222222222222222222222222222222222232)))))))))))))))) (Definition Coq.setoid_ring.Ring_polynom.mk_monpol_list (Lambda C_22222222222332222222222222222222222222222222222 (Sort Type) (Lambda cO_222222222223322222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222 (Lambda cI_2222222222233222222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222 (Lambda cadd_22222222222332222222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222221 C_22222222222332222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222211 C_22222222222332222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222)) (Lambda cmul_222222222223322222222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222221 C_22222222222332222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222211 C_22222222222332222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222)) (Lambda csub_2222222222233222222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222221 C_22222222222332222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222211 C_22222222222332222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222)) (Lambda copp_22222222222332222222222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222221 C_22222222222332222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222) (Lambda ceqb_222222222223322222222222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222222221 C_22222222222332222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222222211 C_22222222222332222222222222222222222222222222222 bool)) (Lambda cdiv_2222222222233222222222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222222221 C_22222222222332222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222222211 C_22222222222332222222222222222222222222222222222 (App prod C_22222222222332222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222))) (Fix (Functions (App mk_monpol_list 0 (Prod lpe_22222222222332222222222222222222222222222222222222222221 (App list (App prod (App PExpr C_22222222222332222222222222222222222222222222222) (App PExpr C_22222222222332222222222222222222222222222222222))) (App list (App prod (App prod C_22222222222332222222222222222222222222222222222 Mon) (App Pol C_22222222222332222222222222222222222222222222222)))) (Lambda lpe_22222222222332222222222222222222222222222222222222222222 (App list (App prod (App PExpr C_22222222222332222222222222222222222222222222222) (App PExpr C_22222222222332222222222222222222222222222222222))) (Case 1 (Lambda lpe_222222222223322222222222222222222222222222222222222222222 (App list (App prod (App PExpr C_22222222222332222222222222222222222222222222222) (App PExpr C_22222222222332222222222222222222222222222222222))) (App list (App prod (App prod C_22222222222332222222222222222222222222222222222 Mon) (App Pol C_22222222222332222222222222222222222222222222222)))) (CaseMatch lpe_22222222222332222222222222222222222222222222222222222222) (CaseBranches (App nil (App prod (App prod C_22222222222332222222222222222222222222222222222 Mon) (App Pol C_22222222222332222222222222222222222222222222222))) (Lambda p_222222222223322222222222222222222222222222222222222222222 (App prod (App PExpr C_22222222222332222222222222222222222222222222222) (App PExpr C_22222222222332222222222222222222222222222222222)) (Lambda lpe_2222222222233222222222222222222222222222222222222222222222 (App list (App prod (App PExpr C_22222222222332222222222222222222222222222222222) (App PExpr C_22222222222332222222222222222222222222222222222))) (Case 2 (Lambda p_22222222222332222222222222222222222222222222222222222222222 (App prod (App PExpr C_22222222222332222222222222222222222222222222222) (App PExpr C_22222222222332222222222222222222222222222222222)) (App list (App prod (App prod C_22222222222332222222222222222222222222222222222 Mon) (App Pol C_22222222222332222222222222222222222222222222222)))) (CaseMatch p_222222222223322222222222222222222222222222222222222222222) (CaseBranches (Lambda me_22222222222332222222222222222222222222222222222222222222222 (App PExpr C_22222222222332222222222222222222222222222222222) (Lambda pe_222222222223322222222222222222222222222222222222222222222222 (App PExpr C_22222222222332222222222222222222222222222222222) (Case 1 (Lambda x_2222222222233222222222222222222222222222222222222222222222222 (App option (App prod C_22222222222332222222222222222222222222222222222 Mon)) (App list (App prod (App prod C_22222222222332222222222222222222222222222222222 Mon) (App Pol C_22222222222332222222222222222222222222222222222)))) (CaseMatch (App Coq.setoid_ring.Ring_polynom.mon_of_pol C_22222222222332222222222222222222222222222222222 cO_222222222223322222222222222222222222222222222222 ceqb_222222222223322222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.norm_subst C_22222222222332222222222222222222222222222222222 cO_222222222223322222222222222222222222222222222222 cI_2222222222233222222222222222222222222222222222222 cadd_22222222222332222222222222222222222222222222222222 cmul_222222222223322222222222222222222222222222222222222 csub_2222222222233222222222222222222222222222222222222222 copp_22222222222332222222222222222222222222222222222222222 ceqb_222222222223322222222222222222222222222222222222222222 cdiv_2222222222233222222222222222222222222222222222222222222 O (App nil (App prod (App prod C_22222222222332222222222222222222222222222222222 Mon) (App Pol C_22222222222332222222222222222222222222222222222))) me_22222222222332222222222222222222222222222222222222222222222))) (CaseBranches (Lambda m_2222222222233222222222222222222222222222222222222222222222222 (App prod C_22222222222332222222222222222222222222222222222 Mon) (App cons (App prod (App prod C_22222222222332222222222222222222222222222222222 Mon) (App Pol C_22222222222332222222222222222222222222222222222)) (App pair (App prod C_22222222222332222222222222222222222222222222222 Mon) (App Pol C_22222222222332222222222222222222222222222222222) m_2222222222233222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.norm_subst C_22222222222332222222222222222222222222222222222 cO_222222222223322222222222222222222222222222222222 cI_2222222222233222222222222222222222222222222222222 cadd_22222222222332222222222222222222222222222222222222 cmul_222222222223322222222222222222222222222222222222222 csub_2222222222233222222222222222222222222222222222222222 copp_22222222222332222222222222222222222222222222222222222 ceqb_222222222223322222222222222222222222222222222222222222 cdiv_2222222222233222222222222222222222222222222222222222222 O (App nil (App prod (App prod C_22222222222332222222222222222222222222222222222 Mon) (App Pol C_22222222222332222222222222222222222222222222222))) pe_222222222223322222222222222222222222222222222222222222222222)) (App mk_monpol_list lpe_2222222222233222222222222222222222222222222222222222222222))) (App mk_monpol_list lpe_2222222222233222222222222222222222222222222222222222222222)))))))))))))) 0))))))))))) (Definition Coq.setoid_ring.Ring_polynom.PEeval (Lambda R_222222222223322222222222222222222222222222222222 (Sort Type) (Lambda rO_2222222222233222222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222 (Lambda rI_22222222222332222222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222 (Lambda radd_222222222223322222222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222221 R_222222222223322222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222211 R_222222222223322222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222)) (Lambda rmul_2222222222233222222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222221 R_222222222223322222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222211 R_222222222223322222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222)) (Lambda rsub_22222222222332222222222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222221 R_222222222223322222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222222211 R_222222222223322222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222)) (Lambda ropp_222222222223322222222222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222222221 R_222222222223322222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222) (Lambda C_2222222222233222222222222222222222222222222222222222222 (Sort Type) (Lambda phi_22222222222332222222222222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222222221 C_2222222222233222222222222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222) (Lambda Cpow_222222222223322222222222222222222222222222222222222222222 (Sort Type) (Lambda Cp_phi_2222222222233222222222222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222222222221 N Cpow_222222222223322222222222222222222222222222222222222222222) (Lambda rpow_22222222222332222222222222222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222222222221 R_222222222223322222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222222222222211 Cpow_222222222223322222222222222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222)) (Fix (Functions (App PEeval 0 (Prod l_222222222223322222222222222222222222222222222222222222222221 (App list R_222222222223322222222222222222222222222222222222) (Prod pe_2222222222233222222222222222222222222222222222222222222222211 (App PExpr C_2222222222233222222222222222222222222222222222222222222) R_222222222223322222222222222222222222222222222222)) (Lambda l_222222222223322222222222222222222222222222222222222222222222 (App list R_222222222223322222222222222222222222222222222222) (Lambda pe_2222222222233222222222222222222222222222222222222222222222222 (App PExpr C_2222222222233222222222222222222222222222222222222222222) (Case 1 (Lambda pe_22222222222332222222222222222222222222222222222222222222222222 (App PExpr C_2222222222233222222222222222222222222222222222222222222) R_222222222223322222222222222222222222222222222222) (CaseMatch pe_2222222222233222222222222222222222222222222222222222222222222) (CaseBranches rO_2222222222233222222222222222222222222222222222222 rI_22222222222332222222222222222222222222222222222222 (Lambda c_22222222222332222222222222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222 (App phi_22222222222332222222222222222222222222222222222222222222 c_22222222222332222222222222222222222222222222222222222222222222)) (Lambda j_22222222222332222222222222222222222222222222222222222222222222 positive (App Coq.setoid_ring.BinList.nth R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 j_22222222222332222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222)) (Lambda pe1_22222222222332222222222222222222222222222222222222222222222222 (App PExpr C_2222222222233222222222222222222222222222222222222222222) (Lambda pe2_222222222223322222222222222222222222222222222222222222222222222 (App PExpr C_2222222222233222222222222222222222222222222222222222222) (App radd_222222222223322222222222222222222222222222222222222 (App PEeval l_222222222223322222222222222222222222222222222222222222222222 pe1_22222222222332222222222222222222222222222222222222222222222222) (App PEeval l_222222222223322222222222222222222222222222222222222222222222 pe2_222222222223322222222222222222222222222222222222222222222222222)))) (Lambda pe1_22222222222332222222222222222222222222222222222222222222222222 (App PExpr C_2222222222233222222222222222222222222222222222222222222) (Lambda pe2_222222222223322222222222222222222222222222222222222222222222222 (App PExpr C_2222222222233222222222222222222222222222222222222222222) (App rsub_22222222222332222222222222222222222222222222222222222 (App PEeval l_222222222223322222222222222222222222222222222222222222222222 pe1_22222222222332222222222222222222222222222222222222222222222222) (App PEeval l_222222222223322222222222222222222222222222222222222222222222 pe2_222222222223322222222222222222222222222222222222222222222222222)))) (Lambda pe1_22222222222332222222222222222222222222222222222222222222222222 (App PExpr C_2222222222233222222222222222222222222222222222222222222) (Lambda pe2_222222222223322222222222222222222222222222222222222222222222222 (App PExpr C_2222222222233222222222222222222222222222222222222222222) (App rmul_2222222222233222222222222222222222222222222222222222 (App PEeval l_222222222223322222222222222222222222222222222222222222222222 pe1_22222222222332222222222222222222222222222222222222222222222222) (App PEeval l_222222222223322222222222222222222222222222222222222222222222 pe2_222222222223322222222222222222222222222222222222222222222222222)))) (Lambda pe1_22222222222332222222222222222222222222222222222222222222222222 (App PExpr C_2222222222233222222222222222222222222222222222222222222) (App ropp_222222222223322222222222222222222222222222222222222222 (App PEeval l_222222222223322222222222222222222222222222222222222222222222 pe1_22222222222332222222222222222222222222222222222222222222222222))) (Lambda pe1_22222222222332222222222222222222222222222222222222222222222222 (App PExpr C_2222222222233222222222222222222222222222222222222222222) (Lambda n_222222222223322222222222222222222222222222222222222222222222222 N (App rpow_22222222222332222222222222222222222222222222222222222222222 (App PEeval l_222222222223322222222222222222222222222222222222222222222222 pe1_22222222222332222222222222222222222222222222222222222222222222) (App Cp_phi_2222222222233222222222222222222222222222222222222222222222 n_222222222223322222222222222222222222222222222222222222222222222)))))))))) 0)))))))))))))) (Definition Coq.setoid_ring.Ring_polynom.Pphi (Lambda R_222222222223322222222222222222222222222222222222 (Sort Type) (Lambda rO_2222222222233222222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222 (Lambda radd_22222222222332222222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222221 R_222222222223322222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222211 R_222222222223322222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222)) (Lambda rmul_222222222223322222222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222221 R_222222222223322222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222211 R_222222222223322222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222)) (Lambda C_2222222222233222222222222222222222222222222222222222 (Sort Type) (Lambda phi_22222222222332222222222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222221 C_2222222222233222222222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222) (Fix (Functions (App Pphi 0 (Prod l_222222222223322222222222222222222222222222222222222221 (App list R_222222222223322222222222222222222222222222222222) (Prod P_2222222222233222222222222222222222222222222222222222211 (App Pol C_2222222222233222222222222222222222222222222222222222) R_222222222223322222222222222222222222222222222222)) (Lambda l_222222222223322222222222222222222222222222222222222222 (App list R_222222222223322222222222222222222222222222222222) (Lambda P_2222222222233222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222) (Case 1 (Lambda P_22222222222332222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222) R_222222222223322222222222222222222222222222222222) (CaseMatch P_2222222222233222222222222222222222222222222222222222222) (CaseBranches (Lambda c_22222222222332222222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222 (App phi_22222222222332222222222222222222222222222222222222222 c_22222222222332222222222222222222222222222222222222222222)) (Lambda j_22222222222332222222222222222222222222222222222222222222 positive (Lambda Q_222222222223322222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222) (App Pphi (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 j_22222222222332222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222) Q_222222222223322222222222222222222222222222222222222222222))) (Lambda P_22222222222332222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222) (Lambda i_222222222223322222222222222222222222222222222222222222222 positive (Lambda Q_2222222222233222222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222) (App radd_22222222222332222222222222222222222222222222222222 (App rmul_222222222223322222222222222222222222222222222222222 (App Pphi l_222222222223322222222222222222222222222222222222222222 P_22222222222332222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_222222222223322222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222) i_222222222223322222222222222222222222222222222222222222222)) (App Pphi (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222) Q_2222222222233222222222222222222222222222222222222222222222))))))))))) 0)))))))) (Definition Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (LetIn U_2222222222233222222222222222222222222222222222223 (Sort Type) (Sort Type) (Lambda A_22222222222332222222222222222222222222222222222232 U_2222222222233222222222222222222222222222222222223 (Lambda R_222222222223322222222222222222222222222222222222322 (App Coq.Relations.Relation_Definitions.relation A_22222222222332222222222222222222222222222222222232) (Lambda H_2222222222233222222222222222222222222222222222223222 (App Coq.Classes.RelationClasses.Transitive A_22222222222332222222222222222222222222222222222232 R_222222222223322222222222222222222222222222222222322) (App (Lambda R_22222222222332222222222222222222222222222222222232222 (App Coq.Relations.Relation_Definitions.relation A_22222222222332222222222222222222222222222222222232) (Lambda H_222222222223322222222222222222222222222222222222322222 (App Coq.Classes.RelationClasses.Transitive A_22222222222332222222222222222222222222222222222232 R_22222222222332222222222222222222222222222222222232222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1 A_22222222222332222222222222222222222222222222222232 R_22222222222332222222222222222222222222222222222232222 H_222222222223322222222222222222222222222222222222322222))) R_222222222223322222222222222222222222222222222222322 H_2222222222233222222222222222222222222222222222223222)))))) (Definition Coq.Classes.RelationClasses.Equivalence_Transitive (Lambda A_2222222222233222222222222222222222222222222222222 (Sort Type) (Lambda R_22222222222332222222222222222222222222222222222222 (App Coq.Relations.Relation_Definitions.relation A_2222222222233222222222222222222222222222222222222) (Lambda Equivalence_222222222223322222222222222222222222222222222222222 (App Equivalence A_2222222222233222222222222222222222222222222222222 R_22222222222332222222222222222222222222222222222222) (Case 2 (Lambda Equivalence_2222222222233222222222222222222222222222222222222222 (App Equivalence A_2222222222233222222222222222222222222222222222222 R_22222222222332222222222222222222222222222222222222) (App Coq.Classes.RelationClasses.Transitive A_2222222222233222222222222222222222222222222222222 R_22222222222332222222222222222222222222222222222222)) (CaseMatch Equivalence_222222222223322222222222222222222222222222222222222) (CaseBranches (Lambda Equivalence_Reflexive_2222222222233222222222222222222222222222222222222222 (App Coq.Classes.RelationClasses.Reflexive A_2222222222233222222222222222222222222222222222222 R_22222222222332222222222222222222222222222222222222) (Lambda Equivalence_Symmetric_22222222222332222222222222222222222222222222222222222 (App Coq.Classes.RelationClasses.Symmetric A_2222222222233222222222222222222222222222222222222 R_22222222222332222222222222222222222222222222222222) (Lambda Equivalence_Transitive_222222222223322222222222222222222222222222222222222222 (App Coq.Classes.RelationClasses.Transitive A_2222222222233222222222222222222222222222222222222 R_22222222222332222222222222222222222222222222222222) Equivalence_Transitive_222222222223322222222222222222222222222222222222222222))))))))) (Definition Coq.Classes.Morphisms.eq_proper_proxy (LetIn U_2222222222233222222222222222222222222222222222223 (Sort Type) (Sort Type) (Lambda A_22222222222332222222222222222222222222222222222232 U_2222222222233222222222222222222222222222222222223 (Lambda x_222222222223322222222222222222222222222222222222322 A_22222222222332222222222222222222222222222222222232 (App eq_refl A_22222222222332222222222222222222222222222222222232 x_222222222223322222222222222222222222222222222222322))))) (Definition Coq.setoid_ring.Ring_polynom.norm_subst_ok (Lambda R_222222222223322222222222222222222222222222222222 (Sort Type) (Lambda rO_2222222222233222222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222 (Lambda rI_22222222222332222222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222 (Lambda radd_222222222223322222222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222221 R_222222222223322222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222211 R_222222222223322222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222)) (Lambda rmul_2222222222233222222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222221 R_222222222223322222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222211 R_222222222223322222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222)) (Lambda rsub_22222222222332222222222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222221 R_222222222223322222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222222211 R_222222222223322222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222)) (Lambda ropp_222222222223322222222222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222222221 R_222222222223322222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222) (Lambda req_2222222222233222222222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222222221 R_222222222223322222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222222211 R_222222222223322222222222222222222222222222222222 (Sort Prop))) (Lambda Rsth_22222222222332222222222222222222222222222222222222222222 (App Equivalence R_222222222223322222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222) (Lambda Reqe_222222222223322222222222222222222222222222222222222222222 (App ring_eq_ext R_222222222223322222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 ropp_222222222223322222222222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222) (Lambda ARth_2222222222233222222222222222222222222222222222222222222222 (App almost_ring_theory R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 rI_22222222222332222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 rsub_22222222222332222222222222222222222222222222222222222 ropp_222222222223322222222222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222) (Lambda C_22222222222332222222222222222222222222222222222222222222222 (Sort Type) (Lambda cO_222222222223322222222222222222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222222222222222 (Lambda cI_2222222222233222222222222222222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222222222222222 (Lambda cadd_22222222222332222222222222222222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222222222222221 C_22222222222332222222222222222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222222222222222211 C_22222222222332222222222222222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222222222222222)) (Lambda cmul_222222222223322222222222222222222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222222222222222221 C_22222222222332222222222222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222222222222222211 C_22222222222332222222222222222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222222222222222)) (Lambda csub_2222222222233222222222222222222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222222222222222221 C_22222222222332222222222222222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222222222222222211 C_22222222222332222222222222222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222222222222222)) (Lambda copp_22222222222332222222222222222222222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222222222222222221 C_22222222222332222222222222222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222222222222222) (Lambda ceqb_222222222223322222222222222222222222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222222222222222222221 C_22222222222332222222222222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222222222222222222211 C_22222222222332222222222222222222222222222222222222222222222 bool)) (Lambda phi_2222222222233222222222222222222222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222222222222222222221 C_22222222222332222222222222222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222) (Lambda CRmorph_22222222222332222222222222222222222222222222222222222222222222222222 (App ring_morph R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 rI_22222222222332222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 rsub_22222222222332222222222222222222222222222222222222222 ropp_222222222223322222222222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222222222222222 cO_222222222223322222222222222222222222222222222222222222222222 cI_2222222222233222222222222222222222222222222222222222222222222 cadd_22222222222332222222222222222222222222222222222222222222222222 cmul_222222222223322222222222222222222222222222222222222222222222222 csub_2222222222233222222222222222222222222222222222222222222222222222 copp_22222222222332222222222222222222222222222222222222222222222222222 ceqb_222222222223322222222222222222222222222222222222222222222222222222 phi_2222222222233222222222222222222222222222222222222222222222222222222) (Lambda Cpow_222222222223322222222222222222222222222222222222222222222222222222222 (Sort Type) (Lambda Cp_phi_2222222222233222222222222222222222222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222222222222222222222221 N Cpow_222222222223322222222222222222222222222222222222222222222222222222222) (Lambda rpow_22222222222332222222222222222222222222222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222222222222222222222221 R_222222222223322222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222222222222222222222222211 Cpow_222222222223322222222222222222222222222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222)) (Lambda pow_th_222222222223322222222222222222222222222222222222222222222222222222222222 (App power_theory R_222222222223322222222222222222222222222222222222 rI_22222222222332222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 Cpow_222222222223322222222222222222222222222222222222222222222222222222222 Cp_phi_2222222222233222222222222222222222222222222222222222222222222222222222 rpow_22222222222332222222222222222222222222222222222222222222222222222222222) (Lambda cdiv_2222222222233222222222222222222222222222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222222222222222222222222221 C_22222222222332222222222222222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222222222222222222222222211 C_22222222222332222222222222222222222222222222222222222222222 (App prod C_22222222222332222222222222222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222222222222222))) (Lambda div_th_22222222222332222222222222222222222222222222222222222222222222222222222222 (App div_theory R_222222222223322222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222222222222222 cadd_22222222222332222222222222222222222222222222222222222222222222 cmul_222222222223322222222222222222222222222222222222222222222222222 phi_2222222222233222222222222222222222222222222222222222222222222222222 cdiv_2222222222233222222222222222222222222222222222222222222222222222222222222) (Lambda n_222222222223322222222222222222222222222222222222222222222222222222222222222 nat (Lambda l_2222222222233222222222222222222222222222222222222222222222222222222222222222 (App list R_222222222223322222222222222222222222222222222222) (Lambda lpe_22222222222332222222222222222222222222222222222222222222222222222222222222222 (App list (App prod (App PExpr C_22222222222332222222222222222222222222222222222222222222222) (App PExpr C_22222222222332222222222222222222222222222222222222222222222))) (Lambda pe_222222222223322222222222222222222222222222222222222222222222222222222222222222 (App PExpr C_22222222222332222222222222222222222222222222222222222222222) (Lambda H_2222222222233222222222222222222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.interp_PElist R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 rI_22222222222332222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 rsub_22222222222332222222222222222222222222222222222222222 ropp_222222222223322222222222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222222222222222 phi_2222222222233222222222222222222222222222222222222222222222222222222 Cpow_222222222223322222222222222222222222222222222222222222222222222222222 Cp_phi_2222222222233222222222222222222222222222222222222222222222222222222222 rpow_22222222222332222222222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222 lpe_22222222222332222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.norm_subst_spec R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 rI_22222222222332222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 rsub_22222222222332222222222222222222222222222222222222222 ropp_222222222223322222222222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 Rsth_22222222222332222222222222222222222222222222222222222222 Reqe_222222222223322222222222222222222222222222222222222222222 ARth_2222222222233222222222222222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222222222222222 cO_222222222223322222222222222222222222222222222222222222222222 cI_2222222222233222222222222222222222222222222222222222222222222 cadd_22222222222332222222222222222222222222222222222222222222222222 cmul_222222222223322222222222222222222222222222222222222222222222222 csub_2222222222233222222222222222222222222222222222222222222222222222 copp_22222222222332222222222222222222222222222222222222222222222222222 ceqb_222222222223322222222222222222222222222222222222222222222222222222 phi_2222222222233222222222222222222222222222222222222222222222222222222 CRmorph_22222222222332222222222222222222222222222222222222222222222222222222 Cpow_222222222223322222222222222222222222222222222222222222222222222222222 Cp_phi_2222222222233222222222222222222222222222222222222222222222222222222222 rpow_22222222222332222222222222222222222222222222222222222222222222222222222 pow_th_222222222223322222222222222222222222222222222222222222222222222222222222 cdiv_2222222222233222222222222222222222222222222222222222222222222222222222222 div_th_22222222222332222222222222222222222222222222222222222222222222222222222222 n_222222222223322222222222222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list C_22222222222332222222222222222222222222222222222222222222222 cO_222222222223322222222222222222222222222222222222222222222222 cI_2222222222233222222222222222222222222222222222222222222222222 cadd_22222222222332222222222222222222222222222222222222222222222222 cmul_222222222223322222222222222222222222222222222222222222222222222 csub_2222222222233222222222222222222222222222222222222222222222222222 copp_22222222222332222222222222222222222222222222222222222222222222222 ceqb_222222222223322222222222222222222222222222222222222222222222222222 cdiv_2222222222233222222222222222222222222222222222222222222222222222222222222 lpe_22222222222332222222222222222222222222222222222222222222222222222222222222222) l_2222222222233222222222222222222222222222222222222222222222222222222222222222 pe_222222222223322222222222222222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.interp_PElist_ok R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 rI_22222222222332222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 rsub_22222222222332222222222222222222222222222222222222222 ropp_222222222223322222222222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 Rsth_22222222222332222222222222222222222222222222222222222222 Reqe_222222222223322222222222222222222222222222222222222222222 ARth_2222222222233222222222222222222222222222222222222222222222 C_22222222222332222222222222222222222222222222222222222222222 cO_222222222223322222222222222222222222222222222222222222222222 cI_2222222222233222222222222222222222222222222222222222222222222 cadd_22222222222332222222222222222222222222222222222222222222222222 cmul_222222222223322222222222222222222222222222222222222222222222222 csub_2222222222233222222222222222222222222222222222222222222222222222 copp_22222222222332222222222222222222222222222222222222222222222222222 ceqb_222222222223322222222222222222222222222222222222222222222222222222 phi_2222222222233222222222222222222222222222222222222222222222222222222 CRmorph_22222222222332222222222222222222222222222222222222222222222222222222 Cpow_222222222223322222222222222222222222222222222222222222222222222222222 Cp_phi_2222222222233222222222222222222222222222222222222222222222222222222222 rpow_22222222222332222222222222222222222222222222222222222222222222222222222 pow_th_222222222223322222222222222222222222222222222222222222222222222222222222 cdiv_2222222222233222222222222222222222222222222222222222222222222222222222222 div_th_22222222222332222222222222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222 lpe_22222222222332222222222222222222222222222222222222222222222222222222222222222 H_2222222222233222222222222222222222222222222222222222222222222222222222222222222))))))))))))))))))))))))))))))))))) (Definition Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (LetIn U_2222222222233222222222222222222222222222222222223 (Sort Type) (Sort Type) (Lambda A_22222222222332222222222222222222222222222222222232 U_2222222222233222222222222222222222222222222222223 (Lambda R_222222222223322222222222222222222222222222222222322 (App Coq.Relations.Relation_Definitions.relation A_22222222222332222222222222222222222222222222222232) (Lambda H_2222222222233222222222222222222222222222222222223222 (App PER A_22222222222332222222222222222222222222222222222232 R_222222222223322222222222222222222222222222222222322) (Lambda x_22222222222332222222222222222222222222222222222232222 A_22222222222332222222222222222222222222222222222232 (App (Lambda R_222222222223322222222222222222222222222222222222322222 (App Coq.Relations.Relation_Definitions.relation A_22222222222332222222222222222222222222222222222232) (Lambda H_2222222222233222222222222222222222222222222222223222222 (App PER A_22222222222332222222222222222222222222222222222232 R_222222222223322222222222222222222222222222222222322222) (Lambda x_22222222222332222222222222222222222222222222222232222222 A_22222222222332222222222222222222222222222222222232 (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1 A_22222222222332222222222222222222222222222222222232 R_222222222223322222222222222222222222222222222222322222 H_2222222222233222222222222222222222222222222222223222222 x_22222222222332222222222222222222222222222222222232222222)))) R_222222222223322222222222222222222222222222222222322 H_2222222222233222222222222222222222222222222222223222 x_22222222222332222222222222222222222222222222222232222))))))) (Definition Coq.Classes.RelationClasses.Equivalence_PER (Lambda A_2222222222233222222222222222222222222222222222222 (Sort Type) (Lambda R_22222222222332222222222222222222222222222222222222 (App Coq.Relations.Relation_Definitions.relation A_2222222222233222222222222222222222222222222222222) (Lambda E_222222222223322222222222222222222222222222222222222 (App Equivalence A_2222222222233222222222222222222222222222222222222 R_22222222222332222222222222222222222222222222222222) (App Build_PER A_2222222222233222222222222222222222222222222222222 R_22222222222332222222222222222222222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Symmetric A_2222222222233222222222222222222222222222222222222 R_22222222222332222222222222222222222222222222222222 E_222222222223322222222222222222222222222222222222222) (App Coq.Classes.RelationClasses.Equivalence_Transitive A_2222222222233222222222222222222222222222222222222 R_22222222222332222222222222222222222222222222222222 E_222222222223322222222222222222222222222222222222222)))))) (Definition Coq.setoid_ring.Ring_polynom.Peq_ok (Lambda R_222222222223322222222222222222222222222222222222 (Sort Type) (Lambda rO_2222222222233222222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222 (Lambda rI_22222222222332222222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222 (Lambda radd_222222222223322222222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222221 R_222222222223322222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222211 R_222222222223322222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222)) (Lambda rmul_2222222222233222222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222221 R_222222222223322222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222211 R_222222222223322222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222)) (Lambda rsub_22222222222332222222222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222221 R_222222222223322222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222222211 R_222222222223322222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222)) (Lambda ropp_222222222223322222222222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222222221 R_222222222223322222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222) (Lambda req_2222222222233222222222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222222221 R_222222222223322222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222222211 R_222222222223322222222222222222222222222222222222 (Sort Prop))) (Lambda Rsth_22222222222332222222222222222222222222222222222222222222 (App Equivalence R_222222222223322222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222) (Lambda Reqe_222222222223322222222222222222222222222222222222222222222 (App ring_eq_ext R_222222222223322222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 ropp_222222222223322222222222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222) (Lambda C_2222222222233222222222222222222222222222222222222222222222 (Sort Type) (Lambda cO_22222222222332222222222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 (Lambda cI_222222222223322222222222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 (Lambda cadd_2222222222233222222222222222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222222222222221 C_2222222222233222222222222222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222222222222211 C_2222222222233222222222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222)) (Lambda cmul_22222222222332222222222222222222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222222222222221 C_2222222222233222222222222222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222222222222222211 C_2222222222233222222222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222)) (Lambda csub_222222222223322222222222222222222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222222222222222221 C_2222222222233222222222222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222222222222222211 C_2222222222233222222222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222)) (Lambda copp_2222222222233222222222222222222222222222222222222222222222222222 (Prod out_2222222222233222222222222222222222222222222222222222222222222221 C_2222222222233222222222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222) (Lambda ceqb_22222222222332222222222222222222222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222222222222222221 C_2222222222233222222222222222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222222222222222222211 C_2222222222233222222222222222222222222222222222222222222222 bool)) (Lambda phi_222222222223322222222222222222222222222222222222222222222222222222 (Prod out_222222222223322222222222222222222222222222222222222222222222222221 C_2222222222233222222222222222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222) (Lambda CRmorph_2222222222233222222222222222222222222222222222222222222222222222222 (App ring_morph R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 rI_22222222222332222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 rsub_22222222222332222222222222222222222222222222222222222 ropp_222222222223322222222222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 cO_22222222222332222222222222222222222222222222222222222222222 cI_222222222223322222222222222222222222222222222222222222222222 cadd_2222222222233222222222222222222222222222222222222222222222222 cmul_22222222222332222222222222222222222222222222222222222222222222 csub_222222222223322222222222222222222222222222222222222222222222222 copp_2222222222233222222222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222) (Lambda P_22222222222332222222222222222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Lambda P'_222222222223322222222222222222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Cast (App Coq.setoid_ring.Ring_polynom.Pol_ind C_2222222222233222222222222222222222222222222222222222222222 (Lambda P_2222222222233222222222222222222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Prod P'_22222222222332222222222222222222222222222222222222222222222222222222221 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Prod out_222222222223322222222222222222222222222222222222222222222222222222222211 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 P_2222222222233222222222222222222222222222222222222222222222222222222222 P'_22222222222332222222222222222222222222222222222222222222222222222222221) true) (Prod l_2222222222233222222222222222222222222222222222222222222222222222222222111 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222111 P_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222111 P'_22222222222332222222222222222222222222222222222222222222222222222222221)))))) (Lambda c_2222222222233222222222222222222222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 (Lambda P'_22222222222332222222222222222222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Case 1 (Lambda p_222222222223322222222222222222222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Prod out_2222222222233222222222222222222222222222222222222222222222222222222222221 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 (App Pc C_2222222222233222222222222222222222222222222222222222222222 c_2222222222233222222222222222222222222222222222222222222222222222222222) p_222222222223322222222222222222222222222222222222222222222222222222222222) true) (Prod l_22222222222332222222222222222222222222222222222222222222222222222222222211 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222211 (App Pc C_2222222222233222222222222222222222222222222222222222222222 c_2222222222233222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222211 p_222222222223322222222222222222222222222222222222222222222222222222222222))))) (CaseMatch P'_22222222222332222222222222222222222222222222222222222222222222222222222) (CaseBranches (Lambda c0_222222222223322222222222222222222222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 (Cast (Lambda H_2222222222233222222222222222222222222222222222222222222222222222222222222 (App eq bool (App ceqb_22222222222332222222222222222222222222222222222222222222222222222 c_2222222222233222222222222222222222222222222222222222222222222222222222 c0_222222222223322222222222222222222222222222222222222222222222222222222222) true) (Lambda l_22222222222332222222222222222222222222222222222222222222222222222222222222 (App list R_222222222223322222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.morph_eq R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 rI_22222222222332222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 rsub_22222222222332222222222222222222222222222222222222222 ropp_222222222223322222222222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 cO_22222222222332222222222222222222222222222222222222222222222 cI_222222222223322222222222222222222222222222222222222222222222 cadd_2222222222233222222222222222222222222222222222222222222222222 cmul_22222222222332222222222222222222222222222222222222222222222222 csub_222222222223322222222222222222222222222222222222222222222222222 copp_2222222222233222222222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 CRmorph_2222222222233222222222222222222222222222222222222222222222222222222 c_2222222222233222222222222222222222222222222222222222222222222222222222 c0_222222222223322222222222222222222222222222222222222222222222222222222222 H_2222222222233222222222222222222222222222222222222222222222222222222222222))) REVERTcast (Prod out_2222222222233222222222222222222222222222222222222222222222222222222222221 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 (App Pc C_2222222222233222222222222222222222222222222222222222222222 c_2222222222233222222222222222222222222222222222222222222222222222222222) (App Pc C_2222222222233222222222222222222222222222222222222222222222 c0_222222222223322222222222222222222222222222222222222222222222222222222222)) true) (Prod l_22222222222332222222222222222222222222222222222222222222222222222222222211 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222211 (App Pc C_2222222222233222222222222222222222222222222222222222222222 c_2222222222233222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222211 (App Pc C_2222222222233222222222222222222222222222222222222222222222 c0_222222222223322222222222222222222222222222222222222222222222222222222222))))))) (Lambda p_222222222223322222222222222222222222222222222222222222222222222222222222 positive (Lambda P'_2222222222233222222222222222222222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Cast (Lambda H_22222222222332222222222222222222222222222222222222222222222222222222222222 (App eq bool false true) (Lambda l_222222222223322222222222222222222222222222222222222222222222222222222222222 (App list R_222222222223322222222222222222222222222222222222) (LetIn H0_2222222222233222222222222222222222222222222222222222222222222222222222222223 (Case 2 (Lambda y_2222222222233222222222222222222222222222222222222222222222222222222222222222 bool (Lambda out_22222222222332222222222222222222222222222222222222222222222222222222222222222 (App eq bool false y_2222222222233222222222222222222222222222222222222222222222222222222222222222) (Prod out_222222222223322222222222222222222222222222222222222222222222222222222222222221 (App eq bool y_2222222222233222222222222222222222222222222222222222222222222222222222222222 true) (App req_2222222222233222222222222222222222222222222222222222222 (App phi_222222222223322222222222222222222222222222222222222222222222222222 c_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p_222222222223322222222222222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222) P'_2222222222233222222222222222222222222222222222222222222222222222222222222))))) (CaseMatch H_22222222222332222222222222222222222222222222222222222222222222222222222222) (CaseBranches (Lambda H0_2222222222233222222222222222222222222222222222222222222222222222222222222222 (App eq bool false true) (App (Lambda H0_22222222222332222222222222222222222222222222222222222222222222222222222222222 (App eq bool false true) (LetIn H1_222222222223322222222222222222222222222222222222222222222222222222222222222223 (App Coq.Init.Logic.eq_ind bool false (Lambda e_222222222223322222222222222222222222222222222222222222222222222222222222222222 bool (Case 0 (Lambda b_2222222222233222222222222222222222222222222222222222222222222222222222222222222 bool (Sort Prop)) (CaseMatch e_222222222223322222222222222222222222222222222222222222222222222222222222222222) (CaseBranches False True))) I true H0_22222222222332222222222222222222222222222222222222222222222222222222222222222) False (App Coq.Init.Logic.False_ind (App req_2222222222233222222222222222222222222222222222222222222 (App phi_222222222223322222222222222222222222222222222222222222222222222222 c_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p_222222222223322222222222222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222) P'_2222222222233222222222222222222222222222222222222222222222222222222222222)) H1_222222222223322222222222222222222222222222222222222222222222222222222222222223))) H0_2222222222233222222222222222222222222222222222222222222222222222222222222222)))) (Prod out_2222222222233222222222222222222222222222222222222222222222222222222222222221 (App eq bool true true) (App req_2222222222233222222222222222222222222222222222222222222 (App phi_222222222223322222222222222222222222222222222222222222222222222222 c_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p_222222222223322222222222222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222) P'_2222222222233222222222222222222222222222222222222222222222222222222222222))) (App H0_2222222222233222222222222222222222222222222222222222222222222222222222222223 (App eq_refl bool true))))) REVERTcast (Prod out_22222222222332222222222222222222222222222222222222222222222222222222222221 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 (App Pc C_2222222222233222222222222222222222222222222222222222222222 c_2222222222233222222222222222222222222222222222222222222222222222222222) (App Pinj C_2222222222233222222222222222222222222222222222222222222222 p_222222222223322222222222222222222222222222222222222222222222222222222222 P'_2222222222233222222222222222222222222222222222222222222222222222222222222)) true) (Prod l_222222222223322222222222222222222222222222222222222222222222222222222222211 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222211 (App Pc C_2222222222233222222222222222222222222222222222222222222222 c_2222222222233222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222211 (App Pinj C_2222222222233222222222222222222222222222222222222222222222 p_222222222223322222222222222222222222222222222222222222222222222222222222 P'_2222222222233222222222222222222222222222222222222222222222222222222222222)))))))) (Lambda P'1_222222222223322222222222222222222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Lambda p_2222222222233222222222222222222222222222222222222222222222222222222222222 positive (Lambda P'2_22222222222332222222222222222222222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Cast (Lambda H_222222222223322222222222222222222222222222222222222222222222222222222222222 (App eq bool false true) (Lambda l_2222222222233222222222222222222222222222222222222222222222222222222222222222 (App list R_222222222223322222222222222222222222222222222222) (LetIn H0_22222222222332222222222222222222222222222222222222222222222222222222222222223 (Case 2 (Lambda y_22222222222332222222222222222222222222222222222222222222222222222222222222222 bool (Lambda out_222222222223322222222222222222222222222222222222222222222222222222222222222222 (App eq bool false y_22222222222332222222222222222222222222222222222222222222222222222222222222222) (Prod out_2222222222233222222222222222222222222222222222222222222222222222222222222222221 (App eq bool y_22222222222332222222222222222222222222222222222222222222222222222222222222222 true) (App req_2222222222233222222222222222222222222222222222222222222 (App phi_222222222223322222222222222222222222222222222222222222222222222222 c_2222222222233222222222222222222222222222222222222222222222222222222222) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222 P'1_222222222223322222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222) p_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222) P'2_22222222222332222222222222222222222222222222222222222222222222222222222222)))))) (CaseMatch H_222222222223322222222222222222222222222222222222222222222222222222222222222) (CaseBranches (Lambda H0_22222222222332222222222222222222222222222222222222222222222222222222222222222 (App eq bool false true) (App (Lambda H0_222222222223322222222222222222222222222222222222222222222222222222222222222222 (App eq bool false true) (LetIn H1_2222222222233222222222222222222222222222222222222222222222222222222222222222223 (App Coq.Init.Logic.eq_ind bool false (Lambda e_2222222222233222222222222222222222222222222222222222222222222222222222222222222 bool (Case 0 (Lambda b_22222222222332222222222222222222222222222222222222222222222222222222222222222222 bool (Sort Prop)) (CaseMatch e_2222222222233222222222222222222222222222222222222222222222222222222222222222222) (CaseBranches False True))) I true H0_222222222223322222222222222222222222222222222222222222222222222222222222222222) False (App Coq.Init.Logic.False_ind (App req_2222222222233222222222222222222222222222222222222222222 (App phi_222222222223322222222222222222222222222222222222222222222222222222 c_2222222222233222222222222222222222222222222222222222222222222222222222) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222 P'1_222222222223322222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222) p_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222) P'2_22222222222332222222222222222222222222222222222222222222222222222222222222))) H1_2222222222233222222222222222222222222222222222222222222222222222222222222222223))) H0_22222222222332222222222222222222222222222222222222222222222222222222222222222)))) (Prod out_22222222222332222222222222222222222222222222222222222222222222222222222222221 (App eq bool true true) (App req_2222222222233222222222222222222222222222222222222222222 (App phi_222222222223322222222222222222222222222222222222222222222222222222 c_2222222222233222222222222222222222222222222222222222222222222222222222) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222 P'1_222222222223322222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222) p_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222) P'2_22222222222332222222222222222222222222222222222222222222222222222222222222)))) (App H0_22222222222332222222222222222222222222222222222222222222222222222222222222223 (App eq_refl bool true))))) REVERTcast (Prod out_222222222223322222222222222222222222222222222222222222222222222222222222221 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 (App Pc C_2222222222233222222222222222222222222222222222222222222222 c_2222222222233222222222222222222222222222222222222222222222222222222222) (App PX C_2222222222233222222222222222222222222222222222222222222222 P'1_222222222223322222222222222222222222222222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222222 P'2_22222222222332222222222222222222222222222222222222222222222222222222222222)) true) (Prod l_2222222222233222222222222222222222222222222222222222222222222222222222222211 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222211 (App Pc C_2222222222233222222222222222222222222222222222222222222222 c_2222222222233222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222211 (App PX C_2222222222233222222222222222222222222222222222222222222222 P'1_222222222223322222222222222222222222222222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222222 P'2_22222222222332222222222222222222222222222222222222222222222222222222222222))))))))))))) (Lambda p_2222222222233222222222222222222222222222222222222222222222222222222222 positive (Lambda P_22222222222332222222222222222222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Lambda IHP_222222222223322222222222222222222222222222222222222222222222222222222222 (Prod P'_222222222223322222222222222222222222222222222222222222222222222222222221 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Prod out_2222222222233222222222222222222222222222222222222222222222222222222222211 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 P_22222222222332222222222222222222222222222222222222222222222222222222222 P'_222222222223322222222222222222222222222222222222222222222222222222222221) true) (Prod l_22222222222332222222222222222222222222222222222222222222222222222222222111 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222111 P_22222222222332222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222111 P'_222222222223322222222222222222222222222222222222222222222222222222222221))))) (Lambda P'_2222222222233222222222222222222222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Case 1 (Lambda p_22222222222332222222222222222222222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Prod out_222222222223322222222222222222222222222222222222222222222222222222222222221 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 (App Pinj C_2222222222233222222222222222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222 P_22222222222332222222222222222222222222222222222222222222222222222222222) p_22222222222332222222222222222222222222222222222222222222222222222222222222) true) (Prod l_2222222222233222222222222222222222222222222222222222222222222222222222222211 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222211 (App Pinj C_2222222222233222222222222222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222 P_22222222222332222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222211 p_22222222222332222222222222222222222222222222222222222222222222222222222222))))) (CaseMatch P'_2222222222233222222222222222222222222222222222222222222222222222222222222) (CaseBranches (Lambda c_22222222222332222222222222222222222222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 (Cast (Lambda H_222222222223322222222222222222222222222222222222222222222222222222222222222 (App eq bool false true) (Lambda l_2222222222233222222222222222222222222222222222222222222222222222222222222222 (App list R_222222222223322222222222222222222222222222222222) (LetIn H0_22222222222332222222222222222222222222222222222222222222222222222222222222223 (Case 2 (Lambda y_22222222222332222222222222222222222222222222222222222222222222222222222222222 bool (Lambda out_222222222223322222222222222222222222222222222222222222222222222222222222222222 (App eq bool false y_22222222222332222222222222222222222222222222222222222222222222222222222222222) (Prod out_2222222222233222222222222222222222222222222222222222222222222222222222222222221 (App eq bool y_22222222222332222222222222222222222222222222222222222222222222222222222222222 true) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222) P_22222222222332222222222222222222222222222222222222222222222222222222222) (App phi_222222222223322222222222222222222222222222222222222222222222222222 c_22222222222332222222222222222222222222222222222222222222222222222222222222))))) (CaseMatch H_222222222223322222222222222222222222222222222222222222222222222222222222222) (CaseBranches (Lambda H0_22222222222332222222222222222222222222222222222222222222222222222222222222222 (App eq bool false true) (App (Lambda H0_222222222223322222222222222222222222222222222222222222222222222222222222222222 (App eq bool false true) (LetIn H1_2222222222233222222222222222222222222222222222222222222222222222222222222222223 (App Coq.Init.Logic.eq_ind bool false (Lambda e_2222222222233222222222222222222222222222222222222222222222222222222222222222222 bool (Case 0 (Lambda b_22222222222332222222222222222222222222222222222222222222222222222222222222222222 bool (Sort Prop)) (CaseMatch e_2222222222233222222222222222222222222222222222222222222222222222222222222222222) (CaseBranches False True))) I true H0_222222222223322222222222222222222222222222222222222222222222222222222222222222) False (App Coq.Init.Logic.False_ind (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222) P_22222222222332222222222222222222222222222222222222222222222222222222222) (App phi_222222222223322222222222222222222222222222222222222222222222222222 c_22222222222332222222222222222222222222222222222222222222222222222222222222)) H1_2222222222233222222222222222222222222222222222222222222222222222222222222222223))) H0_22222222222332222222222222222222222222222222222222222222222222222222222222222)))) (Prod out_22222222222332222222222222222222222222222222222222222222222222222222222222221 (App eq bool true true) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222) P_22222222222332222222222222222222222222222222222222222222222222222222222) (App phi_222222222223322222222222222222222222222222222222222222222222222222 c_22222222222332222222222222222222222222222222222222222222222222222222222222))) (App H0_22222222222332222222222222222222222222222222222222222222222222222222222222223 (App eq_refl bool true))))) REVERTcast (Prod out_222222222223322222222222222222222222222222222222222222222222222222222222221 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 (App Pinj C_2222222222233222222222222222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222 P_22222222222332222222222222222222222222222222222222222222222222222222222) (App Pc C_2222222222233222222222222222222222222222222222222222222222 c_22222222222332222222222222222222222222222222222222222222222222222222222222)) true) (Prod l_2222222222233222222222222222222222222222222222222222222222222222222222222211 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222211 (App Pinj C_2222222222233222222222222222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222 P_22222222222332222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222211 (App Pc C_2222222222233222222222222222222222222222222222222222222222 c_22222222222332222222222222222222222222222222222222222222222222222222222222))))))) (Lambda p0_22222222222332222222222222222222222222222222222222222222222222222222222222 positive (Lambda P'_222222222223322222222222222222222222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Cast (Lambda H_2222222222233222222222222222222222222222222222222222222222222222222222222222 (App eq bool (Case 0 (Lambda x_2222222222233222222222222222222222222222222222222222222222222222222222222222 comparison bool) (CaseMatch (App Coq.PArith.BinPosDef.Pos.compare p_2222222222233222222222222222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222)) (CaseBranches (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 P_22222222222332222222222222222222222222222222222222222222222222222222222 P'_222222222223322222222222222222222222222222222222222222222222222222222222222) false false)) true) (Lambda l_22222222222332222222222222222222222222222222222222222222222222222222222222222 (App list R_222222222223322222222222222222222222222222222222) (LetIn c_222222222223322222222222222222222222222222222222222222222222222222222222222223 (App Coq.PArith.BinPos.Pos.compare_spec p_2222222222233222222222222222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222) (App CompareSpec (App eq positive p_2222222222233222222222222222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222) (App Coq.PArith.BinPos.Pos.lt p_2222222222233222222222222222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222) (App Coq.PArith.BinPos.Pos.lt p0_22222222222332222222222222222222222222222222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.PArith.BinPosDef.Pos.compare p_2222222222233222222222222222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222)) (LetIn c0_2222222222233222222222222222222222222222222222222222222222222222222222222222233 (App Coq.PArith.BinPosDef.Pos.compare p_2222222222233222222222222222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222) comparison (App (Case 3 (Lambda c_22222222222332222222222222222222222222222222222222222222222222222222222222222332 comparison (Lambda out_222222222223322222222222222222222222222222222222222222222222222222222222222223322 (App CompareSpec (App eq positive p_2222222222233222222222222222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222) (App Coq.PArith.BinPos.Pos.lt p_2222222222233222222222222222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222) (App Coq.PArith.BinPos.Pos.lt p0_22222222222332222222222222222222222222222222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222) c_22222222222332222222222222222222222222222222222222222222222222222222222222222332) (Prod H_2222222222233222222222222222222222222222222222222222222222222222222222222222233221 (App eq bool (Case 0 (Lambda x_2222222222233222222222222222222222222222222222222222222222222222222222222222233222 comparison bool) (CaseMatch c_22222222222332222222222222222222222222222222222222222222222222222222222222222332) (CaseBranches (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 P_22222222222332222222222222222222222222222222222222222222222222222222222 P'_222222222223322222222222222222222222222222222222222222222222222222222222222) false false)) true) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P_22222222222332222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P'_222222222223322222222222222222222222222222222222222222222222222222222222222))))) (CaseMatch c_222222222223322222222222222222222222222222222222222222222222222222222222222223) (CaseBranches (Lambda H0_22222222222332222222222222222222222222222222222222222222222222222222222222222332 (App eq positive p_2222222222233222222222222222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222) (Lambda H_222222222223322222222222222222222222222222222222222222222222222222222222222223322 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 P_22222222222332222222222222222222222222222222222222222222222222222222222 P'_222222222223322222222222222222222222222222222222222222222222222222222222222) true) (App Coq.Init.Logic.eq_ind_r positive p0_22222222222332222222222222222222222222222222222222222222222222222222222222 (Lambda p_2222222222233222222222222222222222222222222222222222222222222222222222222222233222 positive (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222222222233222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P_22222222222332222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P'_222222222223322222222222222222222222222222222222222222222222222222222222222))) (App (Lambda lemma_2222222222233222222222222222222222222222222222222222222222222222222222222222233222 (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P_22222222222332222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P'_222222222223322222222222222222222222222222222222222222222222222222222222222)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_222222222223322222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_222222222223322222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 Rsth_22222222222332222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P_22222222222332222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P'_222222222223322222222222222222222222222222222222222222222222222222222222222) lemma_2222222222233222222222222222222222222222222222222222222222222222222222222222233222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P'_222222222223322222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P'_222222222223322222222222222222222222222222222222222222222222222222222222222) (App Coq.Classes.Morphisms.eq_proper_proxy R_222222222223322222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P'_222222222223322222222222222222222222222222222222222222222222222222222222222)))) (App IHP_222222222223322222222222222222222222222222222222222222222222222222222222 P'_222222222223322222222222222222222222222222222222222222222222222222222222222 H_222222222223322222222222222222222222222222222222222222222222222222222222222223322 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.Classes.RelationClasses.reflexivity R_222222222223322222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_222222222223322222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 Rsth_22222222222332222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P'_222222222223322222222222222222222222222222222222222222222222222222222222222))) p_2222222222233222222222222222222222222222222222222222222222222222222222 H0_22222222222332222222222222222222222222222222222222222222222222222222222222222332))) (Lambda H0_22222222222332222222222222222222222222222222222222222222222222222222222222222332 (App Coq.PArith.BinPos.Pos.lt p_2222222222233222222222222222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222) (Lambda H_222222222223322222222222222222222222222222222222222222222222222222222222222223322 (App eq bool false true) (LetIn H1_2222222222233222222222222222222222222222222222222222222222222222222222222222233223 (Case 2 (Lambda y_2222222222233222222222222222222222222222222222222222222222222222222222222222233222 bool (Lambda out_22222222222332222222222222222222222222222222222222222222222222222222222222222332222 (App eq bool false y_2222222222233222222222222222222222222222222222222222222222222222222222222222233222) (Prod out_222222222223322222222222222222222222222222222222222222222222222222222222222223322221 (App eq bool y_2222222222233222222222222222222222222222222222222222222222222222222222222222233222 true) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P_22222222222332222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P'_222222222223322222222222222222222222222222222222222222222222222222222222222))))) (CaseMatch H_222222222223322222222222222222222222222222222222222222222222222222222222222223322) (CaseBranches (Lambda H1_2222222222233222222222222222222222222222222222222222222222222222222222222222233222 (App eq bool false true) (App (Lambda H1_22222222222332222222222222222222222222222222222222222222222222222222222222222332222 (App eq bool false true) (LetIn H2_222222222223322222222222222222222222222222222222222222222222222222222222222223322223 (App Coq.Init.Logic.eq_ind bool false (Lambda e_222222222223322222222222222222222222222222222222222222222222222222222222222223322222 bool (Case 0 (Lambda b_2222222222233222222222222222222222222222222222222222222222222222222222222222233222222 bool (Sort Prop)) (CaseMatch e_222222222223322222222222222222222222222222222222222222222222222222222222222223322222) (CaseBranches False True))) I true H1_22222222222332222222222222222222222222222222222222222222222222222222222222222332222) False (App Coq.Init.Logic.False_ind (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P_22222222222332222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P'_222222222223322222222222222222222222222222222222222222222222222222222222222)) H2_222222222223322222222222222222222222222222222222222222222222222222222222222223322223))) H1_2222222222233222222222222222222222222222222222222222222222222222222222222222233222)))) (Prod out_2222222222233222222222222222222222222222222222222222222222222222222222222222233221 (App eq bool true true) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P_22222222222332222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P'_222222222223322222222222222222222222222222222222222222222222222222222222222))) (App H1_2222222222233222222222222222222222222222222222222222222222222222222222222222233223 (App eq_refl bool true))))) (Lambda H0_22222222222332222222222222222222222222222222222222222222222222222222222222222332 (App Coq.PArith.BinPos.Pos.lt p0_22222222222332222222222222222222222222222222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222) (Lambda H_222222222223322222222222222222222222222222222222222222222222222222222222222223322 (App eq bool false true) (LetIn H1_2222222222233222222222222222222222222222222222222222222222222222222222222222233223 (Case 2 (Lambda y_2222222222233222222222222222222222222222222222222222222222222222222222222222233222 bool (Lambda out_22222222222332222222222222222222222222222222222222222222222222222222222222222332222 (App eq bool false y_2222222222233222222222222222222222222222222222222222222222222222222222222222233222) (Prod out_222222222223322222222222222222222222222222222222222222222222222222222222222223322221 (App eq bool y_2222222222233222222222222222222222222222222222222222222222222222222222222222233222 true) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P_22222222222332222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P'_222222222223322222222222222222222222222222222222222222222222222222222222222))))) (CaseMatch H_222222222223322222222222222222222222222222222222222222222222222222222222222223322) (CaseBranches (Lambda H1_2222222222233222222222222222222222222222222222222222222222222222222222222222233222 (App eq bool false true) (App (Lambda H1_22222222222332222222222222222222222222222222222222222222222222222222222222222332222 (App eq bool false true) (LetIn H2_222222222223322222222222222222222222222222222222222222222222222222222222222223322223 (App Coq.Init.Logic.eq_ind bool false (Lambda e_222222222223322222222222222222222222222222222222222222222222222222222222222223322222 bool (Case 0 (Lambda b_2222222222233222222222222222222222222222222222222222222222222222222222222222233222222 bool (Sort Prop)) (CaseMatch e_222222222223322222222222222222222222222222222222222222222222222222222222222223322222) (CaseBranches False True))) I true H1_22222222222332222222222222222222222222222222222222222222222222222222222222222332222) False (App Coq.Init.Logic.False_ind (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P_22222222222332222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P'_222222222223322222222222222222222222222222222222222222222222222222222222222)) H2_222222222223322222222222222222222222222222222222222222222222222222222222222223322223))) H1_2222222222233222222222222222222222222222222222222222222222222222222222222222233222)))) (Prod out_2222222222233222222222222222222222222222222222222222222222222222222222222222233221 (App eq bool true true) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P_22222222222332222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222) P'_222222222223322222222222222222222222222222222222222222222222222222222222222))) (App H1_2222222222233222222222222222222222222222222222222222222222222222222222222222233223 (App eq_refl bool true))))))) H_2222222222233222222222222222222222222222222222222222222222222222222222222222))))) REVERTcast (Prod out_2222222222233222222222222222222222222222222222222222222222222222222222222221 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 (App Pinj C_2222222222233222222222222222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222 P_22222222222332222222222222222222222222222222222222222222222222222222222) (App Pinj C_2222222222233222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222 P'_222222222223322222222222222222222222222222222222222222222222222222222222222)) true) (Prod l_22222222222332222222222222222222222222222222222222222222222222222222222222211 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222211 (App Pinj C_2222222222233222222222222222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222 P_22222222222332222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222211 (App Pinj C_2222222222233222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222 P'_222222222223322222222222222222222222222222222222222222222222222222222222222)))))))) (Lambda P'1_22222222222332222222222222222222222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Lambda p0_222222222223322222222222222222222222222222222222222222222222222222222222222 positive (Lambda P'2_2222222222233222222222222222222222222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Cast (Lambda H_22222222222332222222222222222222222222222222222222222222222222222222222222222 (App eq bool false true) (Lambda l_222222222223322222222222222222222222222222222222222222222222222222222222222222 (App list R_222222222223322222222222222222222222222222222222) (LetIn H0_2222222222233222222222222222222222222222222222222222222222222222222222222222223 (Case 2 (Lambda y_2222222222233222222222222222222222222222222222222222222222222222222222222222222 bool (Lambda out_22222222222332222222222222222222222222222222222222222222222222222222222222222222 (App eq bool false y_2222222222233222222222222222222222222222222222222222222222222222222222222222222) (Prod out_222222222223322222222222222222222222222222222222222222222222222222222222222222221 (App eq bool y_2222222222233222222222222222222222222222222222222222222222222222222222222222222 true) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222) P_22222222222332222222222222222222222222222222222222222222222222222222222) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222 P'1_22222222222332222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222) p0_222222222223322222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222) P'2_2222222222233222222222222222222222222222222222222222222222222222222222222222)))))) (CaseMatch H_22222222222332222222222222222222222222222222222222222222222222222222222222222) (CaseBranches (Lambda H0_2222222222233222222222222222222222222222222222222222222222222222222222222222222 (App eq bool false true) (App (Lambda H0_22222222222332222222222222222222222222222222222222222222222222222222222222222222 (App eq bool false true) (LetIn H1_222222222223322222222222222222222222222222222222222222222222222222222222222222223 (App Coq.Init.Logic.eq_ind bool false (Lambda e_222222222223322222222222222222222222222222222222222222222222222222222222222222222 bool (Case 0 (Lambda b_2222222222233222222222222222222222222222222222222222222222222222222222222222222222 bool (Sort Prop)) (CaseMatch e_222222222223322222222222222222222222222222222222222222222222222222222222222222222) (CaseBranches False True))) I true H0_22222222222332222222222222222222222222222222222222222222222222222222222222222222) False (App Coq.Init.Logic.False_ind (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222) P_22222222222332222222222222222222222222222222222222222222222222222222222) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222 P'1_22222222222332222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222) p0_222222222223322222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222) P'2_2222222222233222222222222222222222222222222222222222222222222222222222222222))) H1_222222222223322222222222222222222222222222222222222222222222222222222222222222223))) H0_2222222222233222222222222222222222222222222222222222222222222222222222222222222)))) (Prod out_2222222222233222222222222222222222222222222222222222222222222222222222222222221 (App eq bool true true) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222) P_22222222222332222222222222222222222222222222222222222222222222222222222) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222 P'1_22222222222332222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222) p0_222222222223322222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222) P'2_2222222222233222222222222222222222222222222222222222222222222222222222222222)))) (App H0_2222222222233222222222222222222222222222222222222222222222222222222222222222223 (App eq_refl bool true))))) REVERTcast (Prod out_22222222222332222222222222222222222222222222222222222222222222222222222222221 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 (App Pinj C_2222222222233222222222222222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222 P_22222222222332222222222222222222222222222222222222222222222222222222222) (App PX C_2222222222233222222222222222222222222222222222222222222222 P'1_22222222222332222222222222222222222222222222222222222222222222222222222222 p0_222222222223322222222222222222222222222222222222222222222222222222222222222 P'2_2222222222233222222222222222222222222222222222222222222222222222222222222222)) true) (Prod l_222222222223322222222222222222222222222222222222222222222222222222222222222211 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222211 (App Pinj C_2222222222233222222222222222222222222222222222222222222222 p_2222222222233222222222222222222222222222222222222222222222222222222222 P_22222222222332222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222211 (App PX C_2222222222233222222222222222222222222222222222222222222222 P'1_22222222222332222222222222222222222222222222222222222222222222222222222222 p0_222222222223322222222222222222222222222222222222222222222222222222222222222 P'2_2222222222233222222222222222222222222222222222222222222222222222222222222222))))))))))))))) (Lambda P2_2222222222233222222222222222222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Lambda IHP1_22222222222332222222222222222222222222222222222222222222222222222222222 (Prod P'_22222222222332222222222222222222222222222222222222222222222222222222221 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Prod out_222222222223322222222222222222222222222222222222222222222222222222222211 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222 P'_22222222222332222222222222222222222222222222222222222222222222222222221) true) (Prod l_2222222222233222222222222222222222222222222222222222222222222222222222111 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222111 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222111 P'_22222222222332222222222222222222222222222222222222222222222222222222221))))) (Lambda p_222222222223322222222222222222222222222222222222222222222222222222222222 positive (Lambda P3_2222222222233222222222222222222222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Lambda IHP2_22222222222332222222222222222222222222222222222222222222222222222222222222 (Prod P'_22222222222332222222222222222222222222222222222222222222222222222222222221 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Prod out_222222222223322222222222222222222222222222222222222222222222222222222222211 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 P3_2222222222233222222222222222222222222222222222222222222222222222222222222 P'_22222222222332222222222222222222222222222222222222222222222222222222222221) true) (Prod l_2222222222233222222222222222222222222222222222222222222222222222222222222111 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222111 P3_2222222222233222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222111 P'_22222222222332222222222222222222222222222222222222222222222222222222222221))))) (Lambda P'_222222222223322222222222222222222222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Case 1 (Lambda p_2222222222233222222222222222222222222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Prod out_22222222222332222222222222222222222222222222222222222222222222222222222222221 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 (App PX C_2222222222233222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222 p_222222222223322222222222222222222222222222222222222222222222222222222222 P3_2222222222233222222222222222222222222222222222222222222222222222222222222) p_2222222222233222222222222222222222222222222222222222222222222222222222222222) true) (Prod l_222222222223322222222222222222222222222222222222222222222222222222222222222211 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222211 (App PX C_2222222222233222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222 p_222222222223322222222222222222222222222222222222222222222222222222222222 P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222211 p_2222222222233222222222222222222222222222222222222222222222222222222222222222))))) (CaseMatch P'_222222222223322222222222222222222222222222222222222222222222222222222222222) (CaseBranches (Lambda c_2222222222233222222222222222222222222222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 (Cast (Lambda H_22222222222332222222222222222222222222222222222222222222222222222222222222222 (App eq bool false true) (Lambda l_222222222223322222222222222222222222222222222222222222222222222222222222222222 (App list R_222222222223322222222222222222222222222222222222) (LetIn H0_2222222222233222222222222222222222222222222222222222222222222222222222222222223 (Case 2 (Lambda y_2222222222233222222222222222222222222222222222222222222222222222222222222222222 bool (Lambda out_22222222222332222222222222222222222222222222222222222222222222222222222222222222 (App eq bool false y_2222222222233222222222222222222222222222222222222222222222222222222222222222222) (Prod out_222222222223322222222222222222222222222222222222222222222222222222222222222222221 (App eq bool y_2222222222233222222222222222222222222222222222222222222222222222222222222222222 true) (App req_2222222222233222222222222222222222222222222222222222222 (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222) p_222222222223322222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App phi_222222222223322222222222222222222222222222222222222222222222222222 c_2222222222233222222222222222222222222222222222222222222222222222222222222222))))) (CaseMatch H_22222222222332222222222222222222222222222222222222222222222222222222222222222) (CaseBranches (Lambda H0_2222222222233222222222222222222222222222222222222222222222222222222222222222222 (App eq bool false true) (App (Lambda H0_22222222222332222222222222222222222222222222222222222222222222222222222222222222 (App eq bool false true) (LetIn H1_222222222223322222222222222222222222222222222222222222222222222222222222222222223 (App Coq.Init.Logic.eq_ind bool false (Lambda e_222222222223322222222222222222222222222222222222222222222222222222222222222222222 bool (Case 0 (Lambda b_2222222222233222222222222222222222222222222222222222222222222222222222222222222222 bool (Sort Prop)) (CaseMatch e_222222222223322222222222222222222222222222222222222222222222222222222222222222222) (CaseBranches False True))) I true H0_22222222222332222222222222222222222222222222222222222222222222222222222222222222) False (App Coq.Init.Logic.False_ind (App req_2222222222233222222222222222222222222222222222222222222 (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222) p_222222222223322222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App phi_222222222223322222222222222222222222222222222222222222222222222222 c_2222222222233222222222222222222222222222222222222222222222222222222222222222)) H1_222222222223322222222222222222222222222222222222222222222222222222222222222222223))) H0_2222222222233222222222222222222222222222222222222222222222222222222222222222222)))) (Prod out_2222222222233222222222222222222222222222222222222222222222222222222222222222221 (App eq bool true true) (App req_2222222222233222222222222222222222222222222222222222222 (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222) p_222222222223322222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App phi_222222222223322222222222222222222222222222222222222222222222222222 c_2222222222233222222222222222222222222222222222222222222222222222222222222222))) (App H0_2222222222233222222222222222222222222222222222222222222222222222222222222222223 (App eq_refl bool true))))) REVERTcast (Prod out_22222222222332222222222222222222222222222222222222222222222222222222222222221 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 (App PX C_2222222222233222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222 p_222222222223322222222222222222222222222222222222222222222222222222222222 P3_2222222222233222222222222222222222222222222222222222222222222222222222222) (App Pc C_2222222222233222222222222222222222222222222222222222222222 c_2222222222233222222222222222222222222222222222222222222222222222222222222222)) true) (Prod l_222222222223322222222222222222222222222222222222222222222222222222222222222211 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222211 (App PX C_2222222222233222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222 p_222222222223322222222222222222222222222222222222222222222222222222222222 P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222211 (App Pc C_2222222222233222222222222222222222222222222222222222222222 c_2222222222233222222222222222222222222222222222222222222222222222222222222222))))))) (Lambda p0_2222222222233222222222222222222222222222222222222222222222222222222222222222 positive (Lambda P'_22222222222332222222222222222222222222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Cast (Lambda H_222222222223322222222222222222222222222222222222222222222222222222222222222222 (App eq bool false true) (Lambda l_2222222222233222222222222222222222222222222222222222222222222222222222222222222 (App list R_222222222223322222222222222222222222222222222222) (LetIn H0_22222222222332222222222222222222222222222222222222222222222222222222222222222223 (Case 2 (Lambda y_22222222222332222222222222222222222222222222222222222222222222222222222222222222 bool (Lambda out_222222222223322222222222222222222222222222222222222222222222222222222222222222222 (App eq bool false y_22222222222332222222222222222222222222222222222222222222222222222222222222222222) (Prod out_2222222222233222222222222222222222222222222222222222222222222222222222222222222221 (App eq bool y_22222222222332222222222222222222222222222222222222222222222222222222222222222222 true) (App req_2222222222233222222222222222222222222222222222222222222 (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222222) p_222222222223322222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p0_2222222222233222222222222222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222222) P'_22222222222332222222222222222222222222222222222222222222222222222222222222222))))) (CaseMatch H_222222222223322222222222222222222222222222222222222222222222222222222222222222) (CaseBranches (Lambda H0_22222222222332222222222222222222222222222222222222222222222222222222222222222222 (App eq bool false true) (App (Lambda H0_222222222223322222222222222222222222222222222222222222222222222222222222222222222 (App eq bool false true) (LetIn H1_2222222222233222222222222222222222222222222222222222222222222222222222222222222223 (App Coq.Init.Logic.eq_ind bool false (Lambda e_2222222222233222222222222222222222222222222222222222222222222222222222222222222222 bool (Case 0 (Lambda b_22222222222332222222222222222222222222222222222222222222222222222222222222222222222 bool (Sort Prop)) (CaseMatch e_2222222222233222222222222222222222222222222222222222222222222222222222222222222222) (CaseBranches False True))) I true H0_222222222223322222222222222222222222222222222222222222222222222222222222222222222) False (App Coq.Init.Logic.False_ind (App req_2222222222233222222222222222222222222222222222222222222 (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222222) p_222222222223322222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p0_2222222222233222222222222222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222222) P'_22222222222332222222222222222222222222222222222222222222222222222222222222222)) H1_2222222222233222222222222222222222222222222222222222222222222222222222222222222223))) H0_22222222222332222222222222222222222222222222222222222222222222222222222222222222)))) (Prod out_22222222222332222222222222222222222222222222222222222222222222222222222222222221 (App eq bool true true) (App req_2222222222233222222222222222222222222222222222222222222 (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222222) p_222222222223322222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.setoid_ring.BinList.jump R_222222222223322222222222222222222222222222222222 p0_2222222222233222222222222222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222222) P'_22222222222332222222222222222222222222222222222222222222222222222222222222222))) (App H0_22222222222332222222222222222222222222222222222222222222222222222222222222222223 (App eq_refl bool true))))) REVERTcast (Prod out_222222222223322222222222222222222222222222222222222222222222222222222222222221 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 (App PX C_2222222222233222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222 p_222222222223322222222222222222222222222222222222222222222222222222222222 P3_2222222222233222222222222222222222222222222222222222222222222222222222222) (App Pinj C_2222222222233222222222222222222222222222222222222222222222 p0_2222222222233222222222222222222222222222222222222222222222222222222222222222 P'_22222222222332222222222222222222222222222222222222222222222222222222222222222)) true) (Prod l_2222222222233222222222222222222222222222222222222222222222222222222222222222211 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222211 (App PX C_2222222222233222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222 p_222222222223322222222222222222222222222222222222222222222222222222222222 P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222211 (App Pinj C_2222222222233222222222222222222222222222222222222222222222 p0_2222222222233222222222222222222222222222222222222222222222222222222222222222 P'_22222222222332222222222222222222222222222222222222222222222222222222222222222)))))))) (Lambda P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Lambda p0_22222222222332222222222222222222222222222222222222222222222222222222222222222 positive (Lambda P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222 (App Pol C_2222222222233222222222222222222222222222222222222222222222) (Cast (Lambda H_2222222222233222222222222222222222222222222222222222222222222222222222222222222 (App eq bool (Case 0 (Lambda x_2222222222233222222222222222222222222222222222222222222222222222222222222222222 comparison bool) (CaseMatch (App Coq.PArith.BinPosDef.Pos.compare p_222222222223322222222222222222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (CaseBranches (Case 0 (Lambda b_2222222222233222222222222222222222222222222222222222222222222222222222222222222 bool bool) (CaseMatch (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222)) (CaseBranches (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 P3_2222222222233222222222222222222222222222222222222222222222222222222222222 P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222) false)) false false)) true) (Lambda l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 (App list R_222222222223322222222222222222222222222222222222) (LetIn IHP1_222222222223322222222222222222222222222222222222222222222222222222222222222222223 (App IHP1_22222222222332222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (Prod out_222222222223322222222222222222222222222222222222222222222222222222222222222222221 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) true) (Prod l_2222222222233222222222222222222222222222222222222222222222222222222222222222222211 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222222211 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222222211 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222)))) (LetIn IHP2_2222222222233222222222222222222222222222222222222222222222222222222222222222222233 (App IHP2_22222222222332222222222222222222222222222222222222222222222222222222222222 P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222) (Prod out_2222222222233222222222222222222222222222222222222222222222222222222222222222222231 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 P3_2222222222233222222222222222222222222222222222222222222222222222222222222 P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222) true) (Prod l_22222222222332222222222222222222222222222222222222222222222222222222222222222222311 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222311 P3_2222222222233222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222311 P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222)))) (LetIn c_22222222222332222222222222222222222222222222222222222222222222222222222222222222333 (App Coq.PArith.BinPos.Pos.compare_spec p_222222222223322222222222222222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222222) (App CompareSpec (App eq positive p_222222222223322222222222222222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222222) (App Coq.PArith.BinPos.Pos.lt p_222222222223322222222222222222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222222) (App Coq.PArith.BinPos.Pos.lt p0_22222222222332222222222222222222222222222222222222222222222222222222222222222 p_222222222223322222222222222222222222222222222222222222222222222222222222) (App Coq.PArith.BinPosDef.Pos.compare p_222222222223322222222222222222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (LetIn c0_222222222223322222222222222222222222222222222222222222222222222222222222222222223333 (App Coq.PArith.BinPosDef.Pos.compare p_222222222223322222222222222222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222222) comparison (App (Case 3 (Lambda c_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332 comparison (Lambda out_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322 (App CompareSpec (App eq positive p_222222222223322222222222222222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222222) (App Coq.PArith.BinPos.Pos.lt p_222222222223322222222222222222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222222) (App Coq.PArith.BinPos.Pos.lt p0_22222222222332222222222222222222222222222222222222222222222222222222222222222 p_222222222223322222222222222222222222222222222222222222222222222222222222) c_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332) (Prod H_222222222223322222222222222222222222222222222222222222222222222222222222222222223333221 (App eq bool (Case 0 (Lambda x_222222222223322222222222222222222222222222222222222222222222222222222222222222223333222 comparison bool) (CaseMatch c_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332) (CaseBranches (Case 0 (Lambda b_222222222223322222222222222222222222222222222222222222222222222222222222222222223333222 bool bool) (CaseMatch (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222)) (CaseBranches (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 P3_2222222222233222222222222222222222222222222222222222222222222222222222222 P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222) false)) false false)) true) (App req_2222222222233222222222222222222222222222222222222222222 (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p_222222222223322222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222)))))) (CaseMatch c_22222222222332222222222222222222222222222222222222222222222222222222222222222222333) (CaseBranches (Lambda H0_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332 (App eq positive p_222222222223322222222222222222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222222) (Lambda H_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322 (App eq bool (Case 0 (Lambda b_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322 bool bool) (CaseMatch (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222)) (CaseBranches (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 P3_2222222222233222222222222222222222222222222222222222222222222222222222222 P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222) false)) true) (App Coq.Init.Logic.eq_ind_r positive p0_22222222222332222222222222222222222222222222222222222222222222222222222222222 (Lambda p_222222222223322222222222222222222222222222222222222222222222222222222222222222223333222 positive (App req_2222222222233222222222222222222222222222222222222222222 (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p_222222222223322222222222222222222222222222222222222222222222222222222222222222223333222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222)))) (LetIn b_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223 (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) bool (App (Case 0 (Lambda b_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332232 bool (Prod IHP1_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322321 (Prod out_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322321 (App eq bool b_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332232 true) (Prod l_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223211 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223211 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223211 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222)))) (Prod H_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223211 (App eq bool (Case 0 (Lambda b_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223212 bool bool) (CaseMatch b_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332232) (CaseBranches (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 P3_2222222222233222222222222222222222222222222222222222222222222222222222222 P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222) false)) true) (App req_2222222222233222222222222222222222222222222222222222222 (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222)))))) (CaseMatch b_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223) (CaseBranches (Lambda IHP1_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332232 (Prod out_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332231 (App eq bool true true) (Prod l_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322311 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322311 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322311 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222)))) (Lambda H_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322322 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 P3_2222222222233222222222222222222222222222222222222222222222222222222222222 P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222) true) (LetIn IHP2_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223223 (App Coq.Init.Logic.eq_ind bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 P3_2222222222233222222222222222222222222222222222222222222222222222222222222 P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222) (Lambda b_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223222 bool (Prod out_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332232221 (App eq bool b_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223222 true) (Prod l_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322322211 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322322211 P3_2222222222233222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322322211 P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222))))) IHP2_2222222222233222222222222222222222222222222222222222222222222222222222222222222233 true H_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322322) (Prod out_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223221 (App eq bool true true) (Prod l_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332232211 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332232211 P3_2222222222233222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332232211 P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222)))) (App (Lambda lemma_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332232232 (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_222222222223322222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_222222222223322222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 Rsth_22222222222332222222222222222222222222222222222222222222) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.radd_ext_Proper R_222222222223322222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 ropp_222222222223322222222222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 Reqe_222222222223322222222222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.rmul_ext_Proper R_222222222223322222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 ropp_222222222223322222222222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 Reqe_222222222223322222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) lemma_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332232232 (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_222222222223322222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_222222222223322222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 Rsth_22222222222332222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222))) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_222222222223322222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_222222222223322222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 Rsth_22222222222332222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222))) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222)) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy R_222222222223322222222222222222222222222222222222 (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222))))) (App IHP1_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332232 (App eq_refl bool true) l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) (App (Lambda lemma_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332232232 (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_222222222223322222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_222222222223322222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 Rsth_22222222222332222222222222222222222222222222222222222222) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222)) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism R_222222222223322222222222222222222222222222222222 (Prod out_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322322321 R_222222222223322222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222) req_2222222222233222222222222222222222222222222222222222222 (App Coq.Classes.Morphisms.respectful R_222222222223322222222222222222222222222222222222 R_222222222223322222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222) radd_222222222223322222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.radd_ext_Proper R_222222222223322222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 ropp_222222222223322222222222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 Reqe_222222222223322222222222222222222222222222222222222222222) (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_222222222223322222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_222222222223322222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 Rsth_22222222222332222222222222222222222222222222222222222222) (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222))) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222) lemma_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332232232) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222)) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy R_222222222223322222222222222222222222222222222222 (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222))))) (App IHP2_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223223 (App eq_refl bool true) (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222)) (App Coq.Classes.RelationClasses.reflexivity R_222222222223322222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_222222222223322222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 Rsth_22222222222332222222222222222222222222222222222222222222) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222)))))))) (Lambda IHP1_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332232 (Prod out_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332231 (App eq bool false true) (Prod l_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322311 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322311 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322311 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222)))) (Lambda H_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322322 (App eq bool false true) (LetIn H0_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223223 (Case 2 (Lambda y_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223222 bool (Lambda out_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332232222 (App eq bool false y_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223222) (Prod out_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322322221 (App eq bool y_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223222 true) (App req_2222222222233222222222222222222222222222222222222222222 (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222)))))) (CaseMatch H_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322322) (CaseBranches (Lambda H0_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223222 (App eq bool false true) (App (Lambda H0_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332232222 (App eq bool false true) (LetIn H1_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322322223 (App Coq.Init.Logic.eq_ind bool false (Lambda e_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322322222 bool (Case 0 (Lambda b_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223222222 bool (Sort Prop)) (CaseMatch e_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322322222) (CaseBranches False True))) I true H0_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332232222) False (App Coq.Init.Logic.False_ind (App req_2222222222233222222222222222222222222222222222222222222 (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222))) H1_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322322223))) H0_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223222)))) (Prod out_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223221 (App eq bool true true) (App req_2222222222233222222222222222222222222222222222222222222 (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222)))) (App H0_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223223 (App eq_refl bool true))))))) IHP1_222222222223322222222222222222222222222222222222222222222222222222222222222222223 H_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322)) p_222222222223322222222222222222222222222222222222222222222222222222222222 H0_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332))) (Lambda H0_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332 (App Coq.PArith.BinPos.Pos.lt p_222222222223322222222222222222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222222) (Lambda H_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322 (App eq bool false true) (LetIn H1_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223 (Case 2 (Lambda y_222222222223322222222222222222222222222222222222222222222222222222222222222222223333222 bool (Lambda out_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332222 (App eq bool false y_222222222223322222222222222222222222222222222222222222222222222222222222222222223333222) (Prod out_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322221 (App eq bool y_222222222223322222222222222222222222222222222222222222222222222222222222222222223333222 true) (App req_2222222222233222222222222222222222222222222222222222222 (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p_222222222223322222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222)))))) (CaseMatch H_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322) (CaseBranches (Lambda H1_222222222223322222222222222222222222222222222222222222222222222222222222222222223333222 (App eq bool false true) (App (Lambda H1_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332222 (App eq bool false true) (LetIn H2_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322223 (App Coq.Init.Logic.eq_ind bool false (Lambda e_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322222 bool (Case 0 (Lambda b_222222222223322222222222222222222222222222222222222222222222222222222222222222223333222222 bool (Sort Prop)) (CaseMatch e_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322222) (CaseBranches False True))) I true H1_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332222) False (App Coq.Init.Logic.False_ind (App req_2222222222233222222222222222222222222222222222222222222 (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p_222222222223322222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222))) H2_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322223))) H1_222222222223322222222222222222222222222222222222222222222222222222222222222222223333222)))) (Prod out_222222222223322222222222222222222222222222222222222222222222222222222222222222223333221 (App eq bool true true) (App req_2222222222233222222222222222222222222222222222222222222 (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p_222222222223322222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222)))) (App H1_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223 (App eq_refl bool true))))) (Lambda H0_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332 (App Coq.PArith.BinPos.Pos.lt p0_22222222222332222222222222222222222222222222222222222222222222222222222222222 p_222222222223322222222222222222222222222222222222222222222222222222222222) (Lambda H_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322 (App eq bool false true) (LetIn H1_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223 (Case 2 (Lambda y_222222222223322222222222222222222222222222222222222222222222222222222222222222223333222 bool (Lambda out_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332222 (App eq bool false y_222222222223322222222222222222222222222222222222222222222222222222222222222222223333222) (Prod out_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322221 (App eq bool y_222222222223322222222222222222222222222222222222222222222222222222222222222222223333222 true) (App req_2222222222233222222222222222222222222222222222222222222 (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p_222222222223322222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222)))))) (CaseMatch H_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322) (CaseBranches (Lambda H1_222222222223322222222222222222222222222222222222222222222222222222222222222222223333222 (App eq bool false true) (App (Lambda H1_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332222 (App eq bool false true) (LetIn H2_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322223 (App Coq.Init.Logic.eq_ind bool false (Lambda e_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322222 bool (Case 0 (Lambda b_222222222223322222222222222222222222222222222222222222222222222222222222222222223333222222 bool (Sort Prop)) (CaseMatch e_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322222) (CaseBranches False True))) I true H1_2222222222233222222222222222222222222222222222222222222222222222222222222222222233332222) False (App Coq.Init.Logic.False_ind (App req_2222222222233222222222222222222222222222222222222222222 (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p_222222222223322222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222))) H2_22222222222332222222222222222222222222222222222222222222222222222222222222222222333322223))) H1_222222222223322222222222222222222222222222222222222222222222222222222222222222223333222)))) (Prod out_222222222223322222222222222222222222222222222222222222222222222222222222222222223333221 (App eq bool true true) (App req_2222222222233222222222222222222222222222222222222222222 (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p_222222222223322222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App radd_222222222223322222222222222222222222222222222222222 (App rmul_2222222222233222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222) (App Coq.setoid_ring.Ring_theory.pow_pos R_222222222223322222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 (App Coq.Lists.List.hd R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) p0_22222222222332222222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 (App Coq.Lists.List.tl R_222222222223322222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222222) P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222)))) (App H1_222222222223322222222222222222222222222222222222222222222222222222222222222222223333223 (App eq_refl bool true))))))) H_2222222222233222222222222222222222222222222222222222222222222222222222222222222))))))) REVERTcast (Prod out_2222222222233222222222222222222222222222222222222222222222222222222222222222221 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 (App PX C_2222222222233222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222 p_222222222223322222222222222222222222222222222222222222222222222222222222 P3_2222222222233222222222222222222222222222222222222222222222222222222222222) (App PX C_2222222222233222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222222 P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222)) true) (Prod l_22222222222332222222222222222222222222222222222222222222222222222222222222222211 (App list R_222222222223322222222222222222222222222222222222) (App req_2222222222233222222222222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222211 (App PX C_2222222222233222222222222222222222222222222222222222222222 P2_2222222222233222222222222222222222222222222222222222222222222222222222 p_222222222223322222222222222222222222222222222222222222222222222222222222 P3_2222222222233222222222222222222222222222222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.Pphi R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 l_22222222222332222222222222222222222222222222222222222222222222222222222222222211 (App PX C_2222222222233222222222222222222222222222222222222222222222 P'1_2222222222233222222222222222222222222222222222222222222222222222222222222222 p0_22222222222332222222222222222222222222222222222222222222222222222222222222222 P'2_222222222223322222222222222222222222222222222222222222222222222222222222222222))))))))))))))))) P_22222222222332222222222222222222222222222222222222222222222222222222 P'_222222222223322222222222222222222222222222222222222222222222222222222) REVERTcast (Prod out_2222222222233222222222222222222222222222222222222222222222222222222221 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222222222222222222222222222222222222 ceqb_22222222222332222222222222222222222222222222222222222222222222222 P_22222222222332222222222222222222222222222222222222222222222222222222 P'_222222222223322222222222222222222222222222222222222222222222222222222) true) (App Coq.setoid_ring.Ring_polynom.Pequiv R_222222222223322222222222222222222222222222222222 rO_2222222222233222222222222222222222222222222222222 radd_222222222223322222222222222222222222222222222222222 rmul_2222222222233222222222222222222222222222222222222222 req_2222222222233222222222222222222222222222222222222222222 C_2222222222233222222222222222222222222222222222222222222222 phi_222222222223322222222222222222222222222222222222222222222222222222 P_22222222222332222222222222222222222222222222222222222222222222222222 P'_222222222223322222222222222222222222222222222222222222222222222222222)))))))))))))))))))))))))) (Definition Coq.setoid_ring.Ring_polynom.ring_correct (Lambda R_22222222222332 (Sort Type) (Lambda rO_222222222223322 R_22222222222332 (Lambda rI_2222222222233222 R_22222222222332 (Lambda radd_22222222222332222 (Prod out_22222222222332221 R_22222222222332 (Prod out_222222222223322211 R_22222222222332 R_22222222222332)) (Lambda rmul_222222222223322222 (Prod out_222222222223322221 R_22222222222332 (Prod out_2222222222233222211 R_22222222222332 R_22222222222332)) (Lambda rsub_2222222222233222222 (Prod out_2222222222233222221 R_22222222222332 (Prod out_22222222222332222211 R_22222222222332 R_22222222222332)) (Lambda ropp_22222222222332222222 (Prod out_22222222222332222221 R_22222222222332 R_22222222222332) (Lambda req_222222222223322222222 (Prod out_222222222223322222221 R_22222222222332 (Prod out_2222222222233222222211 R_22222222222332 (Sort Prop))) (Lambda Rsth_2222222222233222222222 (App Equivalence R_22222222222332 req_222222222223322222222) (Lambda Reqe_22222222222332222222222 (App ring_eq_ext R_22222222222332 radd_22222222222332222 rmul_222222222223322222 ropp_22222222222332222222 req_222222222223322222222) (Lambda ARth_222222222223322222222222 (App almost_ring_theory R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 req_222222222223322222222) (Lambda C_2222222222233222222222222 (Sort Type) (Lambda cO_22222222222332222222222222 C_2222222222233222222222222 (Lambda cI_222222222223322222222222222 C_2222222222233222222222222 (Lambda cadd_2222222222233222222222222222 (Prod out_2222222222233222222222222221 C_2222222222233222222222222 (Prod out_22222222222332222222222222211 C_2222222222233222222222222 C_2222222222233222222222222)) (Lambda cmul_22222222222332222222222222222 (Prod out_22222222222332222222222222221 C_2222222222233222222222222 (Prod out_222222222223322222222222222211 C_2222222222233222222222222 C_2222222222233222222222222)) (Lambda csub_222222222223322222222222222222 (Prod out_222222222223322222222222222221 C_2222222222233222222222222 (Prod out_2222222222233222222222222222211 C_2222222222233222222222222 C_2222222222233222222222222)) (Lambda copp_2222222222233222222222222222222 (Prod out_2222222222233222222222222222221 C_2222222222233222222222222 C_2222222222233222222222222) (Lambda ceqb_22222222222332222222222222222222 (Prod out_22222222222332222222222222222221 C_2222222222233222222222222 (Prod out_222222222223322222222222222222211 C_2222222222233222222222222 bool)) (Lambda phi_222222222223322222222222222222222 (Prod out_222222222223322222222222222222221 C_2222222222233222222222222 R_22222222222332) (Lambda CRmorph_2222222222233222222222222222222222 (App ring_morph R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 req_222222222223322222222 C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 phi_222222222223322222222222222222222) (Lambda Cpow_22222222222332222222222222222222222 (Sort Type) (Lambda Cp_phi_222222222223322222222222222222222222 (Prod out_222222222223322222222222222222222221 N Cpow_22222222222332222222222222222222222) (Lambda rpow_2222222222233222222222222222222222222 (Prod out_2222222222233222222222222222222222221 R_22222222222332 (Prod out_22222222222332222222222222222222222211 Cpow_22222222222332222222222222222222222 R_22222222222332)) (Lambda pow_th_22222222222332222222222222222222222222 (App power_theory R_22222222222332 rI_2222222222233222 rmul_222222222223322222 req_222222222223322222222 Cpow_22222222222332222222222222222222222 Cp_phi_222222222223322222222222222222222222 rpow_2222222222233222222222222222222222222) (Lambda cdiv_222222222223322222222222222222222222222 (Prod out_222222222223322222222222222222222222221 C_2222222222233222222222222 (Prod out_2222222222233222222222222222222222222211 C_2222222222233222222222222 (App prod C_2222222222233222222222222 C_2222222222233222222222222))) (Lambda div_th_2222222222233222222222222222222222222222 (App div_theory R_22222222222332 req_222222222223322222222 C_2222222222233222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 phi_222222222223322222222222222222222 cdiv_222222222223322222222222222222222222222) (Cast (Lambda n_22222222222332222222222222222222222222222 nat (Lambda l_222222222223322222222222222222222222222222 (App list R_22222222222332) (Lambda lpe_2222222222233222222222222222222222222222222 (App list (App prod (App PExpr C_2222222222233222222222222) (App PExpr C_2222222222233222222222222))) (Lambda pe1_22222222222332222222222222222222222222222222 (App PExpr C_2222222222233222222222222) (Lambda pe2_222222222223322222222222222222222222222222222 (App PExpr C_2222222222233222222222222) (Lambda H_2222222222233222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.interp_PElist R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 req_222222222223322222222 C_2222222222233222222222222 phi_222222222223322222222222222222222 Cpow_22222222222332222222222222222222222 Cp_phi_222222222223322222222222222222222222 rpow_2222222222233222222222222222222222222 l_222222222223322222222222222222222222222222 lpe_2222222222233222222222222222222222222222222) (Lambda H0_22222222222332222222222222222222222222222222222 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222 ceqb_22222222222332222222222222222222 (App Coq.setoid_ring.Ring_polynom.norm_subst C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 cdiv_222222222223322222222222222222222222222 n_22222222222332222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 cdiv_222222222223322222222222222222222222222 lpe_2222222222233222222222222222222222222222222) pe1_22222222222332222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.norm_subst C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 cdiv_222222222223322222222222222222222222222 n_22222222222332222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 cdiv_222222222223322222222222222222222222222 lpe_2222222222233222222222222222222222222222222) pe2_222222222223322222222222222222222222222222222)) true) (App (Lambda lemma_222222222223322222222222222222222222222222222222 (App req_222222222223322222222 (App Coq.setoid_ring.Ring_polynom.PEeval R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 C_2222222222233222222222222 phi_222222222223322222222222222222222 Cpow_22222222222332222222222222222222222 Cp_phi_222222222223322222222222222222222222 rpow_2222222222233222222222222222222222222 l_222222222223322222222222222222222222222222 pe1_22222222222332222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_22222222222332 rO_222222222223322 radd_22222222222332222 rmul_222222222223322222 C_2222222222233222222222222 phi_222222222223322222222222222222222 l_222222222223322222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.norm_subst C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 cdiv_222222222223322222222222222222222222222 n_22222222222332222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 cdiv_222222222223322222222222222222222222222 lpe_2222222222233222222222222222222222222222222) pe1_22222222222332222222222222222222222222222222))) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_22222222222332 req_222222222223322222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_22222222222332 req_222222222223322222222 Rsth_2222222222233222222222) (App Coq.setoid_ring.Ring_polynom.PEeval R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 C_2222222222233222222222222 phi_222222222223322222222222222222222 Cpow_22222222222332222222222222222222222 Cp_phi_222222222223322222222222222222222222 rpow_2222222222233222222222222222222222222 l_222222222223322222222222222222222222222222 pe1_22222222222332222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_22222222222332 rO_222222222223322 radd_22222222222332222 rmul_222222222223322222 C_2222222222233222222222222 phi_222222222223322222222222222222222 l_222222222223322222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.norm_subst C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 cdiv_222222222223322222222222222222222222222 n_22222222222332222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 cdiv_222222222223322222222222222222222222222 lpe_2222222222233222222222222222222222222222222) pe1_22222222222332222222222222222222222222222222)) lemma_222222222223322222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.PEeval R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 C_2222222222233222222222222 phi_222222222223322222222222222222222 Cpow_22222222222332222222222222222222222 Cp_phi_222222222223322222222222222222222222 rpow_2222222222233222222222222222222222222 l_222222222223322222222222222222222222222222 pe2_222222222223322222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.PEeval R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 C_2222222222233222222222222 phi_222222222223322222222222222222222 Cpow_22222222222332222222222222222222222 Cp_phi_222222222223322222222222222222222222 rpow_2222222222233222222222222222222222222 l_222222222223322222222222222222222222222222 pe2_222222222223322222222222222222222222222222222) (App Coq.Classes.Morphisms.eq_proper_proxy R_22222222222332 (App Coq.setoid_ring.Ring_polynom.PEeval R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 C_2222222222233222222222222 phi_222222222223322222222222222222222 Cpow_22222222222332222222222222222222222 Cp_phi_222222222223322222222222222222222222 rpow_2222222222233222222222222222222222222 l_222222222223322222222222222222222222222222 pe2_222222222223322222222222222222222222222222222)))) (App Coq.setoid_ring.Ring_polynom.norm_subst_ok R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 req_222222222223322222222 Rsth_2222222222233222222222 Reqe_22222222222332222222222 ARth_222222222223322222222222 C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 phi_222222222223322222222222222222222 CRmorph_2222222222233222222222222222222222 Cpow_22222222222332222222222222222222222 Cp_phi_222222222223322222222222222222222222 rpow_2222222222233222222222222222222222222 pow_th_22222222222332222222222222222222222222 cdiv_222222222223322222222222222222222222222 div_th_2222222222233222222222222222222222222222 n_22222222222332222222222222222222222222222 l_222222222223322222222222222222222222222222 lpe_2222222222233222222222222222222222222222222 pe1_22222222222332222222222222222222222222222222 H_2222222222233222222222222222222222222222222222) (App (Lambda lemma_222222222223322222222222222222222222222222222222 (App req_222222222223322222222 (App Coq.setoid_ring.Ring_polynom.PEeval R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 C_2222222222233222222222222 phi_222222222223322222222222222222222 Cpow_22222222222332222222222222222222222 Cp_phi_222222222223322222222222222222222222 rpow_2222222222233222222222222222222222222 l_222222222223322222222222222222222222222222 pe2_222222222223322222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_22222222222332 rO_222222222223322 radd_22222222222332222 rmul_222222222223322222 C_2222222222233222222222222 phi_222222222223322222222222222222222 l_222222222223322222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.norm_subst C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 cdiv_222222222223322222222222222222222222222 n_22222222222332222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 cdiv_222222222223322222222222222222222222222 lpe_2222222222233222222222222222222222222222222) pe2_222222222223322222222222222222222222222222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism R_22222222222332 req_222222222223322222222 (App Coq.Classes.RelationClasses.Equivalence_PER R_22222222222332 req_222222222223322222222 Rsth_2222222222233222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_22222222222332 rO_222222222223322 radd_22222222222332222 rmul_222222222223322222 C_2222222222233222222222222 phi_222222222223322222222222222222222 l_222222222223322222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.norm_subst C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 cdiv_222222222223322222222222222222222222222 n_22222222222332222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 cdiv_222222222223322222222222222222222222222 lpe_2222222222233222222222222222222222222222222) pe1_22222222222332222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.PEeval R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 C_2222222222233222222222222 phi_222222222223322222222222222222222 Cpow_22222222222332222222222222222222222 Cp_phi_222222222223322222222222222222222222 rpow_2222222222233222222222222222222222222 l_222222222223322222222222222222222222222222 pe2_222222222223322222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_22222222222332 rO_222222222223322 radd_22222222222332222 rmul_222222222223322222 C_2222222222233222222222222 phi_222222222223322222222222222222222 l_222222222223322222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.norm_subst C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 cdiv_222222222223322222222222222222222222222 n_22222222222332222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 cdiv_222222222223322222222222222222222222222 lpe_2222222222233222222222222222222222222222222) pe2_222222222223322222222222222222222222222222222)) lemma_222222222223322222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.norm_subst_ok R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 req_222222222223322222222 Rsth_2222222222233222222222 Reqe_22222222222332222222222 ARth_222222222223322222222222 C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 phi_222222222223322222222222222222222 CRmorph_2222222222233222222222222222222222 Cpow_22222222222332222222222222222222222 Cp_phi_222222222223322222222222222222222222 rpow_2222222222233222222222222222222222222 pow_th_22222222222332222222222222222222222222 cdiv_222222222223322222222222222222222222222 div_th_2222222222233222222222222222222222222222 n_22222222222332222222222222222222222222222 l_222222222223322222222222222222222222222222 lpe_2222222222233222222222222222222222222222222 pe2_222222222223322222222222222222222222222222222 H_2222222222233222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Peq_ok R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 req_222222222223322222222 Rsth_2222222222233222222222 Reqe_22222222222332222222222 C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 phi_222222222223322222222222222222222 CRmorph_2222222222233222222222222222222222 (App Coq.setoid_ring.Ring_polynom.norm_subst C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 cdiv_222222222223322222222222222222222222222 n_22222222222332222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 cdiv_222222222223322222222222222222222222222 lpe_2222222222233222222222222222222222222222222) pe1_22222222222332222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.norm_subst C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 cdiv_222222222223322222222222222222222222222 n_22222222222332222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 cdiv_222222222223322222222222222222222222222 lpe_2222222222233222222222222222222222222222222) pe2_222222222223322222222222222222222222222222222) H0_22222222222332222222222222222222222222222222222 l_222222222223322222222222222222222222222222)))))))))) REVERTcast (Prod n_22222222222332222222222222222222222222221 nat (Prod l_222222222223322222222222222222222222222211 (App list R_22222222222332) (Prod lpe_2222222222233222222222222222222222222222111 (App list (App prod (App PExpr C_2222222222233222222222222) (App PExpr C_2222222222233222222222222))) (Prod pe1_22222222222332222222222222222222222222221111 (App PExpr C_2222222222233222222222222) (Prod pe2_222222222223322222222222222222222222222211111 (App PExpr C_2222222222233222222222222) (Prod out_2222222222233222222222222222222222222222111111 (App Coq.setoid_ring.Ring_polynom.interp_PElist R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 req_222222222223322222222 C_2222222222233222222222222 phi_222222222223322222222222222222222 Cpow_22222222222332222222222222222222222 Cp_phi_222222222223322222222222222222222222 rpow_2222222222233222222222222222222222222 l_222222222223322222222222222222222222222211 lpe_2222222222233222222222222222222222222222111) (Prod out_22222222222332222222222222222222222222221111111 (App eq bool (LetIn lmp_22222222222332222222222222222222222222221111113 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 cdiv_222222222223322222222222222222222222222 lpe_2222222222233222222222222222222222222222111) (App list (App prod (App prod C_2222222222233222222222222 Mon) (App Pol C_2222222222233222222222222))) (App Coq.setoid_ring.Ring_polynom.Peq C_2222222222233222222222222 ceqb_22222222222332222222222222222222 (App Coq.setoid_ring.Ring_polynom.norm_subst C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 cdiv_222222222223322222222222222222222222222 n_22222222222332222222222222222222222222221 lmp_22222222222332222222222222222222222222221111113 pe1_22222222222332222222222222222222222222221111) (App Coq.setoid_ring.Ring_polynom.norm_subst C_2222222222233222222222222 cO_22222222222332222222222222 cI_222222222223322222222222222 cadd_2222222222233222222222222222 cmul_22222222222332222222222222222 csub_222222222223322222222222222222 copp_2222222222233222222222222222222 ceqb_22222222222332222222222222222222 cdiv_222222222223322222222222222222222222222 n_22222222222332222222222222222222222222221 lmp_22222222222332222222222222222222222222221111113 pe2_222222222223322222222222222222222222222211111))) true) (App req_222222222223322222222 (App Coq.setoid_ring.Ring_polynom.PEeval R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 C_2222222222233222222222222 phi_222222222223322222222222222222222 Cpow_22222222222332222222222222222222222 Cp_phi_222222222223322222222222222222222222 rpow_2222222222233222222222222222222222222 l_222222222223322222222222222222222222222211 pe1_22222222222332222222222222222222222222221111) (App Coq.setoid_ring.Ring_polynom.PEeval R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 C_2222222222233222222222222 phi_222222222223322222222222222222222 Cpow_22222222222332222222222222222222222 Cp_phi_222222222223322222222222222222222222 rpow_2222222222233222222222222222222222222 l_222222222223322222222222222222222222222211 pe2_222222222223322222222222222222222222222211111)))))))))))))))))))))))))))))))))))))) (Definition Coq.ZArith.BinIntDef.Z.sub (Lambda m_22222222222332 Z (Lambda n_222222222223322 Z (App Coq.ZArith.BinIntDef.Z.add m_22222222222332 (App Coq.ZArith.BinIntDef.Z.opp n_222222222223322))))) (Definition Coq.Classes.RelationClasses.eq_equivalence (Lambda A_222222222223322 (Sort Type) (App Build_Equivalence A_222222222223322 (App eq A_222222222223322) (App Coq.Classes.RelationClasses.eq_Reflexive A_222222222223322) (App Coq.Classes.RelationClasses.eq_Symmetric A_222222222223322) (App Coq.Classes.RelationClasses.eq_Transitive A_222222222223322)))) (Definition Coq.setoid_ring.Ring_theory.Eqsth (Lambda R_22222222222332 (Sort Type) (App Coq.Classes.RelationClasses.eq_equivalence R_22222222222332))) (Definition Coq.Classes.RelationClasses.eq_Transitive (Lambda A_222222222223322222222222 (Sort Type) (App Coq.Init.Logic.eq_trans A_222222222223322222222222))) (Definition Coq.Classes.Morphisms.Reflexive_partial_app_morphism (LetIn U_222222222223322222222223 (Sort Type) (Sort Type) (Lambda A_2222222222233222222222232 U_222222222223322222222223 (Lambda B_22222222222332222222222322 U_222222222223322222222223 (Lambda R_222222222223322222222223222 (App Coq.Relations.Relation_Definitions.relation A_2222222222233222222222232) (Lambda R'_2222222222233222222222232222 (App Coq.Relations.Relation_Definitions.relation B_22222222222332222222222322) (Lambda m_22222222222332222222222322222 (Prod out_22222222222332222222222322221 A_2222222222233222222222232 B_22222222222332222222222322) (Lambda H_222222222223322222222223222222 (App Coq.Classes.Morphisms.Proper (Prod out_222222222223322222222223222221 A_2222222222233222222222232 B_22222222222332222222222322) (App Coq.Classes.Morphisms.respectful A_2222222222233222222222232 B_22222222222332222222222322 R_222222222223322222222223222 R'_2222222222233222222222232222) m_22222222222332222222222322222) (Lambda x_2222222222233222222222232222222 A_2222222222233222222222232 (Lambda H0_22222222222332222222222322222222 (App Coq.Classes.Morphisms.ProperProxy A_2222222222233222222222232 R_222222222223322222222223222 x_2222222222233222222222232222222) (Cast (Cast (Cast (Cast (App H_222222222223322222222223222222 x_2222222222233222222222232222222 x_2222222222233222222222232222222 H0_22222222222332222222222322222222) REVERTcast (App R'_2222222222233222222222232222 (App m_22222222222332222222222322222 x_2222222222233222222222232222222) (App m_22222222222332222222222322222 x_2222222222233222222222232222222))) REVERTcast (App R'_2222222222233222222222232222 (App m_22222222222332222222222322222 x_2222222222233222222222232222222) (App m_22222222222332222222222322222 x_2222222222233222222222232222222))) REVERTcast (App Coq.Classes.Morphisms.Proper B_22222222222332222222222322 R'_2222222222233222222222232222 (App m_22222222222332222222222322222 x_2222222222233222222222232222222))) REVERTcast (App Coq.Classes.Morphisms.Proper B_22222222222332222222222322 R'_2222222222233222222222232222 (App m_22222222222332222222222322222 x_2222222222233222222222232222222))))))))))))) (Definition Coq.Classes.Morphisms.respectful (LetIn U_222222222223322222222223 (Sort Type) (Sort Type) (Lambda A_2222222222233222222222232 U_222222222223322222222223 (Lambda B_22222222222332222222222322 U_222222222223322222222223 (Lambda R_222222222223322222222223222 (App Coq.Relations.Relation_Definitions.relation A_2222222222233222222222232) (Lambda R'_2222222222233222222222232222 (App Coq.Relations.Relation_Definitions.relation B_22222222222332222222222322) (Lambda f_22222222222332222222222322222 (Prod x_22222222222332222222222322221 A_2222222222233222222222232 B_22222222222332222222222322) (Lambda g_222222222223322222222223222222 (Prod x_222222222223322222222223222221 A_2222222222233222222222232 B_22222222222332222222222322) (Prod x_2222222222233222222222232222221 A_2222222222233222222222232 (Prod y_22222222222332222222222322222211 A_2222222222233222222222232 (Prod out_222222222223322222222223222222111 (App R_222222222223322222222223222 x_2222222222233222222222232222221 y_22222222222332222222222322222211) (App R'_2222222222233222222222232222 (App f_22222222222332222222222322222 x_2222222222233222222222232222221) (App g_222222222223322222222223222222 y_22222222222332222222222322222211))))))))))))) (Definition Coq.Classes.Morphisms.reflexive_proper (LetIn U_222222222223322222222223 (Sort Type) (Sort Type) (Lambda A_2222222222233222222222232 U_222222222223322222222223 (Lambda R_22222222222332222222222322 (App Coq.Relations.Relation_Definitions.relation A_2222222222233222222222232) (Lambda H_222222222223322222222223222 (App Coq.Classes.RelationClasses.Reflexive A_2222222222233222222222232 R_22222222222332222222222322) (Lambda x_2222222222233222222222232222 A_2222222222233222222222232 (App (Lambda H0_22222222222332222222222322222 (App R_22222222222332222222222322 x_2222222222233222222222232222 x_2222222222233222222222232222) H0_22222222222332222222222322222) (App H_222222222223322222222223222 x_2222222222233222222222232222)))))))) (Definition Coq.Classes.Morphisms.reflexive_eq_dom_reflexive (LetIn U_222222222223322222222223 (Sort Type) (Sort Type) (Lambda A_2222222222233222222222232 U_222222222223322222222223 (Lambda B_22222222222332222222222322 U_222222222223322222222223 (Lambda R'_222222222223322222222223222 (App Coq.Relations.Relation_Definitions.relation B_22222222222332222222222322) (Lambda H_2222222222233222222222232222 (App Coq.Classes.RelationClasses.Reflexive B_22222222222332222222222322 R'_222222222223322222222223222) (Cast (Cast (Lambda x_22222222222332222222222322222 (Prod out_22222222222332222222222322221 A_2222222222233222222222232 B_22222222222332222222222322) (Cast (Lambda x0_222222222223322222222223222222 A_2222222222233222222222232 (Lambda y_2222222222233222222222232222222 A_2222222222233222222222232 (Lambda H0_22222222222332222222222322222222 (App eq A_2222222222233222222222232 x0_222222222223322222222223222222 y_2222222222233222222222232222222) (Cast (Cast (App Coq.Init.Logic.eq_ind_r A_2222222222233222222222232 y_2222222222233222222222232222222 (Lambda x0_222222222223322222222223222222222 A_2222222222233222222222232 (App R'_222222222223322222222223222 (App x_22222222222332222222222322222 x0_222222222223322222222223222222222) (App x_22222222222332222222222322222 y_2222222222233222222222232222222))) (App H_2222222222233222222222232222 (App x_22222222222332222222222322222 y_2222222222233222222222232222222)) x0_222222222223322222222223222222 H0_22222222222332222222222322222222) REVERTcast (App R'_222222222223322222222223222 (App x_22222222222332222222222322222 x0_222222222223322222222223222222) (App x_22222222222332222222222322222 y_2222222222233222222222232222222))) REVERTcast (App R'_222222222223322222222223222 (App x_22222222222332222222222322222 x0_222222222223322222222223222222) (App x_22222222222332222222222322222 y_2222222222233222222222232222222)))))) REVERTcast (App Coq.Classes.Morphisms.respectful A_2222222222233222222222232 B_22222222222332222222222322 (App eq A_2222222222233222222222232) R'_222222222223322222222223222 x_22222222222332222222222322222 x_22222222222332222222222322222))) REVERTcast (App Coq.Classes.RelationClasses.Reflexive (Prod out_22222222222332222222222322221 A_2222222222233222222222232 B_22222222222332222222222322) (App Coq.Classes.Morphisms.respectful A_2222222222233222222222232 B_22222222222332222222222322 (App eq A_2222222222233222222222232) R'_222222222223322222222223222))) REVERTcast (App Coq.Classes.RelationClasses.Reflexive (Prod out_22222222222332222222222322221 A_2222222222233222222222232 B_22222222222332222222222322) (App Coq.Classes.Morphisms.respectful A_2222222222233222222222232 B_22222222222332222222222322 (App eq A_2222222222233222222222232) R'_222222222223322222222223222))))))))) (Definition Coq.Classes.RelationClasses.eq_Reflexive (Lambda A_222222222223322222222222 (Sort Type) (App eq_refl A_222222222223322222222222))) (Definition Coq.Classes.Morphisms.Proper (LetIn U_222222222223322223 (Sort Type) (Sort Type) (Lambda A_2222222222233222232 U_222222222223322223 (Lambda R_22222222222332222322 (App Coq.Relations.Relation_Definitions.relation A_2222222222233222232) (Lambda m_222222222223322223222 A_2222222222233222232 (App R_22222222222332222322 m_222222222223322223222 m_222222222223322223222)))))) (Definition Coq.setoid_ring.Ring_theory.Eq_ext (Lambda R_22222222222332 (Sort Type) (Lambda radd_222222222223322 (Prod out_222222222223321 R_22222222222332 (Prod out_2222222222233211 R_22222222222332 R_22222222222332)) (Lambda rmul_2222222222233222 (Prod out_2222222222233221 R_22222222222332 (Prod out_22222222222332211 R_22222222222332 R_22222222222332)) (Lambda ropp_22222222222332222 (Prod out_22222222222332221 R_22222222222332 R_22222222222332) (App mk_reqe R_22222222222332 radd_222222222223322 rmul_2222222222233222 ropp_22222222222332222 (App eq R_22222222222332) (Cast (Cast (Lambda x_222222222223322222 R_22222222222332 (Lambda y_2222222222233222222 R_22222222222332 (Lambda H_22222222222332222222 (App eq R_22222222222332 x_222222222223322222 y_2222222222233222222) (Cast (Lambda x0_222222222223322222222 R_22222222222332 (Lambda y0_2222222222233222222222 R_22222222222332 (Lambda H0_22222222222332222222222 (App eq R_22222222222332 x0_222222222223322222222 y0_2222222222233222222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_22222222222332 (App eq R_22222222222332) (App Coq.Classes.RelationClasses.eq_Transitive R_22222222222332) (App radd_222222222223322 x_222222222223322222 x0_222222222223322222222) (App radd_222222222223322 x_222222222223322222 y0_2222222222233222222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism R_22222222222332 (Prod out_222222222223322222222221 R_22222222222332 R_22222222222332) (App eq R_22222222222332) (App Coq.Classes.Morphisms.respectful R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App eq R_22222222222332)) radd_222222222223322 (App Coq.Classes.Morphisms.reflexive_proper (Prod out_222222222223322222222221 R_22222222222332 (Prod out_2222222222233222222222211 R_22222222222332 R_22222222222332)) (App Coq.Classes.Morphisms.respectful R_22222222222332 (Prod out_222222222223322222222221 R_22222222222332 R_22222222222332) (App eq R_22222222222332) (App Coq.Classes.Morphisms.respectful R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App eq R_22222222222332))) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive R_22222222222332 (Prod out_222222222223322222222221 R_22222222222332 R_22222222222332) (App Coq.Classes.Morphisms.respectful R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App eq R_22222222222332)) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App Coq.Classes.RelationClasses.eq_Reflexive R_22222222222332))) radd_222222222223322) x_222222222223322222 (App Coq.Classes.Morphisms.eq_proper_proxy R_22222222222332 x_222222222223322222) x0_222222222223322222222 y0_2222222222233222222222 H0_22222222222332222222222) (App radd_222222222223322 y_2222222222233222222 y0_2222222222233222222222) (App radd_222222222223322 y_2222222222233222222 y0_2222222222233222222222) (App Coq.Classes.Morphisms.eq_proper_proxy R_22222222222332 (App radd_222222222223322 y_2222222222233222222 y0_2222222222233222222222)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_22222222222332 (App eq R_22222222222332) (App Coq.Classes.RelationClasses.eq_Transitive R_22222222222332) (App radd_222222222223322 x_222222222223322222 y0_2222222222233222222222) (App radd_222222222223322 y_2222222222233222222 y0_2222222222233222222222) (App Coq.Classes.Morphisms.reflexive_proper (Prod out_222222222223322222222221 R_22222222222332 (Prod out_2222222222233222222222211 R_22222222222332 R_22222222222332)) (App Coq.Classes.Morphisms.respectful R_22222222222332 (Prod out_222222222223322222222221 R_22222222222332 R_22222222222332) (App eq R_22222222222332) (App Coq.Classes.Morphisms.respectful R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App eq R_22222222222332))) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive R_22222222222332 (Prod out_222222222223322222222221 R_22222222222332 R_22222222222332) (App Coq.Classes.Morphisms.respectful R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App eq R_22222222222332)) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App Coq.Classes.RelationClasses.eq_Reflexive R_22222222222332))) radd_222222222223322 x_222222222223322222 y_2222222222233222222 H_22222222222332222222 y0_2222222222233222222222 y0_2222222222233222222222 (App Coq.Classes.Morphisms.eq_proper_proxy R_22222222222332 y0_2222222222233222222222)) (App radd_222222222223322 y_2222222222233222222 y0_2222222222233222222222) (App radd_222222222223322 y_2222222222233222222 y0_2222222222233222222222) (App Coq.Classes.Morphisms.eq_proper_proxy R_22222222222332 (App radd_222222222223322 y_2222222222233222222 y0_2222222222233222222222)) (App eq_refl R_22222222222332 (App radd_222222222223322 y_2222222222233222222 y0_2222222222233222222222))))))) REVERTcast (App Coq.Classes.Morphisms.respectful R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App eq R_22222222222332) (App radd_222222222223322 x_222222222223322222) (App radd_222222222223322 y_2222222222233222222)))))) REVERTcast (App Coq.Classes.Morphisms.respectful R_22222222222332 (Prod out_222222222223322221 R_22222222222332 R_22222222222332) (App eq R_22222222222332) (App Coq.Classes.Morphisms.respectful R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App eq R_22222222222332)) radd_222222222223322 radd_222222222223322)) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_222222222223322221 R_22222222222332 (Prod out_2222222222233222211 R_22222222222332 R_22222222222332)) (App Coq.Classes.Morphisms.respectful R_22222222222332 (Prod out_222222222223322221 R_22222222222332 R_22222222222332) (App eq R_22222222222332) (App Coq.Classes.Morphisms.respectful R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App eq R_22222222222332))) radd_222222222223322)) (Cast (Cast (Lambda x_222222222223322222 R_22222222222332 (Lambda y_2222222222233222222 R_22222222222332 (Lambda H_22222222222332222222 (App eq R_22222222222332 x_222222222223322222 y_2222222222233222222) (Cast (Lambda x0_222222222223322222222 R_22222222222332 (Lambda y0_2222222222233222222222 R_22222222222332 (Lambda H0_22222222222332222222222 (App eq R_22222222222332 x0_222222222223322222222 y0_2222222222233222222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_22222222222332 (App eq R_22222222222332) (App Coq.Classes.RelationClasses.eq_Transitive R_22222222222332) (App rmul_2222222222233222 x_222222222223322222 x0_222222222223322222222) (App rmul_2222222222233222 x_222222222223322222 y0_2222222222233222222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism R_22222222222332 (Prod out_222222222223322222222221 R_22222222222332 R_22222222222332) (App eq R_22222222222332) (App Coq.Classes.Morphisms.respectful R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App eq R_22222222222332)) rmul_2222222222233222 (App Coq.Classes.Morphisms.reflexive_proper (Prod out_222222222223322222222221 R_22222222222332 (Prod out_2222222222233222222222211 R_22222222222332 R_22222222222332)) (App Coq.Classes.Morphisms.respectful R_22222222222332 (Prod out_222222222223322222222221 R_22222222222332 R_22222222222332) (App eq R_22222222222332) (App Coq.Classes.Morphisms.respectful R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App eq R_22222222222332))) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive R_22222222222332 (Prod out_222222222223322222222221 R_22222222222332 R_22222222222332) (App Coq.Classes.Morphisms.respectful R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App eq R_22222222222332)) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App Coq.Classes.RelationClasses.eq_Reflexive R_22222222222332))) rmul_2222222222233222) x_222222222223322222 (App Coq.Classes.Morphisms.eq_proper_proxy R_22222222222332 x_222222222223322222) x0_222222222223322222222 y0_2222222222233222222222 H0_22222222222332222222222) (App rmul_2222222222233222 y_2222222222233222222 y0_2222222222233222222222) (App rmul_2222222222233222 y_2222222222233222222 y0_2222222222233222222222) (App Coq.Classes.Morphisms.eq_proper_proxy R_22222222222332 (App rmul_2222222222233222 y_2222222222233222222 y0_2222222222233222222222)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_22222222222332 (App eq R_22222222222332) (App Coq.Classes.RelationClasses.eq_Transitive R_22222222222332) (App rmul_2222222222233222 x_222222222223322222 y0_2222222222233222222222) (App rmul_2222222222233222 y_2222222222233222222 y0_2222222222233222222222) (App Coq.Classes.Morphisms.reflexive_proper (Prod out_222222222223322222222221 R_22222222222332 (Prod out_2222222222233222222222211 R_22222222222332 R_22222222222332)) (App Coq.Classes.Morphisms.respectful R_22222222222332 (Prod out_222222222223322222222221 R_22222222222332 R_22222222222332) (App eq R_22222222222332) (App Coq.Classes.Morphisms.respectful R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App eq R_22222222222332))) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive R_22222222222332 (Prod out_222222222223322222222221 R_22222222222332 R_22222222222332) (App Coq.Classes.Morphisms.respectful R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App eq R_22222222222332)) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App Coq.Classes.RelationClasses.eq_Reflexive R_22222222222332))) rmul_2222222222233222 x_222222222223322222 y_2222222222233222222 H_22222222222332222222 y0_2222222222233222222222 y0_2222222222233222222222 (App Coq.Classes.Morphisms.eq_proper_proxy R_22222222222332 y0_2222222222233222222222)) (App rmul_2222222222233222 y_2222222222233222222 y0_2222222222233222222222) (App rmul_2222222222233222 y_2222222222233222222 y0_2222222222233222222222) (App Coq.Classes.Morphisms.eq_proper_proxy R_22222222222332 (App rmul_2222222222233222 y_2222222222233222222 y0_2222222222233222222222)) (App eq_refl R_22222222222332 (App rmul_2222222222233222 y_2222222222233222222 y0_2222222222233222222222))))))) REVERTcast (App Coq.Classes.Morphisms.respectful R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App eq R_22222222222332) (App rmul_2222222222233222 x_222222222223322222) (App rmul_2222222222233222 y_2222222222233222222)))))) REVERTcast (App Coq.Classes.Morphisms.respectful R_22222222222332 (Prod out_222222222223322221 R_22222222222332 R_22222222222332) (App eq R_22222222222332) (App Coq.Classes.Morphisms.respectful R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App eq R_22222222222332)) rmul_2222222222233222 rmul_2222222222233222)) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_222222222223322221 R_22222222222332 (Prod out_2222222222233222211 R_22222222222332 R_22222222222332)) (App Coq.Classes.Morphisms.respectful R_22222222222332 (Prod out_222222222223322221 R_22222222222332 R_22222222222332) (App eq R_22222222222332) (App Coq.Classes.Morphisms.respectful R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App eq R_22222222222332))) rmul_2222222222233222)) (Cast (Cast (Lambda x_222222222223322222 R_22222222222332 (Lambda y_2222222222233222222 R_22222222222332 (Lambda H_22222222222332222222 (App eq R_22222222222332 x_222222222223322222 y_2222222222233222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_22222222222332 (App eq R_22222222222332) (App Coq.Classes.RelationClasses.eq_Transitive R_22222222222332) (App ropp_22222222222332222 x_222222222223322222) (App ropp_22222222222332222 y_2222222222233222222) (App Coq.Classes.Morphisms.reflexive_proper (Prod out_222222222223322222221 R_22222222222332 R_22222222222332) (App Coq.Classes.Morphisms.respectful R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App eq R_22222222222332)) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App Coq.Classes.RelationClasses.eq_Reflexive R_22222222222332)) ropp_22222222222332222 x_222222222223322222 y_2222222222233222222 H_22222222222332222222) (App ropp_22222222222332222 y_2222222222233222222) (App ropp_22222222222332222 y_2222222222233222222) (App Coq.Classes.Morphisms.eq_proper_proxy R_22222222222332 (App ropp_22222222222332222 y_2222222222233222222)) (App eq_refl R_22222222222332 (App ropp_22222222222332222 y_2222222222233222222)))))) REVERTcast (App Coq.Classes.Morphisms.respectful R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App eq R_22222222222332) ropp_22222222222332222 ropp_22222222222332222)) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_222222222223322221 R_22222222222332 R_22222222222332) (App Coq.Classes.Morphisms.respectful R_22222222222332 R_22222222222332 (App eq R_22222222222332) (App eq R_22222222222332)) ropp_22222222222332222)))))))) (Definition Coq.setoid_ring.Ring_theory.Radd_0_l (Lambda R_2222222222233222222222222 (Sort Type) (Lambda rO_22222222222332222222222222 R_2222222222233222222222222 (Lambda rI_222222222223322222222222222 R_2222222222233222222222222 (Lambda radd_2222222222233222222222222222 (Prod out_2222222222233222222222222221 R_2222222222233222222222222 (Prod out_22222222222332222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda rmul_22222222222332222222222222222 (Prod out_22222222222332222222222222221 R_2222222222233222222222222 (Prod out_222222222223322222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda rsub_222222222223322222222222222222 (Prod out_222222222223322222222222222221 R_2222222222233222222222222 (Prod out_2222222222233222222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda ropp_2222222222233222222222222222222 (Prod out_2222222222233222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) (Lambda req_22222222222332222222222222222222 (Prod out_22222222222332222222222222222221 R_2222222222233222222222222 (Prod out_222222222223322222222222222222211 R_2222222222233222222222222 (Sort Prop))) (Lambda r_222222222223322222222222222222222 (App ring_theory R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222) (Case 8 (Lambda r_2222222222233222222222222222222222 (App ring_theory R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222) (Prod x_22222222222332222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 x_22222222222332222222222222222222221) x_22222222222332222222222222222222221))) (CaseMatch r_222222222223322222222222222222222) (CaseBranches (Lambda Radd_0_l_2222222222233222222222222222222222 (Prod x_2222222222233222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 x_2222222222233222222222222222222221) x_2222222222233222222222222222222221)) (Lambda Radd_comm_22222222222332222222222222222222222 (Prod x_22222222222332222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_22222222222332222222222222222222221 y_222222222223322222222222222222222211) (App radd_2222222222233222222222222222 y_222222222223322222222222222222222211 x_22222222222332222222222222222222221)))) (Lambda Radd_assoc_222222222223322222222222222222222222 (Prod x_222222222223322222222222222222222221 R_2222222222233222222222222 (Prod y_2222222222233222222222222222222222211 R_2222222222233222222222222 (Prod z_22222222222332222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222221 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222211 z_22222222222332222222222222222222222111)) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222221 y_2222222222233222222222222222222222211) z_22222222222332222222222222222222222111))))) (Lambda Rmul_1_l_2222222222233222222222222222222222222 (Prod x_2222222222233222222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 rI_222222222223322222222222222 x_2222222222233222222222222222222222221) x_2222222222233222222222222222222222221)) (Lambda Rmul_comm_22222222222332222222222222222222222222 (Prod x_22222222222332222222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 x_22222222222332222222222222222222222221 y_222222222223322222222222222222222222211) (App rmul_22222222222332222222222222222 y_222222222223322222222222222222222222211 x_22222222222332222222222222222222222221)))) (Lambda Rmul_assoc_222222222223322222222222222222222222222 (Prod x_222222222223322222222222222222222222221 R_2222222222233222222222222 (Prod y_2222222222233222222222222222222222222211 R_2222222222233222222222222 (Prod z_22222222222332222222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222221 (App rmul_22222222222332222222222222222 y_2222222222233222222222222222222222222211 z_22222222222332222222222222222222222222111)) (App rmul_22222222222332222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222221 y_2222222222233222222222222222222222222211) z_22222222222332222222222222222222222222111))))) (Lambda Rdistr_l_2222222222233222222222222222222222222222 (Prod x_2222222222233222222222222222222222222221 R_2222222222233222222222222 (Prod y_22222222222332222222222222222222222222211 R_2222222222233222222222222 (Prod z_222222222223322222222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 x_2222222222233222222222222222222222222221 y_22222222222332222222222222222222222222211) z_222222222223322222222222222222222222222111) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 x_2222222222233222222222222222222222222221 z_222222222223322222222222222222222222222111) (App rmul_22222222222332222222222222222 y_22222222222332222222222222222222222222211 z_222222222223322222222222222222222222222111)))))) (Lambda Rsub_def_22222222222332222222222222222222222222222 (Prod x_22222222222332222222222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rsub_222222222223322222222222222222 x_22222222222332222222222222222222222222221 y_222222222223322222222222222222222222222211) (App radd_2222222222233222222222222222 x_22222222222332222222222222222222222222221 (App ropp_2222222222233222222222222222222 y_222222222223322222222222222222222222222211))))) (Lambda Ropp_def_222222222223322222222222222222222222222222 (Prod x_222222222223322222222222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222222221 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222222221)) rO_22222222222332222222222222)) Radd_0_l_2222222222233222222222222222222222))))))))))))))))))))) (Definition Coq.setoid_ring.Ring_theory.Radd_comm (Lambda R_2222222222233222222222222 (Sort Type) (Lambda rO_22222222222332222222222222 R_2222222222233222222222222 (Lambda rI_222222222223322222222222222 R_2222222222233222222222222 (Lambda radd_2222222222233222222222222222 (Prod out_2222222222233222222222222221 R_2222222222233222222222222 (Prod out_22222222222332222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda rmul_22222222222332222222222222222 (Prod out_22222222222332222222222222221 R_2222222222233222222222222 (Prod out_222222222223322222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda rsub_222222222223322222222222222222 (Prod out_222222222223322222222222222221 R_2222222222233222222222222 (Prod out_2222222222233222222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda ropp_2222222222233222222222222222222 (Prod out_2222222222233222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) (Lambda req_22222222222332222222222222222222 (Prod out_22222222222332222222222222222221 R_2222222222233222222222222 (Prod out_222222222223322222222222222222211 R_2222222222233222222222222 (Sort Prop))) (Lambda r_222222222223322222222222222222222 (App ring_theory R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222) (Case 8 (Lambda r_2222222222233222222222222222222222 (App ring_theory R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222) (Prod x_22222222222332222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_22222222222332222222222222222222221 y_222222222223322222222222222222222211) (App radd_2222222222233222222222222222 y_222222222223322222222222222222222211 x_22222222222332222222222222222222221))))) (CaseMatch r_222222222223322222222222222222222) (CaseBranches (Lambda Radd_0_l_2222222222233222222222222222222222 (Prod x_2222222222233222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 x_2222222222233222222222222222222221) x_2222222222233222222222222222222221)) (Lambda Radd_comm_22222222222332222222222222222222222 (Prod x_22222222222332222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_22222222222332222222222222222222221 y_222222222223322222222222222222222211) (App radd_2222222222233222222222222222 y_222222222223322222222222222222222211 x_22222222222332222222222222222222221)))) (Lambda Radd_assoc_222222222223322222222222222222222222 (Prod x_222222222223322222222222222222222221 R_2222222222233222222222222 (Prod y_2222222222233222222222222222222222211 R_2222222222233222222222222 (Prod z_22222222222332222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222221 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222211 z_22222222222332222222222222222222222111)) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222221 y_2222222222233222222222222222222222211) z_22222222222332222222222222222222222111))))) (Lambda Rmul_1_l_2222222222233222222222222222222222222 (Prod x_2222222222233222222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 rI_222222222223322222222222222 x_2222222222233222222222222222222222221) x_2222222222233222222222222222222222221)) (Lambda Rmul_comm_22222222222332222222222222222222222222 (Prod x_22222222222332222222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 x_22222222222332222222222222222222222221 y_222222222223322222222222222222222222211) (App rmul_22222222222332222222222222222 y_222222222223322222222222222222222222211 x_22222222222332222222222222222222222221)))) (Lambda Rmul_assoc_222222222223322222222222222222222222222 (Prod x_222222222223322222222222222222222222221 R_2222222222233222222222222 (Prod y_2222222222233222222222222222222222222211 R_2222222222233222222222222 (Prod z_22222222222332222222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222221 (App rmul_22222222222332222222222222222 y_2222222222233222222222222222222222222211 z_22222222222332222222222222222222222222111)) (App rmul_22222222222332222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222221 y_2222222222233222222222222222222222222211) z_22222222222332222222222222222222222222111))))) (Lambda Rdistr_l_2222222222233222222222222222222222222222 (Prod x_2222222222233222222222222222222222222221 R_2222222222233222222222222 (Prod y_22222222222332222222222222222222222222211 R_2222222222233222222222222 (Prod z_222222222223322222222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 x_2222222222233222222222222222222222222221 y_22222222222332222222222222222222222222211) z_222222222223322222222222222222222222222111) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 x_2222222222233222222222222222222222222221 z_222222222223322222222222222222222222222111) (App rmul_22222222222332222222222222222 y_22222222222332222222222222222222222222211 z_222222222223322222222222222222222222222111)))))) (Lambda Rsub_def_22222222222332222222222222222222222222222 (Prod x_22222222222332222222222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rsub_222222222223322222222222222222 x_22222222222332222222222222222222222222221 y_222222222223322222222222222222222222222211) (App radd_2222222222233222222222222222 x_22222222222332222222222222222222222222221 (App ropp_2222222222233222222222222222222 y_222222222223322222222222222222222222222211))))) (Lambda Ropp_def_222222222223322222222222222222222222222222 (Prod x_222222222223322222222222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222222221 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222222221)) rO_22222222222332222222222222)) Radd_comm_22222222222332222222222222222222222))))))))))))))))))))) (Definition Coq.setoid_ring.Ring_theory.Radd_assoc (Lambda R_2222222222233222222222222 (Sort Type) (Lambda rO_22222222222332222222222222 R_2222222222233222222222222 (Lambda rI_222222222223322222222222222 R_2222222222233222222222222 (Lambda radd_2222222222233222222222222222 (Prod out_2222222222233222222222222221 R_2222222222233222222222222 (Prod out_22222222222332222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda rmul_22222222222332222222222222222 (Prod out_22222222222332222222222222221 R_2222222222233222222222222 (Prod out_222222222223322222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda rsub_222222222223322222222222222222 (Prod out_222222222223322222222222222221 R_2222222222233222222222222 (Prod out_2222222222233222222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda ropp_2222222222233222222222222222222 (Prod out_2222222222233222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) (Lambda req_22222222222332222222222222222222 (Prod out_22222222222332222222222222222221 R_2222222222233222222222222 (Prod out_222222222223322222222222222222211 R_2222222222233222222222222 (Sort Prop))) (Lambda r_222222222223322222222222222222222 (App ring_theory R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222) (Case 8 (Lambda r_2222222222233222222222222222222222 (App ring_theory R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222) (Prod x_22222222222332222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222211 R_2222222222233222222222222 (Prod z_2222222222233222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_22222222222332222222222222222222221 (App radd_2222222222233222222222222222 y_222222222223322222222222222222222211 z_2222222222233222222222222222222222111)) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_22222222222332222222222222222222221 y_222222222223322222222222222222222211) z_2222222222233222222222222222222222111)))))) (CaseMatch r_222222222223322222222222222222222) (CaseBranches (Lambda Radd_0_l_2222222222233222222222222222222222 (Prod x_2222222222233222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 x_2222222222233222222222222222222221) x_2222222222233222222222222222222221)) (Lambda Radd_comm_22222222222332222222222222222222222 (Prod x_22222222222332222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_22222222222332222222222222222222221 y_222222222223322222222222222222222211) (App radd_2222222222233222222222222222 y_222222222223322222222222222222222211 x_22222222222332222222222222222222221)))) (Lambda Radd_assoc_222222222223322222222222222222222222 (Prod x_222222222223322222222222222222222221 R_2222222222233222222222222 (Prod y_2222222222233222222222222222222222211 R_2222222222233222222222222 (Prod z_22222222222332222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222221 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222211 z_22222222222332222222222222222222222111)) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222221 y_2222222222233222222222222222222222211) z_22222222222332222222222222222222222111))))) (Lambda Rmul_1_l_2222222222233222222222222222222222222 (Prod x_2222222222233222222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 rI_222222222223322222222222222 x_2222222222233222222222222222222222221) x_2222222222233222222222222222222222221)) (Lambda Rmul_comm_22222222222332222222222222222222222222 (Prod x_22222222222332222222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 x_22222222222332222222222222222222222221 y_222222222223322222222222222222222222211) (App rmul_22222222222332222222222222222 y_222222222223322222222222222222222222211 x_22222222222332222222222222222222222221)))) (Lambda Rmul_assoc_222222222223322222222222222222222222222 (Prod x_222222222223322222222222222222222222221 R_2222222222233222222222222 (Prod y_2222222222233222222222222222222222222211 R_2222222222233222222222222 (Prod z_22222222222332222222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222221 (App rmul_22222222222332222222222222222 y_2222222222233222222222222222222222222211 z_22222222222332222222222222222222222222111)) (App rmul_22222222222332222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222221 y_2222222222233222222222222222222222222211) z_22222222222332222222222222222222222222111))))) (Lambda Rdistr_l_2222222222233222222222222222222222222222 (Prod x_2222222222233222222222222222222222222221 R_2222222222233222222222222 (Prod y_22222222222332222222222222222222222222211 R_2222222222233222222222222 (Prod z_222222222223322222222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 x_2222222222233222222222222222222222222221 y_22222222222332222222222222222222222222211) z_222222222223322222222222222222222222222111) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 x_2222222222233222222222222222222222222221 z_222222222223322222222222222222222222222111) (App rmul_22222222222332222222222222222 y_22222222222332222222222222222222222222211 z_222222222223322222222222222222222222222111)))))) (Lambda Rsub_def_22222222222332222222222222222222222222222 (Prod x_22222222222332222222222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rsub_222222222223322222222222222222 x_22222222222332222222222222222222222222221 y_222222222223322222222222222222222222222211) (App radd_2222222222233222222222222222 x_22222222222332222222222222222222222222221 (App ropp_2222222222233222222222222222222 y_222222222223322222222222222222222222222211))))) (Lambda Ropp_def_222222222223322222222222222222222222222222 (Prod x_222222222223322222222222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222222221 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222222221)) rO_22222222222332222222222222)) Radd_assoc_222222222223322222222222222222222222))))))))))))))))))))) (Definition Coq.setoid_ring.Ring_theory.Rmul_1_l (Lambda R_2222222222233222222222222 (Sort Type) (Lambda rO_22222222222332222222222222 R_2222222222233222222222222 (Lambda rI_222222222223322222222222222 R_2222222222233222222222222 (Lambda radd_2222222222233222222222222222 (Prod out_2222222222233222222222222221 R_2222222222233222222222222 (Prod out_22222222222332222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda rmul_22222222222332222222222222222 (Prod out_22222222222332222222222222221 R_2222222222233222222222222 (Prod out_222222222223322222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda rsub_222222222223322222222222222222 (Prod out_222222222223322222222222222221 R_2222222222233222222222222 (Prod out_2222222222233222222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda ropp_2222222222233222222222222222222 (Prod out_2222222222233222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) (Lambda req_22222222222332222222222222222222 (Prod out_22222222222332222222222222222221 R_2222222222233222222222222 (Prod out_222222222223322222222222222222211 R_2222222222233222222222222 (Sort Prop))) (Lambda r_222222222223322222222222222222222 (App ring_theory R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222) (Case 8 (Lambda r_2222222222233222222222222222222222 (App ring_theory R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222) (Prod x_22222222222332222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 rI_222222222223322222222222222 x_22222222222332222222222222222222221) x_22222222222332222222222222222222221))) (CaseMatch r_222222222223322222222222222222222) (CaseBranches (Lambda Radd_0_l_2222222222233222222222222222222222 (Prod x_2222222222233222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 x_2222222222233222222222222222222221) x_2222222222233222222222222222222221)) (Lambda Radd_comm_22222222222332222222222222222222222 (Prod x_22222222222332222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_22222222222332222222222222222222221 y_222222222223322222222222222222222211) (App radd_2222222222233222222222222222 y_222222222223322222222222222222222211 x_22222222222332222222222222222222221)))) (Lambda Radd_assoc_222222222223322222222222222222222222 (Prod x_222222222223322222222222222222222221 R_2222222222233222222222222 (Prod y_2222222222233222222222222222222222211 R_2222222222233222222222222 (Prod z_22222222222332222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222221 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222211 z_22222222222332222222222222222222222111)) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222221 y_2222222222233222222222222222222222211) z_22222222222332222222222222222222222111))))) (Lambda Rmul_1_l_2222222222233222222222222222222222222 (Prod x_2222222222233222222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 rI_222222222223322222222222222 x_2222222222233222222222222222222222221) x_2222222222233222222222222222222222221)) (Lambda Rmul_comm_22222222222332222222222222222222222222 (Prod x_22222222222332222222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 x_22222222222332222222222222222222222221 y_222222222223322222222222222222222222211) (App rmul_22222222222332222222222222222 y_222222222223322222222222222222222222211 x_22222222222332222222222222222222222221)))) (Lambda Rmul_assoc_222222222223322222222222222222222222222 (Prod x_222222222223322222222222222222222222221 R_2222222222233222222222222 (Prod y_2222222222233222222222222222222222222211 R_2222222222233222222222222 (Prod z_22222222222332222222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222221 (App rmul_22222222222332222222222222222 y_2222222222233222222222222222222222222211 z_22222222222332222222222222222222222222111)) (App rmul_22222222222332222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222221 y_2222222222233222222222222222222222222211) z_22222222222332222222222222222222222222111))))) (Lambda Rdistr_l_2222222222233222222222222222222222222222 (Prod x_2222222222233222222222222222222222222221 R_2222222222233222222222222 (Prod y_22222222222332222222222222222222222222211 R_2222222222233222222222222 (Prod z_222222222223322222222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 x_2222222222233222222222222222222222222221 y_22222222222332222222222222222222222222211) z_222222222223322222222222222222222222222111) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 x_2222222222233222222222222222222222222221 z_222222222223322222222222222222222222222111) (App rmul_22222222222332222222222222222 y_22222222222332222222222222222222222222211 z_222222222223322222222222222222222222222111)))))) (Lambda Rsub_def_22222222222332222222222222222222222222222 (Prod x_22222222222332222222222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rsub_222222222223322222222222222222 x_22222222222332222222222222222222222222221 y_222222222223322222222222222222222222222211) (App radd_2222222222233222222222222222 x_22222222222332222222222222222222222222221 (App ropp_2222222222233222222222222222222 y_222222222223322222222222222222222222222211))))) (Lambda Ropp_def_222222222223322222222222222222222222222222 (Prod x_222222222223322222222222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222222221 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222222221)) rO_22222222222332222222222222)) Rmul_1_l_2222222222233222222222222222222222222))))))))))))))))))))) (Definition Coq.setoid_ring.Ring_theory.Rmul_0_l (Lambda R_2222222222233222222222222 (Sort Type) (Lambda rO_22222222222332222222222222 R_2222222222233222222222222 (Lambda rI_222222222223322222222222222 R_2222222222233222222222222 (Lambda radd_2222222222233222222222222222 (Prod out_2222222222233222222222222221 R_2222222222233222222222222 (Prod out_22222222222332222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda rmul_22222222222332222222222222222 (Prod out_22222222222332222222222222221 R_2222222222233222222222222 (Prod out_222222222223322222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda rsub_222222222223322222222222222222 (Prod out_222222222223322222222222222221 R_2222222222233222222222222 (Prod out_2222222222233222222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda ropp_2222222222233222222222222222222 (Prod out_2222222222233222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) (Lambda req_22222222222332222222222222222222 (Prod out_22222222222332222222222222222221 R_2222222222233222222222222 (Prod out_222222222223322222222222222222211 R_2222222222233222222222222 (Sort Prop))) (Lambda Rsth_222222222223322222222222222222222 (App Equivalence R_2222222222233222222222222 req_22222222222332222222222222222222) (Lambda Reqe_2222222222233222222222222222222222 (App ring_eq_ext R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222) (Lambda Rth_22222222222332222222222222222222222 (App ring_theory R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222) (Lambda x_222222222223322222222222222222222222 R_2222222222233222222222222 (LetIn H_2222222222233222222222222222222222223 (Cast (App (Lambda lemma_2222222222233222222222222222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222) x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) (App rmul_22222222222332222222222222222 rI_222222222223322222222222222 x_222222222223322222222222222222222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_PER R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) (App rmul_22222222222332222222222222222 rI_222222222223322222222222222 x_222222222223322222222222222222222222)) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222) x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) (App rmul_22222222222332222222222222222 rI_222222222223322222222222222 x_222222222223322222222222222222222222)) lemma_2222222222233222222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222))))) (App Coq.setoid_ring.Ring_theory.Rdistr_l R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 x_222222222223322222222222222222222222) (App (Lambda lemma_2222222222233222222222222222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 rI_222222222223322222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_PER R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) (App rmul_22222222222332222222222222222 rI_222222222223322222222222222 x_222222222223322222222222222222222222)) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222 (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) (App rmul_22222222222332222222222222222 rI_222222222223322222222222222 x_222222222223322222222222222222222222)) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism R_2222222222233222222222222 (Prod out_22222222222332222222222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) req_22222222222332222222222222222222 (App Coq.Classes.Morphisms.respectful R_2222222222233222222222222 R_2222222222233222222222222 req_22222222222332222222222222222222 req_22222222222332222222222222222222) radd_2222222222233222222222222222 (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222) (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222)) (App rmul_22222222222332222222222222222 rI_222222222223322222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222 lemma_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222))))) (App Coq.setoid_ring.Ring_theory.Rmul_1_l R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 x_222222222223322222222222222222222222) (App (Lambda lemma_2222222222233222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_PER R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222))) (App Coq.Classes.RelationClasses.symmetry R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Symmetric R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) lemma_2222222222233222222222222222222222222))) (App Coq.setoid_ring.Ring_theory.Radd_assoc R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App (Lambda lemma_2222222222233222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) rO_22222222222332222222222222) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_PER R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222))) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) rO_22222222222332222222222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism R_2222222222233222222222222 (Prod out_22222222222332222222222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) req_22222222222332222222222222222222 (App Coq.Classes.Morphisms.respectful R_2222222222233222222222222 R_2222222222233222222222222 req_22222222222332222222222222222222 req_22222222222332222222222222222222) radd_2222222222233222222222222222 (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222) (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222)) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) rO_22222222222332222222222222 lemma_2222222222233222222222222222222222222))) (App Coq.setoid_ring.Ring_theory.Ropp_def R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 x_222222222223322222222222222222222222) (App (Lambda lemma_2222222222233222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) rO_22222222222332222222222222) (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_PER R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) rO_22222222222332222222222222) (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222)) lemma_2222222222233222222222222222222222222)) (App Coq.setoid_ring.Ring_theory.Radd_comm R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) rO_22222222222332222222222222) (App (Lambda lemma_2222222222233222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222)) (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_PER R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222)) (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) lemma_2222222222233222222222222222222222222)) (App Coq.setoid_ring.Ring_theory.Radd_0_l R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222)) (App Coq.Classes.RelationClasses.reflexivity R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222)))))))) REVERTcast (App Coq.Classes.SetoidTactics.default_relation R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.SetoidTactics.equivalence_default R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)))) (App Coq.Classes.SetoidTactics.default_relation R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.SetoidTactics.equivalence_default R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222))) (App (Cast (Lambda Heq_22222222222332222222222222222222222232 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222))) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) Heq_22222222222332222222222222222222222232 rO_22222222222332222222222222 rO_22222222222332222222222222 (App Coq.Classes.Morphisms.eq_proper_proxy R_2222222222233222222222222 rO_22222222222332222222222222) (App (Lambda lemma_222222222223322222222222222222222222322 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222) rI_222222222223322222222222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 rI_222222222223322222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222) x_222222222223322222222222222222222222) (App rmul_22222222222332222222222222222 rI_222222222223322222222222222 x_222222222223322222222222222222222222) (App Coq.setoid_ring.Ring_theory.rmul_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222) rI_222222222223322222222222222 lemma_222222222223322222222222222222222222322 x_222222222223322222222222222222222222 x_222222222223322222222222222222222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) x_222222222223322222222222222222222222)) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222))) rO_22222222222332222222222222 rO_22222222222332222222222222 (App Coq.Classes.Morphisms.eq_proper_proxy R_2222222222233222222222222 rO_22222222222332222222222222))) (App Coq.setoid_ring.Ring_theory.Radd_0_l R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 rI_222222222223322222222222222) (App (Lambda lemma_222222222223322222222222222222222222322 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 rI_222222222223322222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 rI_222222222223322222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222 (App rmul_22222222222332222222222222222 rI_222222222223322222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222 lemma_222222222223322222222222222222222222322 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222))) rO_22222222222332222222222222 rO_22222222222332222222222222 (App Coq.Classes.Morphisms.eq_proper_proxy R_2222222222233222222222222 rO_22222222222332222222222222))) (App Coq.setoid_ring.Ring_theory.Rmul_1_l R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 x_222222222223322222222222222222222222) (App (Lambda lemma_222222222223322222222222222222222222322 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) rO_22222222222332222222222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) rO_22222222222332222222222222 lemma_222222222223322222222222222222222222322 rO_22222222222332222222222222 rO_22222222222332222222222222 (App Coq.Classes.Morphisms.eq_proper_proxy R_2222222222233222222222222 rO_22222222222332222222222222))) (App Coq.setoid_ring.Ring_theory.Ropp_def R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 x_222222222223322222222222222222222222) (App Coq.Classes.RelationClasses.reflexivity R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) rO_22222222222332222222222222)))))) REVERTcast (Prod out_22222222222332222222222222222222222231 (App Coq.Classes.SetoidTactics.default_relation R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.SetoidTactics.equivalence_default R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222))) (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 x_222222222223322222222222222222222222) rO_22222222222332222222222222))) H_2222222222233222222222222222222222223))))))))))))))) (Definition Coq.setoid_ring.Ring_theory.Rmul_comm (Lambda R_2222222222233222222222222 (Sort Type) (Lambda rO_22222222222332222222222222 R_2222222222233222222222222 (Lambda rI_222222222223322222222222222 R_2222222222233222222222222 (Lambda radd_2222222222233222222222222222 (Prod out_2222222222233222222222222221 R_2222222222233222222222222 (Prod out_22222222222332222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda rmul_22222222222332222222222222222 (Prod out_22222222222332222222222222221 R_2222222222233222222222222 (Prod out_222222222223322222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda rsub_222222222223322222222222222222 (Prod out_222222222223322222222222222221 R_2222222222233222222222222 (Prod out_2222222222233222222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda ropp_2222222222233222222222222222222 (Prod out_2222222222233222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) (Lambda req_22222222222332222222222222222222 (Prod out_22222222222332222222222222222221 R_2222222222233222222222222 (Prod out_222222222223322222222222222222211 R_2222222222233222222222222 (Sort Prop))) (Lambda r_222222222223322222222222222222222 (App ring_theory R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222) (Case 8 (Lambda r_2222222222233222222222222222222222 (App ring_theory R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222) (Prod x_22222222222332222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 x_22222222222332222222222222222222221 y_222222222223322222222222222222222211) (App rmul_22222222222332222222222222222 y_222222222223322222222222222222222211 x_22222222222332222222222222222222221))))) (CaseMatch r_222222222223322222222222222222222) (CaseBranches (Lambda Radd_0_l_2222222222233222222222222222222222 (Prod x_2222222222233222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 x_2222222222233222222222222222222221) x_2222222222233222222222222222222221)) (Lambda Radd_comm_22222222222332222222222222222222222 (Prod x_22222222222332222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_22222222222332222222222222222222221 y_222222222223322222222222222222222211) (App radd_2222222222233222222222222222 y_222222222223322222222222222222222211 x_22222222222332222222222222222222221)))) (Lambda Radd_assoc_222222222223322222222222222222222222 (Prod x_222222222223322222222222222222222221 R_2222222222233222222222222 (Prod y_2222222222233222222222222222222222211 R_2222222222233222222222222 (Prod z_22222222222332222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222221 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222211 z_22222222222332222222222222222222222111)) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222221 y_2222222222233222222222222222222222211) z_22222222222332222222222222222222222111))))) (Lambda Rmul_1_l_2222222222233222222222222222222222222 (Prod x_2222222222233222222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 rI_222222222223322222222222222 x_2222222222233222222222222222222222221) x_2222222222233222222222222222222222221)) (Lambda Rmul_comm_22222222222332222222222222222222222222 (Prod x_22222222222332222222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 x_22222222222332222222222222222222222221 y_222222222223322222222222222222222222211) (App rmul_22222222222332222222222222222 y_222222222223322222222222222222222222211 x_22222222222332222222222222222222222221)))) (Lambda Rmul_assoc_222222222223322222222222222222222222222 (Prod x_222222222223322222222222222222222222221 R_2222222222233222222222222 (Prod y_2222222222233222222222222222222222222211 R_2222222222233222222222222 (Prod z_22222222222332222222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222221 (App rmul_22222222222332222222222222222 y_2222222222233222222222222222222222222211 z_22222222222332222222222222222222222222111)) (App rmul_22222222222332222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222221 y_2222222222233222222222222222222222222211) z_22222222222332222222222222222222222222111))))) (Lambda Rdistr_l_2222222222233222222222222222222222222222 (Prod x_2222222222233222222222222222222222222221 R_2222222222233222222222222 (Prod y_22222222222332222222222222222222222222211 R_2222222222233222222222222 (Prod z_222222222223322222222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 x_2222222222233222222222222222222222222221 y_22222222222332222222222222222222222222211) z_222222222223322222222222222222222222222111) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 x_2222222222233222222222222222222222222221 z_222222222223322222222222222222222222222111) (App rmul_22222222222332222222222222222 y_22222222222332222222222222222222222222211 z_222222222223322222222222222222222222222111)))))) (Lambda Rsub_def_22222222222332222222222222222222222222222 (Prod x_22222222222332222222222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rsub_222222222223322222222222222222 x_22222222222332222222222222222222222222221 y_222222222223322222222222222222222222222211) (App radd_2222222222233222222222222222 x_22222222222332222222222222222222222222221 (App ropp_2222222222233222222222222222222 y_222222222223322222222222222222222222222211))))) (Lambda Ropp_def_222222222223322222222222222222222222222222 (Prod x_222222222223322222222222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222222221 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222222221)) rO_22222222222332222222222222)) Rmul_comm_22222222222332222222222222222222222222))))))))))))))))))))) (Definition Coq.setoid_ring.Ring_theory.Rmul_assoc (Lambda R_2222222222233222222222222 (Sort Type) (Lambda rO_22222222222332222222222222 R_2222222222233222222222222 (Lambda rI_222222222223322222222222222 R_2222222222233222222222222 (Lambda radd_2222222222233222222222222222 (Prod out_2222222222233222222222222221 R_2222222222233222222222222 (Prod out_22222222222332222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda rmul_22222222222332222222222222222 (Prod out_22222222222332222222222222221 R_2222222222233222222222222 (Prod out_222222222223322222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda rsub_222222222223322222222222222222 (Prod out_222222222223322222222222222221 R_2222222222233222222222222 (Prod out_2222222222233222222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda ropp_2222222222233222222222222222222 (Prod out_2222222222233222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) (Lambda req_22222222222332222222222222222222 (Prod out_22222222222332222222222222222221 R_2222222222233222222222222 (Prod out_222222222223322222222222222222211 R_2222222222233222222222222 (Sort Prop))) (Lambda r_222222222223322222222222222222222 (App ring_theory R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222) (Case 8 (Lambda r_2222222222233222222222222222222222 (App ring_theory R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222) (Prod x_22222222222332222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222211 R_2222222222233222222222222 (Prod z_2222222222233222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 x_22222222222332222222222222222222221 (App rmul_22222222222332222222222222222 y_222222222223322222222222222222222211 z_2222222222233222222222222222222222111)) (App rmul_22222222222332222222222222222 (App rmul_22222222222332222222222222222 x_22222222222332222222222222222222221 y_222222222223322222222222222222222211) z_2222222222233222222222222222222222111)))))) (CaseMatch r_222222222223322222222222222222222) (CaseBranches (Lambda Radd_0_l_2222222222233222222222222222222222 (Prod x_2222222222233222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 x_2222222222233222222222222222222221) x_2222222222233222222222222222222221)) (Lambda Radd_comm_22222222222332222222222222222222222 (Prod x_22222222222332222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_22222222222332222222222222222222221 y_222222222223322222222222222222222211) (App radd_2222222222233222222222222222 y_222222222223322222222222222222222211 x_22222222222332222222222222222222221)))) (Lambda Radd_assoc_222222222223322222222222222222222222 (Prod x_222222222223322222222222222222222221 R_2222222222233222222222222 (Prod y_2222222222233222222222222222222222211 R_2222222222233222222222222 (Prod z_22222222222332222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222221 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222211 z_22222222222332222222222222222222222111)) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222221 y_2222222222233222222222222222222222211) z_22222222222332222222222222222222222111))))) (Lambda Rmul_1_l_2222222222233222222222222222222222222 (Prod x_2222222222233222222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 rI_222222222223322222222222222 x_2222222222233222222222222222222222221) x_2222222222233222222222222222222222221)) (Lambda Rmul_comm_22222222222332222222222222222222222222 (Prod x_22222222222332222222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 x_22222222222332222222222222222222222221 y_222222222223322222222222222222222222211) (App rmul_22222222222332222222222222222 y_222222222223322222222222222222222222211 x_22222222222332222222222222222222222221)))) (Lambda Rmul_assoc_222222222223322222222222222222222222222 (Prod x_222222222223322222222222222222222222221 R_2222222222233222222222222 (Prod y_2222222222233222222222222222222222222211 R_2222222222233222222222222 (Prod z_22222222222332222222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222221 (App rmul_22222222222332222222222222222 y_2222222222233222222222222222222222222211 z_22222222222332222222222222222222222222111)) (App rmul_22222222222332222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222221 y_2222222222233222222222222222222222222211) z_22222222222332222222222222222222222222111))))) (Lambda Rdistr_l_2222222222233222222222222222222222222222 (Prod x_2222222222233222222222222222222222222221 R_2222222222233222222222222 (Prod y_22222222222332222222222222222222222222211 R_2222222222233222222222222 (Prod z_222222222223322222222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 x_2222222222233222222222222222222222222221 y_22222222222332222222222222222222222222211) z_222222222223322222222222222222222222222111) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 x_2222222222233222222222222222222222222221 z_222222222223322222222222222222222222222111) (App rmul_22222222222332222222222222222 y_22222222222332222222222222222222222222211 z_222222222223322222222222222222222222222111)))))) (Lambda Rsub_def_22222222222332222222222222222222222222222 (Prod x_22222222222332222222222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rsub_222222222223322222222222222222 x_22222222222332222222222222222222222222221 y_222222222223322222222222222222222222222211) (App radd_2222222222233222222222222222 x_22222222222332222222222222222222222222221 (App ropp_2222222222233222222222222222222 y_222222222223322222222222222222222222222211))))) (Lambda Ropp_def_222222222223322222222222222222222222222222 (Prod x_222222222223322222222222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222222221 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222222221)) rO_22222222222332222222222222)) Rmul_assoc_222222222223322222222222222222222222222))))))))))))))))))))) (Definition Coq.setoid_ring.Ring_theory.Rdistr_l (Lambda R_2222222222233222222222222 (Sort Type) (Lambda rO_22222222222332222222222222 R_2222222222233222222222222 (Lambda rI_222222222223322222222222222 R_2222222222233222222222222 (Lambda radd_2222222222233222222222222222 (Prod out_2222222222233222222222222221 R_2222222222233222222222222 (Prod out_22222222222332222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda rmul_22222222222332222222222222222 (Prod out_22222222222332222222222222221 R_2222222222233222222222222 (Prod out_222222222223322222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda rsub_222222222223322222222222222222 (Prod out_222222222223322222222222222221 R_2222222222233222222222222 (Prod out_2222222222233222222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda ropp_2222222222233222222222222222222 (Prod out_2222222222233222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) (Lambda req_22222222222332222222222222222222 (Prod out_22222222222332222222222222222221 R_2222222222233222222222222 (Prod out_222222222223322222222222222222211 R_2222222222233222222222222 (Sort Prop))) (Lambda r_222222222223322222222222222222222 (App ring_theory R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222) (Case 8 (Lambda r_2222222222233222222222222222222222 (App ring_theory R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222) (Prod x_22222222222332222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222211 R_2222222222233222222222222 (Prod z_2222222222233222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 x_22222222222332222222222222222222221 y_222222222223322222222222222222222211) z_2222222222233222222222222222222222111) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 x_22222222222332222222222222222222221 z_2222222222233222222222222222222222111) (App rmul_22222222222332222222222222222 y_222222222223322222222222222222222211 z_2222222222233222222222222222222222111))))))) (CaseMatch r_222222222223322222222222222222222) (CaseBranches (Lambda Radd_0_l_2222222222233222222222222222222222 (Prod x_2222222222233222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 x_2222222222233222222222222222222221) x_2222222222233222222222222222222221)) (Lambda Radd_comm_22222222222332222222222222222222222 (Prod x_22222222222332222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_22222222222332222222222222222222221 y_222222222223322222222222222222222211) (App radd_2222222222233222222222222222 y_222222222223322222222222222222222211 x_22222222222332222222222222222222221)))) (Lambda Radd_assoc_222222222223322222222222222222222222 (Prod x_222222222223322222222222222222222221 R_2222222222233222222222222 (Prod y_2222222222233222222222222222222222211 R_2222222222233222222222222 (Prod z_22222222222332222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222221 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222211 z_22222222222332222222222222222222222111)) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222221 y_2222222222233222222222222222222222211) z_22222222222332222222222222222222222111))))) (Lambda Rmul_1_l_2222222222233222222222222222222222222 (Prod x_2222222222233222222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 rI_222222222223322222222222222 x_2222222222233222222222222222222222221) x_2222222222233222222222222222222222221)) (Lambda Rmul_comm_22222222222332222222222222222222222222 (Prod x_22222222222332222222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 x_22222222222332222222222222222222222221 y_222222222223322222222222222222222222211) (App rmul_22222222222332222222222222222 y_222222222223322222222222222222222222211 x_22222222222332222222222222222222222221)))) (Lambda Rmul_assoc_222222222223322222222222222222222222222 (Prod x_222222222223322222222222222222222222221 R_2222222222233222222222222 (Prod y_2222222222233222222222222222222222222211 R_2222222222233222222222222 (Prod z_22222222222332222222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222221 (App rmul_22222222222332222222222222222 y_2222222222233222222222222222222222222211 z_22222222222332222222222222222222222222111)) (App rmul_22222222222332222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222221 y_2222222222233222222222222222222222222211) z_22222222222332222222222222222222222222111))))) (Lambda Rdistr_l_2222222222233222222222222222222222222222 (Prod x_2222222222233222222222222222222222222221 R_2222222222233222222222222 (Prod y_22222222222332222222222222222222222222211 R_2222222222233222222222222 (Prod z_222222222223322222222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 x_2222222222233222222222222222222222222221 y_22222222222332222222222222222222222222211) z_222222222223322222222222222222222222222111) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 x_2222222222233222222222222222222222222221 z_222222222223322222222222222222222222222111) (App rmul_22222222222332222222222222222 y_22222222222332222222222222222222222222211 z_222222222223322222222222222222222222222111)))))) (Lambda Rsub_def_22222222222332222222222222222222222222222 (Prod x_22222222222332222222222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rsub_222222222223322222222222222222 x_22222222222332222222222222222222222222221 y_222222222223322222222222222222222222222211) (App radd_2222222222233222222222222222 x_22222222222332222222222222222222222222221 (App ropp_2222222222233222222222222222222 y_222222222223322222222222222222222222222211))))) (Lambda Ropp_def_222222222223322222222222222222222222222222 (Prod x_222222222223322222222222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222222221 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222222221)) rO_22222222222332222222222222)) Rdistr_l_2222222222233222222222222222222222222222))))))))))))))))))))) (Definition Coq.setoid_ring.Ring_theory.Ropp_mul_l (Lambda R_2222222222233222222222222 (Sort Type) (Lambda rO_22222222222332222222222222 R_2222222222233222222222222 (Lambda rI_222222222223322222222222222 R_2222222222233222222222222 (Lambda radd_2222222222233222222222222222 (Prod out_2222222222233222222222222221 R_2222222222233222222222222 (Prod out_22222222222332222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda rmul_22222222222332222222222222222 (Prod out_22222222222332222222222222221 R_2222222222233222222222222 (Prod out_222222222223322222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda rsub_222222222223322222222222222222 (Prod out_222222222223322222222222222221 R_2222222222233222222222222 (Prod out_2222222222233222222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda ropp_2222222222233222222222222222222 (Prod out_2222222222233222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) (Lambda req_22222222222332222222222222222222 (Prod out_22222222222332222222222222222221 R_2222222222233222222222222 (Prod out_222222222223322222222222222222211 R_2222222222233222222222222 (Sort Prop))) (Lambda Rsth_222222222223322222222222222222222 (App Equivalence R_2222222222233222222222222 req_22222222222332222222222222222222) (Lambda Reqe_2222222222233222222222222222222222 (App ring_eq_ext R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222) (Lambda Rth_22222222222332222222222222222222222 (App ring_theory R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222) (Lambda x_222222222223322222222222222222222222 R_2222222222233222222222222 (Lambda y_2222222222233222222222222222222222222 R_2222222222233222222222222 (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222)) (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_PER R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222)) (App Coq.Classes.RelationClasses.symmetry R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Symmetric R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222)) (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) lemma_22222222222332222222222222222222222222))) (App Coq.setoid_ring.Ring_theory.Radd_0_l R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222)) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) rO_22222222222332222222222222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_PER R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) rO_22222222222332222222222222) lemma_22222222222332222222222222222222222222)) (App Coq.setoid_ring.Ring_theory.Radd_comm R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 rO_22222222222332222222222222 (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222)) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) rO_22222222222332222222222222) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_PER R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) rO_22222222222332222222222222) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism R_2222222222233222222222222 (Prod out_222222222223322222222222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) req_22222222222332222222222222222222 (App Coq.Classes.Morphisms.respectful R_2222222222233222222222222 R_2222222222233222222222222 req_22222222222332222222222222222222 req_22222222222332222222222222222222) radd_2222222222233222222222222222 (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222) (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222)) rO_22222222222332222222222222 (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App Coq.Classes.RelationClasses.symmetry R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Symmetric R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) rO_22222222222332222222222222 lemma_22222222222332222222222222222222222222)))) (App Coq.setoid_ring.Ring_theory.Ropp_def R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_PER R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) lemma_22222222222332222222222222222222222222)) (App Coq.setoid_ring.Ring_theory.Radd_assoc R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_PER R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222 (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App Coq.Classes.RelationClasses.symmetry R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Symmetric R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) lemma_22222222222332222222222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))))) (App Coq.setoid_ring.Ring_theory.Rdistr_l R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_PER R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) y_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) y_2222222222233222222222222222222222222) (App Coq.setoid_ring.Ring_theory.rmul_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) lemma_22222222222332222222222222222222222222 y_2222222222233222222222222222222222222 y_2222222222233222222222222222222222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) y_2222222222233222222222222222222222222)) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))))) (App Coq.setoid_ring.Ring_theory.Radd_comm R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) rO_22222222222332222222222222) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_PER R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) y_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 y_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) y_2222222222233222222222222222222222222) (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 y_2222222222233222222222222222222222222) (App Coq.setoid_ring.Ring_theory.rmul_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) rO_22222222222332222222222222 lemma_22222222222332222222222222222222222222 y_2222222222233222222222222222222222222 y_2222222222233222222222222222222222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) y_2222222222233222222222222222222222222)) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))))) (App Coq.setoid_ring.Ring_theory.Ropp_def R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 x_222222222223322222222222222222222222) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 y_2222222222233222222222222222222222222) rO_22222222222332222222222222) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_PER R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 y_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222 (App rmul_22222222222332222222222222222 rO_22222222222332222222222222 y_2222222222233222222222222222222222222) rO_22222222222332222222222222 lemma_22222222222332222222222222222222222222 (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))))) (App Coq.setoid_ring.Ring_theory.Rmul_0_l R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222 Reqe_2222222222233222222222222222222222 Rth_22222222222332222222222222222222222 y_2222222222233222222222222222222222222) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_PER R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) lemma_22222222222332222222222222222222222222)) (App Coq.setoid_ring.Ring_theory.Radd_0_l R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App Coq.Classes.RelationClasses.reflexivity R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))))))))))))))))))))))))) (Definition Coq.setoid_ring.Ring_theory.Ropp_add (Lambda R_2222222222233222222222222 (Sort Type) (Lambda rO_22222222222332222222222222 R_2222222222233222222222222 (Lambda rI_222222222223322222222222222 R_2222222222233222222222222 (Lambda radd_2222222222233222222222222222 (Prod out_2222222222233222222222222221 R_2222222222233222222222222 (Prod out_22222222222332222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda rmul_22222222222332222222222222222 (Prod out_22222222222332222222222222221 R_2222222222233222222222222 (Prod out_222222222223322222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda rsub_222222222223322222222222222222 (Prod out_222222222223322222222222222221 R_2222222222233222222222222 (Prod out_2222222222233222222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda ropp_2222222222233222222222222222222 (Prod out_2222222222233222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) (Lambda req_22222222222332222222222222222222 (Prod out_22222222222332222222222222222221 R_2222222222233222222222222 (Prod out_222222222223322222222222222222211 R_2222222222233222222222222 (Sort Prop))) (Lambda Rsth_222222222223322222222222222222222 (App Equivalence R_2222222222233222222222222 req_22222222222332222222222222222222) (Lambda Reqe_2222222222233222222222222222222222 (App ring_eq_ext R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222) (Lambda Rth_22222222222332222222222222222222222 (App ring_theory R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222) (Lambda x_222222222223322222222222222222222222 R_2222222222233222222222222 (Lambda y_2222222222233222222222222222222222222 R_2222222222233222222222222 (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App Coq.Classes.RelationClasses.symmetry R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Symmetric R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) lemma_22222222222332222222222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy R_2222222222233222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.setoid_ring.Ring_theory.Radd_0_l R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) rO_22222222222332222222222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222 rO_22222222222332222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App Coq.Classes.RelationClasses.symmetry R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Symmetric R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) rO_22222222222332222222222222 lemma_22222222222332222222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy R_2222222222233222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.setoid_ring.Ring_theory.Ropp_def R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 x_222222222223322222222222222222222222) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App Coq.Classes.RelationClasses.symmetry R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Symmetric R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) lemma_22222222222332222222222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy R_2222222222233222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.setoid_ring.Ring_theory.Radd_0_l R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) rO_22222222222332222222222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222 rO_22222222222332222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.RelationClasses.symmetry R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Symmetric R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) rO_22222222222332222222222222 lemma_22222222222332222222222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy R_2222222222233222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.setoid_ring.Ring_theory.Ropp_def R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 y_2222222222233222222222222222222222222) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism R_2222222222233222222222222 (Prod out_222222222223322222222222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) req_22222222222332222222222222222222 (App Coq.Classes.Morphisms.respectful R_2222222222233222222222222 R_2222222222233222222222222 req_22222222222332222222222222222222 req_22222222222332222222222222222222) radd_2222222222233222222222222222 (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222) (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) lemma_22222222222332222222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy R_2222222222233222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.setoid_ring.Ring_theory.Radd_comm R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) y_2222222222233222222222222222222222222) lemma_22222222222332222222222222222222222222 (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy R_2222222222233222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.setoid_ring.Ring_theory.Radd_comm R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 y_2222222222233222222222222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.Classes.RelationClasses.symmetry R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Symmetric R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) lemma_22222222222332222222222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy R_2222222222233222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.setoid_ring.Ring_theory.Radd_assoc R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) y_2222222222233222222222222222222222222 (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism R_2222222222233222222222222 (Prod out_222222222223322222222222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) req_22222222222332222222222222222222 (App Coq.Classes.Morphisms.respectful R_2222222222233222222222222 R_2222222222233222222222222 req_22222222222332222222222222222222 req_22222222222332222222222222222222) radd_2222222222233222222222222222 (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism R_2222222222233222222222222 (Prod out_222222222223322222222222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) req_22222222222332222222222222222222 (App Coq.Classes.Morphisms.respectful R_2222222222233222222222222 R_2222222222233222222222222 req_22222222222332222222222222222222 req_22222222222332222222222222222222) radd_2222222222233222222222222222 (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222) y_2222222222233222222222222222222222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App Coq.Classes.RelationClasses.symmetry R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Symmetric R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) lemma_22222222222332222222222222222222222222))) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy R_2222222222233222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.setoid_ring.Ring_theory.Radd_assoc R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))))) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism R_2222222222233222222222222 (Prod out_222222222223322222222222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) req_22222222222332222222222222222222 (App Coq.Classes.Morphisms.respectful R_2222222222233222222222222 R_2222222222233222222222222 req_22222222222332222222222222222222 req_22222222222332222222222222222222) radd_2222222222233222222222222222 (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) lemma_22222222222332222222222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy R_2222222222233222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.setoid_ring.Ring_theory.Radd_assoc R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 y_2222222222233222222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism R_2222222222233222222222222 (Prod out_222222222223322222222222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) req_22222222222332222222222222222222 (App Coq.Classes.Morphisms.respectful R_2222222222233222222222222 R_2222222222233222222222222 req_22222222222332222222222222222222 req_22222222222332222222222222222222) radd_2222222222233222222222222222 (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) lemma_22222222222332222222222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))))) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy R_2222222222233222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.setoid_ring.Ring_theory.Radd_comm R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 y_2222222222233222222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism R_2222222222233222222222222 (Prod out_222222222223322222222222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) req_22222222222332222222222222222222 (App Coq.Classes.Morphisms.respectful R_2222222222233222222222222 R_2222222222233222222222222 req_22222222222332222222222222222222 req_22222222222332222222222222222222) radd_2222222222233222222222222222 (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.Classes.RelationClasses.symmetry R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Symmetric R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) lemma_22222222222332222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy R_2222222222233222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.setoid_ring.Ring_theory.Radd_assoc R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) y_2222222222233222222222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))))) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism R_2222222222233222222222222 (Prod out_222222222223322222222222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) req_22222222222332222222222222222222 (App Coq.Classes.Morphisms.respectful R_2222222222233222222222222 R_2222222222233222222222222 req_22222222222332222222222222222222 req_22222222222332222222222222222222) radd_2222222222233222222222222222 (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism R_2222222222233222222222222 (Prod out_222222222223322222222222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) req_22222222222332222222222222222222 (App Coq.Classes.Morphisms.respectful R_2222222222233222222222222 R_2222222222233222222222222 req_22222222222332222222222222222222 req_22222222222332222222222222222222) radd_2222222222233222222222222222 (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) lemma_22222222222332222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy R_2222222222233222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.setoid_ring.Ring_theory.Radd_assoc R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 y_2222222222233222222222222222222222222 x_222222222223322222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism R_2222222222233222222222222 (Prod out_222222222223322222222222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) req_22222222222332222222222222222222 (App Coq.Classes.Morphisms.respectful R_2222222222233222222222222 R_2222222222233222222222222 req_22222222222332222222222222222222 req_22222222222332222222222222222222) radd_2222222222233222222222222222 (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism R_2222222222233222222222222 (Prod out_222222222223322222222222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) req_22222222222332222222222222222222 (App Coq.Classes.Morphisms.respectful R_2222222222233222222222222 R_2222222222233222222222222 req_22222222222332222222222222222222 req_22222222222332222222222222222222) radd_2222222222233222222222222222 (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222) lemma_22222222222332222222222222222222222222 (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))))) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy R_2222222222233222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.setoid_ring.Ring_theory.Radd_comm R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 y_2222222222233222222222222222222222222 x_222222222223322222222222222222222222) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) rO_22222222222332222222222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))))) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) rO_22222222222332222222222222)) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism R_2222222222233222222222222 (Prod out_222222222223322222222222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) req_22222222222332222222222222222222 (App Coq.Classes.Morphisms.respectful R_2222222222233222222222222 R_2222222222233222222222222 req_22222222222332222222222222222222 req_22222222222332222222222222222222) radd_2222222222233222222222222222 (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)))) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) rO_22222222222332222222222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism R_2222222222233222222222222 (Prod out_222222222223322222222222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) req_22222222222332222222222222222222 (App Coq.Classes.Morphisms.respectful R_2222222222233222222222222 R_2222222222233222222222222 req_22222222222332222222222222222222 req_22222222222332222222222222222222) radd_2222222222233222222222222222 (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222))) rO_22222222222332222222222222 lemma_22222222222332222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy R_2222222222233222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.setoid_ring.Ring_theory.Ropp_def R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222 y_2222222222233222222222222222222222222)) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) rO_22222222222332222222222222) (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222))) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) rO_22222222222332222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism R_2222222222233222222222222 (Prod out_222222222223322222222222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) req_22222222222332222222222222222222 (App Coq.Classes.Morphisms.respectful R_2222222222233222222222222 R_2222222222233222222222222 req_22222222222332222222222222222222 req_22222222222332222222222222222222) radd_2222222222233222222222222222 (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) rO_22222222222332222222222222) (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) lemma_22222222222332222222222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy R_2222222222233222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.setoid_ring.Ring_theory.Radd_comm R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) rO_22222222222332222222222222) (App (Lambda lemma_22222222222332222222222222222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222))) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism R_2222222222233222222222222 (Prod out_222222222223322222222222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) req_22222222222332222222222222222222 (App Coq.Classes.Morphisms.respectful R_2222222222233222222222222 R_2222222222233222222222222 req_22222222222332222222222222222222 req_22222222222332222222222222222222) radd_2222222222233222222222222222 (App Coq.setoid_ring.Ring_theory.radd_ext2_Proper R_2222222222233222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Reqe_2222222222233222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy R_2222222222233222222222222 req_22222222222332222222222222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_2222222222233222222222222 req_22222222222332222222222222222222 Rsth_222222222223322222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 rO_22222222222332222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) lemma_22222222222332222222222222222222222222) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy R_2222222222233222222222222 (App radd_2222222222233222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222) (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222))))) (App Coq.setoid_ring.Ring_theory.Radd_0_l R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)) (App Coq.setoid_ring.Ring_theory.Radd_comm R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222 Rth_22222222222332222222222222222222222 (App ropp_2222222222233222222222222222222 y_2222222222233222222222222222222222222) (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222)))))))))))))))))))))))))))))))) (Definition Coq.setoid_ring.Ring_theory.Rsub_def (Lambda R_2222222222233222222222222 (Sort Type) (Lambda rO_22222222222332222222222222 R_2222222222233222222222222 (Lambda rI_222222222223322222222222222 R_2222222222233222222222222 (Lambda radd_2222222222233222222222222222 (Prod out_2222222222233222222222222221 R_2222222222233222222222222 (Prod out_22222222222332222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda rmul_22222222222332222222222222222 (Prod out_22222222222332222222222222221 R_2222222222233222222222222 (Prod out_222222222223322222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda rsub_222222222223322222222222222222 (Prod out_222222222223322222222222222221 R_2222222222233222222222222 (Prod out_2222222222233222222222222222211 R_2222222222233222222222222 R_2222222222233222222222222)) (Lambda ropp_2222222222233222222222222222222 (Prod out_2222222222233222222222222222221 R_2222222222233222222222222 R_2222222222233222222222222) (Lambda req_22222222222332222222222222222222 (Prod out_22222222222332222222222222222221 R_2222222222233222222222222 (Prod out_222222222223322222222222222222211 R_2222222222233222222222222 (Sort Prop))) (Lambda r_222222222223322222222222222222222 (App ring_theory R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222) (Case 8 (Lambda r_2222222222233222222222222222222222 (App ring_theory R_2222222222233222222222222 rO_22222222222332222222222222 rI_222222222223322222222222222 radd_2222222222233222222222222222 rmul_22222222222332222222222222222 rsub_222222222223322222222222222222 ropp_2222222222233222222222222222222 req_22222222222332222222222222222222) (Prod x_22222222222332222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rsub_222222222223322222222222222222 x_22222222222332222222222222222222221 y_222222222223322222222222222222222211) (App radd_2222222222233222222222222222 x_22222222222332222222222222222222221 (App ropp_2222222222233222222222222222222 y_222222222223322222222222222222222211)))))) (CaseMatch r_222222222223322222222222222222222) (CaseBranches (Lambda Radd_0_l_2222222222233222222222222222222222 (Prod x_2222222222233222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 rO_22222222222332222222222222 x_2222222222233222222222222222222221) x_2222222222233222222222222222222221)) (Lambda Radd_comm_22222222222332222222222222222222222 (Prod x_22222222222332222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_22222222222332222222222222222222221 y_222222222223322222222222222222222211) (App radd_2222222222233222222222222222 y_222222222223322222222222222222222211 x_22222222222332222222222222222222221)))) (Lambda Radd_assoc_222222222223322222222222222222222222 (Prod x_222222222223322222222222222222222221 R_2222222222233222222222222 (Prod y_2222222222233222222222222222222222211 R_2222222222233222222222222 (Prod z_22222222222332222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222221 (App radd_2222222222233222222222222222 y_2222222222233222222222222222222222211 z_22222222222332222222222222222222222111)) (App radd_2222222222233222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222221 y_2222222222233222222222222222222222211) z_22222222222332222222222222222222222111))))) (Lambda Rmul_1_l_2222222222233222222222222222222222222 (Prod x_2222222222233222222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 rI_222222222223322222222222222 x_2222222222233222222222222222222222221) x_2222222222233222222222222222222222221)) (Lambda Rmul_comm_22222222222332222222222222222222222222 (Prod x_22222222222332222222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 x_22222222222332222222222222222222222221 y_222222222223322222222222222222222222211) (App rmul_22222222222332222222222222222 y_222222222223322222222222222222222222211 x_22222222222332222222222222222222222221)))) (Lambda Rmul_assoc_222222222223322222222222222222222222222 (Prod x_222222222223322222222222222222222222221 R_2222222222233222222222222 (Prod y_2222222222233222222222222222222222222211 R_2222222222233222222222222 (Prod z_22222222222332222222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222221 (App rmul_22222222222332222222222222222 y_2222222222233222222222222222222222222211 z_22222222222332222222222222222222222222111)) (App rmul_22222222222332222222222222222 (App rmul_22222222222332222222222222222 x_222222222223322222222222222222222222221 y_2222222222233222222222222222222222222211) z_22222222222332222222222222222222222222111))))) (Lambda Rdistr_l_2222222222233222222222222222222222222222 (Prod x_2222222222233222222222222222222222222221 R_2222222222233222222222222 (Prod y_22222222222332222222222222222222222222211 R_2222222222233222222222222 (Prod z_222222222223322222222222222222222222222111 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rmul_22222222222332222222222222222 (App radd_2222222222233222222222222222 x_2222222222233222222222222222222222222221 y_22222222222332222222222222222222222222211) z_222222222223322222222222222222222222222111) (App radd_2222222222233222222222222222 (App rmul_22222222222332222222222222222 x_2222222222233222222222222222222222222221 z_222222222223322222222222222222222222222111) (App rmul_22222222222332222222222222222 y_22222222222332222222222222222222222222211 z_222222222223322222222222222222222222222111)))))) (Lambda Rsub_def_22222222222332222222222222222222222222222 (Prod x_22222222222332222222222222222222222222221 R_2222222222233222222222222 (Prod y_222222222223322222222222222222222222222211 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App rsub_222222222223322222222222222222 x_22222222222332222222222222222222222222221 y_222222222223322222222222222222222222222211) (App radd_2222222222233222222222222222 x_22222222222332222222222222222222222222221 (App ropp_2222222222233222222222222222222 y_222222222223322222222222222222222222222211))))) (Lambda Ropp_def_222222222223322222222222222222222222222222 (Prod x_222222222223322222222222222222222222222221 R_2222222222233222222222222 (App req_22222222222332222222222222222222 (App radd_2222222222233222222222222222 x_222222222223322222222222222222222222222221 (App ropp_2222222222233222222222222222222 x_222222222223322222222222222222222222222221)) rO_22222222222332222222222222)) Rsub_def_22222222222332222222222222222222222222222))))))))))))))))))))) (Definition Coq.setoid_ring.Ring_theory.Rth_ARth (Lambda R_22222222222332 (Sort Type) (Lambda rO_222222222223322 R_22222222222332 (Lambda rI_2222222222233222 R_22222222222332 (Lambda radd_22222222222332222 (Prod out_22222222222332221 R_22222222222332 (Prod out_222222222223322211 R_22222222222332 R_22222222222332)) (Lambda rmul_222222222223322222 (Prod out_222222222223322221 R_22222222222332 (Prod out_2222222222233222211 R_22222222222332 R_22222222222332)) (Lambda rsub_2222222222233222222 (Prod out_2222222222233222221 R_22222222222332 (Prod out_22222222222332222211 R_22222222222332 R_22222222222332)) (Lambda ropp_22222222222332222222 (Prod out_22222222222332222221 R_22222222222332 R_22222222222332) (Lambda req_222222222223322222222 (Prod out_222222222223322222221 R_22222222222332 (Prod out_2222222222233222222211 R_22222222222332 (Sort Prop))) (Lambda Rsth_2222222222233222222222 (App Equivalence R_22222222222332 req_222222222223322222222) (Lambda Reqe_22222222222332222222222 (App ring_eq_ext R_22222222222332 radd_22222222222332222 rmul_222222222223322222 ropp_22222222222332222222 req_222222222223322222222) (Lambda Rth_222222222223322222222222 (App ring_theory R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 req_222222222223322222222) (App mk_art R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 req_222222222223322222222 (App Coq.setoid_ring.Ring_theory.Radd_0_l R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 req_222222222223322222222 Rth_222222222223322222222222) (App Coq.setoid_ring.Ring_theory.Radd_comm R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 req_222222222223322222222 Rth_222222222223322222222222) (App Coq.setoid_ring.Ring_theory.Radd_assoc R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 req_222222222223322222222 Rth_222222222223322222222222) (App Coq.setoid_ring.Ring_theory.Rmul_1_l R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 req_222222222223322222222 Rth_222222222223322222222222) (App Coq.setoid_ring.Ring_theory.Rmul_0_l R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 req_222222222223322222222 Rsth_2222222222233222222222 Reqe_22222222222332222222222 Rth_222222222223322222222222) (App Coq.setoid_ring.Ring_theory.Rmul_comm R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 req_222222222223322222222 Rth_222222222223322222222222) (App Coq.setoid_ring.Ring_theory.Rmul_assoc R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 req_222222222223322222222 Rth_222222222223322222222222) (App Coq.setoid_ring.Ring_theory.Rdistr_l R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 req_222222222223322222222 Rth_222222222223322222222222) (App Coq.setoid_ring.Ring_theory.Ropp_mul_l R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 req_222222222223322222222 Rsth_2222222222233222222222 Reqe_22222222222332222222222 Rth_222222222223322222222222) (App Coq.setoid_ring.Ring_theory.Ropp_add R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 req_222222222223322222222 Rsth_2222222222233222222222 Reqe_22222222222332222222222 Rth_222222222223322222222222) (App Coq.setoid_ring.Ring_theory.Rsub_def R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 req_222222222223322222222 Rth_222222222223322222222222)))))))))))))) (Definition Coq.ZArith.BinInt.Z.add_0_l (Lambda n_22222222222332 Z (Case 0 (Lambda z_222222222223322 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.add Z0 z_222222222223322) z_222222222223322)) (CaseMatch n_22222222222332) (CaseBranches (App eq_refl Z Z0) (Lambda p_222222222223322 positive (App eq_refl Z (App Zpos p_222222222223322))) (Lambda p_222222222223322 positive (App eq_refl Z (App Zneg p_222222222223322))))))) (Definition Coq.ZArith.BinInt.Z.add_comm (Lambda n_22222222222332 Z (Lambda m_222222222223322 Z (Cast (App Coq.ZArith.BinInt.Z.bi_induction (Lambda t_2222222222233222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.add t_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 t_2222222222233222))) (Cast (Cast (Lambda x_2222222222233222 Z (Lambda y_22222222222332222 Z (Lambda H_222222222223322222 (App eq Z x_2222222222233222 y_22222222222332222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App eq Z (App Coq.ZArith.BinIntDef.Z.add x_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 x_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add y_22222222222332222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 y_22222222222332222)) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add x_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add y_22222222222332222 m_222222222223322) (App Coq.ZArith.BinInt.Z.add_wd x_2222222222233222 y_22222222222332222 H_222222222223322222 m_222222222223322 m_222222222223322 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) m_222222222223322)) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 x_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 y_22222222222332222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism Z (Prod out_2222222222233222221 Z Z) (App eq Z) (App Coq.Classes.Morphisms.respectful Z Z (App eq Z) (App eq Z)) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinInt.Z.add_wd m_222222222223322 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) m_222222222223322) x_2222222222233222 y_22222222222332222 H_222222222223322222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add y_22222222222332222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 y_22222222222332222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add y_22222222222332222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 y_22222222222332222)) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App eq Z (App Coq.ZArith.BinIntDef.Z.add y_22222222222332222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 y_22222222222332222))) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq Z (App Coq.ZArith.BinIntDef.Z.add y_22222222222332222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 y_22222222222332222))))))) REVERTcast (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff (Lambda t_2222222222233222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.add t_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 t_2222222222233222))) (Lambda t_2222222222233222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.add t_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 t_2222222222233222))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_2222222222233221 Z (Sort Prop)) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff) (Lambda t_2222222222233222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.add t_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 t_2222222222233222))))) (App (Lambda lemma_2222222222233222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 Z0) m_222222222223322) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add Z0 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 Z0) m_222222222223322 lemma_2222222222233222)) (App Coq.ZArith.BinInt.Z.add_0_r m_222222222223322) (App (Lambda lemma_2222222222233222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add Z0 m_222222222223322) m_222222222223322) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Transitive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add Z0 m_222222222223322) m_222222222223322 lemma_2222222222233222 m_222222222223322 m_222222222223322 (App Coq.Classes.Morphisms.eq_proper_proxy Z m_222222222223322))) (App Coq.ZArith.BinInt.Z.add_0_l m_222222222223322) (App Coq.Classes.RelationClasses.reflexivity Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) m_222222222223322))) (Lambda n_2222222222233222 Z (App (Lambda lemma_22222222222332222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 (App Coq.ZArith.BinIntDef.Z.succ n_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 n_2222222222233222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 n_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_2222222222233222) m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 (App Coq.ZArith.BinIntDef.Z.succ n_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_2222222222233222) m_222222222223322) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 n_2222222222233222))) (App Coq.Classes.Morphisms.per_partial_app_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_2222222222233222) m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 (App Coq.ZArith.BinIntDef.Z.succ n_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 n_2222222222233222)) lemma_22222222222332222))) (App Coq.ZArith.BinInt.Z.add_succ_r m_222222222223322 n_2222222222233222) (App (Lambda lemma_22222222222332222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_2222222222233222) m_222222222223322) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_2222222222233222 m_222222222223322))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 n_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_2222222222233222) m_222222222223322) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 n_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_2222222222233222 m_222222222223322)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 n_2222222222233222))) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_2222222222233222) m_222222222223322) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_2222222222233222 m_222222222223322)) lemma_22222222222332222 (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 n_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 n_2222222222233222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 n_2222222222233222)))))) (App Coq.ZArith.BinInt.Z.add_succ_l n_2222222222233222 m_222222222223322) (App (Lambda lemma_22222222222332222 (App Coq.Init.Logic.iff (App eq Z (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_2222222222233222 m_222222222223322)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 n_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 n_2222222222233222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 n_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_2222222222233222 m_222222222223322)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 n_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 n_2222222222233222)) lemma_22222222222332222)) (App Coq.ZArith.BinInt.Z.succ_inj_wd (App Coq.ZArith.BinIntDef.Z.add n_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 n_2222222222233222)) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 n_2222222222233222))))))) n_22222222222332) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_22222222222332 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 n_22222222222332)))))) (Definition Coq.ZArith.BinInt.Z.add_assoc (Lambda n_22222222222332 Z (Lambda m_222222222223322 Z (Lambda p_2222222222233222 Z (Cast (App Coq.ZArith.BinInt.Z.bi_induction (Lambda t_22222222222332222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.add t_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add t_22222222222332222 m_222222222223322) p_2222222222233222))) (Cast (Cast (Lambda x_22222222222332222 Z (Lambda y_222222222223322222 Z (Lambda H_2222222222233222222 (App eq Z x_22222222222332222 y_222222222223322222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App eq Z (App Coq.ZArith.BinIntDef.Z.add x_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add x_22222222222332222 m_222222222223322) p_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add y_222222222223322222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add y_222222222223322222 m_222222222223322) p_2222222222233222)) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add x_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add y_222222222223322222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinInt.Z.add_wd x_22222222222332222 y_222222222223322222 H_2222222222233222222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add x_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add y_222222222223322222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinInt.Z.add_wd (App Coq.ZArith.BinIntDef.Z.add x_22222222222332222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add y_222222222223322222 m_222222222223322) (App Coq.ZArith.BinInt.Z.add_wd x_22222222222332222 y_222222222223322222 H_2222222222233222222 m_222222222223322 m_222222222223322 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) m_222222222223322)) p_2222222222233222 p_2222222222233222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) p_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add y_222222222223322222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add y_222222222223322222 m_222222222223322) p_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add y_222222222223322222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add y_222222222223322222 m_222222222223322) p_2222222222233222)) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App eq Z (App Coq.ZArith.BinIntDef.Z.add y_222222222223322222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add y_222222222223322222 m_222222222223322) p_2222222222233222))) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq Z (App Coq.ZArith.BinIntDef.Z.add y_222222222223322222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add y_222222222223322222 m_222222222223322) p_2222222222233222))))))) REVERTcast (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff (Lambda t_22222222222332222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.add t_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add t_22222222222332222 m_222222222223322) p_2222222222233222))) (Lambda t_22222222222332222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.add t_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add t_22222222222332222 m_222222222223322) p_2222222222233222))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_22222222222332221 Z (Sort Prop)) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff) (Lambda t_22222222222332222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.add t_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add t_22222222222332222 m_222222222223322) p_2222222222233222))))) (App (Lambda lemma_22222222222332222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add Z0 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Transitive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add Z0 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222) lemma_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add Z0 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add Z0 m_222222222223322) p_2222222222233222) (App Coq.Classes.Morphisms.eq_proper_proxy Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add Z0 m_222222222223322) p_2222222222233222)))) (App Coq.ZArith.BinInt.Z.add_0_l (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App (Lambda lemma_22222222222332222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add Z0 m_222222222223322) m_222222222223322) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add Z0 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222) (App Coq.ZArith.BinInt.Z.add_wd (App Coq.ZArith.BinIntDef.Z.add Z0 m_222222222223322) m_222222222223322 lemma_22222222222332222 p_2222222222233222 p_2222222222233222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) p_2222222222233222)))) (App Coq.ZArith.BinInt.Z.add_0_l m_222222222223322) (App Coq.Classes.RelationClasses.reflexivity Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)))) (Lambda n_22222222222332222 Z (App (Lambda lemma_222222222223322222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) p_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) p_2222222222233222)) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222))) lemma_222222222223322222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) p_2222222222233222) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) p_2222222222233222))))) (App Coq.ZArith.BinInt.Z.add_succ_l n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App (Lambda lemma_222222222223322222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) p_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322)) p_2222222222233222)) (App Coq.Classes.Morphisms.per_partial_app_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322)) p_2222222222233222) (App Coq.ZArith.BinInt.Z.add_wd (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322)) lemma_222222222223322222 p_2222222222233222 p_2222222222233222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) p_2222222222233222))))) (App Coq.ZArith.BinInt.Z.add_succ_l n_22222222222332222 m_222222222223322) (App (Lambda lemma_222222222223322222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322)) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322)) p_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222))) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222))) (App Coq.Classes.Morphisms.per_partial_app_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322)) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222)) lemma_222222222223322222))) (App Coq.ZArith.BinInt.Z.add_succ_l (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) (App (Lambda lemma_222222222223322222 (App Coq.Init.Logic.iff (App eq Z (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222))) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222))) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222)) lemma_222222222223322222)) (App Coq.ZArith.BinInt.Z.succ_inj_wd (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222)) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222)))))))) n_22222222222332) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_22222222222332 (App Coq.ZArith.BinIntDef.Z.add m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add n_22222222222332 m_222222222223322) p_2222222222233222))))))) (Definition Coq.ZArith.BinInt.Z.mul_1_l (Lambda n_22222222222332 Z (App (Lambda lemma_222222222223322 (App eq Z (App Zpos xH) (App Coq.ZArith.BinIntDef.Z.succ Z0)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Transitive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul (App Zpos xH) n_22222222222332) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ Z0) n_22222222222332) (App Coq.ZArith.BinInt.Z.mul_wd (App Zpos xH) (App Coq.ZArith.BinIntDef.Z.succ Z0) lemma_222222222223322 n_22222222222332 n_22222222222332 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) n_22222222222332)) n_22222222222332 n_22222222222332 (App Coq.Classes.Morphisms.eq_proper_proxy Z n_22222222222332))) Coq.ZArith.BinInt.Z.one_succ (App (Lambda lemma_222222222223322 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ Z0) n_22222222222332) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul Z0 n_22222222222332) n_22222222222332)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Transitive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ Z0) n_22222222222332) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul Z0 n_22222222222332) n_22222222222332) lemma_222222222223322 n_22222222222332 n_22222222222332 (App Coq.Classes.Morphisms.eq_proper_proxy Z n_22222222222332))) (App Coq.ZArith.BinInt.Z.mul_succ_l Z0 n_22222222222332) (App (Lambda lemma_222222222223322 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul Z0 n_22222222222332) Z0) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Transitive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul Z0 n_22222222222332) n_22222222222332) (App Coq.ZArith.BinIntDef.Z.add Z0 n_22222222222332) (App Coq.ZArith.BinInt.Z.add_wd (App Coq.ZArith.BinIntDef.Z.mul Z0 n_22222222222332) Z0 lemma_222222222223322 n_22222222222332 n_22222222222332 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) n_22222222222332)) n_22222222222332 n_22222222222332 (App Coq.Classes.Morphisms.eq_proper_proxy Z n_22222222222332))) (App Coq.ZArith.BinInt.Z.mul_0_l n_22222222222332) (App (Lambda lemma_222222222223322 (App eq Z (App Coq.ZArith.BinIntDef.Z.add Z0 n_22222222222332) n_22222222222332) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Transitive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add Z0 n_22222222222332) n_22222222222332 lemma_222222222223322 n_22222222222332 n_22222222222332 (App Coq.Classes.Morphisms.eq_proper_proxy Z n_22222222222332))) (App Coq.ZArith.BinInt.Z.add_0_l n_22222222222332) (App Coq.Classes.RelationClasses.reflexivity Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) n_22222222222332))))))) (Definition Coq.ZArith.BinInt.Z.mul_comm (Lambda n_22222222222332 Z (Lambda m_222222222223322 Z (Cast (App Coq.ZArith.BinInt.Z.bi_induction (Lambda t_2222222222233222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul t_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 t_2222222222233222))) (Cast (Cast (Lambda x_2222222222233222 Z (Lambda y_22222222222332222 Z (Lambda H_222222222223322222 (App eq Z x_2222222222233222 y_22222222222332222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App eq Z (App Coq.ZArith.BinIntDef.Z.mul x_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 x_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_22222222222332222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 y_22222222222332222)) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul x_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul y_22222222222332222 m_222222222223322) (App Coq.ZArith.BinInt.Z.mul_wd x_2222222222233222 y_22222222222332222 H_222222222223322222 m_222222222223322 m_222222222223322 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) m_222222222223322)) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 x_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 y_22222222222332222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism Z (Prod out_2222222222233222221 Z Z) (App eq Z) (App Coq.Classes.Morphisms.respectful Z Z (App eq Z) (App eq Z)) Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinInt.Z.mul_wd m_222222222223322 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) m_222222222223322) x_2222222222233222 y_22222222222332222 H_222222222223322222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_22222222222332222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 y_22222222222332222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_22222222222332222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 y_22222222222332222)) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_22222222222332222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 y_22222222222332222))) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_22222222222332222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 y_22222222222332222))))))) REVERTcast (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff (Lambda t_2222222222233222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul t_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 t_2222222222233222))) (Lambda t_2222222222233222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul t_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 t_2222222222233222))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_2222222222233221 Z (Sort Prop)) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff) (Lambda t_2222222222233222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul t_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 t_2222222222233222))))) (App (Lambda lemma_2222222222233222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 Z0) Z0) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul Z0 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 Z0) Z0 lemma_2222222222233222)) (App Coq.ZArith.BinInt.Z.mul_0_r m_222222222223322) (App (Lambda lemma_2222222222233222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul Z0 m_222222222223322) Z0) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Transitive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul Z0 m_222222222223322) Z0 lemma_2222222222233222 Z0 Z0 (App Coq.Classes.Morphisms.eq_proper_proxy Z Z0))) (App Coq.ZArith.BinInt.Z.mul_0_l m_222222222223322) (App Coq.Classes.RelationClasses.reflexivity Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) Z0))) (Lambda n_2222222222233222 Z (App (Lambda lemma_22222222222332222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 (App Coq.ZArith.BinIntDef.Z.succ n_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 n_2222222222233222) m_222222222223322)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 n_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_2222222222233222) m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 (App Coq.ZArith.BinIntDef.Z.succ n_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_2222222222233222) m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 n_2222222222233222) m_222222222223322)) (App Coq.Classes.Morphisms.per_partial_app_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_2222222222233222) m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 (App Coq.ZArith.BinIntDef.Z.succ n_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 n_2222222222233222) m_222222222223322) lemma_22222222222332222))) (App Coq.ZArith.BinInt.Z.mul_succ_r m_222222222223322 n_2222222222233222) (App (Lambda lemma_22222222222332222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_2222222222233222) m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_2222222222233222 m_222222222223322) m_222222222223322)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 n_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_2222222222233222) m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 n_2222222222233222) m_222222222223322)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_2222222222233222 m_222222222223322) m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 n_2222222222233222) m_222222222223322)) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_2222222222233222) m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_2222222222233222 m_222222222223322) m_222222222223322) lemma_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 n_2222222222233222) m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 n_2222222222233222) m_222222222223322) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 n_2222222222233222) m_222222222223322))))) (App Coq.ZArith.BinInt.Z.mul_succ_l n_2222222222233222 m_222222222223322) (App (Lambda lemma_22222222222332222 (App Coq.Init.Logic.iff (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_2222222222233222 m_222222222223322) m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 n_2222222222233222) m_222222222223322)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 n_2222222222233222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 n_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_2222222222233222 m_222222222223322) m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 n_2222222222233222) m_222222222223322)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 n_2222222222233222)) lemma_22222222222332222)) (App Coq.ZArith.BinInt.Z.add_cancel_r (App Coq.ZArith.BinIntDef.Z.mul n_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 n_2222222222233222) m_222222222223322) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_2222222222233222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 n_2222222222233222))))))) n_22222222222332) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 n_22222222222332)))))) (Definition Coq.ZArith.BinInt.Z.mul_assoc (Lambda n_22222222222332 Z (Lambda m_222222222223322 Z (Lambda p_2222222222233222 Z (Cast (App Coq.ZArith.BinInt.Z.bi_induction (Lambda t_22222222222332222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul t_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul t_22222222222332222 m_222222222223322) p_2222222222233222))) (Cast (Cast (Lambda x_22222222222332222 Z (Lambda y_222222222223322222 Z (Lambda H_2222222222233222222 (App eq Z x_22222222222332222 y_222222222223322222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App eq Z (App Coq.ZArith.BinIntDef.Z.mul x_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul x_22222222222332222 m_222222222223322) p_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_222222222223322222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul y_222222222223322222 m_222222222223322) p_2222222222233222)) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul x_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul y_222222222223322222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinInt.Z.mul_wd x_22222222222332222 y_222222222223322222 H_2222222222233222222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul x_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul y_222222222223322222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinInt.Z.mul_wd (App Coq.ZArith.BinIntDef.Z.mul x_22222222222332222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.mul y_222222222223322222 m_222222222223322) (App Coq.ZArith.BinInt.Z.mul_wd x_22222222222332222 y_222222222223322222 H_2222222222233222222 m_222222222223322 m_222222222223322 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) m_222222222223322)) p_2222222222233222 p_2222222222233222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) p_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_222222222223322222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul y_222222222223322222 m_222222222223322) p_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_222222222223322222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul y_222222222223322222 m_222222222223322) p_2222222222233222)) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_222222222223322222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul y_222222222223322222 m_222222222223322) p_2222222222233222))) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq Z (App Coq.ZArith.BinIntDef.Z.mul y_222222222223322222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul y_222222222223322222 m_222222222223322) p_2222222222233222))))))) REVERTcast (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff (Lambda t_22222222222332222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul t_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul t_22222222222332222 m_222222222223322) p_2222222222233222))) (Lambda t_22222222222332222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul t_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul t_22222222222332222 m_222222222223322) p_2222222222233222))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_22222222222332221 Z (Sort Prop)) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff) (Lambda t_22222222222332222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul t_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul t_22222222222332222 m_222222222223322) p_2222222222233222))))) (App (Lambda lemma_22222222222332222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul Z0 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) Z0) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Transitive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul Z0 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) Z0 lemma_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul Z0 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul Z0 m_222222222223322) p_2222222222233222) (App Coq.Classes.Morphisms.eq_proper_proxy Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul Z0 m_222222222223322) p_2222222222233222)))) (App Coq.ZArith.BinInt.Z.mul_0_l (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App (Lambda lemma_22222222222332222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul Z0 m_222222222223322) Z0) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) Z0 (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul Z0 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul Z0 p_2222222222233222) (App Coq.ZArith.BinInt.Z.mul_wd (App Coq.ZArith.BinIntDef.Z.mul Z0 m_222222222223322) Z0 lemma_22222222222332222 p_2222222222233222 p_2222222222233222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) p_2222222222233222)))) (App Coq.ZArith.BinInt.Z.mul_0_l m_222222222223322) (App (Lambda lemma_22222222222332222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul Z0 p_2222222222233222) Z0) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) Z0 (App Coq.ZArith.BinIntDef.Z.mul Z0 p_2222222222233222) Z0 lemma_22222222222332222)) (App Coq.ZArith.BinInt.Z.mul_0_l p_2222222222233222) (App Coq.Classes.RelationClasses.reflexivity Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) Z0)))) (Lambda n_22222222222332222 Z (App (Lambda lemma_222222222223322222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 m_222222222223322) p_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) p_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) p_2222222222233222)) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) lemma_222222222223322222 (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) p_2222222222233222) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) p_2222222222233222))))) (App Coq.ZArith.BinInt.Z.mul_succ_l n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App (Lambda lemma_222222222223322222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 m_222222222223322) m_222222222223322)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 m_222222222223322) p_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) p_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 m_222222222223322) m_222222222223322) p_2222222222233222)) (App Coq.Classes.Morphisms.per_partial_app_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 m_222222222223322) m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinInt.Z.mul_wd (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 m_222222222223322) m_222222222223322) lemma_222222222223322222 p_2222222222233222 p_2222222222233222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) p_2222222222233222))))) (App Coq.ZArith.BinInt.Z.mul_succ_l n_22222222222332222 m_222222222223322) (App (Lambda lemma_222222222223322222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 m_222222222223322) m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 m_222222222223322) p_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 m_222222222223322) m_222222222223322) p_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App Coq.Classes.Morphisms.per_partial_app_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 m_222222222223322) m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) lemma_222222222223322222))) (App Coq.ZArith.BinInt.Z.mul_add_distr_r (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 m_222222222223322) m_222222222223322 p_2222222222233222) (App (Lambda lemma_222222222223322222 (App Coq.Init.Logic.iff (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 m_222222222223322) p_2222222222233222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 m_222222222223322) p_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 m_222222222223322) p_2222222222233222)) lemma_222222222223322222)) (App Coq.ZArith.BinInt.Z.add_cancel_r (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 m_222222222223322) p_2222222222233222)))))))) n_22222222222332) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332 m_222222222223322) p_2222222222233222))))))) (Definition Coq.ZArith.BinInt.Z.mul_add_distr_r (Lambda n_22222222222332 Z (Lambda m_222222222223322 Z (Lambda p_2222222222233222 Z (Cast (App Coq.ZArith.BinInt.Z.bi_induction (Lambda t_22222222222332222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add t_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul t_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)))) (Cast (Cast (Lambda x_22222222222332222 Z (Lambda y_222222222223322222 Z (Lambda H_2222222222233222222 (App eq Z x_22222222222332222 y_222222222223322222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add x_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add y_222222222223322222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul y_222222222223322222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add x_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add y_222222222223322222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinInt.Z.mul_wd (App Coq.ZArith.BinIntDef.Z.add x_22222222222332222 m_222222222223322) (App Coq.ZArith.BinIntDef.Z.add y_222222222223322222 m_222222222223322) (App Coq.ZArith.BinInt.Z.add_wd x_22222222222332222 y_222222222223322222 H_2222222222233222222 m_222222222223322 m_222222222223322 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) m_222222222223322)) p_2222222222233222 p_2222222222233222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul y_222222222223322222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinInt.Z.add_wd (App Coq.ZArith.BinIntDef.Z.mul x_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul y_222222222223322222 p_2222222222233222) (App Coq.ZArith.BinInt.Z.mul_wd x_22222222222332222 y_222222222223322222 H_2222222222233222222 p_2222222222233222 p_2222222222233222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)))) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add y_222222222223322222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul y_222222222223322222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add y_222222222223322222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul y_222222222223322222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add y_222222222223322222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul y_222222222223322222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)))) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add y_222222222223322222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul y_222222222223322222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)))))))) REVERTcast (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff (Lambda t_22222222222332222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add t_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul t_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)))) (Lambda t_22222222222332222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add t_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul t_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_22222222222332221 Z (Sort Prop)) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff) (Lambda t_22222222222332222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add t_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul t_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)))))) (App (Lambda lemma_22222222222332222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul Z0 p_2222222222233222) Z0) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add Z0 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul Z0 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add Z0 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinInt.Z.add_wd (App Coq.ZArith.BinIntDef.Z.mul Z0 p_2222222222233222) Z0 lemma_22222222222332222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))))) (App Coq.ZArith.BinInt.Z.mul_0_l p_2222222222233222) (App (Lambda lemma_22222222222332222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add Z0 m_222222222223322) m_222222222223322) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Transitive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add Z0 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222) (App Coq.ZArith.BinInt.Z.mul_wd (App Coq.ZArith.BinIntDef.Z.add Z0 m_222222222223322) m_222222222223322 lemma_22222222222332222 p_2222222222233222 p_2222222222233222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add Z0 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add Z0 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.Classes.Morphisms.eq_proper_proxy Z (App Coq.ZArith.BinIntDef.Z.add Z0 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))))) (App Coq.ZArith.BinInt.Z.add_0_l m_222222222223322) (App (Lambda lemma_22222222222332222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add Z0 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add Z0 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222) lemma_22222222222332222)) (App Coq.ZArith.BinInt.Z.add_0_l (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.Classes.RelationClasses.reflexivity Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))))) (Lambda n_22222222222332222 Z (App (Lambda lemma_222222222223322222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) p_2222222222233222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App Coq.Classes.Morphisms.per_partial_app_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinInt.Z.add_wd (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) p_2222222222233222) lemma_222222222223322222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)))))) (App Coq.ZArith.BinInt.Z.mul_succ_l n_22222222222332222 p_2222222222233222) (App (Lambda lemma_222222222223322222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322)) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322)) p_2222222222233222) (App Coq.ZArith.BinInt.Z.mul_wd (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.succ n_22222222222332222) m_222222222223322) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322)) lemma_222222222223322222 p_2222222222233222 p_2222222222233222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)))))) (App Coq.ZArith.BinInt.Z.add_succ_l n_22222222222332222 m_222222222223322) (App (Lambda lemma_222222222223322222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322)) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) p_2222222222233222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322)) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322)) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) p_2222222222233222) lemma_222222222223322222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)))))) (App Coq.ZArith.BinInt.Z.mul_succ_l (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) (App (Lambda lemma_222222222223322222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add p_2222222222233222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add p_2222222222233222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)))) (App Coq.Classes.Morphisms.per_partial_app_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add p_2222222222233222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App Coq.Classes.RelationClasses.symmetry Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Symmetric Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add p_2222222222233222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) lemma_222222222223322222)))) (App Coq.ZArith.BinInt.Z.add_assoc (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) p_2222222222233222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App (Lambda lemma_222222222223322222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add p_2222222222233222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222) p_2222222222233222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add p_2222222222233222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222) p_2222222222233222))) (App Coq.Classes.Morphisms.per_partial_app_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add p_2222222222233222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222) p_2222222222233222)) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism Z (Prod out_2222222222233222221 Z Z) (App eq Z) (App Coq.Classes.Morphisms.respectful Z Z (App eq Z) (App eq Z)) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinInt.Z.add_wd (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add p_2222222222233222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222) p_2222222222233222) lemma_222222222223322222)))) (App Coq.ZArith.BinInt.Z.add_comm p_2222222222233222 (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) (App (Lambda lemma_222222222223322222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222) p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) p_2222222222233222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222) p_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) p_2222222222233222)) (App Coq.Classes.Morphisms.per_partial_app_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222) p_2222222222233222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) p_2222222222233222) lemma_222222222223322222))) (App Coq.ZArith.BinInt.Z.add_assoc (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222) p_2222222222233222) (App (Lambda lemma_222222222223322222 (App Coq.Init.Logic.iff (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) p_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) p_2222222222233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222))) lemma_222222222223322222)) (App Coq.ZArith.BinInt.Z.add_cancel_r (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)) p_2222222222233222) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332222 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)))))))))))) n_22222222222332) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add n_22222222222332 m_222222222223322) p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332 p_2222222222233222) (App Coq.ZArith.BinIntDef.Z.mul m_222222222223322 p_2222222222233222)))))))) (Definition Coq.ZArith.BinInt.Z.sub_diag (Lambda n_22222222222332 Z (Cast (App Coq.ZArith.BinInt.Z.bi_induction (Lambda t_222222222223322 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub t_222222222223322 t_222222222223322) Z0)) (Cast (Cast (Lambda x_222222222223322 Z (Lambda y_2222222222233222 Z (Lambda H_22222222222332222 (App eq Z x_222222222223322 y_2222222222233222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App eq Z (App Coq.ZArith.BinIntDef.Z.sub x_222222222223322 x_222222222223322) Z0) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub y_2222222222233222 y_2222222222233222) Z0) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.sub x_222222222223322 x_222222222223322) (App Coq.ZArith.BinIntDef.Z.sub y_2222222222233222 y_2222222222233222) (App Coq.ZArith.BinInt.Z.sub_wd x_222222222223322 y_2222222222233222 H_22222222222332222 x_222222222223322 y_2222222222233222 H_22222222222332222) Z0 Z0 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) Z0)) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub y_2222222222233222 y_2222222222233222) Z0) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub y_2222222222233222 y_2222222222233222) Z0) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub y_2222222222233222 y_2222222222233222) Z0)) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq Z (App Coq.ZArith.BinIntDef.Z.sub y_2222222222233222 y_2222222222233222) Z0)))))) REVERTcast (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff (Lambda t_222222222223322 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub t_222222222223322 t_222222222223322) Z0)) (Lambda t_222222222223322 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub t_222222222223322 t_222222222223322) Z0)))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_222222222223321 Z (Sort Prop)) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff) (Lambda t_222222222223322 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub t_222222222223322 t_222222222223322) Z0)))) (App (Lambda lemma_222222222223322 (App eq Z (App Coq.ZArith.BinIntDef.Z.sub Z0 Z0) Z0) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Transitive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.sub Z0 Z0) Z0 lemma_222222222223322 Z0 Z0 (App Coq.Classes.Morphisms.eq_proper_proxy Z Z0))) (App Coq.ZArith.BinInt.Z.sub_0_r Z0) (App Coq.Classes.RelationClasses.reflexivity Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) Z0)) (Lambda n_222222222223322 Z (App (Lambda lemma_2222222222233222 (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.succ n_222222222223322) (App Coq.ZArith.BinIntDef.Z.succ n_222222222223322)) (App Coq.ZArith.BinIntDef.Z.pred (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.succ n_222222222223322) n_222222222223322))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub n_222222222223322 n_222222222223322) Z0) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.succ n_222222222223322) (App Coq.ZArith.BinIntDef.Z.succ n_222222222223322)) Z0) (App eq Z (App Coq.ZArith.BinIntDef.Z.pred (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.succ n_222222222223322) n_222222222223322)) Z0) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.succ n_222222222223322) (App Coq.ZArith.BinIntDef.Z.succ n_222222222223322)) (App Coq.ZArith.BinIntDef.Z.pred (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.succ n_222222222223322) n_222222222223322)) lemma_2222222222233222 Z0 Z0 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) Z0)))) (App Coq.ZArith.BinInt.Z.sub_succ_r (App Coq.ZArith.BinIntDef.Z.succ n_222222222223322) n_222222222223322) (App (Lambda lemma_2222222222233222 (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.succ n_222222222223322) n_222222222223322) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.sub n_222222222223322 n_222222222223322))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub n_222222222223322 n_222222222223322) Z0) (App eq Z (App Coq.ZArith.BinIntDef.Z.pred (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.succ n_222222222223322) n_222222222223322)) Z0) (App eq Z (App Coq.ZArith.BinIntDef.Z.pred (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.sub n_222222222223322 n_222222222223322))) Z0) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.pred (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.succ n_222222222223322) n_222222222223322)) (App Coq.ZArith.BinIntDef.Z.pred (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.sub n_222222222223322 n_222222222223322))) (App Coq.ZArith.BinInt.Z.pred_wd (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.succ n_222222222223322) n_222222222223322) (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.sub n_222222222223322 n_222222222223322)) lemma_2222222222233222) Z0 Z0 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) Z0)))) (App Coq.ZArith.BinInt.Z.sub_succ_l n_222222222223322 n_222222222223322) (App (Lambda lemma_2222222222233222 (App eq Z (App Coq.ZArith.BinIntDef.Z.pred (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.sub n_222222222223322 n_222222222223322))) (App Coq.ZArith.BinIntDef.Z.sub n_222222222223322 n_222222222223322)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub n_222222222223322 n_222222222223322) Z0) (App eq Z (App Coq.ZArith.BinIntDef.Z.pred (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.sub n_222222222223322 n_222222222223322))) Z0) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub n_222222222223322 n_222222222223322) Z0) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.pred (App Coq.ZArith.BinIntDef.Z.succ (App Coq.ZArith.BinIntDef.Z.sub n_222222222223322 n_222222222223322))) (App Coq.ZArith.BinIntDef.Z.sub n_222222222223322 n_222222222223322) lemma_2222222222233222 Z0 Z0 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) Z0)))) (App Coq.ZArith.BinInt.Z.pred_succ (App Coq.ZArith.BinIntDef.Z.sub n_222222222223322 n_222222222223322)) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq Z (App Coq.ZArith.BinIntDef.Z.sub n_222222222223322 n_222222222223322) Z0)))))) n_22222222222332) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub n_22222222222332 n_22222222222332) Z0)))) (Definition Coq.setoid_ring.InitialRing.Zth (App mk_rt Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp (App eq Z) Coq.ZArith.BinInt.Z.add_0_l Coq.ZArith.BinInt.Z.add_comm Coq.ZArith.BinInt.Z.add_assoc Coq.ZArith.BinInt.Z.mul_1_l Coq.ZArith.BinInt.Z.mul_comm Coq.ZArith.BinInt.Z.mul_assoc Coq.ZArith.BinInt.Z.mul_add_distr_r (Lambda x_22222222222332 Z (Lambda y_222222222223322 Z (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add x_22222222222332 (App Coq.ZArith.BinIntDef.Z.opp y_222222222223322))))) Coq.ZArith.BinInt.Z.sub_diag)) (Definition Coq.ZArith.BinIntDef.Z.compare (Lambda x_2222222222233222 Z (Lambda y_22222222222332222 Z (Case 0 (Lambda x_222222222223322222 Z comparison) (CaseMatch x_2222222222233222) (CaseBranches (Case 0 (Lambda y_222222222223322222 Z comparison) (CaseMatch y_22222222222332222) (CaseBranches Eq (Lambda y'_222222222223322222 positive Lt) (Lambda y'_222222222223322222 positive Gt))) (Lambda x'_222222222223322222 positive (Case 0 (Lambda y_2222222222233222222 Z comparison) (CaseMatch y_22222222222332222) (CaseBranches Gt (Lambda y'_2222222222233222222 positive (App Coq.PArith.BinPosDef.Pos.compare x'_222222222223322222 y'_2222222222233222222)) (Lambda y'_2222222222233222222 positive Gt)))) (Lambda x'_222222222223322222 positive (Case 0 (Lambda y_2222222222233222222 Z comparison) (CaseMatch y_22222222222332222) (CaseBranches Lt (Lambda y'_2222222222233222222 positive Lt) (Lambda y'_2222222222233222222 positive (App Coq.Init.Datatypes.CompOpp (App Coq.PArith.BinPosDef.Pos.compare x'_222222222223322222 y'_2222222222233222222))))))))))) (Definition Coq.ZArith.Zbool.Zeq_bool (Lambda x_22222222222332 Z (Lambda y_222222222223322 Z (Case 0 (Lambda x_2222222222233222 comparison bool) (CaseMatch (App Coq.ZArith.BinIntDef.Z.compare x_22222222222332 y_222222222223322)) (CaseBranches true false false))))) (Definition Coq.setoid_ring.Ring_theory.IDphi (Lambda R_22222222222332 (Sort Type) (Lambda x_222222222223322 R_22222222222332 x_222222222223322))) (Definition Coq.Classes.RelationClasses.reflexivity (Lambda A_2222222222233222222222222 (Sort Type) (Lambda R_22222222222332222222222222 (App Coq.Relations.Relation_Definitions.relation A_2222222222233222222222222) (Lambda Reflexive_222222222223322222222222222 (App Coq.Classes.RelationClasses.Reflexive A_2222222222233222222222222 R_22222222222332222222222222) Reflexive_222222222223322222222222222)))) (Definition Coq.Classes.RelationClasses.Equivalence_Reflexive (Lambda A_2222222222233222222222222 (Sort Type) (Lambda R_22222222222332222222222222 (App Coq.Relations.Relation_Definitions.relation A_2222222222233222222222222) (Lambda Equivalence_222222222223322222222222222 (App Equivalence A_2222222222233222222222222 R_22222222222332222222222222) (Case 2 (Lambda Equivalence_2222222222233222222222222222 (App Equivalence A_2222222222233222222222222 R_22222222222332222222222222) (App Coq.Classes.RelationClasses.Reflexive A_2222222222233222222222222 R_22222222222332222222222222)) (CaseMatch Equivalence_222222222223322222222222222) (CaseBranches (Lambda Equivalence_Reflexive_2222222222233222222222222222 (App Coq.Classes.RelationClasses.Reflexive A_2222222222233222222222222 R_22222222222332222222222222) (Lambda Equivalence_Symmetric_22222222222332222222222222222 (App Coq.Classes.RelationClasses.Symmetric A_2222222222233222222222222 R_22222222222332222222222222) (Lambda Equivalence_Transitive_222222222223322222222222222222 (App Coq.Classes.RelationClasses.Transitive A_2222222222233222222222222 R_22222222222332222222222222) Equivalence_Reflexive_2222222222233222222222222222))))))))) (Definition Coq.setoid_ring.Ring_theory.IDmorph (Lambda R_22222222222332 (Sort Type) (Lambda rO_222222222223322 R_22222222222332 (Lambda rI_2222222222233222 R_22222222222332 (Lambda radd_22222222222332222 (Prod out_22222222222332221 R_22222222222332 (Prod out_222222222223322211 R_22222222222332 R_22222222222332)) (Lambda rmul_222222222223322222 (Prod out_222222222223322221 R_22222222222332 (Prod out_2222222222233222211 R_22222222222332 R_22222222222332)) (Lambda rsub_2222222222233222222 (Prod out_2222222222233222221 R_22222222222332 (Prod out_22222222222332222211 R_22222222222332 R_22222222222332)) (Lambda ropp_22222222222332222222 (Prod out_22222222222332222221 R_22222222222332 R_22222222222332) (Lambda req_222222222223322222222 (Prod out_222222222223322222221 R_22222222222332 (Prod out_2222222222233222222211 R_22222222222332 (Sort Prop))) (Lambda Rsth_2222222222233222222222 (App Equivalence R_22222222222332 req_222222222223322222222) (Lambda reqb_22222222222332222222222 (Prod out_22222222222332222222221 R_22222222222332 (Prod out_222222222223322222222211 R_22222222222332 bool)) (Lambda morph_req_222222222223322222222222 (Prod x_222222222223322222222221 R_22222222222332 (Prod y_2222222222233222222222211 R_22222222222332 (Prod out_22222222222332222222222111 (App eq bool (App reqb_22222222222332222222222 x_222222222223322222222221 y_2222222222233222222222211) true) (App req_222222222223322222222 x_222222222223322222222221 y_2222222222233222222222211)))) (App mkmorph R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 req_222222222223322222222 R_22222222222332 rO_222222222223322 rI_2222222222233222 radd_22222222222332222 rmul_222222222223322222 rsub_2222222222233222222 ropp_22222222222332222222 reqb_22222222222332222222222 (App Coq.setoid_ring.Ring_theory.IDphi R_22222222222332) (App Coq.Classes.RelationClasses.reflexivity R_22222222222332 req_222222222223322222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_22222222222332 req_222222222223322222222 Rsth_2222222222233222222222) rO_222222222223322) (App Coq.Classes.RelationClasses.reflexivity R_22222222222332 req_222222222223322222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_22222222222332 req_222222222223322222222 Rsth_2222222222233222222222) rI_2222222222233222) (Lambda x_2222222222233222222222222 R_22222222222332 (Lambda y_22222222222332222222222222 R_22222222222332 (App Coq.Classes.RelationClasses.reflexivity R_22222222222332 req_222222222223322222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_22222222222332 req_222222222223322222222 Rsth_2222222222233222222222) (App radd_22222222222332222 (App Coq.setoid_ring.Ring_theory.IDphi R_22222222222332 x_2222222222233222222222222) (App Coq.setoid_ring.Ring_theory.IDphi R_22222222222332 y_22222222222332222222222222))))) (Lambda x_2222222222233222222222222 R_22222222222332 (Lambda y_22222222222332222222222222 R_22222222222332 (App Coq.Classes.RelationClasses.reflexivity R_22222222222332 req_222222222223322222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_22222222222332 req_222222222223322222222 Rsth_2222222222233222222222) (App rsub_2222222222233222222 (App Coq.setoid_ring.Ring_theory.IDphi R_22222222222332 x_2222222222233222222222222) (App Coq.setoid_ring.Ring_theory.IDphi R_22222222222332 y_22222222222332222222222222))))) (Lambda x_2222222222233222222222222 R_22222222222332 (Lambda y_22222222222332222222222222 R_22222222222332 (App Coq.Classes.RelationClasses.reflexivity R_22222222222332 req_222222222223322222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_22222222222332 req_222222222223322222222 Rsth_2222222222233222222222) (App rmul_222222222223322222 (App Coq.setoid_ring.Ring_theory.IDphi R_22222222222332 x_2222222222233222222222222) (App Coq.setoid_ring.Ring_theory.IDphi R_22222222222332 y_22222222222332222222222222))))) (Lambda x_2222222222233222222222222 R_22222222222332 (App Coq.Classes.RelationClasses.reflexivity R_22222222222332 req_222222222223322222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_22222222222332 req_222222222223322222222 Rsth_2222222222233222222222) (App ropp_22222222222332222222 (App Coq.setoid_ring.Ring_theory.IDphi R_22222222222332 x_2222222222233222222222222)))) morph_req_222222222223322222222222))))))))))))) (Definition Coq.ZArith.Zbool.Zeq_is_eq_bool (Lambda x_222222222223322222 Z (Lambda y_2222222222233222222 Z (Cast (App (Lambda lemma_22222222222332222222 (App Coq.Init.Logic.iff (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare x_222222222223322222 y_2222222222233222222) Eq) (App eq Z x_222222222223322222 y_2222222222233222222)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App eq Z x_222222222223322222 y_2222222222233222222) (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare x_222222222223322222 y_2222222222233222222) Eq) (App Coq.Classes.RelationClasses.symmetry (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Symmetric (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare x_222222222223322222 y_2222222222233222222) Eq) (App eq Z x_222222222223322222 y_2222222222233222222) lemma_22222222222332222222) (App eq bool (Case 0 (Lambda x_222222222223322222222 comparison bool) (CaseMatch (App Coq.ZArith.BinIntDef.Z.compare x_222222222223322222 y_2222222222233222222)) (CaseBranches true false false)) true) (App eq bool (Case 0 (Lambda x_222222222223322222222 comparison bool) (CaseMatch (App Coq.ZArith.BinIntDef.Z.compare x_222222222223322222 y_2222222222233222222)) (CaseBranches true false false)) true) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App eq bool (Case 0 (Lambda x_222222222223322222222 comparison bool) (CaseMatch (App Coq.ZArith.BinIntDef.Z.compare x_222222222223322222 y_2222222222233222222)) (CaseBranches true false false)) true)))) (App Coq.ZArith.BinInt.Z.compare_eq_iff x_222222222223322222 y_2222222222233222222) (LetIn c_22222222222332222223 (App Coq.ZArith.BinIntDef.Z.compare x_222222222223322222 y_2222222222233222222) comparison (Case 0 (Lambda c_222222222223322222232 comparison (App Coq.Init.Logic.iff (App eq comparison c_222222222223322222232 Eq) (App eq bool (Case 0 (Lambda x_2222222222233222222322 comparison bool) (CaseMatch c_222222222223322222232) (CaseBranches true false false)) true))) (CaseMatch c_22222222222332222223) (CaseBranches (App conj (Prod out_222222222223322222231 (App eq comparison Eq Eq) (App eq bool true true)) (Prod out_222222222223322222231 (App eq bool true true) (App eq comparison Eq Eq)) (Lambda H_222222222223322222232 (App eq comparison Eq Eq) (App eq_refl bool true)) (Lambda H_222222222223322222232 (App eq bool true true) (App eq_refl comparison Eq))) (App conj (Prod out_222222222223322222231 (App eq comparison Lt Eq) (App eq bool false true)) (Prod out_222222222223322222231 (App eq bool false true) (App eq comparison Lt Eq)) (Lambda H_222222222223322222232 (App eq comparison Lt Eq) (LetIn H0_2222222222233222222323 (Case 2 (Lambda y_2222222222233222222322 comparison (Lambda out_22222222222332222223222 (App eq comparison Lt y_2222222222233222222322) (Prod out_222222222223322222232221 (App eq comparison y_2222222222233222222322 Eq) (App eq bool false true)))) (CaseMatch H_222222222223322222232) (CaseBranches (Lambda H0_2222222222233222222322 (App eq comparison Lt Eq) (App (Lambda H0_22222222222332222223222 (App eq comparison Lt Eq) (LetIn H1_222222222223322222232223 (App Coq.Init.Logic.eq_ind comparison Lt (Lambda e_222222222223322222232222 comparison (Case 0 (Lambda c_2222222222233222222322222 comparison (Sort Prop)) (CaseMatch e_222222222223322222232222) (CaseBranches False True False))) I Eq H0_22222222222332222223222) False (App Coq.Init.Logic.False_ind (App eq bool false true) H1_222222222223322222232223))) H0_2222222222233222222322)))) (Prod out_2222222222233222222321 (App eq comparison Eq Eq) (App eq bool false true)) (App H0_2222222222233222222323 (App eq_refl comparison Eq)))) (Lambda H_222222222223322222232 (App eq bool false true) (LetIn H0_2222222222233222222323 (Case 2 (Lambda y_2222222222233222222322 bool (Lambda out_22222222222332222223222 (App eq bool false y_2222222222233222222322) (Prod out_222222222223322222232221 (App eq bool y_2222222222233222222322 true) (App eq comparison Lt Eq)))) (CaseMatch H_222222222223322222232) (CaseBranches (Lambda H0_2222222222233222222322 (App eq bool false true) (App (Lambda H0_22222222222332222223222 (App eq bool false true) (LetIn H1_222222222223322222232223 (App Coq.Init.Logic.eq_ind bool false (Lambda e_222222222223322222232222 bool (Case 0 (Lambda b_2222222222233222222322222 bool (Sort Prop)) (CaseMatch e_222222222223322222232222) (CaseBranches False True))) I true H0_22222222222332222223222) False (App Coq.Init.Logic.False_ind (App eq comparison Lt Eq) H1_222222222223322222232223))) H0_2222222222233222222322)))) (Prod out_2222222222233222222321 (App eq bool true true) (App eq comparison Lt Eq)) (App H0_2222222222233222222323 (App eq_refl bool true))))) (App conj (Prod out_222222222223322222231 (App eq comparison Gt Eq) (App eq bool false true)) (Prod out_222222222223322222231 (App eq bool false true) (App eq comparison Gt Eq)) (Lambda H_222222222223322222232 (App eq comparison Gt Eq) (LetIn H0_2222222222233222222323 (Case 2 (Lambda y_2222222222233222222322 comparison (Lambda out_22222222222332222223222 (App eq comparison Gt y_2222222222233222222322) (Prod out_222222222223322222232221 (App eq comparison y_2222222222233222222322 Eq) (App eq bool false true)))) (CaseMatch H_222222222223322222232) (CaseBranches (Lambda H0_2222222222233222222322 (App eq comparison Gt Eq) (App (Lambda H0_22222222222332222223222 (App eq comparison Gt Eq) (LetIn H1_222222222223322222232223 (App Coq.Init.Logic.eq_ind comparison Gt (Lambda e_222222222223322222232222 comparison (Case 0 (Lambda c_2222222222233222222322222 comparison (Sort Prop)) (CaseMatch e_222222222223322222232222) (CaseBranches False False True))) I Eq H0_22222222222332222223222) False (App Coq.Init.Logic.False_ind (App eq bool false true) H1_222222222223322222232223))) H0_2222222222233222222322)))) (Prod out_2222222222233222222321 (App eq comparison Eq Eq) (App eq bool false true)) (App H0_2222222222233222222323 (App eq_refl comparison Eq)))) (Lambda H_222222222223322222232 (App eq bool false true) (LetIn H0_2222222222233222222323 (Case 2 (Lambda y_2222222222233222222322 bool (Lambda out_22222222222332222223222 (App eq bool false y_2222222222233222222322) (Prod out_222222222223322222232221 (App eq bool y_2222222222233222222322 true) (App eq comparison Gt Eq)))) (CaseMatch H_222222222223322222232) (CaseBranches (Lambda H0_2222222222233222222322 (App eq bool false true) (App (Lambda H0_22222222222332222223222 (App eq bool false true) (LetIn H1_222222222223322222232223 (App Coq.Init.Logic.eq_ind bool false (Lambda e_222222222223322222232222 bool (Case 0 (Lambda b_2222222222233222222322222 bool (Sort Prop)) (CaseMatch e_222222222223322222232222) (CaseBranches False True))) I true H0_22222222222332222223222) False (App Coq.Init.Logic.False_ind (App eq comparison Gt Eq) H1_222222222223322222232223))) H0_2222222222233222222322)))) (Prod out_2222222222233222222321 (App eq bool true true) (App eq comparison Gt Eq)) (App H0_2222222222233222222323 (App eq_refl bool true))))))))) REVERTcast (App Coq.Init.Logic.iff (App eq Z x_222222222223322222 y_2222222222233222222) (App eq bool (App Coq.ZArith.Zbool.Zeq_bool x_222222222223322222 y_2222222222233222222) true)))))) (Definition Coq.ZArith.Zbool.Zeq_bool_eq (Lambda x_22222222222332 Z (Lambda y_222222222223322 Z (LetIn H_2222222222233223 (Lambda x_2222222222233222 Z (Lambda y_22222222222332222 Z (Case 2 (Lambda out_222222222223322222 (App and (Prod out_222222222223322221 (App eq Z x_2222222222233222 y_22222222222332222) (App eq bool (App Coq.ZArith.Zbool.Zeq_bool x_2222222222233222 y_22222222222332222) true)) (Prod out_222222222223322221 (App eq bool (App Coq.ZArith.Zbool.Zeq_bool x_2222222222233222 y_22222222222332222) true) (App eq Z x_2222222222233222 y_22222222222332222))) (Prod out_2222222222233222221 (App eq bool (App Coq.ZArith.Zbool.Zeq_bool x_2222222222233222 y_22222222222332222) true) (App eq Z x_2222222222233222 y_22222222222332222))) (CaseMatch (App Coq.ZArith.Zbool.Zeq_is_eq_bool x_2222222222233222 y_22222222222332222)) (CaseBranches (Lambda out_222222222223322222 (Prod out_222222222223322221 (App eq Z x_2222222222233222 y_22222222222332222) (App eq bool (App Coq.ZArith.Zbool.Zeq_bool x_2222222222233222 y_22222222222332222) true)) (Lambda out_2222222222233222222 (Prod out_2222222222233222221 (App eq bool (App Coq.ZArith.Zbool.Zeq_bool x_2222222222233222 y_22222222222332222) true) (App eq Z x_2222222222233222 y_22222222222332222)) out_2222222222233222222)))))) (Prod x_2222222222233221 Z (Prod y_22222222222332211 Z (Prod out_222222222223322111 (App eq bool (App Coq.ZArith.Zbool.Zeq_bool x_2222222222233221 y_22222222222332211) true) (App eq Z x_2222222222233221 y_22222222222332211)))) (App H_2222222222233223 x_22222222222332 y_222222222223322))))) (Definition Coq.ZArith.BinIntDef.Z.of_N (Lambda n_22222222222332 N (Case 0 (Lambda n_222222222223322 N Z) (CaseMatch n_22222222222332) (CaseBranches Z0 (Lambda p_222222222223322 positive (App Zpos p_222222222223322)))))) (Definition Coq.ZArith.BinIntDef.Z.pow_pos (Lambda z_22222222222332222 Z (App Coq.PArith.BinPosDef.Pos.iter Z (App Coq.ZArith.BinIntDef.Z.mul z_22222222222332222) (App Zpos xH)))) (Definition Coq.ZArith.BinIntDef.Z.pow (Lambda x_22222222222332 Z (Lambda y_222222222223322 Z (Case 0 (Lambda y_2222222222233222 Z Z) (CaseMatch y_222222222223322) (CaseBranches (App Zpos xH) (Lambda p_2222222222233222 positive (App Coq.ZArith.BinIntDef.Z.pow_pos x_22222222222332 p_2222222222233222)) (Lambda p_2222222222233222 positive Z0)))))) (Definition Coq.setoid_ring.Ring_theory.pow_N (Lambda R_22222222222332222 (Sort Type) (Lambda rI_222222222223322222 R_22222222222332222 (Lambda rmul_2222222222233222222 (Prod out_2222222222233222221 R_22222222222332222 (Prod out_22222222222332222211 R_22222222222332222 R_22222222222332222)) (Lambda x_22222222222332222222 R_22222222222332222 (Lambda p_222222222223322222222 N (Case 0 (Lambda p_2222222222233222222222 N R_22222222222332222) (CaseMatch p_222222222223322222222) (CaseBranches rI_222222222223322222 (Lambda p_2222222222233222222222 positive (App Coq.setoid_ring.Ring_theory.pow_pos R_22222222222332222 rmul_2222222222233222222 x_22222222222332222222 p_2222222222233222222222)))))))))) (Definition Coq.setoid_ring.Ring_theory.pow_pos (Lambda R_22222222222332222 (Sort Type) (Lambda rmul_222222222223322222 (Prod out_222222222223322221 R_22222222222332222 (Prod out_2222222222233222211 R_22222222222332222 R_22222222222332222)) (Fix (Functions (App pow_pos 0 (Prod x_2222222222233222221 R_22222222222332222 (Prod i_22222222222332222211 positive R_22222222222332222)) (Lambda x_2222222222233222222 R_22222222222332222 (Lambda i_22222222222332222222 positive (Case 0 (Lambda i_222222222223322222222 positive R_22222222222332222) (CaseMatch i_22222222222332222222) (CaseBranches (Lambda i_222222222223322222222 positive (LetIn p_2222222222233222222223 (App pow_pos x_2222222222233222222 i_222222222223322222222) R_22222222222332222 (App rmul_222222222223322222 x_2222222222233222222 (App rmul_222222222223322222 p_2222222222233222222223 p_2222222222233222222223)))) (Lambda i_222222222223322222222 positive (LetIn p_2222222222233222222223 (App pow_pos x_2222222222233222222 i_222222222223322222222) R_22222222222332222 (App rmul_222222222223322222 p_2222222222233222222223 p_2222222222233222222223))) x_2222222222233222222)))))) 0)))) (Definition Coq.PArith.BinPosDef.Pos.iter (Lambda A_222222222223322222 (Sort Type) (Lambda f_2222222222233222222 (Prod out_2222222222233222221 A_222222222223322222 A_222222222223322222) (Fix (Functions (App iter_fix 0 (Prod x_22222222222332222221 A_222222222223322222 (Prod n_222222222223322222211 positive A_222222222223322222)) (Lambda x_22222222222332222222 A_222222222223322222 (Lambda n_222222222223322222222 positive (Case 0 (Lambda n_2222222222233222222222 positive A_222222222223322222) (CaseMatch n_222222222223322222222) (CaseBranches (Lambda n'_2222222222233222222222 positive (App f_2222222222233222222 (App iter_fix (App iter_fix x_22222222222332222222 n'_2222222222233222222222) n'_2222222222233222222222))) (Lambda n'_2222222222233222222222 positive (App iter_fix (App iter_fix x_22222222222332222222 n'_2222222222233222222222) n'_2222222222233222222222)) (App f_2222222222233222222 x_22222222222332222222))))))) 0)))) (Definition Coq.Numbers.BinNums.positive_ind (Lambda P_22222222222332222 (Prod p_22222222222332221 positive (Sort Prop)) (Lambda f_222222222223322222 (Prod p_222222222223322221 positive (Prod out_2222222222233222211 (App P_22222222222332222 p_222222222223322221) (App P_22222222222332222 (App xI p_222222222223322221)))) (Lambda f_2222222222233222222 (Prod p_2222222222233222221 positive (Prod out_22222222222332222211 (App P_22222222222332222 p_2222222222233222221) (App P_22222222222332222 (App xO p_2222222222233222221)))) (Lambda f_22222222222332222222 (App P_22222222222332222 xH) (Fix (Functions (App F 0 (Prod p_222222222223322222221 positive (App P_22222222222332222 p_222222222223322222221)) (Lambda p_222222222223322222222 positive (Case 0 (Lambda p_2222222222233222222222 positive (App P_22222222222332222 p_2222222222233222222222)) (CaseMatch p_222222222223322222222) (CaseBranches (Lambda p_2222222222233222222222 positive (App f_222222222223322222 p_2222222222233222222222 (App F p_2222222222233222222222))) (Lambda p_2222222222233222222222 positive (App f_2222222222233222222 p_2222222222233222222222 (App F p_2222222222233222222222))) f_22222222222332222222))))) 0)))))) (Definition Coq.ZArith.BinInt.Z.mul_1_r (Lambda n_22222222222332222 Z (App (Lambda lemma_222222222223322222 (App eq Z (App Zpos xH) (App Coq.ZArith.BinIntDef.Z.succ Z0)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Transitive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.succ Z0)) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism Z (Prod out_2222222222233222221 Z Z) (App eq Z) (App Coq.Classes.Morphisms.respectful Z Z (App eq Z) (App eq Z)) Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinInt.Z.mul_wd n_22222222222332222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) n_22222222222332222) (App Zpos xH) (App Coq.ZArith.BinIntDef.Z.succ Z0) lemma_222222222223322222) n_22222222222332222 n_22222222222332222 (App Coq.Classes.Morphisms.eq_proper_proxy Z n_22222222222332222))) Coq.ZArith.BinInt.Z.one_succ (App (Lambda lemma_222222222223322222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.succ Z0)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 Z0) n_22222222222332222)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Transitive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 (App Coq.ZArith.BinIntDef.Z.succ Z0)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 Z0) n_22222222222332222) lemma_222222222223322222 n_22222222222332222 n_22222222222332222 (App Coq.Classes.Morphisms.eq_proper_proxy Z n_22222222222332222))) (App Coq.ZArith.BinInt.Z.mul_succ_r n_22222222222332222 Z0) (App (Lambda lemma_222222222223322222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 Z0) Z0) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Transitive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 Z0) n_22222222222332222) (App Coq.ZArith.BinIntDef.Z.add Z0 n_22222222222332222) (App Coq.ZArith.BinInt.Z.add_wd (App Coq.ZArith.BinIntDef.Z.mul n_22222222222332222 Z0) Z0 lemma_222222222223322222 n_22222222222332222 n_22222222222332222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) n_22222222222332222)) n_22222222222332222 n_22222222222332222 (App Coq.Classes.Morphisms.eq_proper_proxy Z n_22222222222332222))) (App Coq.ZArith.BinInt.Z.mul_0_r n_22222222222332222) (App (Lambda lemma_222222222223322222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add Z0 n_22222222222332222) n_22222222222332222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Transitive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add Z0 n_22222222222332222) n_22222222222332222 lemma_222222222223322222 n_22222222222332222 n_22222222222332222 (App Coq.Classes.Morphisms.eq_proper_proxy Z n_22222222222332222))) (App Coq.ZArith.BinInt.Z.add_0_l n_22222222222332222) (App Coq.Classes.RelationClasses.reflexivity Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) n_22222222222332222))))))) (Definition Coq.ZArith.Zpow_def.Zpower_theory (App mkpow_th Z (App Zpos xH) Coq.ZArith.BinIntDef.Z.mul (App eq Z) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow (Lambda r_22222222222332 Z (Lambda n_222222222223322 N (Case 0 (Lambda n_2222222222233222 N (App eq Z (App Coq.ZArith.BinIntDef.Z.pow r_22222222222332 (App Coq.ZArith.BinIntDef.Z.of_N n_2222222222233222)) (App Coq.setoid_ring.Ring_theory.pow_N Z (App Zpos xH) Coq.ZArith.BinIntDef.Z.mul r_22222222222332 n_2222222222233222))) (CaseMatch n_222222222223322) (CaseBranches (Cast (App eq_refl Z (App Zpos xH)) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.pow r_22222222222332 (App Coq.ZArith.BinIntDef.Z.of_N N0)) (App Coq.setoid_ring.Ring_theory.pow_N Z (App Zpos xH) Coq.ZArith.BinIntDef.Z.mul r_22222222222332 N0))) (Lambda p_2222222222233222 positive (Cast (Cast (App Coq.Init.Logic.eq_ind Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_2222222222233222) (App Zpos xH)) (Lambda z_22222222222332222 Z (App eq Z (App Coq.PArith.BinPosDef.Pos.iter Z (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332) (App Zpos xH) p_2222222222233222) z_22222222222332222)) (App Coq.Numbers.BinNums.positive_ind (Lambda p_22222222222332222 positive (Prod z_222222222223322221 Z (App eq Z (App Coq.PArith.BinPosDef.Pos.iter Z (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332) z_222222222223322221 p_22222222222332222) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) z_222222222223322221)))) (Lambda p_22222222222332222 positive (Lambda IHp_222222222223322222 (Prod z_222222222223322221 Z (App eq Z (App Coq.PArith.BinPosDef.Pos.iter Z (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332) z_222222222223322221 p_22222222222332222) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) z_222222222223322221))) (Cast (Lambda z_2222222222233222222 Z (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) (App Coq.PArith.BinPosDef.Pos.iter Z (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332) z_2222222222233222222 p_22222222222332222)) (Lambda z_22222222222332222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332 z_22222222222332222222) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332 (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222))) z_2222222222233222222))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) z_2222222222233222222) (Lambda z_22222222222332222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332 (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) z_22222222222332222222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332 (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222))) z_2222222222233222222))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332 (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) z_2222222222233222222)) (Lambda z_22222222222332222222 Z (App eq Z z_22222222222332222222 (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332 (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222))) z_2222222222233222222))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332 (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222)) (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222)) z_2222222222233222222) (Lambda z_22222222222332222222 Z (App eq Z z_22222222222332222222 (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332 (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222))) z_2222222222233222222))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332 (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222)) (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222)) (Lambda z_22222222222332222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332 (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222)) (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222)) z_2222222222233222222) (App Coq.ZArith.BinIntDef.Z.mul z_22222222222332222222 z_2222222222233222222))) (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332 (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222)) (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222)) z_2222222222233222222)) (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332 (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222))) (App Coq.ZArith.BinInt.Z.mul_assoc r_22222222222332 (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222))) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332 (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) z_2222222222233222222)) (App Coq.ZArith.BinInt.Z.mul_assoc (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332 (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222)) (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) z_2222222222233222222)) (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332 (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) z_2222222222233222222))) (App Coq.ZArith.BinInt.Z.mul_assoc r_22222222222332 (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) z_2222222222233222222))) (App Coq.PArith.BinPosDef.Pos.iter Z (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332) z_2222222222233222222 p_22222222222332222) (App IHp_222222222223322222 z_2222222222233222222)) (App Coq.PArith.BinPosDef.Pos.iter Z (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332) (App Coq.PArith.BinPosDef.Pos.iter Z (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332) z_2222222222233222222 p_22222222222332222) p_22222222222332222) (App IHp_222222222223322222 (App Coq.PArith.BinPosDef.Pos.iter Z (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332) z_2222222222233222222 p_22222222222332222)))) REVERTcast (Prod z_2222222222233222221 Z (App eq Z (App Coq.PArith.BinPosDef.Pos.iter Z (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332) z_2222222222233222221 (App xI p_22222222222332222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 (App xI p_22222222222332222)) z_2222222222233222221)))))) (Lambda p_22222222222332222 positive (Lambda IHp_222222222223322222 (Prod z_222222222223322221 Z (App eq Z (App Coq.PArith.BinPosDef.Pos.iter Z (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332) z_222222222223322221 p_22222222222332222) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) z_222222222223322221))) (Cast (Lambda z_2222222222233222222 Z (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) (App Coq.PArith.BinPosDef.Pos.iter Z (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332) z_2222222222233222222 p_22222222222332222)) (Lambda z_22222222222332222222 Z (App eq Z z_22222222222332222222 (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222)) z_2222222222233222222))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) z_2222222222233222222) (Lambda z_22222222222332222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) z_22222222222332222222) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222)) z_2222222222233222222))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222)) z_2222222222233222222) (Lambda z_22222222222332222222 Z (App eq Z z_22222222222332222222 (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222)) z_2222222222233222222))) (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222)) z_2222222222233222222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) z_2222222222233222222)) (App Coq.ZArith.BinInt.Z.mul_assoc (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_22222222222332222) z_2222222222233222222)) (App Coq.PArith.BinPosDef.Pos.iter Z (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332) z_2222222222233222222 p_22222222222332222) (App IHp_222222222223322222 z_2222222222233222222)) (App Coq.PArith.BinPosDef.Pos.iter Z (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332) (App Coq.PArith.BinPosDef.Pos.iter Z (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332) z_2222222222233222222 p_22222222222332222) p_22222222222332222) (App IHp_222222222223322222 (App Coq.PArith.BinPosDef.Pos.iter Z (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332) z_2222222222233222222 p_22222222222332222)))) REVERTcast (Prod z_2222222222233222221 Z (App eq Z (App Coq.PArith.BinPosDef.Pos.iter Z (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332) z_2222222222233222221 (App xO p_22222222222332222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 (App xO p_22222222222332222)) z_2222222222233222221)))))) (Cast (Lambda z_22222222222332222 Z (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332 z_22222222222332222))) REVERTcast (Prod z_22222222222332221 Z (App eq Z (App Coq.PArith.BinPosDef.Pos.iter Z (App Coq.ZArith.BinIntDef.Z.mul r_22222222222332) z_22222222222332221 xH) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 xH) z_22222222222332221)))) p_2222222222233222 (App Zpos xH)) (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_2222222222233222) (App Coq.ZArith.BinInt.Z.mul_1_r (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_2222222222233222))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.pow_pos r_22222222222332 p_2222222222233222) (App Coq.setoid_ring.Ring_theory.pow_pos Z Coq.ZArith.BinIntDef.Z.mul r_22222222222332 p_2222222222233222))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.pow r_22222222222332 (App Coq.ZArith.BinIntDef.Z.of_N (App Npos p_2222222222233222))) (App Coq.setoid_ring.Ring_theory.pow_N Z (App Zpos xH) Coq.ZArith.BinIntDef.Z.mul r_22222222222332 (App Npos p_2222222222233222))))))))))) (Definition Coq.NArith.BinNatDef.N.pos_div_eucl (Fix (Functions (App pos_div_eucl 0 (Prod a_222222222223322221 positive (Prod b_2222222222233222211 N (App prod N N))) (Lambda a_222222222223322222 positive (Lambda b_2222222222233222222 N (Case 0 (Lambda a_22222222222332222222 positive (App prod N N)) (CaseMatch a_222222222223322222) (CaseBranches (Lambda a'_22222222222332222222 positive (Case 2 (Lambda p_222222222223322222222 (App prod N N) (App prod N N)) (CaseMatch (App pos_div_eucl a'_22222222222332222222 b_2222222222233222222)) (CaseBranches (Lambda q_222222222223322222222 N (Lambda r_2222222222233222222222 N (LetIn r'_22222222222332222222223 (App Coq.NArith.BinNatDef.N.succ_double r_2222222222233222222222) N (Case 0 (Lambda b_222222222223322222222232 bool (App prod N N)) (CaseMatch (App Coq.NArith.BinNatDef.N.leb b_2222222222233222222 r'_22222222222332222222223)) (CaseBranches (App pair N N (App Coq.NArith.BinNatDef.N.succ_double q_222222222223322222222) (App Coq.NArith.BinNatDef.N.sub r'_22222222222332222222223 b_2222222222233222222)) (App pair N N (App Coq.NArith.BinNatDef.N.double q_222222222223322222222) r'_22222222222332222222223))))))))) (Lambda a'_22222222222332222222 positive (Case 2 (Lambda p_222222222223322222222 (App prod N N) (App prod N N)) (CaseMatch (App pos_div_eucl a'_22222222222332222222 b_2222222222233222222)) (CaseBranches (Lambda q_222222222223322222222 N (Lambda r_2222222222233222222222 N (LetIn r'_22222222222332222222223 (App Coq.NArith.BinNatDef.N.double r_2222222222233222222222) N (Case 0 (Lambda b_222222222223322222222232 bool (App prod N N)) (CaseMatch (App Coq.NArith.BinNatDef.N.leb b_2222222222233222222 r'_22222222222332222222223)) (CaseBranches (App pair N N (App Coq.NArith.BinNatDef.N.succ_double q_222222222223322222222) (App Coq.NArith.BinNatDef.N.sub r'_22222222222332222222223 b_2222222222233222222)) (App pair N N (App Coq.NArith.BinNatDef.N.double q_222222222223322222222) r'_22222222222332222222223))))))))) (Case 0 (Lambda b_22222222222332222222 N (App prod N N)) (CaseMatch b_2222222222233222222) (CaseBranches (App pair N N N0 (App Npos xH)) (Lambda p_22222222222332222222 positive (Case 0 (Lambda p_222222222223322222222 positive (App prod N N)) (CaseMatch p_22222222222332222222) (CaseBranches (Lambda p_222222222223322222222 positive (App pair N N N0 (App Npos xH))) (Lambda p_222222222223322222222 positive (App pair N N N0 (App Npos xH))) (App pair N N (App Npos xH) N0)))))))))))) 0)) (Definition Coq.ZArith.BinIntDef.Z.quotrem (Lambda a_22222222222332 Z (Lambda b_222222222223322 Z (Case 0 (Lambda a_2222222222233222 Z (App prod Z Z)) (CaseMatch a_22222222222332) (CaseBranches (App pair Z Z Z0 Z0) (Lambda a_2222222222233222 positive (Case 0 (Lambda b_22222222222332222 Z (App prod Z Z)) (CaseMatch b_222222222223322) (CaseBranches (App pair Z Z Z0 a_22222222222332) (Lambda b_22222222222332222 positive (Case 2 (Lambda p_222222222223322222 (App prod N N) (App prod Z Z)) (CaseMatch (App Coq.NArith.BinNatDef.N.pos_div_eucl a_2222222222233222 (App Npos b_22222222222332222))) (CaseBranches (Lambda q_222222222223322222 N (Lambda r_2222222222233222222 N (App pair Z Z (App Coq.ZArith.BinIntDef.Z.of_N q_222222222223322222) (App Coq.ZArith.BinIntDef.Z.of_N r_2222222222233222222))))))) (Lambda b_22222222222332222 positive (Case 2 (Lambda p_222222222223322222 (App prod N N) (App prod Z Z)) (CaseMatch (App Coq.NArith.BinNatDef.N.pos_div_eucl a_2222222222233222 (App Npos b_22222222222332222))) (CaseBranches (Lambda q_222222222223322222 N (Lambda r_2222222222233222222 N (App pair Z Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N q_222222222223322222)) (App Coq.ZArith.BinIntDef.Z.of_N r_2222222222233222222)))))))))) (Lambda a_2222222222233222 positive (Case 0 (Lambda b_22222222222332222 Z (App prod Z Z)) (CaseMatch b_222222222223322) (CaseBranches (App pair Z Z Z0 a_22222222222332) (Lambda b_22222222222332222 positive (Case 2 (Lambda p_222222222223322222 (App prod N N) (App prod Z Z)) (CaseMatch (App Coq.NArith.BinNatDef.N.pos_div_eucl a_2222222222233222 (App Npos b_22222222222332222))) (CaseBranches (Lambda q_222222222223322222 N (Lambda r_2222222222233222222 N (App pair Z Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N q_222222222223322222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N r_2222222222233222222)))))))) (Lambda b_22222222222332222 positive (Case 2 (Lambda p_222222222223322222 (App prod N N) (App prod Z Z)) (CaseMatch (App Coq.NArith.BinNatDef.N.pos_div_eucl a_2222222222233222 (App Npos b_22222222222332222))) (CaseBranches (Lambda q_222222222223322222 N (Lambda r_2222222222233222222 N (App pair Z Z (App Coq.ZArith.BinIntDef.Z.of_N q_222222222223322222) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N r_2222222222233222222)))))))))))))))) (Definition Coq.Setoids.Setoid.Setoid_Theory Equivalence) (Definition Coq.Setoids.Setoid.Seq_refl (Lambda A_22222222222332222222222 (Sort Type) (Lambda Aeq_222222222223322222222222 (App Coq.Relations.Relation_Definitions.relation A_22222222222332222222222) (Lambda s_2222222222233222222222222 (App Coq.Setoids.Setoid.Setoid_Theory A_22222222222332222222222 Aeq_222222222223322222222222) (Lambda x_22222222222332222222222222 A_22222222222332222222222 (App Coq.Classes.RelationClasses.reflexivity A_22222222222332222222222 Aeq_222222222223322222222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive A_22222222222332222222222 Aeq_222222222223322222222222 s_2222222222233222222222222) x_22222222222332222222222222)))))) (Definition Coq.ZArith.BinInt.Z.quotrem_eq (Lambda a_22222222222332222222 Z (Lambda b_222222222223322222222 Z (Case 0 (Lambda z_2222222222233222222222 Z (Case 2 (Lambda p_22222222222332222222222 (App prod Z Z) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.quotrem z_2222222222233222222222 b_222222222223322222222)) (CaseBranches (Lambda q_22222222222332222222222 Z (Lambda r_222222222223322222222222 Z (App eq Z z_2222222222233222222222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul q_22222222222332222222222 b_222222222223322222222) r_222222222223322222222222))))))) (CaseMatch a_22222222222332222222) (CaseBranches (Case 0 (Lambda z_2222222222233222222222 Z (Case 2 (Lambda p_22222222222332222222222 (App prod Z Z) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.quotrem Z0 z_2222222222233222222222)) (CaseBranches (Lambda q_22222222222332222222222 Z (Lambda r_222222222223322222222222 Z (App eq Z Z0 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul q_22222222222332222222222 z_2222222222233222222222) r_222222222223322222222222))))))) (CaseMatch b_222222222223322222222) (CaseBranches (Cast (App eq_refl Z Z0) REVERTcast (Case 2 (Lambda p_2222222222233222222222 (App prod Z Z) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.quotrem Z0 Z0)) (CaseBranches (Lambda q_2222222222233222222222 Z (Lambda r_22222222222332222222222 Z (App eq Z Z0 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul q_2222222222233222222222 Z0) r_22222222222332222222222))))))) (Lambda b_2222222222233222222222 positive (Cast (App eq_refl Z Z0) REVERTcast (Case 2 (Lambda p_22222222222332222222222 (App prod Z Z) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.quotrem Z0 (App Zpos b_2222222222233222222222))) (CaseBranches (Lambda q_22222222222332222222222 Z (Lambda r_222222222223322222222222 Z (App eq Z Z0 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul q_22222222222332222222222 (App Zpos b_2222222222233222222222)) r_222222222223322222222222)))))))) (Lambda b_2222222222233222222222 positive (Cast (App eq_refl Z Z0) REVERTcast (Case 2 (Lambda p_22222222222332222222222 (App prod Z Z) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.quotrem Z0 (App Zneg b_2222222222233222222222))) (CaseBranches (Lambda q_22222222222332222222222 Z (Lambda r_222222222223322222222222 Z (App eq Z Z0 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul q_22222222222332222222222 (App Zneg b_2222222222233222222222)) r_222222222223322222222222)))))))))) (Lambda a_2222222222233222222222 positive (Case 0 (Lambda z_22222222222332222222222 Z (Case 2 (Lambda p_222222222223322222222222 (App prod Z Z) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.quotrem (App Zpos a_2222222222233222222222) z_22222222222332222222222)) (CaseBranches (Lambda q_222222222223322222222222 Z (Lambda r_2222222222233222222222222 Z (App eq Z (App Zpos a_2222222222233222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul q_222222222223322222222222 z_22222222222332222222222) r_2222222222233222222222222))))))) (CaseMatch b_222222222223322222222) (CaseBranches (Cast (App eq_refl Z (App Zpos a_2222222222233222222222)) REVERTcast (Case 2 (Lambda p_22222222222332222222222 (App prod Z Z) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.quotrem (App Zpos a_2222222222233222222222) Z0)) (CaseBranches (Lambda q_22222222222332222222222 Z (Lambda r_222222222223322222222222 Z (App eq Z (App Zpos a_2222222222233222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul q_22222222222332222222222 Z0) r_222222222223322222222222))))))) (Lambda b_22222222222332222222222 positive (Cast (App (Case 2 (Lambda p_222222222223322222222222 (App prod N N) (Prod out_2222222222233222222222221 (Case 2 (Lambda p_2222222222233222222222222 (App prod N N) (Sort Prop)) (CaseMatch p_222222222223322222222222) (CaseBranches (Lambda q_2222222222233222222222222 N (Lambda r_22222222222332222222222222 N (App eq N (App Npos a_2222222222233222222222) (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul q_2222222222233222222222222 (App Npos b_22222222222332222222222)) r_22222222222332222222222222)))))) (Case 2 (Lambda p_22222222222332222222222212 (App prod Z Z) (Sort Prop)) (CaseMatch (Case 2 (Lambda p_22222222222332222222222212 (App prod N N) (App prod Z Z)) (CaseMatch p_222222222223322222222222) (CaseBranches (Lambda q_22222222222332222222222212 N (Lambda r_222222222223322222222222122 N (App pair Z Z (App Coq.ZArith.BinIntDef.Z.of_N q_22222222222332222222222212) (App Coq.ZArith.BinIntDef.Z.of_N r_222222222223322222222222122))))))) (CaseBranches (Lambda q_22222222222332222222222212 Z (Lambda r_222222222223322222222222122 Z (App eq Z (App Zpos a_2222222222233222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul q_22222222222332222222222212 (App Zpos b_22222222222332222222222)) r_222222222223322222222222122)))))))) (CaseMatch (App Coq.NArith.BinNatDef.N.pos_div_eucl a_2222222222233222222222 (App Npos b_22222222222332222222222))) (CaseBranches (Lambda q_222222222223322222222222 N (Lambda r_2222222222233222222222222 N (Lambda H_22222222222332222222222222 (App eq N (App Npos a_2222222222233222222222) (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul q_222222222223322222222222 (App Npos b_22222222222332222222222)) r_2222222222233222222222222)) (App Coq.Init.Logic.eq_ind_r N (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul q_222222222223322222222222 (App Npos b_22222222222332222222222)) r_2222222222233222222222222) (Lambda n_222222222223322222222222222 N (App eq Z (App Coq.ZArith.BinIntDef.Z.of_N n_222222222223322222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.of_N q_222222222223322222222222) (App Zpos b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.of_N r_2222222222233222222222222)))) (Case 0 (Lambda n_222222222223322222222222222 N (App eq Z (App Coq.ZArith.BinIntDef.Z.of_N (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul n_222222222223322222222222222 (App Npos b_22222222222332222222222)) r_2222222222233222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.of_N n_222222222223322222222222222) (App Zpos b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.of_N r_2222222222233222222222222)))) (CaseMatch q_222222222223322222222222) (CaseBranches (Case 0 (Lambda n_222222222223322222222222222 N (App eq Z (App Coq.ZArith.BinIntDef.Z.of_N (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul N0 (App Npos b_22222222222332222222222)) n_222222222223322222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.of_N N0) (App Zpos b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.of_N n_222222222223322222222222222)))) (CaseMatch r_2222222222233222222222222) (CaseBranches (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.of_N N0) (App Zpos b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.of_N N0))) (Lambda p_222222222223322222222222222 positive (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.of_N N0) (App Zpos b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.of_N (App Npos p_222222222223322222222222222))))))) (Lambda p_222222222223322222222222222 positive (Case 0 (Lambda n_2222222222233222222222222222 N (App eq Z (App Coq.ZArith.BinIntDef.Z.of_N (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul (App Npos p_222222222223322222222222222) (App Npos b_22222222222332222222222)) n_2222222222233222222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.of_N (App Npos p_222222222223322222222222222)) (App Zpos b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.of_N n_2222222222233222222222222222)))) (CaseMatch r_2222222222233222222222222) (CaseBranches (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.of_N (App Npos p_222222222223322222222222222)) (App Zpos b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.of_N N0))) (Lambda p0_2222222222233222222222222222 positive (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.of_N (App Npos p_222222222223322222222222222)) (App Zpos b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.of_N (App Npos p0_2222222222233222222222222222)))))))))) (App Npos a_2222222222233222222222) H_22222222222332222222222222)))))) (App Coq.NArith.BinNat.N.pos_div_eucl_spec a_2222222222233222222222 (App Npos b_22222222222332222222222))) REVERTcast (Case 2 (Lambda p_222222222223322222222222 (App prod Z Z) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.quotrem (App Zpos a_2222222222233222222222) (App Zpos b_22222222222332222222222))) (CaseBranches (Lambda q_222222222223322222222222 Z (Lambda r_2222222222233222222222222 Z (App eq Z (App Zpos a_2222222222233222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul q_222222222223322222222222 (App Zpos b_22222222222332222222222)) r_2222222222233222222222222)))))))) (Lambda b_22222222222332222222222 positive (Cast (App (Case 2 (Lambda p_222222222223322222222222 (App prod N N) (Prod out_2222222222233222222222221 (Case 2 (Lambda p_2222222222233222222222222 (App prod N N) (Sort Prop)) (CaseMatch p_222222222223322222222222) (CaseBranches (Lambda q_2222222222233222222222222 N (Lambda r_22222222222332222222222222 N (App eq N (App Npos a_2222222222233222222222) (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul q_2222222222233222222222222 (App Npos b_22222222222332222222222)) r_22222222222332222222222222)))))) (Case 2 (Lambda p_22222222222332222222222212 (App prod Z Z) (Sort Prop)) (CaseMatch (Case 2 (Lambda p_22222222222332222222222212 (App prod N N) (App prod Z Z)) (CaseMatch p_222222222223322222222222) (CaseBranches (Lambda q_22222222222332222222222212 N (Lambda r_222222222223322222222222122 N (App pair Z Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N q_22222222222332222222222212)) (App Coq.ZArith.BinIntDef.Z.of_N r_222222222223322222222222122))))))) (CaseBranches (Lambda q_22222222222332222222222212 Z (Lambda r_222222222223322222222222122 Z (App eq Z (App Zpos a_2222222222233222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul q_22222222222332222222222212 (App Zneg b_22222222222332222222222)) r_222222222223322222222222122)))))))) (CaseMatch (App Coq.NArith.BinNatDef.N.pos_div_eucl a_2222222222233222222222 (App Npos b_22222222222332222222222))) (CaseBranches (Lambda q_222222222223322222222222 N (Lambda r_2222222222233222222222222 N (Lambda H_22222222222332222222222222 (App eq N (App Npos a_2222222222233222222222) (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul q_222222222223322222222222 (App Npos b_22222222222332222222222)) r_2222222222233222222222222)) (App Coq.Init.Logic.eq_ind_r N (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul q_222222222223322222222222 (App Npos b_22222222222332222222222)) r_2222222222233222222222222) (Lambda n_222222222223322222222222222 N (App eq Z (App Coq.ZArith.BinIntDef.Z.of_N n_222222222223322222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N q_222222222223322222222222)) (App Zneg b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.of_N r_2222222222233222222222222)))) (Case 0 (Lambda n_222222222223322222222222222 N (App eq Z (App Coq.ZArith.BinIntDef.Z.of_N (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul n_222222222223322222222222222 (App Npos b_22222222222332222222222)) r_2222222222233222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N n_222222222223322222222222222)) (App Zneg b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.of_N r_2222222222233222222222222)))) (CaseMatch q_222222222223322222222222) (CaseBranches (Case 0 (Lambda n_222222222223322222222222222 N (App eq Z (App Coq.ZArith.BinIntDef.Z.of_N (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul N0 (App Npos b_22222222222332222222222)) n_222222222223322222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N N0)) (App Zneg b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.of_N n_222222222223322222222222222)))) (CaseMatch r_2222222222233222222222222) (CaseBranches (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N N0)) (App Zneg b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.of_N N0))) (Lambda p_222222222223322222222222222 positive (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N N0)) (App Zneg b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.of_N (App Npos p_222222222223322222222222222))))))) (Lambda p_222222222223322222222222222 positive (Case 0 (Lambda n_2222222222233222222222222222 N (App eq Z (App Coq.ZArith.BinIntDef.Z.of_N (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul (App Npos p_222222222223322222222222222) (App Npos b_22222222222332222222222)) n_2222222222233222222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N (App Npos p_222222222223322222222222222))) (App Zneg b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.of_N n_2222222222233222222222222222)))) (CaseMatch r_2222222222233222222222222) (CaseBranches (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N (App Npos p_222222222223322222222222222))) (App Zneg b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.of_N N0))) (Lambda p0_2222222222233222222222222222 positive (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N (App Npos p_222222222223322222222222222))) (App Zneg b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.of_N (App Npos p0_2222222222233222222222222222)))))))))) (App Npos a_2222222222233222222222) H_22222222222332222222222222)))))) (App Coq.NArith.BinNat.N.pos_div_eucl_spec a_2222222222233222222222 (App Npos b_22222222222332222222222))) REVERTcast (Case 2 (Lambda p_222222222223322222222222 (App prod Z Z) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.quotrem (App Zpos a_2222222222233222222222) (App Zneg b_22222222222332222222222))) (CaseBranches (Lambda q_222222222223322222222222 Z (Lambda r_2222222222233222222222222 Z (App eq Z (App Zpos a_2222222222233222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul q_222222222223322222222222 (App Zneg b_22222222222332222222222)) r_2222222222233222222222222))))))))))) (Lambda a_2222222222233222222222 positive (Case 0 (Lambda z_22222222222332222222222 Z (Case 2 (Lambda p_222222222223322222222222 (App prod Z Z) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.quotrem (App Zneg a_2222222222233222222222) z_22222222222332222222222)) (CaseBranches (Lambda q_222222222223322222222222 Z (Lambda r_2222222222233222222222222 Z (App eq Z (App Zneg a_2222222222233222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul q_222222222223322222222222 z_22222222222332222222222) r_2222222222233222222222222))))))) (CaseMatch b_222222222223322222222) (CaseBranches (Cast (App eq_refl Z (App Zneg a_2222222222233222222222)) REVERTcast (Case 2 (Lambda p_22222222222332222222222 (App prod Z Z) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.quotrem (App Zneg a_2222222222233222222222) Z0)) (CaseBranches (Lambda q_22222222222332222222222 Z (Lambda r_222222222223322222222222 Z (App eq Z (App Zneg a_2222222222233222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul q_22222222222332222222222 Z0) r_222222222223322222222222))))))) (Lambda b_22222222222332222222222 positive (Cast (App (Case 2 (Lambda p_222222222223322222222222 (App prod N N) (Prod out_2222222222233222222222221 (Case 2 (Lambda p_2222222222233222222222222 (App prod N N) (Sort Prop)) (CaseMatch p_222222222223322222222222) (CaseBranches (Lambda q_2222222222233222222222222 N (Lambda r_22222222222332222222222222 N (App eq N (App Npos a_2222222222233222222222) (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul q_2222222222233222222222222 (App Npos b_22222222222332222222222)) r_22222222222332222222222222)))))) (Case 2 (Lambda p_22222222222332222222222212 (App prod Z Z) (Sort Prop)) (CaseMatch (Case 2 (Lambda p_22222222222332222222222212 (App prod N N) (App prod Z Z)) (CaseMatch p_222222222223322222222222) (CaseBranches (Lambda q_22222222222332222222222212 N (Lambda r_222222222223322222222222122 N (App pair Z Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N q_22222222222332222222222212)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N r_222222222223322222222222122)))))))) (CaseBranches (Lambda q_22222222222332222222222212 Z (Lambda r_222222222223322222222222122 Z (App eq Z (App Zneg a_2222222222233222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul q_22222222222332222222222212 (App Zpos b_22222222222332222222222)) r_222222222223322222222222122)))))))) (CaseMatch (App Coq.NArith.BinNatDef.N.pos_div_eucl a_2222222222233222222222 (App Npos b_22222222222332222222222))) (CaseBranches (Lambda q_222222222223322222222222 N (Lambda r_2222222222233222222222222 N (Lambda H_22222222222332222222222222 (App eq N (App Npos a_2222222222233222222222) (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul q_222222222223322222222222 (App Npos b_22222222222332222222222)) r_2222222222233222222222222)) (App Coq.Init.Logic.eq_ind_r N (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul q_222222222223322222222222 (App Npos b_22222222222332222222222)) r_2222222222233222222222222) (Lambda n_222222222223322222222222222 N (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N n_222222222223322222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N q_222222222223322222222222)) (App Zpos b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N r_2222222222233222222222222))))) (Case 0 (Lambda n_222222222223322222222222222 N (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul n_222222222223322222222222222 (App Npos b_22222222222332222222222)) r_2222222222233222222222222))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N n_222222222223322222222222222)) (App Zpos b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N r_2222222222233222222222222))))) (CaseMatch q_222222222223322222222222) (CaseBranches (Case 0 (Lambda n_222222222223322222222222222 N (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul N0 (App Npos b_22222222222332222222222)) n_222222222223322222222222222))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N N0)) (App Zpos b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N n_222222222223322222222222222))))) (CaseMatch r_2222222222233222222222222) (CaseBranches (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N N0)) (App Zpos b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N N0)))) (Lambda p_222222222223322222222222222 positive (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N N0)) (App Zpos b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N (App Npos p_222222222223322222222222222)))))))) (Lambda p_222222222223322222222222222 positive (Case 0 (Lambda n_2222222222233222222222222222 N (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul (App Npos p_222222222223322222222222222) (App Npos b_22222222222332222222222)) n_2222222222233222222222222222))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N (App Npos p_222222222223322222222222222))) (App Zpos b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N n_2222222222233222222222222222))))) (CaseMatch r_2222222222233222222222222) (CaseBranches (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N (App Npos p_222222222223322222222222222))) (App Zpos b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N N0)))) (Lambda p0_2222222222233222222222222222 positive (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N (App Npos p_222222222223322222222222222))) (App Zpos b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N (App Npos p0_2222222222233222222222222222))))))))))) (App Npos a_2222222222233222222222) H_22222222222332222222222222)))))) (App Coq.NArith.BinNat.N.pos_div_eucl_spec a_2222222222233222222222 (App Npos b_22222222222332222222222))) REVERTcast (Case 2 (Lambda p_222222222223322222222222 (App prod Z Z) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.quotrem (App Zneg a_2222222222233222222222) (App Zpos b_22222222222332222222222))) (CaseBranches (Lambda q_222222222223322222222222 Z (Lambda r_2222222222233222222222222 Z (App eq Z (App Zneg a_2222222222233222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul q_222222222223322222222222 (App Zpos b_22222222222332222222222)) r_2222222222233222222222222)))))))) (Lambda b_22222222222332222222222 positive (Cast (App (Case 2 (Lambda p_222222222223322222222222 (App prod N N) (Prod out_2222222222233222222222221 (Case 2 (Lambda p_2222222222233222222222222 (App prod N N) (Sort Prop)) (CaseMatch p_222222222223322222222222) (CaseBranches (Lambda q_2222222222233222222222222 N (Lambda r_22222222222332222222222222 N (App eq N (App Npos a_2222222222233222222222) (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul q_2222222222233222222222222 (App Npos b_22222222222332222222222)) r_22222222222332222222222222)))))) (Case 2 (Lambda p_22222222222332222222222212 (App prod Z Z) (Sort Prop)) (CaseMatch (Case 2 (Lambda p_22222222222332222222222212 (App prod N N) (App prod Z Z)) (CaseMatch p_222222222223322222222222) (CaseBranches (Lambda q_22222222222332222222222212 N (Lambda r_222222222223322222222222122 N (App pair Z Z (App Coq.ZArith.BinIntDef.Z.of_N q_22222222222332222222222212) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N r_222222222223322222222222122)))))))) (CaseBranches (Lambda q_22222222222332222222222212 Z (Lambda r_222222222223322222222222122 Z (App eq Z (App Zneg a_2222222222233222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul q_22222222222332222222222212 (App Zneg b_22222222222332222222222)) r_222222222223322222222222122)))))))) (CaseMatch (App Coq.NArith.BinNatDef.N.pos_div_eucl a_2222222222233222222222 (App Npos b_22222222222332222222222))) (CaseBranches (Lambda q_222222222223322222222222 N (Lambda r_2222222222233222222222222 N (Lambda H_22222222222332222222222222 (App eq N (App Npos a_2222222222233222222222) (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul q_222222222223322222222222 (App Npos b_22222222222332222222222)) r_2222222222233222222222222)) (App Coq.Init.Logic.eq_ind_r N (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul q_222222222223322222222222 (App Npos b_22222222222332222222222)) r_2222222222233222222222222) (Lambda n_222222222223322222222222222 N (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N n_222222222223322222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.of_N q_222222222223322222222222) (App Zneg b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N r_2222222222233222222222222))))) (Case 0 (Lambda n_222222222223322222222222222 N (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul n_222222222223322222222222222 (App Npos b_22222222222332222222222)) r_2222222222233222222222222))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.of_N n_222222222223322222222222222) (App Zneg b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N r_2222222222233222222222222))))) (CaseMatch q_222222222223322222222222) (CaseBranches (Case 0 (Lambda n_222222222223322222222222222 N (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul N0 (App Npos b_22222222222332222222222)) n_222222222223322222222222222))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.of_N N0) (App Zneg b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N n_222222222223322222222222222))))) (CaseMatch r_2222222222233222222222222) (CaseBranches (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.of_N N0) (App Zneg b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N N0)))) (Lambda p_222222222223322222222222222 positive (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.of_N N0) (App Zneg b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N (App Npos p_222222222223322222222222222)))))))) (Lambda p_222222222223322222222222222 positive (Case 0 (Lambda n_2222222222233222222222222222 N (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul (App Npos p_222222222223322222222222222) (App Npos b_22222222222332222222222)) n_2222222222233222222222222222))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.of_N (App Npos p_222222222223322222222222222)) (App Zneg b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N n_2222222222233222222222222222))))) (CaseMatch r_2222222222233222222222222) (CaseBranches (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.of_N (App Npos p_222222222223322222222222222)) (App Zneg b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N N0)))) (Lambda p0_2222222222233222222222222222 positive (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.of_N (App Npos p_222222222223322222222222222)) (App Zneg b_22222222222332222222222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.of_N (App Npos p0_2222222222233222222222222222))))))))))) (App Npos a_2222222222233222222222) H_22222222222332222222222222)))))) (App Coq.NArith.BinNat.N.pos_div_eucl_spec a_2222222222233222222222 (App Npos b_22222222222332222222222))) REVERTcast (Case 2 (Lambda p_222222222223322222222222 (App prod Z Z) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.quotrem (App Zneg a_2222222222233222222222) (App Zneg b_22222222222332222222222))) (CaseBranches (Lambda q_222222222223322222222222 Z (Lambda r_2222222222233222222222222 Z (App eq Z (App Zneg a_2222222222233222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul q_222222222223322222222222 (App Zneg b_22222222222332222222222)) r_2222222222233222222222222)))))))))))))))) (Definition Coq.setoid_ring.InitialRing.Ztriv_div_th (Lambda R_22222222222332 (Sort Type) (Lambda req_222222222223322 (Prod out_222222222223321 R_22222222222332 (Prod out_2222222222233211 R_22222222222332 (Sort Prop))) (Lambda Rsth_2222222222233222 (App Coq.Setoids.Setoid.Setoid_Theory R_22222222222332 req_222222222223322) (Lambda zphi_22222222222332222 (Prod out_22222222222332221 Z R_22222222222332) (App mkdiv_th R_22222222222332 req_222222222223322 Z Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul zphi_22222222222332222 Coq.ZArith.BinIntDef.Z.quotrem (Lambda a_222222222223322222 Z (Lambda b_2222222222233222222 Z (App (Case 2 (Lambda p_22222222222332222222 (App prod Z Z) (Prod out_222222222223322222221 (Case 2 (Lambda p_222222222223322222222 (App prod Z Z) (Sort Prop)) (CaseMatch p_22222222222332222222) (CaseBranches (Lambda q_222222222223322222222 Z (Lambda r_2222222222233222222222 Z (App eq Z a_222222222223322222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul q_222222222223322222222 b_2222222222233222222) r_2222222222233222222222)))))) (Case 2 (Lambda p_2222222222233222222212 (App prod Z Z) (Sort Prop)) (CaseMatch p_22222222222332222222) (CaseBranches (Lambda q_2222222222233222222212 Z (Lambda r_22222222222332222222122 Z (App req_222222222223322 (App zphi_22222222222332222 a_222222222223322222) (App zphi_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul b_2222222222233222222 q_2222222222233222222212) r_22222222222332222222122))))))))) (CaseMatch (App Coq.ZArith.BinIntDef.Z.quotrem a_222222222223322222 b_2222222222233222222)) (CaseBranches (Lambda z_22222222222332222222 Z (Lambda z0_222222222223322222222 Z (Lambda H_2222222222233222222222 (App eq Z a_222222222223322222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul z_22222222222332222222 b_2222222222233222222) z0_222222222223322222222)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul z_22222222222332222222 b_2222222222233222222) z0_222222222223322222222) (Lambda a_22222222222332222222222 Z (App req_222222222223322 (App zphi_22222222222332222 a_22222222222332222222222) (App zphi_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul b_2222222222233222222 z_22222222222332222222) z0_222222222223322222222)))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul b_2222222222233222222 z_22222222222332222222) (Lambda z_22222222222332222222222 Z (App req_222222222223322 (App zphi_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add z_22222222222332222222222 z0_222222222223322222222)) (App zphi_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul b_2222222222233222222 z_22222222222332222222) z0_222222222223322222222)))) (App Coq.Setoids.Setoid.Seq_refl R_22222222222332 req_222222222223322 Rsth_2222222222233222 (App zphi_22222222222332222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul b_2222222222233222222 z_22222222222332222222) z0_222222222223322222222))) (App Coq.ZArith.BinIntDef.Z.mul z_22222222222332222222 b_2222222222233222222) (App Coq.ZArith.BinInt.Z.mul_comm z_22222222222332222222 b_2222222222233222222)) a_222222222223322222 H_2222222222233222222222)))))) (App Coq.ZArith.BinInt.Z.quotrem_eq a_222222222223322222 b_2222222222233222222)))))))))) (Definition Coq.setoid_ring.ZArithRing.Zr_ring_lemma1 (App Coq.setoid_ring.Ring_polynom.ring_correct Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp (App eq Z) (App Coq.setoid_ring.Ring_theory.Eqsth Z) (App Coq.setoid_ring.Ring_theory.Eq_ext Z Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.opp) (App Coq.setoid_ring.Ring_theory.Rth_ARth Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp (App eq Z) (App Coq.setoid_ring.Ring_theory.Eqsth Z) (App Coq.setoid_ring.Ring_theory.Eq_ext Z Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.opp) Coq.setoid_ring.InitialRing.Zth) Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_theory.IDphi Z) (App Coq.setoid_ring.Ring_theory.IDmorph Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp (App eq Z) (App Coq.setoid_ring.Ring_theory.Eqsth Z) Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.Zbool.Zeq_bool_eq) Z Coq.ZArith.BinIntDef.Z.of_N Coq.ZArith.BinIntDef.Z.pow Coq.ZArith.Zpow_def.Zpower_theory Coq.ZArith.BinIntDef.Z.quotrem (App Coq.setoid_ring.InitialRing.Ztriv_div_th Z (App eq Z) (App Coq.setoid_ring.Ring_theory.Eqsth Z) (App Coq.setoid_ring.Ring_theory.IDphi Z)))) (Definition Coq.Init.Nat.add (Fix (Functions (App add 0 (Prod n_22222222222332221 nat (Prod m_222222222223322211 nat nat)) (Lambda n_22222222222332222 nat (Lambda m_222222222223322222 nat (Case 0 (Lambda n_2222222222233222222 nat nat) (CaseMatch n_22222222222332222) (CaseBranches m_222222222223322222 (Lambda p_2222222222233222222 nat (App S (App add p_2222222222233222222 m_222222222223322222))))))))) 0)) (Definition Coq.Init.Nat.mul (Fix (Functions (App mul 0 (Prod n_22222222222331 nat (Prod m_222222222223311 nat nat)) (Lambda n_22222222222332 nat (Lambda m_222222222223322 nat (Case 0 (Lambda n_2222222222233222 nat nat) (CaseMatch n_22222222222332) (CaseBranches O (Lambda p_2222222222233222 nat (App Coq.Init.Nat.add m_222222222223322 (App mul p_2222222222233222 m_222222222223322))))))))) 0)) (Definition Coq.setoid_ring.Ring_tac.ring_subst_niter (App Coq.Init.Nat.mul (App Coq.Init.Nat.mul (App S (App S (App S (App S (App S (App S (App S (App S (App S (App S O)))))))))) (App S (App S (App S (App S (App S (App S (App S (App S (App S (App S O))))))))))) (App S (App S (App S (App S (App S (App S (App S (App S (App S (App S O)))))))))))) (Definition Coq.ZArith.BinInt.Z.divide (Lambda x_2222222222222222222 Z (Lambda y_22222222222222222222 Z (App ex Z (Lambda z_222222222222222222222 Z (App eq Z y_22222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul z_222222222222222222222 x_2222222222222222222))))))) (Definition Coq.ZArith.Znumtheory.Zis_gcd_ind (Lambda a_222222222222222 Z (Lambda b_2222222222222222 Z (Lambda g_22222222222222222 Z (Lambda P_222222222222222222 (Sort Prop) (Lambda f_2222222222222222222 (Prod out_2222222222222222221 (App Coq.ZArith.BinInt.Z.divide g_22222222222222222 a_222222222222222) (Prod out_22222222222222222211 (App Coq.ZArith.BinInt.Z.divide g_22222222222222222 b_2222222222222222) (Prod out_222222222222222222111 (Prod x_222222222222222222111 Z (Prod out_2222222222222222221111 (App Coq.ZArith.BinInt.Z.divide x_222222222222222222111 a_222222222222222) (Prod out_22222222222222222211111 (App Coq.ZArith.BinInt.Z.divide x_222222222222222222111 b_2222222222222222) (App Coq.ZArith.BinInt.Z.divide x_222222222222222222111 g_22222222222222222)))) P_222222222222222222))) (Lambda z_22222222222222222222 (App Zis_gcd a_222222222222222 b_2222222222222222 g_22222222222222222) (Case 3 (Lambda out_222222222222222222222 (App Zis_gcd a_222222222222222 b_2222222222222222 g_22222222222222222) P_222222222222222222) (CaseMatch z_22222222222222222222) (CaseBranches f_2222222222222222222))))))))) (Definition Coq.ZArith.BinInt.Z.abs_eq_cases (Lambda n_2222222222222222222222222222 Z (Lambda m_22222222222222222222222222222 Z (Lambda EQ_222222222222222222222222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222)) (LetIn o_2222222222222222222222222222223 (App Coq.ZArith.BinInt.Z.abs_or_opp_abs n_2222222222222222222222222222) (App or (App eq Z n_2222222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222)) (App eq Z n_2222222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222)))) (Case 2 (Lambda out_22222222222222222222222222222232 (App or (App eq Z n_2222222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222)) (App eq Z n_2222222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222)))) (App or (App eq Z n_2222222222222222222222222222 m_22222222222222222222222222222) (App eq Z n_2222222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222)))) (CaseMatch o_2222222222222222222222222222223) (CaseBranches (Lambda EQn_22222222222222222222222222222232 (App eq Z n_2222222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222)) (App (Lambda lemma_222222222222222222222222222222322 (App eq Z n_2222222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222)) (App Coq.Classes.Morphisms.subrelation_proper (Prod A_2222222222222222222222222222223221 (Sort Prop) (Prod B_22222222222222222222222222222232211 (Sort Prop) (Sort Prop))) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Prod out_2222222222222222222222222222223221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff)) or Coq.Classes.Morphisms_Prop.or_iff_morphism (App Coq.Classes.Morphisms.respectful (Sort Prop) (Prod B_2222222222222222222222222222223221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Prod B_2222222222222222222222222222223221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App eq Z n_2222222222222222222222222222 m_22222222222222222222222222222) (App eq Z (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222) m_22222222222222222222222222222) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) n_2222222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222) lemma_222222222222222222222222222222322 m_22222222222222222222222222222 m_22222222222222222222222222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) m_22222222222222222222222222222)) (App eq Z n_2222222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222)) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) n_2222222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222) lemma_222222222222222222222222222222322 (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222))))) EQn_22222222222222222222222222222232 (App (Lambda lemma_222222222222222222222222222222322 (App eq Z (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222)) (App Coq.Classes.Morphisms.subrelation_proper (Prod A_2222222222222222222222222222223221 (Sort Prop) (Prod B_22222222222222222222222222222232211 (Sort Prop) (Sort Prop))) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Prod out_2222222222222222222222222222223221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff)) or Coq.Classes.Morphisms_Prop.or_iff_morphism (App Coq.Classes.Morphisms.respectful (Sort Prop) (Prod B_2222222222222222222222222222223221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Prod B_2222222222222222222222222222223221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App eq Z (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222) m_22222222222222222222222222222) (App eq Z (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) m_22222222222222222222222222222) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) lemma_222222222222222222222222222222322 m_22222222222222222222222222222 m_22222222222222222222222222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) m_22222222222222222222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222)) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) lemma_222222222222222222222222222222322 (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222))))) EQ_222222222222222222222222222222 (App Coq.ZArith.BinInt.Z.abs_eq_or_opp m_22222222222222222222222222222)))) (Lambda EQn_22222222222222222222222222222232 (App eq Z n_2222222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222))) (App (Lambda lemma_222222222222222222222222222222322 (App eq Z n_2222222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222))) (App Coq.Classes.Morphisms.subrelation_proper (Prod A_2222222222222222222222222222223221 (Sort Prop) (Prod B_22222222222222222222222222222232211 (Sort Prop) (Sort Prop))) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Prod out_2222222222222222222222222222223221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff)) or Coq.Classes.Morphisms_Prop.or_iff_morphism (App Coq.Classes.Morphisms.respectful (Sort Prop) (Prod B_2222222222222222222222222222223221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Prod B_2222222222222222222222222222223221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App eq Z n_2222222222222222222222222222 m_22222222222222222222222222222) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222)) m_22222222222222222222222222222) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) n_2222222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222)) lemma_222222222222222222222222222222322 m_22222222222222222222222222222 m_22222222222222222222222222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) m_22222222222222222222222222222)) (App eq Z n_2222222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222)) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222)) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) n_2222222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222)) lemma_222222222222222222222222222222322 (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222))))) EQn_22222222222222222222222222222232 (App (Lambda lemma_222222222222222222222222222222322 (App eq Z (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222)) (App Coq.Classes.Morphisms.subrelation_proper (Prod A_2222222222222222222222222222223221 (Sort Prop) (Prod B_22222222222222222222222222222232211 (Sort Prop) (Sort Prop))) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Prod out_2222222222222222222222222222223221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff)) or Coq.Classes.Morphisms_Prop.or_iff_morphism (App Coq.Classes.Morphisms.respectful (Sort Prop) (Prod B_2222222222222222222222222222223221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Prod B_2222222222222222222222222222223221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222)) m_22222222222222222222222222222) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222)) m_22222222222222222222222222222) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222)) (App Coq.ZArith.BinInt.Z.opp_wd (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) lemma_222222222222222222222222222222322) m_22222222222222222222222222222 m_22222222222222222222222222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) m_22222222222222222222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222)) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222)) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222)) (App Coq.Classes.Morphisms.PER_morphism Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_PER Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222)) (App Coq.ZArith.BinInt.Z.opp_wd (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) lemma_222222222222222222222222222222322) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222))))) EQ_222222222222222222222222222222 (App (Lambda lemma_222222222222222222222222222222322 (App Coq.Init.Logic.iff (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222)) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) m_22222222222222222222222222222)) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism (Sort Prop) (Prod B_2222222222222222222222222222223221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) or (App Coq.Classes.Morphisms.subrelation_proper (Prod out_2222222222222222222222222222223221 (Sort Prop) (Prod B_22222222222222222222222222222232211 (Sort Prop) (Sort Prop))) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Prod out_2222222222222222222222222222223221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff)) or Coq.Classes.Morphisms_Prop.or_iff_morphism (App Coq.Classes.Morphisms.respectful (Sort Prop) (Prod B_2222222222222222222222222222223221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Prod B_2222222222222222222222222222223221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation))) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222)) m_22222222222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222)) m_22222222222222222222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222)) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) m_22222222222222222222222222222) lemma_222222222222222222222222222222322)) (App Coq.ZArith.BinInt.Z.opp_inj_wd (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) m_22222222222222222222222222222) (App (Lambda lemma_222222222222222222222222222222322 (App Coq.Init.Logic.iff (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222)) m_22222222222222222222222222222) (App eq Z (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222))) (App Coq.Classes.Morphisms.subrelation_proper (Prod A_2222222222222222222222222222223221 (Sort Prop) (Prod B_22222222222222222222222222222232211 (Sort Prop) (Sort Prop))) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Prod out_2222222222222222222222222222223221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff)) or Coq.Classes.Morphisms_Prop.or_iff_morphism (App Coq.Classes.Morphisms.respectful (Sort Prop) (Prod B_2222222222222222222222222222223221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Prod B_2222222222222222222222222222223221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App eq Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222)) m_22222222222222222222222222222) (App eq Z (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222)) lemma_222222222222222222222222222222322 (App eq Z (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) m_22222222222222222222222222222) (App eq Z (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) m_22222222222222222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq Z (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) m_22222222222222222222222222222)))) (App Coq.ZArith.BinInt.Z.eq_opp_l (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) m_22222222222222222222222222222) (App (Lambda lemma_222222222222222222222222222222322 (App Coq.Init.Logic.iff (App or (App eq Z (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) m_22222222222222222222222222222)) (App or (App eq Z (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) m_22222222222222222222222222222) (App eq Z (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222)))) (App Coq.Classes.Morphisms.iff_flip_impl_subrelation (App or (App eq Z (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) m_22222222222222222222222222222)) (App or (App eq Z (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) m_22222222222222222222222222222) (App eq Z (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222))) lemma_222222222222222222222222222222322)) (App Coq.Init.Logic.or_comm (App eq Z (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222222222222222222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) m_22222222222222222222222222222)) (App Coq.ZArith.BinInt.Z.abs_eq_or_opp m_22222222222222222222222222222)))))))))))))) (Definition Coq.ZArith.BinInt.Z.divide_antisym_abs (Lambda n_2222222222222222222222222222 Z (Lambda m_22222222222222222222222222222 Z (Lambda H_222222222222222222222222222222 (App Coq.ZArith.BinInt.Z.divide n_2222222222222222222222222222 m_22222222222222222222222222222) (Lambda H0_2222222222222222222222222222222 (App Coq.ZArith.BinInt.Z.divide m_22222222222222222222222222222 n_2222222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide_antisym_nonneg (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) (App Coq.ZArith.BinInt.Z.abs_nonneg n_2222222222222222222222222222) (App Coq.ZArith.BinInt.Z.abs_nonneg m_22222222222222222222222222222) (LetIn H1_22222222222222222222222222222223 (Lambda n_22222222222222222222222222222222 Z (Lambda m_222222222222222222222222222222222 Z (Case 2 (Lambda out_2222222222222222222222222222222222 (App and (Prod out_2222222222222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.abs n_22222222222222222222222222222222) m_222222222222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222222222222 m_222222222222222222222222222222222)) (Prod out_2222222222222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222222222222 m_222222222222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.abs n_22222222222222222222222222222222) m_222222222222222222222222222222222))) (Prod out_22222222222222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222222222222 m_222222222222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.abs n_22222222222222222222222222222222) m_222222222222222222222222222222222))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_abs_l n_22222222222222222222222222222222 m_222222222222222222222222222222222)) (CaseBranches (Lambda out_2222222222222222222222222222222222 (Prod out_2222222222222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.abs n_22222222222222222222222222222222) m_222222222222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222222222222 m_222222222222222222222222222222222)) (Lambda out_22222222222222222222222222222222222 (Prod out_22222222222222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222222222222 m_222222222222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.abs n_22222222222222222222222222222222) m_222222222222222222222222222222222)) out_22222222222222222222222222222222222)))))) (Prod n_22222222222222222222222222222221 Z (Prod m_222222222222222222222222222222211 Z (Prod out_2222222222222222222222222222222111 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222222222221 m_222222222222222222222222222222211) (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.abs n_22222222222222222222222222222221) m_222222222222222222222222222222211)))) (App H1_22222222222222222222222222222223 n_2222222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.abs m_22222222222222222222222222222) (LetIn H1_222222222222222222222222222222233 (Lambda n_222222222222222222222222222222232 Z (Lambda m_2222222222222222222222222222222322 Z (Case 2 (Lambda out_22222222222222222222222222222223222 (App and (Prod out_22222222222222222222222222222223221 (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222232 (App Coq.ZArith.BinIntDef.Z.abs m_2222222222222222222222222222222322)) (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222232 m_2222222222222222222222222222222322)) (Prod out_22222222222222222222222222222223221 (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222232 m_2222222222222222222222222222222322) (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222232 (App Coq.ZArith.BinIntDef.Z.abs m_2222222222222222222222222222222322)))) (Prod out_222222222222222222222222222222232221 (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222232 m_2222222222222222222222222222222322) (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222232 (App Coq.ZArith.BinIntDef.Z.abs m_2222222222222222222222222222222322)))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_abs_r n_222222222222222222222222222222232 m_2222222222222222222222222222222322)) (CaseBranches (Lambda out_22222222222222222222222222222223222 (Prod out_22222222222222222222222222222223221 (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222232 (App Coq.ZArith.BinIntDef.Z.abs m_2222222222222222222222222222222322)) (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222232 m_2222222222222222222222222222222322)) (Lambda out_222222222222222222222222222222232222 (Prod out_222222222222222222222222222222232221 (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222232 m_2222222222222222222222222222222322) (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222232 (App Coq.ZArith.BinIntDef.Z.abs m_2222222222222222222222222222222322))) out_222222222222222222222222222222232222)))))) (Prod n_222222222222222222222222222222231 Z (Prod m_2222222222222222222222222222222311 Z (Prod out_22222222222222222222222222222223111 (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222231 m_2222222222222222222222222222222311) (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222231 (App Coq.ZArith.BinIntDef.Z.abs m_2222222222222222222222222222222311))))) (App H1_222222222222222222222222222222233 n_2222222222222222222222222222 m_22222222222222222222222222222 H_222222222222222222222222222222)))) (LetIn H1_22222222222222222222222222222223 (Lambda n_22222222222222222222222222222222 Z (Lambda m_222222222222222222222222222222222 Z (Case 2 (Lambda out_2222222222222222222222222222222222 (App and (Prod out_2222222222222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.abs n_22222222222222222222222222222222) m_222222222222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222222222222 m_222222222222222222222222222222222)) (Prod out_2222222222222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222222222222 m_222222222222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.abs n_22222222222222222222222222222222) m_222222222222222222222222222222222))) (Prod out_22222222222222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222222222222 m_222222222222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.abs n_22222222222222222222222222222222) m_222222222222222222222222222222222))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_abs_l n_22222222222222222222222222222222 m_222222222222222222222222222222222)) (CaseBranches (Lambda out_2222222222222222222222222222222222 (Prod out_2222222222222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.abs n_22222222222222222222222222222222) m_222222222222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222222222222 m_222222222222222222222222222222222)) (Lambda out_22222222222222222222222222222222222 (Prod out_22222222222222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222222222222 m_222222222222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.abs n_22222222222222222222222222222222) m_222222222222222222222222222222222)) out_22222222222222222222222222222222222)))))) (Prod n_22222222222222222222222222222221 Z (Prod m_222222222222222222222222222222211 Z (Prod out_2222222222222222222222222222222111 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222222222221 m_222222222222222222222222222222211) (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.abs n_22222222222222222222222222222221) m_222222222222222222222222222222211)))) (App H1_22222222222222222222222222222223 m_22222222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.abs n_2222222222222222222222222222) (LetIn H1_222222222222222222222222222222233 (Lambda n_222222222222222222222222222222232 Z (Lambda m_2222222222222222222222222222222322 Z (Case 2 (Lambda out_22222222222222222222222222222223222 (App and (Prod out_22222222222222222222222222222223221 (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222232 (App Coq.ZArith.BinIntDef.Z.abs m_2222222222222222222222222222222322)) (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222232 m_2222222222222222222222222222222322)) (Prod out_22222222222222222222222222222223221 (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222232 m_2222222222222222222222222222222322) (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222232 (App Coq.ZArith.BinIntDef.Z.abs m_2222222222222222222222222222222322)))) (Prod out_222222222222222222222222222222232221 (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222232 m_2222222222222222222222222222222322) (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222232 (App Coq.ZArith.BinIntDef.Z.abs m_2222222222222222222222222222222322)))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_abs_r n_222222222222222222222222222222232 m_2222222222222222222222222222222322)) (CaseBranches (Lambda out_22222222222222222222222222222223222 (Prod out_22222222222222222222222222222223221 (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222232 (App Coq.ZArith.BinIntDef.Z.abs m_2222222222222222222222222222222322)) (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222232 m_2222222222222222222222222222222322)) (Lambda out_222222222222222222222222222222232222 (Prod out_222222222222222222222222222222232221 (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222232 m_2222222222222222222222222222222322) (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222232 (App Coq.ZArith.BinIntDef.Z.abs m_2222222222222222222222222222222322))) out_222222222222222222222222222222232222)))))) (Prod n_222222222222222222222222222222231 Z (Prod m_2222222222222222222222222222222311 Z (Prod out_22222222222222222222222222222223111 (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222231 m_2222222222222222222222222222222311) (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222222222231 (App Coq.ZArith.BinIntDef.Z.abs m_2222222222222222222222222222222311))))) (App H1_222222222222222222222222222222233 m_22222222222222222222222222222 n_2222222222222222222222222222 H0_2222222222222222222222222222222)))))))))) (Definition Coq.ZArith.BinInt.Z.divide_antisym (Lambda n_222222222222222222222222 Z (Lambda m_2222222222222222222222222 Z (Lambda H_22222222222222222222222222 (App Coq.ZArith.BinInt.Z.divide n_222222222222222222222222 m_2222222222222222222222222) (Lambda H0_222222222222222222222222222 (App Coq.ZArith.BinInt.Z.divide m_2222222222222222222222222 n_222222222222222222222222) (App Coq.ZArith.BinInt.Z.abs_eq_cases n_222222222222222222222222 m_2222222222222222222222222 (App Coq.ZArith.BinInt.Z.divide_antisym_abs n_222222222222222222222222 m_2222222222222222222222222 H_22222222222222222222222222 H0_222222222222222222222222222))))))) (Definition Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign (Lambda a_2222222222 Z (Lambda b_22222222222 Z (Lambda d_222222222222 Z (Lambda d'_2222222222222 Z (Lambda H_22222222222222 (App Zis_gcd a_2222222222 b_22222222222 d_222222222222) (App Coq.ZArith.Znumtheory.Zis_gcd_ind a_2222222222 b_22222222222 d_222222222222 (Prod out_222222222222221 (App Zis_gcd a_2222222222 b_22222222222 d'_2222222222222) (App or (App eq Z d_222222222222 d'_2222222222222) (App eq Z d_222222222222 (App Coq.ZArith.BinIntDef.Z.opp d'_2222222222222)))) (Lambda H1_222222222222222 (App Coq.ZArith.BinInt.Z.divide d_222222222222 a_2222222222) (Lambda H2_2222222222222222 (App Coq.ZArith.BinInt.Z.divide d_222222222222 b_22222222222) (Lambda H3_22222222222222222 (Prod x_22222222222222221 Z (Prod out_222222222222222211 (App Coq.ZArith.BinInt.Z.divide x_22222222222222221 a_2222222222) (Prod out_2222222222222222111 (App Coq.ZArith.BinInt.Z.divide x_22222222222222221 b_22222222222) (App Coq.ZArith.BinInt.Z.divide x_22222222222222221 d_222222222222)))) (Lambda H0_222222222222222222 (App Zis_gcd a_2222222222 b_22222222222 d'_2222222222222) (App Coq.ZArith.Znumtheory.Zis_gcd_ind a_2222222222 b_22222222222 d'_2222222222222 (App or (App eq Z d_222222222222 d'_2222222222222) (App eq Z d_222222222222 (App Coq.ZArith.BinIntDef.Z.opp d'_2222222222222))) (Lambda H4_2222222222222222222 (App Coq.ZArith.BinInt.Z.divide d'_2222222222222 a_2222222222) (Lambda H5_22222222222222222222 (App Coq.ZArith.BinInt.Z.divide d'_2222222222222 b_22222222222) (Lambda H6_222222222222222222222 (Prod x_222222222222222222221 Z (Prod out_2222222222222222222211 (App Coq.ZArith.BinInt.Z.divide x_222222222222222222221 a_2222222222) (Prod out_22222222222222222222111 (App Coq.ZArith.BinInt.Z.divide x_222222222222222222221 b_22222222222) (App Coq.ZArith.BinInt.Z.divide x_222222222222222222221 d'_2222222222222)))) (App (Lambda Hd'd_2222222222222222222222 (App Coq.ZArith.BinInt.Z.divide d'_2222222222222 d_222222222222) (App (Lambda Hdd'_22222222222222222222222 (App Coq.ZArith.BinInt.Z.divide d_222222222222 d'_2222222222222) (App Coq.ZArith.BinInt.Z.divide_antisym d_222222222222 d'_2222222222222 Hdd'_22222222222222222222222 Hd'd_2222222222222222222222)) (App H6_222222222222222222222 d_222222222222 H1_222222222222222 H2_2222222222222222))) (App H3_22222222222222222 d'_2222222222222 H4_2222222222222222222 H5_22222222222222222222))))) H0_222222222222222222))))) H_22222222222222))))))) (Definition Coq.ZArith.BinInt.Z.gt (Lambda x_222222222 Z (Lambda y_2222222222 Z (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare x_222222222 y_2222222222) Gt)))) (Definition Coq.Init.Logic.not (Lambda A_222222221222 (Sort Prop) (Prod out_2222222212221 A_222222221222 False))) (Definition Coq.ZArith.BinInt.Z.le (Lambda x_2222222212 Z (Lambda y_22222222122 Z (App Coq.Init.Logic.not (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare x_2222222212 y_22222222122) Gt))))) (Definition Coq.Init.Specif.sumbool_rec (Lambda A_2222222222222 (Sort Prop) (Lambda B_22222222222222 (Sort Prop) (Lambda P_222222222222222 (Prod s_222222222222221 (App sumbool A_2222222222222 B_22222222222222) (Sort Set)) (App Coq.Init.Specif.sumbool_rect A_2222222222222 B_22222222222222 P_222222222222222))))) (Definition Coq.Init.Logic.iff (Lambda A_22222222222222 (Sort Prop) (Lambda B_222222222222222 (Sort Prop) (App and (Prod out_2222222222222221 A_22222222222222 B_222222222222222) (Prod out_2222222222222221 B_222222222222222 A_22222222222222))))) (Definition Coq.ZArith.BinInt.Z.lt (Lambda x_22222222222222 Z (Lambda y_222222222222222 Z (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare x_22222222222222 y_222222222222222) Lt)))) (Definition Coq.Classes.Morphisms.iff_flip_impl_subrelation (Cast (Lambda x_222222222222222 (Sort Prop) (Lambda y_2222222222222222 (Sort Prop) (Lambda H_22222222222222222 (App Coq.Init.Logic.iff x_222222222222222 y_2222222222222222) (Cast (Lambda H0_222222222222222222 y_2222222222222222 (App Coq.Init.Logic.and_ind (Prod out_2222222222222222221 x_222222222222222 y_2222222222222222) (Prod out_2222222222222222221 y_2222222222222222 x_222222222222222) x_222222222222222 (Lambda H_2222222222222222222 (Prod out_2222222222222222221 x_222222222222222 y_2222222222222222) (Lambda H1_22222222222222222222 (Prod out_22222222222222222221 y_2222222222222222 x_222222222222222) (App (Lambda H1_222222222222222222222 x_222222222222222 H1_222222222222222222222) (App H1_22222222222222222222 H0_222222222222222222)))) H_22222222222222222)) REVERTcast (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl x_222222222222222 y_2222222222222222))))) REVERTcast (App Coq.Classes.RelationClasses.subrelation (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)))) (Definition Coq.ZArith.BinInt.Z.gt_lt_iff (Lambda n_22222222222222 Z (Lambda m_222222222222222 Z (Cast (App Coq.Init.Logic.eq_ind_r comparison (App Coq.Init.Datatypes.CompOpp (App Coq.ZArith.BinIntDef.Z.compare m_222222222222222 n_22222222222222)) (Lambda c_2222222222222222 comparison (App Coq.Init.Logic.iff (App eq comparison c_2222222222222222 Gt) (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare m_222222222222222 n_22222222222222) Lt))) (App (Lambda lemma_2222222222222222 (App Coq.Init.Logic.iff (App eq comparison (App Coq.Init.Datatypes.CompOpp (App Coq.ZArith.BinIntDef.Z.compare m_222222222222222 n_22222222222222)) Gt) (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare m_222222222222222 n_22222222222222) (App Coq.Init.Datatypes.CompOpp Gt))) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App eq comparison (App Coq.Init.Datatypes.CompOpp (App Coq.ZArith.BinIntDef.Z.compare m_222222222222222 n_22222222222222)) Gt) (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare m_222222222222222 n_22222222222222) (App Coq.Init.Datatypes.CompOpp Gt)) lemma_2222222222222222 (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare m_222222222222222 n_22222222222222) Lt) (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare m_222222222222222 n_22222222222222) Lt) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare m_222222222222222 n_22222222222222) Lt)))) (App Coq.Init.Datatypes.CompOpp_iff (App Coq.ZArith.BinIntDef.Z.compare m_222222222222222 n_22222222222222) Gt) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare m_222222222222222 n_22222222222222) Lt))) (App Coq.ZArith.BinIntDef.Z.compare n_22222222222222 m_222222222222222) (App Coq.ZArith.BinInt.Z.compare_antisym m_222222222222222 n_22222222222222)) REVERTcast (App Coq.Init.Logic.iff (App Coq.ZArith.BinInt.Z.gt n_22222222222222 m_222222222222222) (App Coq.ZArith.BinInt.Z.lt m_222222222222222 n_22222222222222)))))) (Definition Coq.ZArith.BinInt.Z.nle_gt (Lambda n_2222222222222222 Z (Lambda m_22222222222222222 Z (App conj (Prod out_222222222222222221 (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le n_2222222222222222 m_22222222222222222)) (App Coq.ZArith.BinInt.Z.lt m_22222222222222222 n_2222222222222222)) (Prod out_222222222222222221 (App Coq.ZArith.BinInt.Z.lt m_22222222222222222 n_2222222222222222) (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le n_2222222222222222 m_22222222222222222))) (Lambda H_222222222222222222 (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le n_2222222222222222 m_22222222222222222)) (Cast (LetIn H_2222222222222222223 (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.not_ge_lt m_22222222222222222 n_2222222222222222 H_222222222222222222) (App Coq.ZArith.BinInt.Z.lt m_22222222222222222 n_2222222222222222) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.not_ge_lt m_22222222222222222 n_2222222222222222 (Cast (Lambda H0_22222222222222222232 (App Coq.ZArith.BinInt.Z.le n_2222222222222222 m_22222222222222222) (App (Lambda H1_222222222222222222322 (App Coq.ZArith.BinInt.Z.lt n_2222222222222222 n_2222222222222222) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.lt_irrefl n_2222222222222222 H1_222222222222222222322)) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.le_lt_trans n_2222222222222222 m_22222222222222222 n_2222222222222222 H0_22222222222222222232 H_2222222222222222223))) REVERTcast (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le n_2222222222222222 m_22222222222222222))))) REVERTcast (App Coq.ZArith.BinInt.Z.lt m_22222222222222222 n_2222222222222222))) (Lambda H_222222222222222222 (App Coq.ZArith.BinInt.Z.lt m_22222222222222222 n_2222222222222222) (Cast (Lambda H0_2222222222222222222 (App Coq.ZArith.BinInt.Z.le n_2222222222222222 m_22222222222222222) (Cast (App Coq.Init.Logic.False_ind False (App (Lambda H1_22222222222222222222 (App Coq.ZArith.BinInt.Z.lt n_2222222222222222 n_2222222222222222) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.lt_irrefl n_2222222222222222 H1_22222222222222222222)) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.le_lt_trans n_2222222222222222 m_22222222222222222 n_2222222222222222 H0_2222222222222222222 H_222222222222222222))) REVERTcast False)) REVERTcast (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le n_2222222222222222 m_22222222222222222)))))))) (Definition Coq.ZArith.ZArith_dec.Z_le_dec (Lambda x_2222222222222 Z (Lambda y_22222222222222 Z (Cast (Case 0 (Lambda c_222222222222222 comparison (App sumbool (App Coq.Init.Logic.not (App eq comparison c_222222222222222 Gt)) (App Coq.Init.Logic.not (App Coq.Init.Logic.not (App eq comparison c_222222222222222 Gt))))) (CaseMatch (App Coq.ZArith.BinIntDef.Z.compare x_2222222222222 y_22222222222222)) (CaseBranches (App left (App Coq.Init.Logic.not (App eq comparison Eq Gt)) (App Coq.Init.Logic.not (App Coq.Init.Logic.not (App eq comparison Eq Gt))) (Cast (Lambda H_222222222222222 (App eq comparison Eq Gt) (LetIn H0_2222222222222223 (Case 2 (Lambda y_2222222222222222 comparison (Lambda out_22222222222222222 (App eq comparison Eq y_2222222222222222) (Prod out_222222222222222221 (App eq comparison y_2222222222222222 Gt) False))) (CaseMatch H_222222222222222) (CaseBranches (Lambda H0_2222222222222222 (App eq comparison Eq Gt) (App (Lambda H0_22222222222222222 (App eq comparison Eq Gt) (LetIn H1_222222222222222223 (App Coq.Init.Logic.eq_ind comparison Eq (Lambda e_222222222222222222 comparison (Case 0 (Lambda c_2222222222222222222 comparison (Sort Prop)) (CaseMatch e_222222222222222222) (CaseBranches True False False))) I Gt H0_22222222222222222) False (App Coq.Init.Logic.False_ind False H1_222222222222222223))) H0_2222222222222222)))) (Prod out_2222222222222221 (App eq comparison Gt Gt) False) (App H0_2222222222222223 (App eq_refl comparison Gt)))) REVERTcast (App Coq.Init.Logic.not (App eq comparison Eq Gt)))) (App left (App Coq.Init.Logic.not (App eq comparison Lt Gt)) (App Coq.Init.Logic.not (App Coq.Init.Logic.not (App eq comparison Lt Gt))) (Cast (Lambda H_222222222222222 (App eq comparison Lt Gt) (LetIn H0_2222222222222223 (Case 2 (Lambda y_2222222222222222 comparison (Lambda out_22222222222222222 (App eq comparison Lt y_2222222222222222) (Prod out_222222222222222221 (App eq comparison y_2222222222222222 Gt) False))) (CaseMatch H_222222222222222) (CaseBranches (Lambda H0_2222222222222222 (App eq comparison Lt Gt) (App (Lambda H0_22222222222222222 (App eq comparison Lt Gt) (LetIn H1_222222222222222223 (App Coq.Init.Logic.eq_ind comparison Lt (Lambda e_222222222222222222 comparison (Case 0 (Lambda c_2222222222222222222 comparison (Sort Prop)) (CaseMatch e_222222222222222222) (CaseBranches False True False))) I Gt H0_22222222222222222) False (App Coq.Init.Logic.False_ind False H1_222222222222222223))) H0_2222222222222222)))) (Prod out_2222222222222221 (App eq comparison Gt Gt) False) (App H0_2222222222222223 (App eq_refl comparison Gt)))) REVERTcast (App Coq.Init.Logic.not (App eq comparison Lt Gt)))) (App right (App Coq.Init.Logic.not (App eq comparison Gt Gt)) (App Coq.Init.Logic.not (App Coq.Init.Logic.not (App eq comparison Gt Gt))) (Cast (Lambda H_222222222222222 (App Coq.Init.Logic.not (App eq comparison Gt Gt)) (LetIn H0_2222222222222223 (LetIn H0_2222222222222223 (App eq_refl comparison Gt) (App eq comparison Gt Gt) (App H_222222222222222 H0_2222222222222223)) False (App (Lambda H0_22222222222222232 False (App Coq.Init.Logic.False_ind False H0_22222222222222232)) H0_2222222222222223))) REVERTcast (App Coq.Init.Logic.not (App Coq.Init.Logic.not (App eq comparison Gt Gt))))))) REVERTcast (App sumbool (App Coq.ZArith.BinInt.Z.le x_2222222222222 y_22222222222222) (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le x_2222222222222 y_22222222222222))))))) (Definition Coq.ZArith.ZArith_dec.Z_le_gt_dec (Lambda x_22222222222 Z (Lambda y_222222222222 Z (App Coq.Init.Specif.sumbool_rec (App Coq.ZArith.BinInt.Z.le x_22222222222 y_222222222222) (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le x_22222222222 y_222222222222)) (Lambda s_2222222222222 (App sumbool (App Coq.ZArith.BinInt.Z.le x_22222222222 y_222222222222) (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le x_22222222222 y_222222222222))) (App sumbool (App Coq.ZArith.BinInt.Z.le x_22222222222 y_222222222222) (App Coq.ZArith.BinInt.Z.gt x_22222222222 y_222222222222))) (Lambda a_2222222222222 (App Coq.ZArith.BinInt.Z.le x_22222222222 y_222222222222) (App left (App Coq.ZArith.BinInt.Z.le x_22222222222 y_222222222222) (App Coq.ZArith.BinInt.Z.gt x_22222222222 y_222222222222) a_2222222222222)) (Lambda b_2222222222222 (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le x_22222222222 y_222222222222)) (App right (App Coq.ZArith.BinInt.Z.le x_22222222222 y_222222222222) (App Coq.ZArith.BinInt.Z.gt x_22222222222 y_222222222222) (App (Lambda lemma_22222222222222 (App Coq.Init.Logic.iff (App Coq.ZArith.BinInt.Z.gt x_22222222222 y_222222222222) (App Coq.ZArith.BinInt.Z.lt y_222222222222 x_22222222222)) (App Coq.Classes.Morphisms.iff_flip_impl_subrelation (App Coq.ZArith.BinInt.Z.gt x_22222222222 y_222222222222) (App Coq.ZArith.BinInt.Z.lt y_222222222222 x_22222222222) lemma_22222222222222)) (App Coq.ZArith.BinInt.Z.gt_lt_iff x_22222222222 y_222222222222) (LetIn H_22222222222223 (Lambda n_22222222222222 Z (Lambda m_222222222222222 Z (Case 2 (Lambda out_2222222222222222 (App and (Prod out_2222222222222221 (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le n_22222222222222 m_222222222222222)) (App Coq.ZArith.BinInt.Z.lt m_222222222222222 n_22222222222222)) (Prod out_2222222222222221 (App Coq.ZArith.BinInt.Z.lt m_222222222222222 n_22222222222222) (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le n_22222222222222 m_222222222222222)))) (Prod out_22222222222222221 (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le n_22222222222222 m_222222222222222)) (App Coq.ZArith.BinInt.Z.lt m_222222222222222 n_22222222222222))) (CaseMatch (App Coq.ZArith.BinInt.Z.nle_gt n_22222222222222 m_222222222222222)) (CaseBranches (Lambda out_2222222222222222 (Prod out_2222222222222221 (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le n_22222222222222 m_222222222222222)) (App Coq.ZArith.BinInt.Z.lt m_222222222222222 n_22222222222222)) (Lambda out_22222222222222222 (Prod out_22222222222222221 (App Coq.ZArith.BinInt.Z.lt m_222222222222222 n_22222222222222) (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le n_22222222222222 m_222222222222222))) out_2222222222222222)))))) (Prod n_22222222222221 Z (Prod m_222222222222211 Z (Prod out_2222222222222111 (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le n_22222222222221 m_222222222222211)) (App Coq.ZArith.BinInt.Z.lt m_222222222222211 n_22222222222221)))) (App H_22222222222223 x_22222222222 y_222222222222 b_2222222222222))))) (App Coq.ZArith.ZArith_dec.Z_le_dec x_22222222222 y_222222222222))))) (Definition Coq.ZArith.Wf_Z.Zlt_0_rec (LetIn R_2222222222222223 (Lambda a_2222222222222222 Z (Lambda b_22222222222222222 Z (App and (App Coq.ZArith.BinInt.Z.le Z0 a_2222222222222222) (App Coq.ZArith.BinInt.Z.lt a_2222222222222222 b_22222222222222222)))) (Prod a_2222222222222221 Z (Prod b_22222222222222211 Z (Sort Prop))) (LetIn R_wf_22222222222222233 (App Coq.Arith.Wf_nat.well_founded_lt_compat Z Coq.ZArith.BinIntDef.Z.to_nat R_2222222222222223 (Lambda x_22222222222222232 Z (Lambda y_222222222222222322 Z (Lambda H0_2222222222222223222 (App R_2222222222222223 x_22222222222222232 y_222222222222222322) (Case 2 (Lambda out_22222222222222232222 (App and (App Coq.ZArith.BinInt.Z.le Z0 x_22222222222222232) (App Coq.ZArith.BinInt.Z.lt x_22222222222222232 y_222222222222222322)) (App Coq.Init.Peano.lt (App Coq.ZArith.BinIntDef.Z.to_nat x_22222222222222232) (App Coq.ZArith.BinIntDef.Z.to_nat y_222222222222222322))) (CaseMatch H0_2222222222222223222) (CaseBranches (Lambda Hx_22222222222222232222 (App Coq.ZArith.BinInt.Z.le Z0 x_22222222222222232) (Lambda H_222222222222222322222 (App Coq.ZArith.BinInt.Z.lt x_22222222222222232 y_222222222222222322) (LetIn H0_2222222222222223222223 (Lambda n_2222222222222223222222 Z (Lambda m_22222222222222232222222 Z (Lambda out_222222222222222322222222 (App Coq.ZArith.BinInt.Z.le Z0 n_2222222222222223222222) (Lambda out_2222222222222223222222222 (App Coq.ZArith.BinInt.Z.le Z0 m_22222222222222232222222) (Case 2 (Lambda out_22222222222222232222222222 (App and (Prod out_22222222222222232222222221 (App Coq.ZArith.BinInt.Z.lt n_2222222222222223222222 m_22222222222222232222222) (App Coq.Init.Peano.lt (App Coq.ZArith.BinIntDef.Z.to_nat n_2222222222222223222222) (App Coq.ZArith.BinIntDef.Z.to_nat m_22222222222222232222222))) (Prod out_22222222222222232222222221 (App Coq.Init.Peano.lt (App Coq.ZArith.BinIntDef.Z.to_nat n_2222222222222223222222) (App Coq.ZArith.BinIntDef.Z.to_nat m_22222222222222232222222)) (App Coq.ZArith.BinInt.Z.lt n_2222222222222223222222 m_22222222222222232222222))) (Prod out_222222222222222322222222221 (App Coq.ZArith.BinInt.Z.lt n_2222222222222223222222 m_22222222222222232222222) (App Coq.Init.Peano.lt (App Coq.ZArith.BinIntDef.Z.to_nat n_2222222222222223222222) (App Coq.ZArith.BinIntDef.Z.to_nat m_22222222222222232222222)))) (CaseMatch (App Coq.ZArith.Znat.Z2Nat.inj_lt n_2222222222222223222222 m_22222222222222232222222 out_222222222222222322222222 out_2222222222222223222222222)) (CaseBranches (Lambda out_22222222222222232222222222 (Prod out_22222222222222232222222221 (App Coq.ZArith.BinInt.Z.lt n_2222222222222223222222 m_22222222222222232222222) (App Coq.Init.Peano.lt (App Coq.ZArith.BinIntDef.Z.to_nat n_2222222222222223222222) (App Coq.ZArith.BinIntDef.Z.to_nat m_22222222222222232222222))) (Lambda out_222222222222222322222222222 (Prod out_222222222222222322222222221 (App Coq.Init.Peano.lt (App Coq.ZArith.BinIntDef.Z.to_nat n_2222222222222223222222) (App Coq.ZArith.BinIntDef.Z.to_nat m_22222222222222232222222)) (App Coq.ZArith.BinInt.Z.lt n_2222222222222223222222 m_22222222222222232222222)) out_22222222222222232222222222)))))))) (Prod n_2222222222222223222221 Z (Prod m_22222222222222232222211 Z (Prod out_222222222222222322222111 (App Coq.ZArith.BinInt.Z.le Z0 n_2222222222222223222221) (Prod out_2222222222222223222221111 (App Coq.ZArith.BinInt.Z.le Z0 m_22222222222222232222211) (Prod out_22222222222222232222211111 (App Coq.ZArith.BinInt.Z.lt n_2222222222222223222221 m_22222222222222232222211) (App Coq.Init.Peano.lt (App Coq.ZArith.BinIntDef.Z.to_nat n_2222222222222223222221) (App Coq.ZArith.BinIntDef.Z.to_nat m_22222222222222232222211))))))) (App H0_2222222222222223222223 x_22222222222222232 y_222222222222222322 (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.not_gt_le Z0 x_22222222222222232 (Cast (Lambda H0_22222222222222232222232 (App Coq.ZArith.BinInt.Z.lt x_22222222222222232 Z0) (App (Lambda H1_222222222222222322222322 (App Coq.ZArith.BinInt.Z.lt Z0 Z0) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.lt_irrefl Z0 H1_222222222222222322222322)) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.le_lt_trans Z0 x_22222222222222232 Z0 Hx_22222222222222232222 H0_22222222222222232222232))) REVERTcast (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.lt x_22222222222222232 Z0)))) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.not_gt_le Z0 y_222222222222222322 (Cast (Lambda H0_22222222222222232222232 (App Coq.ZArith.BinInt.Z.lt y_222222222222222322 Z0) (App (Lambda H1_222222222222222322222322 (App Coq.ZArith.BinInt.Z.lt x_22222222222222232 Z0) (App (Lambda H2_2222222222222223222223222 (App Coq.ZArith.BinInt.Z.lt Z0 Z0) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.lt_irrefl Z0 H2_2222222222222223222223222)) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.le_lt_trans Z0 x_22222222222222232 Z0 Hx_22222222222222232222 H1_222222222222222322222322))) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.lt_trans x_22222222222222232 y_222222222222222322 Z0 H_222222222222222322222 H0_22222222222222232222232))) REVERTcast (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.lt y_222222222222222322 Z0)))) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.not_ge_lt x_22222222222222232 y_222222222222222322 (Cast (Lambda H0_22222222222222232222232 (App Coq.ZArith.BinInt.Z.le y_222222222222222322 x_22222222222222232) (App (Lambda H1_222222222222222322222322 (App Coq.ZArith.BinInt.Z.lt y_222222222222222322 y_222222222222222322) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.lt_irrefl y_222222222222222322 H1_222222222222222322222322)) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.le_lt_trans y_222222222222222322 x_22222222222222232 y_222222222222222322 H0_22222222222222232222232 H_222222222222222322222))) REVERTcast (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le y_222222222222222322 x_22222222222222232)))))))))))))) (App Coq.Init.Wf.well_founded Z R_2222222222222223) (Lambda P_222222222222222332 (Prod out_222222222222222331 Z (Sort Type)) (Lambda Hrec_2222222222222223322 (Prod x_2222222222222223321 Z (Prod out_22222222222222233211 (Prod y_22222222222222233211 Z (Prod out_222222222222222332111 (App and (App Coq.ZArith.BinInt.Z.le Z0 y_22222222222222233211) (App Coq.ZArith.BinInt.Z.lt y_22222222222222233211 x_2222222222222223321)) (App P_222222222222222332 y_22222222222222233211))) (Prod out_222222222222222332111 (App Coq.ZArith.BinInt.Z.le Z0 x_2222222222222223321) (App P_222222222222222332 x_2222222222222223321)))) (Lambda x_22222222222222233222 Z (App Coq.Init.Wf.well_founded_induction_type Z R_2222222222222223 R_wf_22222222222222233 (Lambda x_222222222222222332222 Z (Prod out_2222222222222223322221 (App Coq.ZArith.BinInt.Z.le Z0 x_222222222222222332222) (App P_222222222222222332 x_222222222222222332222))) (Lambda x_222222222222222332222 Z (Lambda IH_2222222222222223322222 (Prod y_2222222222222223322221 Z (Prod out_22222222222222233222211 (App R_2222222222222223 y_2222222222222223322221 x_222222222222222332222) (Prod out_222222222222222332222111 (App Coq.ZArith.BinInt.Z.le Z0 y_2222222222222223322221) (App P_222222222222222332 y_2222222222222223322221)))) (App (Case 0 (Lambda z_22222222222222233222222 Z (Prod IH_222222222222222332222221 (Prod y_222222222222222332222221 Z (Prod out_2222222222222223322222211 (App R_2222222222222223 y_222222222222222332222221 z_22222222222222233222222) (Prod out_22222222222222233222222111 (App Coq.ZArith.BinInt.Z.le Z0 y_222222222222222332222221) (App P_222222222222222332 y_222222222222222332222221)))) (Prod out_2222222222222223322222211 (App Coq.ZArith.BinInt.Z.le Z0 z_22222222222222233222222) (App P_222222222222222332 z_22222222222222233222222)))) (CaseMatch x_222222222222222332222) (CaseBranches (Lambda IH_22222222222222233222222 (Prod y_22222222222222233222221 Z (Prod out_222222222222222332222211 (App R_2222222222222223 y_22222222222222233222221 Z0) (Prod out_2222222222222223322222111 (App Coq.ZArith.BinInt.Z.le Z0 y_22222222222222233222221) (App P_222222222222222332 y_22222222222222233222221)))) (Lambda Hx_222222222222222332222222 (App Coq.ZArith.BinInt.Z.le Z0 Z0) (App Hrec_2222222222222223322 Z0 (Lambda y_2222222222222223322222222 Z (Lambda H_22222222222222233222222222 (App and (App Coq.ZArith.BinInt.Z.le Z0 y_2222222222222223322222222) (App Coq.ZArith.BinInt.Z.lt y_2222222222222223322222222 Z0)) (Case 2 (Lambda out_222222222222222332222222222 (App and (App Coq.ZArith.BinInt.Z.le Z0 y_2222222222222223322222222) (App Coq.ZArith.BinInt.Z.lt y_2222222222222223322222222 Z0)) (App P_222222222222222332 y_2222222222222223322222222)) (CaseMatch H_22222222222222233222222222) (CaseBranches (Lambda Hy_222222222222222332222222222 (App Coq.ZArith.BinInt.Z.le Z0 y_2222222222222223322222222) (Lambda Hy'_2222222222222223322222222222 (App Coq.ZArith.BinInt.Z.lt y_2222222222222223322222222 Z0) (LetIn H_22222222222222233222222222223 (App Coq.ZArith.BinInt.Z.le_lt_trans Z0 y_2222222222222223322222222 Z0 Hy_222222222222222332222222222 Hy'_2222222222222223322222222222) (App Coq.ZArith.BinInt.Z.lt Z0 Z0) (LetIn H0_222222222222222332222222222233 (App Coq.Init.Logic.eq_ind comparison (App Coq.ZArith.BinIntDef.Z.compare Z0 Z0) (Lambda e_222222222222222332222222222232 comparison (Case 0 (Lambda c_2222222222222223322222222222322 comparison (Sort Prop)) (CaseMatch e_222222222222222332222222222232) (CaseBranches True False False))) I Lt H_22222222222222233222222222223) False (App Coq.Init.Logic.False_rect (App P_222222222222222332 y_2222222222222223322222222) H0_222222222222222332222222222233))))))))) Hx_222222222222222332222222))) (Lambda p_22222222222222233222222 positive (Lambda IH_222222222222222332222222 (Prod y_222222222222222332222221 Z (Prod out_2222222222222223322222211 (App R_2222222222222223 y_222222222222222332222221 (App Zpos p_22222222222222233222222)) (Prod out_22222222222222233222222111 (App Coq.ZArith.BinInt.Z.le Z0 y_222222222222222332222221) (App P_222222222222222332 y_222222222222222332222221)))) (Lambda Hx_2222222222222223322222222 (App Coq.ZArith.BinInt.Z.le Z0 (App Zpos p_22222222222222233222222)) (App Hrec_2222222222222223322 (App Zpos p_22222222222222233222222) (Lambda y_22222222222222233222222222 Z (Lambda H_222222222222222332222222222 (App and (App Coq.ZArith.BinInt.Z.le Z0 y_22222222222222233222222222) (App Coq.ZArith.BinInt.Z.lt y_22222222222222233222222222 (App Zpos p_22222222222222233222222))) (Case 2 (Lambda out_2222222222222223322222222222 (App and (App Coq.ZArith.BinInt.Z.le Z0 y_22222222222222233222222222) (App Coq.ZArith.BinInt.Z.lt y_22222222222222233222222222 (App Zpos p_22222222222222233222222))) (App P_222222222222222332 y_22222222222222233222222222)) (CaseMatch H_222222222222222332222222222) (CaseBranches (Lambda Hy_2222222222222223322222222222 (App Coq.ZArith.BinInt.Z.le Z0 y_22222222222222233222222222) (Lambda Hy'_22222222222222233222222222222 (App Coq.ZArith.BinInt.Z.lt y_22222222222222233222222222 (App Zpos p_22222222222222233222222)) (App IH_222222222222222332222222 y_22222222222222233222222222 (App conj (App Coq.ZArith.BinInt.Z.le Z0 y_22222222222222233222222222) (App Coq.ZArith.BinInt.Z.lt y_22222222222222233222222222 (App Zpos p_22222222222222233222222)) Hy_2222222222222223322222222222 Hy'_22222222222222233222222222222) Hy_2222222222222223322222222222))))))) Hx_2222222222222223322222222)))) (Lambda p_22222222222222233222222 positive (Lambda IH_222222222222222332222222 (Prod y_222222222222222332222221 Z (Prod out_2222222222222223322222211 (App R_2222222222222223 y_222222222222222332222221 (App Zneg p_22222222222222233222222)) (Prod out_22222222222222233222222111 (App Coq.ZArith.BinInt.Z.le Z0 y_222222222222222332222221) (App P_222222222222222332 y_222222222222222332222221)))) (Lambda Hx_2222222222222223322222222 (App Coq.ZArith.BinInt.Z.le Z0 (App Zneg p_22222222222222233222222)) (LetIn l_22222222222222233222222223 (App Hx_2222222222222223322222222 (App eq_refl comparison Gt)) False (Case 0 (Lambda out_222222222222222332222222232 False (App P_222222222222222332 (App Zneg p_22222222222222233222222))) (CaseMatch l_22222222222222233222222223) (CaseBranches)))))))) IH_2222222222222223322222))) x_22222222222222233222))))))) (Definition Coq.ZArith.ZArith_dec.Z_zerop (Lambda x_2222222222222222222222222222 Z (App Coq.ZArith.BinInt.Z.eq_dec x_2222222222222222222222222222 Z0))) (Definition Coq.ZArith.Znumtheory.Zis_gcd_0 (Lambda a_222222222222222222222222222322 Z (App Zis_gcd_intro a_222222222222222222222222222322 Z0 a_222222222222222222222222222322 (App Coq.ZArith.BinInt.Z.divide_refl a_222222222222222222222222222322) (App Coq.ZArith.BinInt.Z.divide_0_r a_222222222222222222222222222322) (Lambda x_2222222222222222222222222223222 Z (Lambda H_22222222222222222222222222232222 (App Coq.ZArith.BinInt.Z.divide x_2222222222222222222222222223222 a_222222222222222222222222222322) (Lambda H0_222222222222222222222222222322222 (App Coq.ZArith.BinInt.Z.divide x_2222222222222222222222222223222 Z0) H_22222222222222222222222222232222)))))) (Definition Coq.ZArith.BinIntDef.Z.div (Lambda a_222222222222222222222222222322 Z (Lambda b_2222222222222222222222222223222 Z (Case 2 (Lambda p_22222222222222222222222222232222 (App prod Z Z) Z) (CaseMatch (App Coq.ZArith.BinIntDef.Z.div_eucl a_222222222222222222222222222322 b_2222222222222222222222222223222)) (CaseBranches (Lambda q_22222222222222222222222222232222 Z (Lambda out_222222222222222222222222222322222 Z q_22222222222222222222222222232222))))))) (Definition Coq.Logic.Decidable.dec_not_not (Cast (Lambda P_2222222222222222222222222223232 (Sort Prop) (Lambda H_22222222222222222222222222232322 (App or P_2222222222222222222222222223232 (App Coq.Init.Logic.not P_2222222222222222222222222223232)) (Lambda H0_222222222222222222222222222323222 (Prod out_222222222222222222222222222323221 (App Coq.Init.Logic.not P_2222222222222222222222222223232) False) (App Coq.Init.Logic.or_ind P_2222222222222222222222222223232 (App Coq.Init.Logic.not P_2222222222222222222222222223232) P_2222222222222222222222222223232 (Lambda H1_2222222222222222222222222223232222 P_2222222222222222222222222223232 H1_2222222222222222222222222223232222) (Lambda H1_2222222222222222222222222223232222 (App Coq.Init.Logic.not P_2222222222222222222222222223232) (LetIn H_22222222222222222222222222232322223 (App H0_222222222222222222222222222323222 H1_2222222222222222222222222223232222) False (App Coq.Init.Logic.False_ind P_2222222222222222222222222223232 H_22222222222222222222222222232322223))) H_22222222222222222222222222232322)))) REVERTcast (Prod P_2222222222222222222222222223231 (Sort Prop) (Prod out_22222222222222222222222222232311 (App Coq.Logic.Decidable.decidable P_2222222222222222222222222223231) (Prod out_222222222222222222222222222323111 (Prod out_222222222222222222222222222323111 (App Coq.Init.Logic.not P_2222222222222222222222222223231) False) P_2222222222222222222222222223231))))) (Definition Coq.ZArith.Zorder.dec_Zgt (Lambda n_2222222222222222222222222223232 Z (Lambda m_22222222222222222222222222232322 Z (LetIn d_222222222222222222222222222323223 (App Coq.ZArith.BinInt.Z.lt_decidable m_22222222222222222222222222232322 n_2222222222222222222222222223232) (App Coq.Logic.Decidable.decidable (App Coq.ZArith.BinInt.Z.lt m_22222222222222222222222222232322 n_2222222222222222222222222223232)) (Case 2 (Lambda out_2222222222222222222222222223232232 (App or (App Coq.ZArith.BinInt.Z.lt m_22222222222222222222222222232322 n_2222222222222222222222222223232) (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.lt m_22222222222222222222222222232322 n_2222222222222222222222222223232))) (App Coq.Logic.Decidable.decidable (App Coq.ZArith.BinInt.Z.gt n_2222222222222222222222222223232 m_22222222222222222222222222232322))) (CaseMatch d_222222222222222222222222222323223) (CaseBranches (Lambda H_2222222222222222222222222223232232 (App Coq.ZArith.BinInt.Z.lt m_22222222222222222222222222232322 n_2222222222222222222222222223232) (App or_introl (App Coq.ZArith.BinInt.Z.gt n_2222222222222222222222222223232 m_22222222222222222222222222232322) (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.gt n_2222222222222222222222222223232 m_22222222222222222222222222232322)) (App (Lambda lemma_22222222222222222222222222232322322 (App Coq.Init.Logic.iff (App Coq.ZArith.BinInt.Z.gt n_2222222222222222222222222223232 m_22222222222222222222222222232322) (App Coq.ZArith.BinInt.Z.lt m_22222222222222222222222222232322 n_2222222222222222222222222223232)) (App Coq.Classes.Morphisms.iff_flip_impl_subrelation (App Coq.ZArith.BinInt.Z.gt n_2222222222222222222222222223232 m_22222222222222222222222222232322) (App Coq.ZArith.BinInt.Z.lt m_22222222222222222222222222232322 n_2222222222222222222222222223232) lemma_22222222222222222222222222232322322)) (App Coq.ZArith.BinInt.Z.gt_lt_iff n_2222222222222222222222222223232 m_22222222222222222222222222232322) H_2222222222222222222222222223232232))) (Lambda H_2222222222222222222222222223232232 (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.lt m_22222222222222222222222222232322 n_2222222222222222222222222223232)) (App or_intror (App Coq.ZArith.BinInt.Z.gt n_2222222222222222222222222223232 m_22222222222222222222222222232322) (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.gt n_2222222222222222222222222223232 m_22222222222222222222222222232322)) (App (Lambda lemma_22222222222222222222222222232322322 (App Coq.Init.Logic.iff (App Coq.ZArith.BinInt.Z.gt n_2222222222222222222222222223232 m_22222222222222222222222222232322) (App Coq.ZArith.BinInt.Z.lt m_22222222222222222222222222232322 n_2222222222222222222222222223232)) (App Coq.Classes.Morphisms.subrelation_proper (Prod A_222222222222222222222222222323223221 (Sort Prop) (Sort Prop)) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) Coq.Init.Logic.not Coq.Classes.Morphisms_Prop.not_iff_morphism (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) tt (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation) (App Coq.ZArith.BinInt.Z.gt n_2222222222222222222222222223232 m_22222222222222222222222222232322) (App Coq.ZArith.BinInt.Z.lt m_22222222222222222222222222232322 n_2222222222222222222222222223232) lemma_22222222222222222222222222232322322)) (App Coq.ZArith.BinInt.Z.gt_lt_iff n_2222222222222222222222222223232 m_22222222222222222222222222232322) H_2222222222222222222222222223232232))))))))) (Definition Coq.Init.Logic.ex_ind (Lambda A_2222222222222222222222222223232232 (Sort Type) (Lambda P_22222222222222222222222222232322322 (Prod out_22222222222222222222222222232322321 A_2222222222222222222222222223232232 (Sort Prop)) (Lambda P_222222222222222222222222222323223222 (Sort Prop) (Lambda f_2222222222222222222222222223232232222 (Prod x_2222222222222222222222222223232232221 A_2222222222222222222222222223232232 (Prod out_22222222222222222222222222232322322211 (App P_22222222222222222222222222232322322 x_2222222222222222222222222223232232221) P_222222222222222222222222222323223222)) (Lambda e_22222222222222222222222222232322322222 (App ex A_2222222222222222222222222223232232 P_22222222222222222222222222232322322) (Case 2 (Lambda out_222222222222222222222222222323223222222 (App ex A_2222222222222222222222222223232232 P_22222222222222222222222222232322322) P_222222222222222222222222222323223222) (CaseMatch e_22222222222222222222222222232322322222) (CaseBranches f_2222222222222222222222222223232232222)))))))) (Definition Coq.omega.OmegaLemmas.fast_Zred_factor0 (Lambda x_22222222222222222222222222232322322222222222 Z (Lambda P_222222222222222222222222222323223222222222222 (Prod out_222222222222222222222222222323223222222222221 Z (Sort Prop)) (Lambda H_2222222222222222222222222223232232222222222222 (App P_222222222222222222222222222323223222222222222 (App Coq.ZArith.BinIntDef.Z.mul x_22222222222222222222222222232322322222222222 (App Zpos xH))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul x_22222222222222222222222222232322322222222222 (App Zpos xH)) P_222222222222222222222222222323223222222222222 H_2222222222222222222222222223232232222222222222 x_22222222222222222222222222232322322222222222 (App Coq.omega.OmegaLemmas.Zred_factor0 x_22222222222222222222222222232322322222222222)))))) (Definition Coq.ZArith.BinInt.Zne (Lambda x_2222222222222222222222222223232232222222222222 Z (Lambda y_22222222222222222222222222232322322222222222222 Z (App Coq.Init.Logic.not (App eq Z x_2222222222222222222222222223232232222222222222 y_22222222222222222222222222232322322222222222222))))) (Definition Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 (Lambda x_2222222222222222222222222223232232222222222222 Z (Lambda P_22222222222222222222222222232322322222222222222 (Prod out_22222222222222222222222222232322322222222222221 Z (Sort Prop)) (Lambda H_222222222222222222222222222323223222222222222222 (App P_22222222222222222222222222232322322222222222222 (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222222222222223232232222222222222 (App Zneg xH))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222222222222223232232222222222222 (App Zneg xH)) P_22222222222222222222222222232322322222222222222 H_222222222222222222222222222323223222222222222222 (App Coq.ZArith.BinIntDef.Z.opp x_2222222222222222222222222223232232222222222222) (App Coq.ZArith.BinInt.Z.opp_eq_mul_m1 x_2222222222222222222222222223232232222222222222)))))) (Definition Coq.omega.OmegaLemmas.fast_Zplus_comm (Lambda x_2222222222222222222222222223232232222222222222 Z (Lambda y_22222222222222222222222222232322322222222222222 Z (Lambda P_222222222222222222222222222323223222222222222222 (Prod out_222222222222222222222222222323223222222222222221 Z (Sort Prop)) (Lambda H_2222222222222222222222222223232232222222222222222 (App P_222222222222222222222222222323223222222222222222 (App Coq.ZArith.BinIntDef.Z.add y_22222222222222222222222222232322322222222222222 x_2222222222222222222222222223232232222222222222)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add y_22222222222222222222222222232322322222222222222 x_2222222222222222222222222223232232222222222222) P_222222222222222222222222222323223222222222222222 H_2222222222222222222222222223232232222222222222222 (App Coq.ZArith.BinIntDef.Z.add x_2222222222222222222222222223232232222222222222 y_22222222222222222222222222232322322222222222222) (App Coq.ZArith.BinInt.Z.add_comm x_2222222222222222222222222223232232222222222222 y_22222222222222222222222222232322322222222222222))))))) (Definition Coq.omega.OmegaLemmas.fast_OMEGA16 (Lambda v_22222222222222222222222222232322322222222222222 Z (Lambda c_222222222222222222222222222323223222222222222222 Z (Lambda l_2222222222222222222222222223232232222222222222222 Z (Lambda k_22222222222222222222222222232322322222222222222222 Z (Lambda P_222222222222222222222222222323223222222222222222222 (Prod out_222222222222222222222222222323223222222222222222221 Z (Sort Prop)) (Lambda H_2222222222222222222222222223232232222222222222222222 (App P_222222222222222222222222222323223222222222222222222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v_22222222222222222222222222232322322222222222222 (App Coq.ZArith.BinIntDef.Z.mul c_222222222222222222222222222323223222222222222222 k_22222222222222222222222222232322322222222222222222)) (App Coq.ZArith.BinIntDef.Z.mul l_2222222222222222222222222223232232222222222222222 k_22222222222222222222222222232322322222222222222222))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v_22222222222222222222222222232322322222222222222 (App Coq.ZArith.BinIntDef.Z.mul c_222222222222222222222222222323223222222222222222 k_22222222222222222222222222232322322222222222222222)) (App Coq.ZArith.BinIntDef.Z.mul l_2222222222222222222222222223232232222222222222222 k_22222222222222222222222222232322322222222222222222)) P_222222222222222222222222222323223222222222222222222 H_2222222222222222222222222223232232222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v_22222222222222222222222222232322322222222222222 c_222222222222222222222222222323223222222222222222) l_2222222222222222222222222223232232222222222222222) k_22222222222222222222222222232322322222222222222222) (App Coq.omega.OmegaLemmas.OMEGA16 v_22222222222222222222222222232322322222222222222 c_222222222222222222222222222323223222222222222222 l_2222222222222222222222222223232232222222222222222 k_22222222222222222222222222232322322222222222222222))))))))) (Definition Coq.omega.OmegaLemmas.fast_OMEGA15 (Lambda v_22222222222222222222222222232322322222222222223222 Z (Lambda c1_222222222222222222222222222323223222222222222232222 Z (Lambda c2_2222222222222222222222222223232232222222222222322222 Z (Lambda l1_22222222222222222222222222232322322222222222223222222 Z (Lambda l2_222222222222222222222222222323223222222222222232222222 Z (Lambda k2_2222222222222222222222222223232232222222222222322222222 Z (Lambda P_22222222222222222222222222232322322222222222223222222222 (Prod out_22222222222222222222222222232322322222222222223222222221 Z (Sort Prop)) (Lambda H_222222222222222222222222222323223222222222222232222222222 (App P_22222222222222222222222222232322322222222222223222222222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v_22222222222222222222222222232322322222222222223222 (App Coq.ZArith.BinIntDef.Z.add c1_222222222222222222222222222323223222222222222232222 (App Coq.ZArith.BinIntDef.Z.mul c2_2222222222222222222222222223232232222222222222322222 k2_2222222222222222222222222223232232222222222222322222222))) (App Coq.ZArith.BinIntDef.Z.add l1_22222222222222222222222222232322322222222222223222222 (App Coq.ZArith.BinIntDef.Z.mul l2_222222222222222222222222222323223222222222222232222222 k2_2222222222222222222222222223232232222222222222322222222)))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v_22222222222222222222222222232322322222222222223222 (App Coq.ZArith.BinIntDef.Z.add c1_222222222222222222222222222323223222222222222232222 (App Coq.ZArith.BinIntDef.Z.mul c2_2222222222222222222222222223232232222222222222322222 k2_2222222222222222222222222223232232222222222222322222222))) (App Coq.ZArith.BinIntDef.Z.add l1_22222222222222222222222222232322322222222222223222222 (App Coq.ZArith.BinIntDef.Z.mul l2_222222222222222222222222222323223222222222222232222222 k2_2222222222222222222222222223232232222222222222322222222))) P_22222222222222222222222222232322322222222222223222222222 H_222222222222222222222222222323223222222222222232222222222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v_22222222222222222222222222232322322222222222223222 c1_222222222222222222222222222323223222222222222232222) l1_22222222222222222222222222232322322222222222223222222) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v_22222222222222222222222222232322322222222222223222 c2_2222222222222222222222222223232232222222222222322222) l2_222222222222222222222222222323223222222222222232222222) k2_2222222222222222222222222223232232222222222222322222222)) (App Coq.omega.OmegaLemmas.OMEGA15 v_22222222222222222222222222232322322222222222223222 c1_222222222222222222222222222323223222222222222232222 c2_2222222222222222222222222223232232222222222222322222 l1_22222222222222222222222222232322322222222222223222222 l2_222222222222222222222222222323223222222222222232222222 k2_2222222222222222222222222223232232222222222222322222222))))))))))) (Definition Coq.omega.OmegaLemmas.fast_Zred_factor5 (Lambda x_22222222222222222222222222232322322222222222223222 Z (Lambda y_222222222222222222222222222323223222222222222232222 Z (Lambda P_2222222222222222222222222223232232222222222222322222 (Prod out_2222222222222222222222222223232232222222222222322221 Z (Sort Prop)) (Lambda H_22222222222222222222222222232322322222222222223222222 (App P_2222222222222222222222222223232232222222222222322222 y_222222222222222222222222222323223222222222222232222) (App Coq.Init.Logic.eq_ind_r Z y_222222222222222222222222222323223222222222222232222 P_2222222222222222222222222223232232222222222222322222 H_22222222222222222222222222232322322222222222223222222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_22222222222222222222222222232322322222222222223222 Z0) y_222222222222222222222222222323223222222222222232222) (App Coq.omega.OmegaLemmas.Zred_factor5 x_22222222222222222222222222232322322222222222223222 y_222222222222222222222222222323223222222222222232222))))))) (Definition Coq.omega.OmegaLemmas.OMEGA17 (Lambda x_22222222222222222222222222232322322222222222223222 Z (Lambda y_222222222222222222222222222323223222222222222232222 Z (Lambda z_2222222222222222222222222223232232222222222222322222 Z (Cast (Lambda NE_22222222222222222222222222232322322222222222223222222 (Prod out_22222222222222222222222222232322322222222222223222221 (App eq Z x_22222222222222222222222222232322322222222222223222 Z0) False) (Lambda EQ_222222222222222222222222222323223222222222222232222222 (App eq Z y_222222222222222222222222222323223222222222222232222 Z0) (App Coq.Init.Logic.eq_ind_r Z Z0 (Lambda y_2222222222222222222222222223232232222222222222322222222 Z (Prod out_22222222222222222222222222232322322222222222223222222221 (App eq Z (App Coq.ZArith.BinIntDef.Z.add x_22222222222222222222222222232322322222222222223222 (App Coq.ZArith.BinIntDef.Z.mul y_2222222222222222222222222223232232222222222222322222222 z_2222222222222222222222222223232232222222222222322222)) Z0) False)) (App Coq.Init.Logic.eq_ind_r Z x_22222222222222222222222222232322322222222222223222 (Lambda z_2222222222222222222222222223232232222222222222322222222 Z (Prod out_22222222222222222222222222232322322222222222223222222221 (App eq Z z_2222222222222222222222222223232232222222222222322222222 Z0) False)) NE_22222222222222222222222222232322322222222222223222222 (App Coq.ZArith.BinIntDef.Z.add x_22222222222222222222222222232322322222222222223222 Z0) (App Coq.ZArith.BinInt.Z.add_0_r x_22222222222222222222222222232322322222222222223222)) y_222222222222222222222222222323223222222222222232222 EQ_222222222222222222222222222323223222222222222232222222))) REVERTcast (Prod out_22222222222222222222222222232322322222222222223222221 (App Coq.ZArith.BinInt.Zne x_22222222222222222222222222232322322222222222223222 Z0) (Prod out_222222222222222222222222222323223222222222222232222211 (App eq Z y_222222222222222222222222222323223222222222222232222 Z0) (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add x_22222222222222222222222222232322322222222222223222 (App Coq.ZArith.BinIntDef.Z.mul y_222222222222222222222222222323223222222222222232222 z_2222222222222222222222222223232232222222222222322222)) Z0)))))))) (Definition Coq.omega.OmegaLemmas.OMEGA8 (Lambda x_2222222222222222222222222223232232222222222222322 Z (Lambda y_22222222222222222222222222232322322222222222223222 Z (Lambda H1_222222222222222222222222222323223222222222222232222 (App Coq.ZArith.BinInt.Z.le Z0 x_2222222222222222222222222223232232222222222222322) (Lambda H2_2222222222222222222222222223232232222222222222322222 (App Coq.ZArith.BinInt.Z.le Z0 y_22222222222222222222222222232322322222222222223222) (Lambda H3_22222222222222222222222222232322322222222222223222222 (App eq Z x_2222222222222222222222222223232232222222222222322 (App Coq.ZArith.BinIntDef.Z.opp y_22222222222222222222222222232322322222222222223222)) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.not_neq_eq x_2222222222222222222222222223232232222222222222322 Z0 (Cast (Lambda H_222222222222222222222222222323223222222222222232222222 (App Coq.Init.Logic.not (App eq Z x_2222222222222222222222222223232232222222222222322 Z0)) (App (Lambda H_2222222222222222222222222223232232222222222222322222222 (App Coq.Init.Logic.not (App eq Z (App Coq.ZArith.BinIntDef.Z.opp y_22222222222222222222222222232322322222222222223222) Z0)) (App (Lambda H1_22222222222222222222222222232322322222222222223222222222 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.opp y_22222222222222222222222222232322322222222222223222)) (App (Lambda H0_222222222222222222222222222323223222222222222232222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.opp y_22222222222222222222222222232322322222222222223222) Z0) (App (Lambda H_2222222222222222222222222223232232222222222222322222222222 (App Coq.Init.Logic.not (App eq Z Z0 Z0)) (App H_2222222222222222222222222223232232222222222222322222222222 (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.eq_refl Z0))) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.eq_neq Z0 (App Coq.ZArith.BinIntDef.Z.opp y_22222222222222222222222222232322322222222222223222) Z0 (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.eq_sym (App Coq.ZArith.BinIntDef.Z.opp y_22222222222222222222222222232322322222222222223222) Z0 H0_222222222222222222222222222323223222222222222232222222222) H_2222222222222222222222222223232232222222222222322222222))) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.le_antisym (App Coq.ZArith.BinIntDef.Z.opp y_22222222222222222222222222232322322222222222223222) Z0 (App (Lambda lemma_222222222222222222222222222323223222222222222232222222222 (App Coq.Init.Logic.iff (App Coq.ZArith.BinInt.Z.le (App Coq.ZArith.BinIntDef.Z.opp y_22222222222222222222222222232322322222222222223222) Z0) (App Coq.ZArith.BinInt.Z.le Z0 y_22222222222222222222222222232322322222222222223222)) (App Coq.Classes.Morphisms.iff_impl_subrelation (App Coq.ZArith.BinInt.Z.le Z0 y_22222222222222222222222222232322322222222222223222) (App Coq.ZArith.BinInt.Z.le (App Coq.ZArith.BinIntDef.Z.opp y_22222222222222222222222222232322322222222222223222) Z0) (App Coq.Classes.RelationClasses.symmetry (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Symmetric (App Coq.ZArith.BinInt.Z.le (App Coq.ZArith.BinIntDef.Z.opp y_22222222222222222222222222232322322222222222223222) Z0) (App Coq.ZArith.BinInt.Z.le Z0 y_22222222222222222222222222232322322222222222223222) lemma_222222222222222222222222222323223222222222222232222222222))) (App Coq.ZArith.BinInt.Z.opp_nonpos_nonneg y_22222222222222222222222222232322322222222222223222) H2_2222222222222222222222222223232232222222222222322222) H1_22222222222222222222222222232322322222222222223222222222))) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.le_eq Z0 x_2222222222222222222222222223232232222222222222322 (App Coq.ZArith.BinIntDef.Z.opp y_22222222222222222222222222232322322222222222223222) H1_222222222222222222222222222323223222222222222232222 H3_22222222222222222222222222232322322222222222223222222))) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.eq_neq (App Coq.ZArith.BinIntDef.Z.opp y_22222222222222222222222222232322322222222222223222) x_2222222222222222222222222223232232222222222222322 Z0 (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.eq_sym x_2222222222222222222222222223232232222222222222322 (App Coq.ZArith.BinIntDef.Z.opp y_22222222222222222222222222232322322222222222223222) H3_22222222222222222222222222232322322222222222223222222) H_222222222222222222222222222323223222222222222232222222))) REVERTcast (App Coq.Init.Logic.not (App Coq.Init.Logic.not (App eq Z x_2222222222222222222222222223232232222222222222322 Z0))))))))))) (Definition Coq.ZArith.auxiliary.Zle_left (Lambda n_2222222222222222222222222223232232222222222222 Z (Lambda m_22222222222222222222222222232322322222222222222 Z (LetIn H_222222222222222222222222222323223222222222222223 (Lambda n_222222222222222222222222222323223222222222222222 Z (Lambda m_2222222222222222222222222223232232222222222222222 Z (Case 2 (Lambda out_22222222222222222222222222232322322222222222222222 (App and (Prod out_22222222222222222222222222232322322222222222222221 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.sub m_2222222222222222222222222223232232222222222222222 n_222222222222222222222222222323223222222222222222)) (App Coq.ZArith.BinInt.Z.le n_222222222222222222222222222323223222222222222222 m_2222222222222222222222222223232232222222222222222)) (Prod out_22222222222222222222222222232322322222222222222221 (App Coq.ZArith.BinInt.Z.le n_222222222222222222222222222323223222222222222222 m_2222222222222222222222222223232232222222222222222) (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.sub m_2222222222222222222222222223232232222222222222222 n_222222222222222222222222222323223222222222222222)))) (Prod out_222222222222222222222222222323223222222222222222221 (App Coq.ZArith.BinInt.Z.le n_222222222222222222222222222323223222222222222222 m_2222222222222222222222222223232232222222222222222) (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.sub m_2222222222222222222222222223232232222222222222222 n_222222222222222222222222222323223222222222222222)))) (CaseMatch (App Coq.ZArith.BinInt.Z.le_0_sub n_222222222222222222222222222323223222222222222222 m_2222222222222222222222222223232232222222222222222)) (CaseBranches (Lambda out_22222222222222222222222222232322322222222222222222 (Prod out_22222222222222222222222222232322322222222222222221 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.sub m_2222222222222222222222222223232232222222222222222 n_222222222222222222222222222323223222222222222222)) (App Coq.ZArith.BinInt.Z.le n_222222222222222222222222222323223222222222222222 m_2222222222222222222222222223232232222222222222222)) (Lambda out_222222222222222222222222222323223222222222222222222 (Prod out_222222222222222222222222222323223222222222222222221 (App Coq.ZArith.BinInt.Z.le n_222222222222222222222222222323223222222222222222 m_2222222222222222222222222223232232222222222222222) (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.sub m_2222222222222222222222222223232232222222222222222 n_222222222222222222222222222323223222222222222222))) out_222222222222222222222222222323223222222222222222222)))))) (Prod n_222222222222222222222222222323223222222222222221 Z (Prod m_2222222222222222222222222223232232222222222222211 Z (Prod out_22222222222222222222222222232322322222222222222111 (App Coq.ZArith.BinInt.Z.le n_222222222222222222222222222323223222222222222221 m_2222222222222222222222222223232232222222222222211) (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.sub m_2222222222222222222222222223232232222222222222211 n_222222222222222222222222222323223222222222222221))))) (App H_222222222222222222222222222323223222222222222223 n_2222222222222222222222222223232232222222222222 m_22222222222222222222222222232322322222222222222))))) (Definition Coq.ZArith.auxiliary.Zne_left (Lambda n_222222222222222222222222222323223222222222222 Z (Lambda m_2222222222222222222222222223232232222222222222 Z (Cast (App (Lambda lemma_22222222222222222222222222232322322222222222222 (App Coq.Init.Logic.iff (App eq Z (App Coq.ZArith.BinIntDef.Z.sub n_222222222222222222222222222323223222222222222 m_2222222222222222222222222223232232222222222222) Z0) (App eq Z n_222222222222222222222222222323223222222222222 m_2222222222222222222222222223232232222222222222)) (App Coq.Classes.Morphisms.subrelation_proper (Prod A_222222222222222222222222222323223222222222222221 (Sort Prop) (Prod B_2222222222222222222222222223232232222222222222211 (Sort Prop) (Sort Prop))) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Prod out_222222222222222222222222222323223222222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff)) Coq.Program.Basics.impl Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism (App Coq.Classes.Morphisms.respectful (Sort Prop) (Prod B_222222222222222222222222222323223222222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Prod B_222222222222222222222222222323223222222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App Coq.Init.Logic.not (App eq Z n_222222222222222222222222222323223222222222222 m_2222222222222222222222222223232232222222222222)) (App Coq.Init.Logic.not (App eq Z (App Coq.ZArith.BinIntDef.Z.sub n_222222222222222222222222222323223222222222222 m_2222222222222222222222222223232232222222222222) Z0)) (App Coq.Classes.Morphisms_Prop.not_iff_morphism (App eq Z n_222222222222222222222222222323223222222222222 m_2222222222222222222222222223232232222222222222) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub n_222222222222222222222222222323223222222222222 m_2222222222222222222222222223232232222222222222) Z0) (App Coq.Classes.RelationClasses.symmetry (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Symmetric (App eq Z (App Coq.ZArith.BinIntDef.Z.sub n_222222222222222222222222222323223222222222222 m_2222222222222222222222222223232232222222222222) Z0) (App eq Z n_222222222222222222222222222323223222222222222 m_2222222222222222222222222223232232222222222222) lemma_22222222222222222222222222232322322222222222222)) (App Coq.Init.Logic.not (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_222222222222222222222222222323223222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_2222222222222222222222222223232232222222222222)) Z0)) (App Coq.Init.Logic.not (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_222222222222222222222222222323223222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_2222222222222222222222222223232232222222222222)) Z0)) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Logic.not (App eq Z (App Coq.ZArith.BinIntDef.Z.add n_222222222222222222222222222323223222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_2222222222222222222222222223232232222222222222)) Z0))))) (App Coq.ZArith.BinInt.Z.sub_move_0_r n_222222222222222222222222222323223222222222222 m_2222222222222222222222222223232232222222222222) (Lambda H_22222222222222222222222222232322322222222222222 (App Coq.Init.Logic.not (App eq Z (App Coq.ZArith.BinIntDef.Z.sub n_222222222222222222222222222323223222222222222 m_2222222222222222222222222223232232222222222222) Z0)) H_22222222222222222222222222232322322222222222222)) REVERTcast (Prod out_22222222222222222222222222232322322222222222221 (App Coq.ZArith.BinInt.Zne n_222222222222222222222222222323223222222222222 m_2222222222222222222222222223232232222222222222) (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add n_222222222222222222222222222323223222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_2222222222222222222222222223232232222222222222)) Z0)))))) (Definition Coq.omega.OmegaLemmas.new_var (Lambda x_222222222222222222222222222323223222222222 Z (App ex_intro Z (Lambda y_2222222222222222222222222223232232222222222 Z (App eq Z x_222222222222222222222222222323223222222222 y_2222222222222222222222222223232232222222222)) x_222222222222222222222222222323223222222222 (App eq_refl Z x_222222222222222222222222222323223222222222)))) (Definition Coq.ZArith.Zorder.Znot_gt_le (Lambda n_22222222222222222222222222232322 Z (Lambda m_222222222222222222222222222323222 Z (Lambda H_2222222222222222222222222223232222 (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.gt n_22222222222222222222222222232322 m_222222222222222222222222222323222)) H_2222222222222222222222222223232222)))) (Definition Coq.ZArith.BinIntDef.Z.modulo (Lambda a_22222222222222222222222222232332 Z (Lambda b_222222222222222222222222222323322 Z (Case 2 (Lambda p_2222222222222222222222222223233222 (App prod Z Z) Z) (CaseMatch (App Coq.ZArith.BinIntDef.Z.div_eucl a_22222222222222222222222222232332 b_222222222222222222222222222323322)) (CaseBranches (Lambda out_2222222222222222222222222223233222 Z (Lambda r_22222222222222222222222222232332222 Z r_22222222222222222222222222232332222))))))) (Definition Coq.ZArith.Zdiv.Z_div_mod_eq (App (Lambda Coq_ZArith_Zdiv_Z_div_mod_eq_subproof_22222222222222222222222222232332 (Prod b_22222222222222222222222222232331 Z (Prod Hb_222222222222222222222222222323311 (App Coq.ZArith.BinInt.Z.gt b_22222222222222222222222222232331 Z0) (Prod H_2222222222222222222222222223233111 (App eq Z b_22222222222222222222222222232331 Z0) False))) (Lambda a_222222222222222222222222222323322 Z (Lambda b_2222222222222222222222222223233222 Z (Lambda Hb_22222222222222222222222222232332222 (App Coq.ZArith.BinInt.Z.gt b_2222222222222222222222222223233222 Z0) (App Coq.ZArith.BinInt.Z.div_mod a_222222222222222222222222222323322 b_2222222222222222222222222223233222 (Cast (Lambda H_222222222222222222222222222323322222 (App eq Z b_2222222222222222222222222223233222 Z0) (App Coq_ZArith_Zdiv_Z_div_mod_eq_subproof_22222222222222222222222222232332 b_2222222222222222222222222223233222 Hb_22222222222222222222222222232332222 H_222222222222222222222222222323322222)) REVERTcast (App Coq.Init.Logic.not (App eq Z b_2222222222222222222222222223233222 Z0)))))))) (Lambda b_22222222222222222222222222232332 Z (Lambda Hb_222222222222222222222222222323322 (App Coq.ZArith.BinInt.Z.gt b_22222222222222222222222222232332 Z0) (Lambda H_2222222222222222222222222223233222 (App eq Z b_22222222222222222222222222232332 Z0) (App Coq.omega.OmegaLemmas.fast_Zplus_assoc_reverse b_22222222222222222222222222232332 (App Zneg xH) Z0 (Lambda x_22222222222222222222222222232332222 Z (Prod out_222222222222222222222222222323322221 (App Coq.ZArith.BinInt.Z.le Z0 x_22222222222222222222222222232332222) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor0 b_22222222222222222222222222232332 (Lambda x_22222222222222222222222222232332222 Z (Prod out_222222222222222222222222222323322221 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.add x_22222222222222222222222222232332222 (App Zneg xH))) False)) (Lambda Omega1_22222222222222222222222222232332222 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul b_22222222222222222222222222232332 (App Zpos xH)) (App Zneg xH))) (App Coq.omega.OmegaLemmas.fast_Zred_factor0 b_22222222222222222222222222232332 (Lambda x_222222222222222222222222222323322222 Z (Prod out_2222222222222222222222222223233222221 (App eq Z (App Coq.ZArith.BinIntDef.Z.add x_222222222222222222222222222323322222 Z0) Z0) False)) (Lambda Omega0_222222222222222222222222222323322222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul b_22222222222222222222222222232332 (App Zpos xH)) Z0) Z0) (App Coq.omega.OmegaLemmas.fast_OMEGA15 b_22222222222222222222222222232332 (App Zpos xH) (App Zpos xH) (App Zneg xH) Z0 (App Zneg xH) (Lambda x_2222222222222222222222222223233222222 Z (Prod out_22222222222222222222222222232332222221 (App Coq.ZArith.BinInt.Z.le Z0 x_2222222222222222222222222223233222222) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 b_22222222222222222222222222232332 (App Coq.ZArith.BinIntDef.Z.add (App Zneg xH) (App Coq.ZArith.BinIntDef.Z.mul Z0 (App Zneg xH))) (Lambda x_2222222222222222222222222223233222222 Z (Prod out_22222222222222222222222222232332222221 (App Coq.ZArith.BinInt.Z.le Z0 x_2222222222222222222222222223233222222) False)) (Lambda Omega2_2222222222222222222222222223233222222 (App Coq.ZArith.BinInt.Z.le Z0 (App Zneg xH)) (App (Cast (Cast (Cast (Lambda auxiliary_22222222222222222222222222232332222222 (Prod out_22222222222222222222222222232332222221 (App eq comparison Gt Gt) False) (App auxiliary_22222222222222222222222222232332222222 (App eq_refl comparison Gt))) REVERTcast (Prod Omega2_22222222222222222222222222232332222221 (App Coq.Init.Logic.not (App eq comparison Gt Gt)) False)) REVERTcast (Prod Omega2_22222222222222222222222222232332222221 (App Coq.Init.Logic.not (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare Z0 (App Zneg xH)) Gt)) False)) REVERTcast (Prod Omega2_22222222222222222222222222232332222221 (App Coq.ZArith.BinInt.Z.le Z0 (App Zneg xH)) False)) Omega2_2222222222222222222222222223233222222))) (App Coq.omega.OmegaLemmas.OMEGA6 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul b_22222222222222222222222222232332 (App Zpos xH)) (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul b_22222222222222222222222222232332 (App Zpos xH)) Z0) (App Zneg xH) Omega1_22222222222222222222222222232332222 Omega0_222222222222222222222222222323322222))) (App Coq.ZArith.auxiliary.Zegal_left b_22222222222222222222222222232332 Z0 H_2222222222222222222222222223233222)))) (App Coq.ZArith.auxiliary.Zgt_left b_22222222222222222222222222232332 Z0 Hb_222222222222222222222222222323322))))))) (Definition Coq.ZArith.Zdiv.Z_mod_lt (Lambda a_22222222222222222222222222232332 Z (Lambda b_222222222222222222222222222323322 Z (Lambda Hb_2222222222222222222222222223233222 (App Coq.ZArith.BinInt.Z.gt b_222222222222222222222222222323322 Z0) (App Coq.ZArith.BinInt.Z.mod_pos_bound a_22222222222222222222222222232332 b_222222222222222222222222222323322 (App Coq.ZArith.BinInt.Z.gt_lt b_222222222222222222222222222323322 Z0 Hb_2222222222222222222222222223233222)))))) (Definition Coq.Init.Logic.proj1 (Lambda A_22222222222222222222222222232332 (Sort Prop) (Lambda B_222222222222222222222222222323322 (Sort Prop) (Lambda H_2222222222222222222222222223233222 (App and A_22222222222222222222222222232332 B_222222222222222222222222222323322) (Case 2 (Lambda out_22222222222222222222222222232332222 (App and A_22222222222222222222222222232332 B_222222222222222222222222222323322) A_22222222222222222222222222232332) (CaseMatch H_2222222222222222222222222223233222) (CaseBranches (Lambda H_22222222222222222222222222232332222 A_22222222222222222222222222232332 (Lambda H0_222222222222222222222222222323322222 B_222222222222222222222222222323322 H_22222222222222222222222222232332222)))))))) (Definition Coq.Init.Logic.and_ind (Lambda A_22222222222222222222222222232332 (Sort Prop) (Lambda B_222222222222222222222222222323322 (Sort Prop) (Lambda P_2222222222222222222222222223233222 (Sort Prop) (Lambda f_22222222222222222222222222232332222 (Prod out_22222222222222222222222222232332221 A_22222222222222222222222222232332 (Prod out_222222222222222222222222222323322211 B_222222222222222222222222222323322 P_2222222222222222222222222223233222)) (Lambda a_222222222222222222222222222323322222 (App and A_22222222222222222222222222232332 B_222222222222222222222222222323322) (Case 2 (Lambda out_2222222222222222222222222223233222222 (App and A_22222222222222222222222222232332 B_222222222222222222222222222323322) P_2222222222222222222222222223233222) (CaseMatch a_222222222222222222222222222323322222) (CaseBranches f_22222222222222222222222222232332222)))))))) (Definition Coq.ZArith.Znumtheory.Zis_gcd_for_euclid (Lambda a_2222222222222222222222222223233222 Z (Lambda b_22222222222222222222222222232332222 Z (Lambda d_222222222222222222222222222323322222 Z (Lambda q_2222222222222222222222222223233222222 Z (Lambda H_22222222222222222222222222232332222222 (App Zis_gcd b_22222222222222222222222222232332222 (App Coq.ZArith.BinIntDef.Z.sub a_2222222222222222222222222223233222 (App Coq.ZArith.BinIntDef.Z.mul q_2222222222222222222222222223233222222 b_22222222222222222222222222232332222)) d_222222222222222222222222222323322222) (App Coq.ZArith.Znumtheory.Zis_gcd_ind b_22222222222222222222222222232332222 (App Coq.ZArith.BinIntDef.Z.sub a_2222222222222222222222222223233222 (App Coq.ZArith.BinIntDef.Z.mul q_2222222222222222222222222223233222222 b_22222222222222222222222222232332222)) d_222222222222222222222222222323322222 (App Zis_gcd a_2222222222222222222222222223233222 b_22222222222222222222222222232332222 d_222222222222222222222222222323322222) (Lambda H0_222222222222222222222222222323322222222 (App Coq.ZArith.BinInt.Z.divide d_222222222222222222222222222323322222 b_22222222222222222222222222232332222) (Lambda H1_2222222222222222222222222223233222222222 (App Coq.ZArith.BinInt.Z.divide d_222222222222222222222222222323322222 (App Coq.ZArith.BinIntDef.Z.sub a_2222222222222222222222222223233222 (App Coq.ZArith.BinIntDef.Z.mul q_2222222222222222222222222223233222222 b_22222222222222222222222222232332222))) (Lambda H2_22222222222222222222222222232332222222222 (Prod x_22222222222222222222222222232332222222221 Z (Prod out_222222222222222222222222222323322222222211 (App Coq.ZArith.BinInt.Z.divide x_22222222222222222222222222232332222222221 b_22222222222222222222222222232332222) (Prod out_2222222222222222222222222223233222222222111 (App Coq.ZArith.BinInt.Z.divide x_22222222222222222222222222232332222222221 (App Coq.ZArith.BinIntDef.Z.sub a_2222222222222222222222222223233222 (App Coq.ZArith.BinIntDef.Z.mul q_2222222222222222222222222223233222222 b_22222222222222222222222222232332222))) (App Coq.ZArith.BinInt.Z.divide x_22222222222222222222222222232332222222221 d_222222222222222222222222222323322222)))) (App Zis_gcd_intro a_2222222222222222222222222223233222 b_22222222222222222222222222232332222 d_222222222222222222222222222323322222 (LetIn H3_222222222222222222222222222323322222222223 (Cast (LetIn hyp_list_222222222222222222222222222323322222222223 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn fv_list_2222222222222222222222222223233222222222233 (App cons Z a_2222222222222222222222222223233222 (App cons Z q_2222222222222222222222222223233222222 (App cons Z b_22222222222222222222222222232332222 (App nil Z)))) (App list Z) (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma1 Coq.setoid_ring.Ring_tac.ring_subst_niter fv_list_2222222222222222222222222223233222222222233 hyp_list_222222222222222222222222222323322222222223 (App PEadd Z (App PEsub Z (App PEX Z xH) (App PEmul Z (App PEX Z (App xO xH)) (App PEX Z (App xI xH)))) (App PEmul Z (App PEX Z (App xO xH)) (App PEX Z (App xI xH)))) (App PEX Z xH) I (Cast (App eq_refl bool true) VMcast (App eq bool (LetIn lmp_22222222222222222222222222232332222222222333 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem hyp_list_222222222222222222222222222323322222222223) (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.Peq Z Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter lmp_22222222222222222222222222232332222222222333 (App PEadd Z (App PEsub Z (App PEX Z xH) (App PEmul Z (App PEX Z (App xO xH)) (App PEX Z (App xI xH)))) (App PEmul Z (App PEX Z (App xO xH)) (App PEX Z (App xI xH))))) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter lmp_22222222222222222222222222232332222222222333 (App PEX Z xH)))) true))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.sub a_2222222222222222222222222223233222 (App Coq.ZArith.BinIntDef.Z.mul q_2222222222222222222222222223233222222 b_22222222222222222222222222232332222)) (App Coq.ZArith.BinIntDef.Z.mul q_2222222222222222222222222223233222222 b_22222222222222222222222222232332222)) a_2222222222222222222222222223233222)) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.sub a_2222222222222222222222222223233222 (App Coq.ZArith.BinIntDef.Z.mul q_2222222222222222222222222223233222222 b_22222222222222222222222222232332222)) (App Coq.ZArith.BinIntDef.Z.mul q_2222222222222222222222222223233222222 b_22222222222222222222222222232332222)) a_2222222222222222222222222223233222) (App Coq.Init.Logic.eq_ind Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.sub a_2222222222222222222222222223233222 (App Coq.ZArith.BinIntDef.Z.mul q_2222222222222222222222222223233222222 b_22222222222222222222222222232332222)) (App Coq.ZArith.BinIntDef.Z.mul q_2222222222222222222222222223233222222 b_22222222222222222222222222232332222)) (Lambda a_2222222222222222222222222223233222222222232 Z (App Coq.ZArith.BinInt.Z.divide d_222222222222222222222222222323322222 a_2222222222222222222222222223233222222222232)) (App Coq.ZArith.Znumtheory.Zdivide_opp_l_rev d_222222222222222222222222222323322222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.sub a_2222222222222222222222222223233222 (App Coq.ZArith.BinIntDef.Z.mul q_2222222222222222222222222223233222222 b_22222222222222222222222222232332222)) (App Coq.ZArith.BinIntDef.Z.mul q_2222222222222222222222222223233222222 b_22222222222222222222222222232332222)) (App Coq.ZArith.Znumtheory.Zdivide_opp_l d_222222222222222222222222222323322222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.sub a_2222222222222222222222222223233222 (App Coq.ZArith.BinIntDef.Z.mul q_2222222222222222222222222223233222222 b_22222222222222222222222222232332222)) (App Coq.ZArith.BinIntDef.Z.mul q_2222222222222222222222222223233222222 b_22222222222222222222222222232332222)) (App Coq.ZArith.BinInt.Z.divide_add_r d_222222222222222222222222222323322222 (App Coq.ZArith.BinIntDef.Z.sub a_2222222222222222222222222223233222 (App Coq.ZArith.BinIntDef.Z.mul q_2222222222222222222222222223233222222 b_22222222222222222222222222232332222)) (App Coq.ZArith.BinIntDef.Z.mul q_2222222222222222222222222223233222222 b_22222222222222222222222222232332222) H1_2222222222222222222222222223233222222222 (App Coq.ZArith.BinInt.Z.divide_mul_r d_222222222222222222222222222323322222 q_2222222222222222222222222223233222222 b_22222222222222222222222222232332222 H0_222222222222222222222222222323322222222)))) a_2222222222222222222222222223233222 H3_222222222222222222222222222323322222222223)) H0_222222222222222222222222222323322222222 (Lambda x_222222222222222222222222222323322222222222 Z (Lambda H3_2222222222222222222222222223233222222222222 (App Coq.ZArith.BinInt.Z.divide x_222222222222222222222222222323322222222222 a_2222222222222222222222222223233222) (Lambda H4_22222222222222222222222222232332222222222222 (App Coq.ZArith.BinInt.Z.divide x_222222222222222222222222222323322222222222 b_22222222222222222222222222232332222) (Cast (App H2_22222222222222222222222222232332222222222 x_222222222222222222222222222323322222222222 H4_22222222222222222222222222232332222222222222 (App Coq.ZArith.BinInt.Z.divide_sub_r x_222222222222222222222222222323322222222222 a_2222222222222222222222222223233222 (App Coq.ZArith.BinIntDef.Z.mul q_2222222222222222222222222223233222222 b_22222222222222222222222222232332222) H3_2222222222222222222222222223233222222222222 (App Coq.ZArith.BinInt.Z.divide_mul_r x_222222222222222222222222222323322222222222 q_2222222222222222222222222223233222222 b_22222222222222222222222222232332222 H4_22222222222222222222222222232332222222222222))) REVERTcast (App Coq.ZArith.BinInt.Z.divide x_222222222222222222222222222323322222222222 d_222222222222222222222222222323322222))))))))) H_22222222222222222222222222232332222222))))))) (Definition Coq.ZArith.Znumtheory.euclid_rec (Lambda a_222222222222 Z (Lambda b_2222222222222 Z (Lambda v3_22222222222222 Z (Lambda Hv3_222222222222222 (App Coq.ZArith.BinInt.Z.le Z0 v3_22222222222222) (App (Cast (App Coq.ZArith.Wf_Z.Zlt_0_rec (Lambda z_2222222222222222 Z (Prod Hv3_22222222222222221 (App Coq.ZArith.BinInt.Z.le Z0 z_2222222222222222) (Prod u1_222222222222222211 Z (Prod u2_2222222222222222111 Z (Prod u3_22222222222222221111 Z (Prod v1_222222222222222211111 Z (Prod v2_2222222222222222111111 Z (Prod out_22222222222222221111111 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul u1_222222222222222211 a_222222222222) (App Coq.ZArith.BinIntDef.Z.mul u2_2222222222222222111 b_2222222222222)) u3_22222222222222221111) (Prod out_222222222222222211111111 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v1_222222222222222211111 a_222222222222) (App Coq.ZArith.BinIntDef.Z.mul v2_2222222222222222111111 b_2222222222222)) z_2222222222222222) (Prod out_2222222222222222111111111 (Prod d_2222222222222222111111111 Z (Prod out_22222222222222221111111111 (App Zis_gcd u3_22222222222222221111 z_2222222222222222 d_2222222222222222111111111) (App Zis_gcd a_222222222222 b_2222222222222 d_2222222222222222111111111))) (App Euclid a_222222222222 b_2222222222222))))))))))) (Lambda x_2222222222222222 Z (Lambda H_22222222222222222 (Prod y_22222222222222221 Z (Prod out_222222222222222211 (App and (App Coq.ZArith.BinInt.Z.le Z0 y_22222222222222221) (App Coq.ZArith.BinInt.Z.lt y_22222222222222221 x_2222222222222222)) (Prod Hv3_2222222222222222111 (App Coq.ZArith.BinInt.Z.le Z0 y_22222222222222221) (Prod u1_22222222222222221111 Z (Prod u2_222222222222222211111 Z (Prod u3_2222222222222222111111 Z (Prod v1_22222222222222221111111 Z (Prod v2_222222222222222211111111 Z (Prod out_2222222222222222111111111 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul u1_22222222222222221111 a_222222222222) (App Coq.ZArith.BinIntDef.Z.mul u2_222222222222222211111 b_2222222222222)) u3_2222222222222222111111) (Prod out_22222222222222221111111111 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v1_22222222222222221111111 a_222222222222) (App Coq.ZArith.BinIntDef.Z.mul v2_222222222222222211111111 b_2222222222222)) y_22222222222222221) (Prod out_222222222222222211111111111 (Prod d_222222222222222211111111111 Z (Prod out_2222222222222222111111111111 (App Zis_gcd u3_2222222222222222111111 y_22222222222222221 d_222222222222222211111111111) (App Zis_gcd a_222222222222 b_2222222222222 d_222222222222222211111111111))) (App Euclid a_222222222222 b_2222222222222)))))))))))) (Lambda H0_222222222222222222 (App Coq.ZArith.BinInt.Z.le Z0 x_2222222222222222) (Lambda Hv3_2222222222222222222 (App Coq.ZArith.BinInt.Z.le Z0 x_2222222222222222) (Lambda u1_22222222222222222222 Z (Lambda u2_222222222222222222222 Z (Lambda u3_2222222222222222222222 Z (Lambda v1_22222222222222222222222 Z (Lambda v2_222222222222222222222222 Z (Lambda H1_2222222222222222222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul u1_22222222222222222222 a_222222222222) (App Coq.ZArith.BinIntDef.Z.mul u2_222222222222222222222 b_2222222222222)) u3_2222222222222222222222) (Lambda H2_22222222222222222222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v1_22222222222222222222222 a_222222222222) (App Coq.ZArith.BinIntDef.Z.mul v2_222222222222222222222222 b_2222222222222)) x_2222222222222222) (Lambda H3_222222222222222222222222222 (Prod d_222222222222222222222222221 Z (Prod out_2222222222222222222222222211 (App Zis_gcd u3_2222222222222222222222 x_2222222222222222 d_222222222222222222222222221) (App Zis_gcd a_222222222222 b_2222222222222 d_222222222222222222222222221))) (LetIn s_2222222222222222222222222223 (App Coq.ZArith.ZArith_dec.Z_zerop x_2222222222222222) (App sumbool (App eq Z x_2222222222222222 Z0) (App Coq.Init.Logic.not (App eq Z x_2222222222222222 Z0))) (Case 2 (Lambda s_22222222222222222222222222232 (App sumbool (App eq Z x_2222222222222222 Z0) (App Coq.Init.Logic.not (App eq Z x_2222222222222222 Z0))) (App Euclid a_222222222222 b_2222222222222)) (CaseMatch s_2222222222222222222222222223) (CaseBranches (Lambda Heq_22222222222222222222222222232 (App eq Z x_2222222222222222 Z0) (App Euclid_intro a_222222222222 b_2222222222222 u1_22222222222222222222 u2_222222222222222222222 u3_2222222222222222222222 H1_2222222222222222222222222 (App H3_222222222222222222222222222 u3_2222222222222222222222 (App Coq.Init.Logic.eq_ind_r Z Z0 (Lambda x_222222222222222222222222222322 Z (App Zis_gcd u3_2222222222222222222222 x_222222222222222222222222222322 u3_2222222222222222222222)) (App Coq.ZArith.Znumtheory.Zis_gcd_0 u3_2222222222222222222222) x_2222222222222222 Heq_22222222222222222222222222232)))) (Lambda Hneq_22222222222222222222222222232 (App Coq.Init.Logic.not (App eq Z x_2222222222222222 Z0)) (LetIn q_222222222222222222222222222323 (App Coq.ZArith.BinIntDef.Z.div u3_2222222222222222222222 x_2222222222222222) Z (LetIn Hq_2222222222222222222222222223233 (LetIn H4_2222222222222222222222222223233 (LetIn xpos_2222222222222222222222222223233 (App Coq.Logic.Decidable.dec_not_not (App Coq.ZArith.BinInt.Z.gt x_2222222222222222 Z0) (App Coq.ZArith.Zorder.dec_Zgt x_2222222222222222 Z0) (Lambda H4_2222222222222222222222222223232 (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.gt x_2222222222222222 Z0)) (App (Lambda H4_22222222222222222222222222232322 (App Coq.ZArith.BinInt.Z.le x_2222222222222222 Z0) (LetIn q_eqn_222222222222222222222222222323223 (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.div u3_2222222222222222222222 x_2222222222222222)) (App eq Z q_222222222222222222222222222323 (App Coq.ZArith.BinIntDef.Z.div u3_2222222222222222222222 x_2222222222222222)) (App Coq.Init.Logic.ex_ind Z (Lambda y_2222222222222222222222222223232232 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.div u3_2222222222222222222222 x_2222222222222222) y_2222222222222222222222222223232232)) False (Lambda Zvar0_2222222222222222222222222223232232 Z (Lambda Omega0_22222222222222222222222222232322322 (App eq Z (App Coq.ZArith.BinIntDef.Z.div u3_2222222222222222222222 x_2222222222222222) Zvar0_2222222222222222222222222223232232) (App Coq.Init.Logic.ex_ind Z (Lambda y_222222222222222222222222222323223222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul v1_22222222222222222222222 a_222222222222) y_222222222222222222222222222323223222)) False (Lambda Zvar1_222222222222222222222222222323223222 Z (Lambda Omega4_2222222222222222222222222223232232222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul v1_22222222222222222222222 a_222222222222) Zvar1_222222222222222222222222222323223222) (App Coq.Init.Logic.ex_ind Z (Lambda y_22222222222222222222222222232322322222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul v2_222222222222222222222222 b_2222222222222) y_22222222222222222222222222232322322222)) False (Lambda Zvar2_22222222222222222222222222232322322222 Z (Lambda Omega5_222222222222222222222222222323223222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul v2_222222222222222222222222 b_2222222222222) Zvar2_22222222222222222222222222232322322222) (App Coq.Init.Logic.ex_ind Z (Lambda y_2222222222222222222222222223232232222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul u1_22222222222222222222 a_222222222222) y_2222222222222222222222222223232232222222)) False (Lambda Zvar3_2222222222222222222222222223232232222222 Z (Lambda Omega7_22222222222222222222222222232322322222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul u1_22222222222222222222 a_222222222222) Zvar3_2222222222222222222222222223232232222222) (App Coq.Init.Logic.ex_ind Z (Lambda y_222222222222222222222222222323223222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul u2_222222222222222222222 b_2222222222222) y_222222222222222222222222222323223222222222)) False (Lambda Zvar4_222222222222222222222222222323223222222222 Z (Lambda Omega8_2222222222222222222222222223232232222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul u2_222222222222222222222 b_2222222222222) Zvar4_222222222222222222222222222323223222222222) (App Coq.omega.OmegaLemmas.fast_Zred_factor0 x_2222222222222222 (Lambda x_22222222222222222222222222232322322222222222 Z (Prod out_222222222222222222222222222323223222222222221 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.add x_22222222222222222222222222232322322222222222 Z0)) False)) (Lambda Omega10_22222222222222222222222222232322322222222222 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zpos xH)) Z0)) (App Coq.omega.OmegaLemmas.fast_Zred_factor0 x_2222222222222222 (Lambda x_222222222222222222222222222323223222222222222 Z (Prod out_2222222222222222222222222223232232222222222221 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add x_222222222222222222222222222323223222222222222 Z0) Z0) False)) (Lambda Omega3_222222222222222222222222222323223222222222222 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zpos xH)) Z0) Z0) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 x_2222222222222222 (Lambda x_2222222222222222222222222223232232222222222222 Z (Prod out_22222222222222222222222222232322322222222222221 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.add Z0 x_2222222222222222222222222223232232222222222222)) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_comm Z0 (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zneg xH)) (Lambda x_2222222222222222222222222223232232222222222222 Z (Prod out_22222222222222222222222222232322322222222222221 (App Coq.ZArith.BinInt.Z.le Z0 x_2222222222222222222222222223232232222222222222) False)) (Lambda Omega2_2222222222222222222222222223232232222222222222 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zneg xH)) Z0)) (LetIn H4_22222222222222222222222222232322322222222222223 (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zneg xH)) Z0) (Lambda x_22222222222222222222222222232322322222222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zpos xH)) Z0) x_22222222222222222222222222232322322222222222222)) (App Coq.omega.OmegaLemmas.fast_OMEGA16 x_2222222222222222 (App Zneg xH) Z0 (App Zneg xH) (Lambda x_22222222222222222222222222232322322222222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zpos xH)) Z0) x_22222222222222222222222222232322322222222222222)) (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zpos xH)) Z0)))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zpos xH)) Z0) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zneg xH)) Z0))) (App (Lambda auxiliary_222222222222222222222222222323223222222222222232 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zpos xH)) Z0) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zneg xH)) Z0))) (App (Lambda Omega12_2222222222222222222222222223232232222222222222322 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zpos xH)) Z0) Z0) (App Coq.omega.OmegaLemmas.fast_OMEGA15 x_2222222222222222 (App Zpos xH) (App Zpos xH) Z0 Z0 (App Zneg xH) (Lambda x_22222222222222222222222222232322322222222222223222 Z (Prod out_222222222222222222222222222323223222222222222232221 (App Coq.ZArith.BinInt.Zne x_22222222222222222222222222232322322222222222223222 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 x_2222222222222222 (App Coq.ZArith.BinIntDef.Z.add Z0 (App Coq.ZArith.BinIntDef.Z.mul Z0 (App Zneg xH))) (Lambda x_22222222222222222222222222232322322222222222223222 Z (Prod out_222222222222222222222222222323223222222222222232221 (App Coq.ZArith.BinInt.Zne x_22222222222222222222222222232322322222222222223222 Z0) False)) (Lambda auxiliary_22222222222222222222222222232322322222222222223222 (App Coq.ZArith.BinInt.Zne Z0 Z0) (App auxiliary_22222222222222222222222222232322322222222222223222 (App eq_refl Z Z0)))) (App Coq.omega.OmegaLemmas.OMEGA17 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zpos xH)) Z0) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zpos xH)) Z0) (App Zneg xH) Omega3_222222222222222222222222222323223222222222222 Omega12_2222222222222222222222222223232232222222222222322))) (App Coq.omega.OmegaLemmas.OMEGA8 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zpos xH)) Z0) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zneg xH)) Z0) Omega10_22222222222222222222222222232322322222222222 Omega2_2222222222222222222222222223232232222222222222 auxiliary_222222222222222222222222222323223222222222222232))) H4_22222222222222222222222222232322322222222222223)))) (App Coq.ZArith.auxiliary.Zle_left x_2222222222222222 Z0 H4_22222222222222222222222222232322))) (App Coq.ZArith.auxiliary.Zne_left x_2222222222222222 Z0 Hneq_22222222222222222222222222232))) (App Coq.ZArith.auxiliary.Zle_left Z0 x_2222222222222222 Hv3_2222222222222222222)))) (App Coq.omega.OmegaLemmas.new_var (App Coq.ZArith.BinIntDef.Z.mul u2_222222222222222222222 b_2222222222222))))) (App Coq.omega.OmegaLemmas.new_var (App Coq.ZArith.BinIntDef.Z.mul u1_22222222222222222222 a_222222222222))))) (App Coq.omega.OmegaLemmas.new_var (App Coq.ZArith.BinIntDef.Z.mul v2_222222222222222222222222 b_2222222222222))))) (App Coq.omega.OmegaLemmas.new_var (App Coq.ZArith.BinIntDef.Z.mul v1_22222222222222222222222 a_222222222222))))) (App Coq.omega.OmegaLemmas.new_var (App Coq.ZArith.BinIntDef.Z.div u3_2222222222222222222222 x_2222222222222222))))) (App Coq.ZArith.Zorder.Znot_gt_le x_2222222222222222 Z0 H4_2222222222222222222222222223232)))) (App Coq.ZArith.BinInt.Z.gt x_2222222222222222 Z0) (App (Cast (Lambda eq_22222222222222222222222222232332 (App eq Z u3_2222222222222222222222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Coq.ZArith.BinIntDef.Z.div u3_2222222222222222222222 x_2222222222222222)) (App Coq.ZArith.BinIntDef.Z.modulo u3_2222222222222222222222 x_2222222222222222))) (Cast (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Coq.ZArith.BinIntDef.Z.div u3_2222222222222222222222 x_2222222222222222)) (App Coq.ZArith.BinIntDef.Z.modulo u3_2222222222222222222222 x_2222222222222222)) (Lambda z_222222222222222222222222222323322 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.modulo u3_2222222222222222222222 x_2222222222222222) (App Coq.ZArith.BinIntDef.Z.sub z_222222222222222222222222222323322 (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.div u3_2222222222222222222222 x_2222222222222222) x_2222222222222222)))) (Cast (LetIn hyp_list_222222222222222222222222222323323 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn fv_list_2222222222222222222222222223233233 (App cons Z (App Coq.ZArith.BinIntDef.Z.modulo u3_2222222222222222222222 x_2222222222222222) (App cons Z x_2222222222222222 (App cons Z (App Coq.ZArith.BinIntDef.Z.div u3_2222222222222222222222 x_2222222222222222) (App nil Z)))) (App list Z) (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma1 Coq.setoid_ring.Ring_tac.ring_subst_niter fv_list_2222222222222222222222222223233233 hyp_list_222222222222222222222222222323323 (App PEX Z xH) (App PEsub Z (App PEadd Z (App PEmul Z (App PEX Z (App xO xH)) (App PEX Z (App xI xH))) (App PEX Z xH)) (App PEmul Z (App PEX Z (App xI xH)) (App PEX Z (App xO xH)))) I (Cast (App eq_refl bool true) VMcast (App eq bool (LetIn lmp_22222222222222222222222222232332333 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem hyp_list_222222222222222222222222222323323) (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.Peq Z Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter lmp_22222222222222222222222222232332333 (App PEX Z xH)) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter lmp_22222222222222222222222222232332333 (App PEsub Z (App PEadd Z (App PEmul Z (App PEX Z (App xO xH)) (App PEX Z (App xI xH))) (App PEX Z xH)) (App PEmul Z (App PEX Z (App xI xH)) (App PEX Z (App xO xH))))))) true))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.modulo u3_2222222222222222222222 x_2222222222222222) (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Coq.ZArith.BinIntDef.Z.div u3_2222222222222222222222 x_2222222222222222)) (App Coq.ZArith.BinIntDef.Z.modulo u3_2222222222222222222222 x_2222222222222222)) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.div u3_2222222222222222222222 x_2222222222222222) x_2222222222222222)))) u3_2222222222222222222222 eq_22222222222222222222222222232332) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.modulo u3_2222222222222222222222 x_2222222222222222) (App Coq.ZArith.BinIntDef.Z.sub u3_2222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.div u3_2222222222222222222222 x_2222222222222222) x_2222222222222222))))) REVERTcast (Prod out_22222222222222222222222222232331 (App eq Z u3_2222222222222222222222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Coq.ZArith.BinIntDef.Z.div u3_2222222222222222222222 x_2222222222222222)) (App Coq.ZArith.BinIntDef.Z.modulo u3_2222222222222222222222 x_2222222222222222))) (App eq Z (App Coq.ZArith.BinIntDef.Z.modulo u3_2222222222222222222222 x_2222222222222222) (App Coq.ZArith.BinIntDef.Z.sub u3_2222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 x_2222222222222222))))) (App Coq.ZArith.Zdiv.Z_div_mod_eq u3_2222222222222222222222 x_2222222222222222 xpos_2222222222222222222222222223233))) (App eq Z (App Coq.ZArith.BinIntDef.Z.modulo u3_2222222222222222222222 x_2222222222222222) (App Coq.ZArith.BinIntDef.Z.sub u3_2222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 x_2222222222222222))) (App Coq.Init.Logic.eq_ind Z (App Coq.ZArith.BinIntDef.Z.modulo u3_2222222222222222222222 x_2222222222222222) (Lambda z_22222222222222222222222222232332 Z (App and (App Coq.ZArith.BinInt.Z.le Z0 z_22222222222222222222222222232332) (App Coq.ZArith.BinInt.Z.lt z_22222222222222222222222222232332 x_2222222222222222))) (App Coq.ZArith.Zdiv.Z_mod_lt u3_2222222222222222222222 x_2222222222222222 (App Coq.Logic.Decidable.dec_not_not (App Coq.ZArith.BinInt.Z.gt x_2222222222222222 Z0) (App Coq.ZArith.Zorder.dec_Zgt x_2222222222222222 Z0) (Lambda H4_22222222222222222222222222232332 (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.gt x_2222222222222222 Z0)) (App (Lambda H4_222222222222222222222222222323322 (App Coq.ZArith.BinInt.Z.le x_2222222222222222 Z0) (LetIn q_eqn_2222222222222222222222222223233223 (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.div u3_2222222222222222222222 x_2222222222222222)) (App eq Z q_222222222222222222222222222323 (App Coq.ZArith.BinIntDef.Z.div u3_2222222222222222222222 x_2222222222222222)) (App Coq.Init.Logic.ex_ind Z (Lambda y_22222222222222222222222222232332232 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.div u3_2222222222222222222222 x_2222222222222222) y_22222222222222222222222222232332232)) False (Lambda Zvar0_22222222222222222222222222232332232 Z (Lambda Omega0_222222222222222222222222222323322322 (App eq Z (App Coq.ZArith.BinIntDef.Z.div u3_2222222222222222222222 x_2222222222222222) Zvar0_22222222222222222222222222232332232) (App Coq.Init.Logic.ex_ind Z (Lambda y_2222222222222222222222222223233223222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul v1_22222222222222222222222 a_222222222222) y_2222222222222222222222222223233223222)) False (Lambda Zvar1_2222222222222222222222222223233223222 Z (Lambda Omega4_22222222222222222222222222232332232222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul v1_22222222222222222222222 a_222222222222) Zvar1_2222222222222222222222222223233223222) (App Coq.Init.Logic.ex_ind Z (Lambda y_222222222222222222222222222323322322222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul v2_222222222222222222222222 b_2222222222222) y_222222222222222222222222222323322322222)) False (Lambda Zvar2_222222222222222222222222222323322322222 Z (Lambda Omega5_2222222222222222222222222223233223222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul v2_222222222222222222222222 b_2222222222222) Zvar2_222222222222222222222222222323322322222) (App Coq.Init.Logic.ex_ind Z (Lambda y_22222222222222222222222222232332232222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul u1_22222222222222222222 a_222222222222) y_22222222222222222222222222232332232222222)) False (Lambda Zvar3_22222222222222222222222222232332232222222 Z (Lambda Omega7_222222222222222222222222222323322322222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul u1_22222222222222222222 a_222222222222) Zvar3_22222222222222222222222222232332232222222) (App Coq.Init.Logic.ex_ind Z (Lambda y_2222222222222222222222222223233223222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.mul u2_222222222222222222222 b_2222222222222) y_2222222222222222222222222223233223222222222)) False (Lambda Zvar4_2222222222222222222222222223233223222222222 Z (Lambda Omega8_22222222222222222222222222232332232222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.mul u2_222222222222222222222 b_2222222222222) Zvar4_2222222222222222222222222223233223222222222) (App Coq.omega.OmegaLemmas.fast_Zred_factor0 x_2222222222222222 (Lambda x_222222222222222222222222222323322322222222222 Z (Prod out_2222222222222222222222222223233223222222222221 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.add x_222222222222222222222222222323322322222222222 Z0)) False)) (Lambda Omega10_222222222222222222222222222323322322222222222 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zpos xH)) Z0)) (App Coq.omega.OmegaLemmas.fast_Zred_factor0 x_2222222222222222 (Lambda x_2222222222222222222222222223233223222222222222 Z (Prod out_22222222222222222222222222232332232222222222221 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add x_2222222222222222222222222223233223222222222222 Z0) Z0) False)) (Lambda Omega3_2222222222222222222222222223233223222222222222 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zpos xH)) Z0) Z0) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 x_2222222222222222 (Lambda x_22222222222222222222222222232332232222222222222 Z (Prod out_222222222222222222222222222323322322222222222221 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.add Z0 x_22222222222222222222222222232332232222222222222)) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_comm Z0 (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zneg xH)) (Lambda x_22222222222222222222222222232332232222222222222 Z (Prod out_222222222222222222222222222323322322222222222221 (App Coq.ZArith.BinInt.Z.le Z0 x_22222222222222222222222222232332232222222222222) False)) (Lambda Omega2_22222222222222222222222222232332232222222222222 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zneg xH)) Z0)) (LetIn H4_222222222222222222222222222323322322222222222223 (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zneg xH)) Z0) (Lambda x_222222222222222222222222222323322322222222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zpos xH)) Z0) x_222222222222222222222222222323322322222222222222)) (App Coq.omega.OmegaLemmas.fast_OMEGA16 x_2222222222222222 (App Zneg xH) Z0 (App Zneg xH) (Lambda x_222222222222222222222222222323322322222222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zpos xH)) Z0) x_222222222222222222222222222323322322222222222222)) (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zpos xH)) Z0)))) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zpos xH)) Z0) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zneg xH)) Z0))) (App (Lambda auxiliary_2222222222222222222222222223233223222222222222232 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zpos xH)) Z0) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zneg xH)) Z0))) (App (Lambda Omega12_22222222222222222222222222232332232222222222222322 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zpos xH)) Z0) Z0) (App Coq.omega.OmegaLemmas.fast_OMEGA15 x_2222222222222222 (App Zpos xH) (App Zpos xH) Z0 Z0 (App Zneg xH) (Lambda x_222222222222222222222222222323322322222222222223222 Z (Prod out_2222222222222222222222222223233223222222222222232221 (App Coq.ZArith.BinInt.Zne x_222222222222222222222222222323322322222222222223222 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 x_2222222222222222 (App Coq.ZArith.BinIntDef.Z.add Z0 (App Coq.ZArith.BinIntDef.Z.mul Z0 (App Zneg xH))) (Lambda x_222222222222222222222222222323322322222222222223222 Z (Prod out_2222222222222222222222222223233223222222222222232221 (App Coq.ZArith.BinInt.Zne x_222222222222222222222222222323322322222222222223222 Z0) False)) (Lambda auxiliary_222222222222222222222222222323322322222222222223222 (App Coq.ZArith.BinInt.Zne Z0 Z0) (App auxiliary_222222222222222222222222222323322322222222222223222 (App eq_refl Z Z0)))) (App Coq.omega.OmegaLemmas.OMEGA17 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zpos xH)) Z0) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zpos xH)) Z0) (App Zneg xH) Omega3_2222222222222222222222222223233223222222222222 Omega12_22222222222222222222222222232332232222222222222322))) (App Coq.omega.OmegaLemmas.OMEGA8 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zpos xH)) Z0) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222222 (App Zneg xH)) Z0) Omega10_222222222222222222222222222323322322222222222 Omega2_22222222222222222222222222232332232222222222222 auxiliary_2222222222222222222222222223233223222222222222232))) H4_222222222222222222222222222323322322222222222223)))) (App Coq.ZArith.auxiliary.Zle_left x_2222222222222222 Z0 H4_222222222222222222222222222323322))) (App Coq.ZArith.auxiliary.Zne_left x_2222222222222222 Z0 Hneq_22222222222222222222222222232))) (App Coq.ZArith.auxiliary.Zle_left Z0 x_2222222222222222 Hv3_2222222222222222222)))) (App Coq.omega.OmegaLemmas.new_var (App Coq.ZArith.BinIntDef.Z.mul u2_222222222222222222222 b_2222222222222))))) (App Coq.omega.OmegaLemmas.new_var (App Coq.ZArith.BinIntDef.Z.mul u1_22222222222222222222 a_222222222222))))) (App Coq.omega.OmegaLemmas.new_var (App Coq.ZArith.BinIntDef.Z.mul v2_222222222222222222222222 b_2222222222222))))) (App Coq.omega.OmegaLemmas.new_var (App Coq.ZArith.BinIntDef.Z.mul v1_22222222222222222222222 a_222222222222))))) (App Coq.omega.OmegaLemmas.new_var (App Coq.ZArith.BinIntDef.Z.div u3_2222222222222222222222 x_2222222222222222))))) (App Coq.ZArith.Zorder.Znot_gt_le x_2222222222222222 Z0 H4_22222222222222222222222222232332))))) (App Coq.ZArith.BinIntDef.Z.sub u3_2222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 x_2222222222222222)) H4_2222222222222222222222222223233)) (App and (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.sub u3_2222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 x_2222222222222222))) (App Coq.ZArith.BinInt.Z.lt (App Coq.ZArith.BinIntDef.Z.sub u3_2222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 x_2222222222222222)) x_2222222222222222)) (App H_22222222222222222 (App Coq.ZArith.BinIntDef.Z.sub u3_2222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 x_2222222222222222)) Hq_2222222222222222222222222223233 (App Coq.Init.Logic.proj1 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.sub u3_2222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 x_2222222222222222))) (App Coq.ZArith.BinInt.Z.lt (App Coq.ZArith.BinIntDef.Z.sub u3_2222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 x_2222222222222222)) x_2222222222222222) Hq_2222222222222222222222222223233) v1_22222222222222222222222 v2_222222222222222222222222 x_2222222222222222 (App Coq.ZArith.BinIntDef.Z.sub u1_22222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 v1_22222222222222222222222)) (App Coq.ZArith.BinIntDef.Z.sub u2_222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 v2_222222222222222222222222)) (App Coq.Init.Logic.and_ind (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.sub u3_2222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 x_2222222222222222))) (App Coq.ZArith.BinInt.Z.lt (App Coq.ZArith.BinIntDef.Z.sub u3_2222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 x_2222222222222222)) x_2222222222222222) (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v1_22222222222222222222222 a_222222222222) (App Coq.ZArith.BinIntDef.Z.mul v2_222222222222222222222222 b_2222222222222)) x_2222222222222222) (Lambda H4_22222222222222222222222222232332 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.sub u3_2222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 x_2222222222222222))) (Lambda H5_222222222222222222222222222323322 (App Coq.ZArith.BinInt.Z.lt (App Coq.ZArith.BinIntDef.Z.sub u3_2222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 x_2222222222222222)) x_2222222222222222) H2_22222222222222222222222222)) Hq_2222222222222222222222222223233) (LetIn H4_22222222222222222222222222232333 (Cast (LetIn hyp_list_22222222222222222222222222232333 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn fv_list_222222222222222222222222222323333 (App cons Z u1_22222222222222222222 (App cons Z a_222222222222 (App cons Z u2_222222222222222222222 (App cons Z b_2222222222222 (App cons Z q_222222222222222222222222222323 (App cons Z v1_22222222222222222222222 (App cons Z v2_222222222222222222222222 (App nil Z)))))))) (App list Z) (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma1 Coq.setoid_ring.Ring_tac.ring_subst_niter fv_list_222222222222222222222222222323333 hyp_list_22222222222222222222222222232333 (App PEsub Z (App PEadd Z (App PEmul Z (App PEX Z xH) (App PEX Z (App xO xH))) (App PEmul Z (App PEX Z (App xI xH)) (App PEX Z (App xO (App xO xH))))) (App PEmul Z (App PEX Z (App xI (App xO xH))) (App PEadd Z (App PEmul Z (App PEX Z (App xO (App xI xH))) (App PEX Z (App xO xH))) (App PEmul Z (App PEX Z (App xI (App xI xH))) (App PEX Z (App xO (App xO xH))))))) (App PEadd Z (App PEmul Z (App PEsub Z (App PEX Z xH) (App PEmul Z (App PEX Z (App xI (App xO xH))) (App PEX Z (App xO (App xI xH))))) (App PEX Z (App xO xH))) (App PEmul Z (App PEsub Z (App PEX Z (App xI xH)) (App PEmul Z (App PEX Z (App xI (App xO xH))) (App PEX Z (App xI (App xI xH))))) (App PEX Z (App xO (App xO xH))))) I (Cast (App eq_refl bool true) VMcast (App eq bool (LetIn lmp_2222222222222222222222222223233333 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem hyp_list_22222222222222222222222222232333) (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.Peq Z Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter lmp_2222222222222222222222222223233333 (App PEsub Z (App PEadd Z (App PEmul Z (App PEX Z xH) (App PEX Z (App xO xH))) (App PEmul Z (App PEX Z (App xI xH)) (App PEX Z (App xO (App xO xH))))) (App PEmul Z (App PEX Z (App xI (App xO xH))) (App PEadd Z (App PEmul Z (App PEX Z (App xO (App xI xH))) (App PEX Z (App xO xH))) (App PEmul Z (App PEX Z (App xI (App xI xH))) (App PEX Z (App xO (App xO xH)))))))) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter lmp_2222222222222222222222222223233333 (App PEadd Z (App PEmul Z (App PEsub Z (App PEX Z xH) (App PEmul Z (App PEX Z (App xI (App xO xH))) (App PEX Z (App xO (App xI xH))))) (App PEX Z (App xO xH))) (App PEmul Z (App PEsub Z (App PEX Z (App xI xH)) (App PEmul Z (App PEX Z (App xI (App xO xH))) (App PEX Z (App xI (App xI xH))))) (App PEX Z (App xO (App xO xH)))))))) true))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul u1_22222222222222222222 a_222222222222) (App Coq.ZArith.BinIntDef.Z.mul u2_222222222222222222222 b_2222222222222)) (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v1_22222222222222222222222 a_222222222222) (App Coq.ZArith.BinIntDef.Z.mul v2_222222222222222222222222 b_2222222222222)))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.sub u1_22222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 v1_22222222222222222222222)) a_222222222222) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.sub u2_222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 v2_222222222222222222222222)) b_2222222222222)))) (App eq Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul u1_22222222222222222222 a_222222222222) (App Coq.ZArith.BinIntDef.Z.mul u2_222222222222222222222 b_2222222222222)) (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v1_22222222222222222222222 a_222222222222) (App Coq.ZArith.BinIntDef.Z.mul v2_222222222222222222222222 b_2222222222222)))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.sub u1_22222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 v1_22222222222222222222222)) a_222222222222) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.sub u2_222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 v2_222222222222222222222222)) b_2222222222222))) (App Coq.Init.Logic.eq_ind Z (App Coq.ZArith.BinIntDef.Z.sub (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul u1_22222222222222222222 a_222222222222) (App Coq.ZArith.BinIntDef.Z.mul u2_222222222222222222222 b_2222222222222)) (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v1_22222222222222222222222 a_222222222222) (App Coq.ZArith.BinIntDef.Z.mul v2_222222222222222222222222 b_2222222222222)))) (Lambda z_222222222222222222222222222323332 Z (App eq Z z_222222222222222222222222222323332 (App Coq.ZArith.BinIntDef.Z.sub u3_2222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 x_2222222222222222)))) (App Coq.Init.Logic.eq_ind_r Z u3_2222222222222222222222 (Lambda z_222222222222222222222222222323332 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub z_222222222222222222222222222323332 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v1_22222222222222222222222 a_222222222222) (App Coq.ZArith.BinIntDef.Z.mul v2_222222222222222222222222 b_2222222222222)))) (App Coq.ZArith.BinIntDef.Z.sub u3_2222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 x_2222222222222222)))) (App Coq.Init.Logic.eq_ind_r Z x_2222222222222222 (Lambda z_222222222222222222222222222323332 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.sub u3_2222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 z_222222222222222222222222222323332)) (App Coq.ZArith.BinIntDef.Z.sub u3_2222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 x_2222222222222222)))) (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.sub u3_2222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 x_2222222222222222))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v1_22222222222222222222222 a_222222222222) (App Coq.ZArith.BinIntDef.Z.mul v2_222222222222222222222222 b_2222222222222)) H2_22222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul u1_22222222222222222222 a_222222222222) (App Coq.ZArith.BinIntDef.Z.mul u2_222222222222222222222 b_2222222222222)) H1_2222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.sub u1_22222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 v1_22222222222222222222222)) a_222222222222) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.sub u2_222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 v2_222222222222222222222222)) b_2222222222222)) H4_22222222222222222222222222232333)) (Lambda d_22222222222222222222222222232332 Z (Lambda H4_222222222222222222222222222323322 (App Zis_gcd x_2222222222222222 (App Coq.ZArith.BinIntDef.Z.sub u3_2222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul q_222222222222222222222222222323 x_2222222222222222)) d_22222222222222222222222222232332) (App H3_222222222222222222222222222 d_22222222222222222222222222232332 (App Coq.ZArith.Znumtheory.Zis_gcd_for_euclid u3_2222222222222222222222 x_2222222222222222 d_22222222222222222222222222232332 q_222222222222222222222222222323 H4_222222222222222222222222222323322))))))))))))))))))))))) v3_22222222222222 Hv3_222222222222222) REVERTcast (Prod Hv3_2222222222222221 (App Coq.ZArith.BinInt.Z.le Z0 v3_22222222222222) (Prod u1_22222222222222211 Z (Prod u2_222222222222222111 Z (Prod u3_2222222222222221111 Z (Prod v1_22222222222222211111 Z (Prod v2_222222222222222111111 Z (Prod out_2222222222222221111111 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul u1_22222222222222211 a_222222222222) (App Coq.ZArith.BinIntDef.Z.mul u2_222222222222222111 b_2222222222222)) u3_2222222222222221111) (Prod out_22222222222222211111111 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v1_22222222222222211111 a_222222222222) (App Coq.ZArith.BinIntDef.Z.mul v2_222222222222222111111 b_2222222222222)) v3_22222222222222) (Prod out_222222222222222111111111 (Prod d_222222222222222111111111 Z (Prod out_2222222222222221111111111 (App Zis_gcd u3_2222222222222221111 v3_22222222222222 d_222222222222222111111111) (App Zis_gcd a_222222222222 b_2222222222222 d_222222222222222111111111))) (App Euclid a_222222222222 b_2222222222222))))))))))) Hv3_222222222222222)))))) (Definition Coq.ZArith.Znumtheory.Zis_gcd_sym (Lambda a_22222222222222 Z (Lambda b_222222222222222 Z (Lambda d_2222222222222222 Z (Lambda H_22222222222222222 (App Zis_gcd a_22222222222222 b_222222222222222 d_2222222222222222) (App Coq.ZArith.Znumtheory.Zis_gcd_ind a_22222222222222 b_222222222222222 d_2222222222222222 (App Zis_gcd b_222222222222222 a_22222222222222 d_2222222222222222) (Lambda H_222222222222222222 (App Coq.ZArith.BinInt.Z.divide d_2222222222222222 a_22222222222222) (Lambda H0_2222222222222222222 (App Coq.ZArith.BinInt.Z.divide d_2222222222222222 b_222222222222222) (Lambda H1_22222222222222222222 (Prod x_22222222222222222221 Z (Prod out_222222222222222222211 (App Coq.ZArith.BinInt.Z.divide x_22222222222222222221 a_22222222222222) (Prod out_2222222222222222222111 (App Coq.ZArith.BinInt.Z.divide x_22222222222222222221 b_222222222222222) (App Coq.ZArith.BinInt.Z.divide x_22222222222222222221 d_2222222222222222)))) (App Zis_gcd_intro b_222222222222222 a_22222222222222 d_2222222222222222 H0_2222222222222222222 H_222222222222222222 (Lambda x_222222222222222222222 Z (Lambda H2_2222222222222222222222 (App Coq.ZArith.BinInt.Z.divide x_222222222222222222222 b_222222222222222) (Lambda H3_22222222222222222222222 (App Coq.ZArith.BinInt.Z.divide x_222222222222222222222 a_22222222222222) (Cast (App H1_22222222222222222222 x_222222222222222222222 H3_22222222222222222222222 H2_2222222222222222222222) REVERTcast (App Coq.ZArith.BinInt.Z.divide x_222222222222222222222 d_2222222222222222))))))))) H_22222222222222222)))))) (Definition Coq.ZArith.Znumtheory.Zdivide_opp_l_rev (Lambda a_222222222222222222222 Z (Lambda b_2222222222222222222222 Z (LetIn H_22222222222222222222223 (Lambda n_22222222222222222222222 Z (Lambda m_222222222222222222222222 Z (Case 2 (Lambda out_2222222222222222222222222 (App and (Prod out_2222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.opp n_22222222222222222222222) m_222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222 m_222222222222222222222222)) (Prod out_2222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222 m_222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.opp n_22222222222222222222222) m_222222222222222222222222))) (Prod out_22222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.opp n_22222222222222222222222) m_222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222 m_222222222222222222222222))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_opp_l n_22222222222222222222222 m_222222222222222222222222)) (CaseBranches (Lambda out_2222222222222222222222222 (Prod out_2222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.opp n_22222222222222222222222) m_222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222 m_222222222222222222222222)) (Lambda out_22222222222222222222222222 (Prod out_22222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222 m_222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.opp n_22222222222222222222222) m_222222222222222222222222)) out_2222222222222222222222222)))))) (Prod n_22222222222222222222221 Z (Prod m_222222222222222222222211 Z (Prod out_2222222222222222222222111 (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.opp n_22222222222222222222221) m_222222222222222222222211) (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222221 m_222222222222222222222211)))) (App H_22222222222222222222223 a_222222222222222222222 b_2222222222222222222222))))) (Definition Coq.ZArith.Znumtheory.Zdivide_opp_l (Lambda a_222222222222222222222 Z (Lambda b_2222222222222222222222 Z (LetIn H_22222222222222222222223 (Lambda n_22222222222222222222222 Z (Lambda m_222222222222222222222222 Z (Case 2 (Lambda out_2222222222222222222222222 (App and (Prod out_2222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.opp n_22222222222222222222222) m_222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222 m_222222222222222222222222)) (Prod out_2222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222 m_222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.opp n_22222222222222222222222) m_222222222222222222222222))) (Prod out_22222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222 m_222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.opp n_22222222222222222222222) m_222222222222222222222222))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_opp_l n_22222222222222222222222 m_222222222222222222222222)) (CaseBranches (Lambda out_2222222222222222222222222 (Prod out_2222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.opp n_22222222222222222222222) m_222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222 m_222222222222222222222222)) (Lambda out_22222222222222222222222222 (Prod out_22222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222 m_222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.opp n_22222222222222222222222) m_222222222222222222222222)) out_22222222222222222222222222)))))) (Prod n_22222222222222222222221 Z (Prod m_222222222222222222222211 Z (Prod out_2222222222222222222222111 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222221 m_222222222222222222222211) (App Coq.ZArith.BinInt.Z.divide (App Coq.ZArith.BinIntDef.Z.opp n_22222222222222222222221) m_222222222222222222222211)))) (App H_22222222222222222222223 a_222222222222222222222 b_2222222222222222222222))))) (Definition Coq.ZArith.Znumtheory.Zdivide_opp_r_rev (Lambda a_222222222222222222222 Z (Lambda b_2222222222222222222222 Z (LetIn H_22222222222222222222223 (Lambda n_22222222222222222222222 Z (Lambda m_222222222222222222222222 Z (Case 2 (Lambda out_2222222222222222222222222 (App and (Prod out_2222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_222222222222222222222222)) (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222 m_222222222222222222222222)) (Prod out_2222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222 m_222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_222222222222222222222222)))) (Prod out_22222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_222222222222222222222222)) (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222 m_222222222222222222222222))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_opp_r n_22222222222222222222222 m_222222222222222222222222)) (CaseBranches (Lambda out_2222222222222222222222222 (Prod out_2222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_222222222222222222222222)) (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222 m_222222222222222222222222)) (Lambda out_22222222222222222222222222 (Prod out_22222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222 m_222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_222222222222222222222222))) out_2222222222222222222222222)))))) (Prod n_22222222222222222222221 Z (Prod m_222222222222222222222211 Z (Prod out_2222222222222222222222111 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222221 (App Coq.ZArith.BinIntDef.Z.opp m_222222222222222222222211)) (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222221 m_222222222222222222222211)))) (App H_22222222222222222222223 a_222222222222222222222 b_2222222222222222222222))))) (Definition Coq.ZArith.Znumtheory.Zdivide_opp_r (Lambda a_222222222222222222222222 Z (Lambda b_2222222222222222222222222 Z (LetIn H_22222222222222222222222223 (Lambda n_22222222222222222222222222 Z (Lambda m_222222222222222222222222222 Z (Case 2 (Lambda out_2222222222222222222222222222 (App and (Prod out_2222222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_222222222222222222222222222)) (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222222 m_222222222222222222222222222)) (Prod out_2222222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222222 m_222222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_222222222222222222222222222)))) (Prod out_22222222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222222 m_222222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_222222222222222222222222222)))) (CaseMatch (App Coq.ZArith.BinInt.Z.divide_opp_r n_22222222222222222222222222 m_222222222222222222222222222)) (CaseBranches (Lambda out_2222222222222222222222222222 (Prod out_2222222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_222222222222222222222222222)) (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222222 m_222222222222222222222222222)) (Lambda out_22222222222222222222222222222 (Prod out_22222222222222222222222222221 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222222 m_222222222222222222222222222) (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_222222222222222222222222222))) out_22222222222222222222222222222)))))) (Prod n_22222222222222222222222221 Z (Prod m_222222222222222222222222211 Z (Prod out_2222222222222222222222222111 (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222221 m_222222222222222222222222211) (App Coq.ZArith.BinInt.Z.divide n_22222222222222222222222221 (App Coq.ZArith.BinIntDef.Z.opp m_222222222222222222222222211))))) (App H_22222222222222222222222223 a_222222222222222222222222 b_2222222222222222222222222))))) (Definition Coq.ZArith.Znumtheory.Zis_gcd_minus (Lambda a_22222222222222 Z (Lambda b_222222222222222 Z (Lambda d_2222222222222222 Z (Lambda H_22222222222222222 (App Zis_gcd a_22222222222222 (App Coq.ZArith.BinIntDef.Z.opp b_222222222222222) d_2222222222222222) (App Coq.ZArith.Znumtheory.Zis_gcd_ind a_22222222222222 (App Coq.ZArith.BinIntDef.Z.opp b_222222222222222) d_2222222222222222 (App Zis_gcd b_222222222222222 a_22222222222222 d_2222222222222222) (Lambda H_222222222222222222 (App Coq.ZArith.BinInt.Z.divide d_2222222222222222 a_22222222222222) (Lambda H0_2222222222222222222 (App Coq.ZArith.BinInt.Z.divide d_2222222222222222 (App Coq.ZArith.BinIntDef.Z.opp b_222222222222222)) (Lambda H1_22222222222222222222 (Prod x_22222222222222222221 Z (Prod out_222222222222222222211 (App Coq.ZArith.BinInt.Z.divide x_22222222222222222221 a_22222222222222) (Prod out_2222222222222222222111 (App Coq.ZArith.BinInt.Z.divide x_22222222222222222221 (App Coq.ZArith.BinIntDef.Z.opp b_222222222222222)) (App Coq.ZArith.BinInt.Z.divide x_22222222222222222221 d_2222222222222222)))) (App Zis_gcd_intro b_222222222222222 a_22222222222222 d_2222222222222222 (Cast (App Coq.ZArith.Znumtheory.Zdivide_opp_l_rev d_2222222222222222 b_222222222222222 (App Coq.ZArith.Znumtheory.Zdivide_opp_l d_2222222222222222 b_222222222222222 (App Coq.ZArith.Znumtheory.Zdivide_opp_r_rev d_2222222222222222 b_222222222222222 H0_2222222222222222222))) REVERTcast (App Coq.ZArith.BinInt.Z.divide d_2222222222222222 b_222222222222222)) H_222222222222222222 (Lambda x_222222222222222222222 Z (Lambda H2_2222222222222222222222 (App Coq.ZArith.BinInt.Z.divide x_222222222222222222222 b_222222222222222) (Lambda H3_22222222222222222222222 (App Coq.ZArith.BinInt.Z.divide x_222222222222222222222 a_22222222222222) (Cast (App H1_22222222222222222222 x_222222222222222222222 H3_22222222222222222222222 (App Coq.ZArith.Znumtheory.Zdivide_opp_l_rev x_222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp b_222222222222222) (App Coq.ZArith.Znumtheory.Zdivide_opp_l x_222222222222222222222 (App Coq.ZArith.BinIntDef.Z.opp b_222222222222222) (App Coq.ZArith.Znumtheory.Zdivide_opp_r x_222222222222222222222 b_222222222222222 H2_2222222222222222222222)))) REVERTcast (App Coq.ZArith.BinInt.Z.divide x_222222222222222222222 d_2222222222222222))))))))) H_22222222222222222)))))) (Definition Coq.ZArith.BinInt.Z.lt_trichotomy (Lambda n_222222222222 Z (Lambda m_2222222222222 Z (App (Lambda lemma_22222222222222 (App Coq.Init.Logic.iff (App Coq.ZArith.BinInt.Z.le n_222222222222 m_2222222222222) (App or (App Coq.ZArith.BinInt.Z.lt n_222222222222 m_2222222222222) (App eq Z n_222222222222 m_2222222222222))) (App Coq.Classes.Morphisms.subrelation_proper (Prod A_222222222222221 (Sort Prop) (Prod B_2222222222222211 (Sort Prop) (Sort Prop))) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Prod out_222222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff)) Coq.Program.Basics.impl Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism (App Coq.Classes.Morphisms.respectful (Sort Prop) (Prod B_222222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Prod B_222222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App or (App Coq.ZArith.BinInt.Z.le n_222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_222222222222)) (App or (App or (App Coq.ZArith.BinInt.Z.lt n_222222222222 m_2222222222222) (App eq Z n_222222222222 m_2222222222222)) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_222222222222)) (App Coq.Classes.Morphisms_Prop.or_iff_morphism (App Coq.ZArith.BinInt.Z.le n_222222222222 m_2222222222222) (App or (App Coq.ZArith.BinInt.Z.lt n_222222222222 m_2222222222222) (App eq Z n_222222222222 m_2222222222222)) lemma_22222222222222 (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_222222222222))) (App or (App Coq.ZArith.BinInt.Z.lt n_222222222222 m_2222222222222) (App or (App eq Z n_222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_222222222222))) (App or (App Coq.ZArith.BinInt.Z.lt n_222222222222 m_2222222222222) (App or (App eq Z n_222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_222222222222))) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App or (App Coq.ZArith.BinInt.Z.lt n_222222222222 m_2222222222222) (App or (App eq Z n_222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_222222222222)))))) (App Coq.ZArith.BinInt.Z.lt_eq_cases n_222222222222 m_2222222222222) (Lambda H_22222222222222 (App or (App or (App Coq.ZArith.BinInt.Z.lt n_222222222222 m_2222222222222) (App eq Z n_222222222222 m_2222222222222)) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_222222222222)) (App Coq.Init.Logic.or_ind (App or (App Coq.ZArith.BinInt.Z.lt n_222222222222 m_2222222222222) (App eq Z n_222222222222 m_2222222222222)) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_222222222222) (App or (App Coq.ZArith.BinInt.Z.lt n_222222222222 m_2222222222222) (App or (App eq Z n_222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_222222222222))) (Lambda H0_222222222222222 (App or (App Coq.ZArith.BinInt.Z.lt n_222222222222 m_2222222222222) (App eq Z n_222222222222 m_2222222222222)) (App Coq.Init.Logic.or_ind (App Coq.ZArith.BinInt.Z.lt n_222222222222 m_2222222222222) (App eq Z n_222222222222 m_2222222222222) (App or (App Coq.ZArith.BinInt.Z.lt n_222222222222 m_2222222222222) (App or (App eq Z n_222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_222222222222))) (Lambda H_2222222222222222 (App Coq.ZArith.BinInt.Z.lt n_222222222222 m_2222222222222) (App or_introl (App Coq.ZArith.BinInt.Z.lt n_222222222222 m_2222222222222) (App or (App eq Z n_222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_222222222222)) H_2222222222222222)) (Lambda H_2222222222222222 (App eq Z n_222222222222 m_2222222222222) (App or_intror (App Coq.ZArith.BinInt.Z.lt n_222222222222 m_2222222222222) (App or (App eq Z n_222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_222222222222)) (App or_introl (App eq Z n_222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_222222222222) H_2222222222222222))) H0_222222222222222)) (Lambda H0_222222222222222 (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_222222222222) (App or_intror (App Coq.ZArith.BinInt.Z.lt n_222222222222 m_2222222222222) (App or (App eq Z n_222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_222222222222)) (App or_intror (App eq Z n_222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_222222222222) H0_222222222222222))) H_22222222222222)) (App Coq.ZArith.BinInt.Z.le_gt_cases n_222222222222 m_2222222222222))))) (Definition Coq.Logic.Decidable.decidable (Lambda P_22222222222322 (Sort Prop) (App or P_22222222222322 (App Coq.Init.Logic.not P_22222222222322)))) (Definition Coq.Init.Logic.False_ind (Lambda P_222222222223222 (Sort Prop) (Lambda f_2222222222232222 False (Case 0 (Lambda out_22222222222322222 False P_222222222223222) (CaseMatch f_2222222222232222) (CaseBranches))))) (Definition Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.lt_irrefl (Lambda x_2222222222232222 Z (App Coq.Classes.RelationClasses.StrictOrder_Irreflexive Z Coq.ZArith.BinInt.Z.lt Coq.ZArith.BinInt.Z.Private_OrderTac.IsTotal.lt_strorder x_2222222222232222))) (Definition Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.eq_lt (Lambda x_222222222223222 Z (Lambda y_2222222222232222 Z (Lambda z_22222222222322222 Z (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.trans OEQ OLT x_222222222223222 y_2222222222232222 z_22222222222322222))))) (Definition Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.eq_sym (Lambda x_222222222223222 Z (Lambda y_2222222222232222 Z (Lambda H_22222222222322222 (App eq Z x_222222222223222 y_2222222222232222) (App Coq.Classes.RelationClasses.symmetry Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Symmetric Z (App eq Z) Coq.ZArith.BinInt.Z.Private_OrderTac.IsTotal.eq_equiv) x_222222222223222 y_2222222222232222 H_22222222222322222))))) (Definition Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.not_neq_eq (Lambda x_222222222223222 Z (Lambda y_2222222222232222 Z (Lambda H_22222222222322222 (App Coq.Init.Logic.not (App Coq.Init.Logic.not (App eq Z x_222222222223222 y_2222222222232222))) (LetIn o_222222222223222223 (App Coq.ZArith.BinInt.Z.Private_OrderTac.IsTotal.lt_total x_222222222223222 y_2222222222232222) (App or (App Coq.ZArith.BinInt.Z.lt x_222222222223222 y_2222222222232222) (App or (App eq Z x_222222222223222 y_2222222222232222) (App Coq.ZArith.BinInt.Z.lt y_2222222222232222 x_222222222223222))) (Case 2 (Lambda out_2222222222232222232 (App or (App Coq.ZArith.BinInt.Z.lt x_222222222223222 y_2222222222232222) (App or (App eq Z x_222222222223222 y_2222222222232222) (App Coq.ZArith.BinInt.Z.lt y_2222222222232222 x_222222222223222))) (App eq Z x_222222222223222 y_2222222222232222)) (CaseMatch o_222222222223222223) (CaseBranches (Lambda H'_2222222222232222232 (App Coq.ZArith.BinInt.Z.lt x_222222222223222 y_2222222222232222) (LetIn n_22222222222322222323 (App H_22222222222322222 (Cast (Lambda H_22222222222322222322 (App eq Z x_222222222223222 y_2222222222232222) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.lt_irrefl y_2222222222232222 (App (Lambda lemma_222222222223222223222 (App eq Z x_222222222223222 y_2222222222232222) (App Coq.Classes.Morphisms.subrelation_proper (Prod out_2222222222232222232221 Z (Prod out_22222222222322222322211 Z (Sort Prop))) (App Coq.Classes.Morphisms.respectful Z (Prod out_2222222222232222232221 Z (Sort Prop)) (App eq Z) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff)) Coq.ZArith.BinInt.Z.lt Coq.ZArith.BinInt.Z.Private_OrderTac.IsTotal.lt_compat (App Coq.Classes.Morphisms.respectful Z (Prod out_2222222222232222232221 Z (Sort Prop)) (App eq Z) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Program.Basics.impl)) tt (App Coq.Classes.Morphisms.subrelation_respectful Z (Prod out_2222222222232222232221 Z (Sort Prop)) (App eq Z) (App eq Z) (App Coq.Classes.Morphisms.subrelation_refl Z (App eq Z)) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Program.Basics.impl) (App Coq.Classes.Morphisms.subrelation_respectful Z (Sort Prop) (App eq Z) (App eq Z) (App Coq.Classes.Morphisms.subrelation_refl Z (App eq Z)) Coq.Init.Logic.iff Coq.Program.Basics.impl Coq.Classes.Morphisms.iff_impl_subrelation)) x_222222222223222 y_2222222222232222 lemma_222222222223222223222 y_2222222222232222 y_2222222222232222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.Private_OrderTac.IsTotal.eq_equiv) y_2222222222232222))) H_22222222222322222322 H'_2222222222232222232))) REVERTcast (App Coq.Init.Logic.not (App eq Z x_222222222223222 y_2222222222232222)))) False (Case 0 (Lambda out_222222222223222223232 False (App eq Z x_222222222223222 y_2222222222232222)) (CaseMatch n_22222222222322222323) (CaseBranches)))) (Lambda H0_2222222222232222232 (App or (App eq Z x_222222222223222 y_2222222222232222) (App Coq.ZArith.BinInt.Z.lt y_2222222222232222 x_222222222223222)) (Case 2 (Lambda out_22222222222322222322 (App or (App eq Z x_222222222223222 y_2222222222232222) (App Coq.ZArith.BinInt.Z.lt y_2222222222232222 x_222222222223222)) (App eq Z x_222222222223222 y_2222222222232222)) (CaseMatch H0_2222222222232222232) (CaseBranches (Lambda H'_22222222222322222322 (App eq Z x_222222222223222 y_2222222222232222) H'_22222222222322222322) (Lambda H'_22222222222322222322 (App Coq.ZArith.BinInt.Z.lt y_2222222222232222 x_222222222223222) (LetIn n_222222222223222223223 (App H_22222222222322222 (Cast (Lambda H_222222222223222223222 (App eq Z x_222222222223222 y_2222222222232222) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.lt_irrefl y_2222222222232222 (App (Lambda lemma_2222222222232222232222 (App eq Z x_222222222223222 y_2222222222232222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism Z (Prod out_22222222222322222322221 Z (Sort Prop)) (App eq Z) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Program.Basics.impl) Coq.ZArith.BinInt.Z.lt (App Coq.Classes.Morphisms.subrelation_proper (Prod out_22222222222322222322221 Z (Prod out_222222222223222223222211 Z (Sort Prop))) (App Coq.Classes.Morphisms.respectful Z (Prod out_22222222222322222322221 Z (Sort Prop)) (App eq Z) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff)) Coq.ZArith.BinInt.Z.lt Coq.ZArith.BinInt.Z.Private_OrderTac.IsTotal.lt_compat (App Coq.Classes.Morphisms.respectful Z (Prod out_22222222222322222322221 Z (Sort Prop)) (App eq Z) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Program.Basics.impl)) tt (App Coq.Classes.Morphisms.subrelation_respectful Z (Prod out_22222222222322222322221 Z (Sort Prop)) (App eq Z) (App eq Z) (App Coq.Classes.Morphisms.subrelation_refl Z (App eq Z)) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Program.Basics.impl) (App Coq.Classes.Morphisms.subrelation_respectful Z (Sort Prop) (App eq Z) (App eq Z) (App Coq.Classes.Morphisms.subrelation_refl Z (App eq Z)) Coq.Init.Logic.iff Coq.Program.Basics.impl Coq.Classes.Morphisms.iff_impl_subrelation))) y_2222222222232222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.Private_OrderTac.IsTotal.eq_equiv) y_2222222222232222) x_222222222223222 y_2222222222232222 lemma_2222222222232222232222)) H_222222222223222223222 H'_22222222222322222322))) REVERTcast (App Coq.Init.Logic.not (App eq Z x_222222222223222 y_2222222222232222)))) False (Case 0 (Lambda out_2222222222232222232232 False (App eq Z x_222222222223222 y_2222222222232222)) (CaseMatch n_222222222223222223223) (CaseBranches)))))))))))))) (Definition Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.eq_refl (Lambda x_22222222222322222 Z (App Coq.Classes.RelationClasses.reflexivity Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.Private_OrderTac.IsTotal.eq_equiv) x_22222222222322222))) (Definition Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.eq_neq (Lambda x_2222222222232222 Z (Lambda y_22222222222322222 Z (Lambda z_222222222223222222 Z (Lambda H_2222222222232222222 (App eq Z x_2222222222232222 y_22222222222322222) (Lambda H0_22222222222322222222 (App Coq.Init.Logic.not (App eq Z y_22222222222322222 z_222222222223222222)) (Cast (Lambda H1_222222222223222222222 (App eq Z x_2222222222232222 z_222222222223222222) (App H0_22222222222322222222 (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.eq_trans y_22222222222322222 x_2222222222232222 z_222222222223222222 (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.eq_sym x_2222222222232222 y_22222222222322222 H_2222222222232222222) H1_222222222223222222222))) REVERTcast (App Coq.Init.Logic.not (App eq Z x_2222222222232222 z_222222222223222222))))))))) (Definition Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.lt_eq (Lambda x_2222222222232222 Z (Lambda y_22222222222322222 Z (Lambda z_222222222223222222 Z (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.trans OLT OEQ x_2222222222232222 y_22222222222322222 z_222222222223222222))))) (Definition Coq.ZArith.BinInt.Z.eq_decidable (Lambda n_2222222222 Z (Lambda m_22222222222 Z (LetIn o_222222222223 (App Coq.ZArith.BinInt.Z.lt_trichotomy n_2222222222 m_22222222222) (App or (App Coq.ZArith.BinInt.Z.lt n_2222222222 m_22222222222) (App or (App eq Z n_2222222222 m_22222222222) (App Coq.ZArith.BinInt.Z.lt m_22222222222 n_2222222222))) (Case 2 (Lambda out_2222222222232 (App or (App Coq.ZArith.BinInt.Z.lt n_2222222222 m_22222222222) (App or (App eq Z n_2222222222 m_22222222222) (App Coq.ZArith.BinInt.Z.lt m_22222222222 n_2222222222))) (App Coq.Logic.Decidable.decidable (App eq Z n_2222222222 m_22222222222))) (CaseMatch o_222222222223) (CaseBranches (Lambda H_2222222222232 (App Coq.ZArith.BinInt.Z.lt n_2222222222 m_22222222222) (App or_intror (App eq Z n_2222222222 m_22222222222) (App Coq.Init.Logic.not (App eq Z n_2222222222 m_22222222222)) (Cast (Lambda H0_22222222222322 (App eq Z n_2222222222 m_22222222222) (App Coq.Init.Logic.False_ind False (App (Lambda H_222222222223222 (App Coq.ZArith.BinInt.Z.lt m_22222222222 m_22222222222) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.lt_irrefl m_22222222222 H_222222222223222)) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.eq_lt m_22222222222 n_2222222222 m_22222222222 (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.eq_sym n_2222222222 m_22222222222 H0_22222222222322) H_2222222222232)))) REVERTcast (App Coq.Init.Logic.not (App eq Z n_2222222222 m_22222222222))))) (Lambda H_2222222222232 (App or (App eq Z n_2222222222 m_22222222222) (App Coq.ZArith.BinInt.Z.lt m_22222222222 n_2222222222)) (Case 2 (Lambda out_22222222222322 (App or (App eq Z n_2222222222 m_22222222222) (App Coq.ZArith.BinInt.Z.lt m_22222222222 n_2222222222)) (App Coq.Logic.Decidable.decidable (App eq Z n_2222222222 m_22222222222))) (CaseMatch H_2222222222232) (CaseBranches (Lambda H_22222222222322 (App eq Z n_2222222222 m_22222222222) (App or_introl (App eq Z n_2222222222 m_22222222222) (App Coq.Init.Logic.not (App eq Z n_2222222222 m_22222222222)) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.not_neq_eq n_2222222222 m_22222222222 (Cast (Lambda H0_222222222223222 (App Coq.Init.Logic.not (App eq Z n_2222222222 m_22222222222)) (App (Lambda H0_2222222222232222 (App Coq.Init.Logic.not (App eq Z m_22222222222 m_22222222222)) (App H0_2222222222232222 (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.eq_refl m_22222222222))) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.eq_neq m_22222222222 n_2222222222 m_22222222222 (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.eq_sym n_2222222222 m_22222222222 H_22222222222322) H0_222222222223222))) REVERTcast (App Coq.Init.Logic.not (App Coq.Init.Logic.not (App eq Z n_2222222222 m_22222222222))))))) (Lambda H_22222222222322 (App Coq.ZArith.BinInt.Z.lt m_22222222222 n_2222222222) (App or_intror (App eq Z n_2222222222 m_22222222222) (App Coq.Init.Logic.not (App eq Z n_2222222222 m_22222222222)) (Cast (Lambda H0_222222222223222 (App eq Z n_2222222222 m_22222222222) (App Coq.Init.Logic.False_ind False (App (Lambda H_2222222222232222 (App Coq.ZArith.BinInt.Z.lt m_22222222222 m_22222222222) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.lt_irrefl m_22222222222 H_2222222222232222)) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.lt_eq m_22222222222 n_2222222222 m_22222222222 H_22222222222322 H0_222222222223222)))) REVERTcast (App Coq.Init.Logic.not (App eq Z n_2222222222 m_22222222222)))))))))))))) (Definition Coq.omega.OmegaLemmas.fast_Zmult_comm (Lambda x_22222222222 Z (Lambda y_222222222222 Z (Lambda P_2222222222222 (Prod out_2222222222221 Z (Sort Prop)) (Lambda H_22222222222222 (App P_2222222222222 (App Coq.ZArith.BinIntDef.Z.mul y_222222222222 x_22222222222)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul y_222222222222 x_22222222222) P_2222222222222 H_22222222222222 (App Coq.ZArith.BinIntDef.Z.mul x_22222222222 y_222222222222) (App Coq.ZArith.BinInt.Z.mul_comm x_22222222222 y_222222222222))))))) (Definition Coq.omega.OmegaLemmas.fast_Zplus_assoc (Lambda n_22222222222 Z (Lambda m_222222222222 Z (Lambda p_2222222222222 Z (Lambda P_22222222222222 (Prod out_22222222222221 Z (Sort Prop)) (Lambda H_222222222222222 (App P_22222222222222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add n_22222222222 m_222222222222) p_2222222222222)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add n_22222222222 m_222222222222) p_2222222222222) P_22222222222222 H_222222222222222 (App Coq.ZArith.BinIntDef.Z.add n_22222222222 (App Coq.ZArith.BinIntDef.Z.add m_222222222222 p_2222222222222)) (App Coq.ZArith.BinInt.Z.add_assoc n_22222222222 m_222222222222 p_2222222222222)))))))) (Definition Coq.omega.OmegaLemmas.Zred_factor4 (Lambda n_2222222222222222 Z (Lambda m_22222222222222222 Z (Lambda p_222222222222222222 Z (App Coq.Init.Logic.eq_sym Z (App Coq.ZArith.BinIntDef.Z.mul n_2222222222222222 (App Coq.ZArith.BinIntDef.Z.add m_22222222222222222 p_222222222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul n_2222222222222222 m_22222222222222222) (App Coq.ZArith.BinIntDef.Z.mul n_2222222222222222 p_222222222222222222)) (App Coq.ZArith.BinInt.Z.mul_add_distr_l n_2222222222222222 m_22222222222222222 p_222222222222222222)))))) (Definition Coq.omega.OmegaLemmas.fast_Zred_factor4 (Lambda x_22222222222 Z (Lambda y_222222222222 Z (Lambda z_2222222222222 Z (Lambda P_22222222222222 (Prod out_22222222222221 Z (Sort Prop)) (Lambda H_222222222222222 (App P_22222222222222 (App Coq.ZArith.BinIntDef.Z.mul x_22222222222 (App Coq.ZArith.BinIntDef.Z.add y_222222222222 z_2222222222222))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul x_22222222222 (App Coq.ZArith.BinIntDef.Z.add y_222222222222 z_2222222222222)) P_22222222222222 H_222222222222222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul x_22222222222 y_222222222222) (App Coq.ZArith.BinIntDef.Z.mul x_22222222222 z_2222222222222)) (App Coq.omega.OmegaLemmas.Zred_factor4 x_22222222222 y_222222222222 z_2222222222222)))))))) (Definition Coq.omega.OmegaLemmas.Zred_factor6 (Lambda n_22222222222222 Z (App Coq.Init.Logic.eq_ind_r Z n_22222222222222 (Lambda z_222222222222222 Z (App eq Z n_22222222222222 z_222222222222222)) (App eq_refl Z n_22222222222222) (App Coq.ZArith.BinIntDef.Z.add n_22222222222222 Z0) (App Coq.ZArith.BinInt.Z.add_0_r n_22222222222222)))) (Definition Coq.omega.OmegaLemmas.fast_Zred_factor6 (Lambda x_22222222222 Z (Lambda P_222222222222 (Prod out_222222222221 Z (Sort Prop)) (Lambda H_2222222222222 (App P_222222222222 (App Coq.ZArith.BinIntDef.Z.add x_22222222222 Z0)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add x_22222222222 Z0) P_222222222222 H_2222222222222 x_22222222222 (App Coq.omega.OmegaLemmas.Zred_factor6 x_22222222222)))))) (Definition Coq.ZArith.BinInt.Z.le_gt_cases (Lambda n_222222222222 Z (Lambda m_2222222222222 Z (Cast (App Coq.ZArith.BinInt.Z.central_induction (Lambda t_22222222222222 Z (App or (App Coq.ZArith.BinInt.Z.le t_22222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 t_22222222222222))) (Cast (Cast (Lambda x_22222222222222 Z (Lambda y_222222222222222 Z (Lambda H_2222222222222222 (App eq Z x_22222222222222 y_222222222222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App or (App Coq.ZArith.BinInt.Z.le x_22222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 x_22222222222222)) (App or (App Coq.ZArith.BinInt.Z.le y_222222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 y_222222222222222)) (App Coq.Classes.Morphisms_Prop.or_iff_morphism (App Coq.ZArith.BinInt.Z.le x_22222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.le y_222222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.le_wd x_22222222222222 y_222222222222222 H_2222222222222222 m_2222222222222 m_2222222222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) m_2222222222222)) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 x_22222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 y_222222222222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism Z (Prod out_22222222222222221 Z (Sort Prop)) (App eq Z) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff) Coq.ZArith.BinInt.Z.lt Coq.ZArith.BinInt.Z.lt_wd m_2222222222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) m_2222222222222) x_22222222222222 y_222222222222222 H_2222222222222222)) (App or (App Coq.ZArith.BinInt.Z.le y_222222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 y_222222222222222)) (App or (App Coq.ZArith.BinInt.Z.le y_222222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 y_222222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App or (App Coq.ZArith.BinInt.Z.le y_222222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 y_222222222222222))) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App or (App Coq.ZArith.BinInt.Z.le y_222222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 y_222222222222222))))))) REVERTcast (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff (Lambda t_22222222222222 Z (App or (App Coq.ZArith.BinInt.Z.le t_22222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 t_22222222222222))) (Lambda t_22222222222222 Z (App or (App Coq.ZArith.BinInt.Z.le t_22222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 t_22222222222222))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_22222222222221 Z (Sort Prop)) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff) (Lambda t_22222222222222 Z (App or (App Coq.ZArith.BinInt.Z.le t_22222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 t_22222222222222))))) m_2222222222222 (App or_introl (App Coq.ZArith.BinInt.Z.le m_2222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.le_refl m_2222222222222)) (Lambda n_22222222222222 Z (App (Lambda lemma_222222222222222 (App Coq.Init.Logic.iff (App Coq.ZArith.BinInt.Z.lt m_2222222222222 (App Coq.ZArith.BinIntDef.Z.succ n_22222222222222)) (App Coq.ZArith.BinInt.Z.le m_2222222222222 n_22222222222222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App or (App Coq.ZArith.BinInt.Z.le n_22222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222)) (App or (App Coq.ZArith.BinInt.Z.le (App Coq.ZArith.BinIntDef.Z.succ n_22222222222222) m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 (App Coq.ZArith.BinIntDef.Z.succ n_22222222222222))) (App or (App Coq.ZArith.BinInt.Z.le (App Coq.ZArith.BinIntDef.Z.succ n_22222222222222) m_2222222222222) (App Coq.ZArith.BinInt.Z.le m_2222222222222 n_22222222222222)) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism (Sort Prop) (Prod B_2222222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) or Coq.Classes.Morphisms_Prop.or_iff_morphism (App Coq.ZArith.BinInt.Z.le (App Coq.ZArith.BinIntDef.Z.succ n_22222222222222) m_2222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.ZArith.BinInt.Z.le (App Coq.ZArith.BinIntDef.Z.succ n_22222222222222) m_2222222222222)) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 (App Coq.ZArith.BinIntDef.Z.succ n_22222222222222)) (App Coq.ZArith.BinInt.Z.le m_2222222222222 n_22222222222222) lemma_222222222222222))) (App Coq.ZArith.BinInt.Z.lt_succ_r m_2222222222222 n_22222222222222) (App (Lambda lemma_222222222222222 (App Coq.Init.Logic.iff (App Coq.ZArith.BinInt.Z.le (App Coq.ZArith.BinIntDef.Z.succ n_22222222222222) m_2222222222222) (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App or (App Coq.ZArith.BinInt.Z.le n_22222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222)) (App or (App Coq.ZArith.BinInt.Z.le (App Coq.ZArith.BinIntDef.Z.succ n_22222222222222) m_2222222222222) (App Coq.ZArith.BinInt.Z.le m_2222222222222 n_22222222222222)) (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.le m_2222222222222 n_22222222222222)) (App Coq.Classes.Morphisms_Prop.or_iff_morphism (App Coq.ZArith.BinInt.Z.le (App Coq.ZArith.BinIntDef.Z.succ n_22222222222222) m_2222222222222) (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) lemma_222222222222222 (App Coq.ZArith.BinInt.Z.le m_2222222222222 n_22222222222222) (App Coq.ZArith.BinInt.Z.le m_2222222222222 n_22222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.ZArith.BinInt.Z.le m_2222222222222 n_22222222222222))))) (App Coq.ZArith.BinInt.Z.le_succ_l n_22222222222222 m_2222222222222) (App (Lambda lemma_222222222222222 (App Coq.Init.Logic.iff (App Coq.ZArith.BinInt.Z.le n_22222222222222 m_2222222222222) (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App eq Z n_22222222222222 m_2222222222222))) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App or (App Coq.ZArith.BinInt.Z.le n_22222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222)) (App or (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App eq Z n_22222222222222 m_2222222222222)) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222)) (App Coq.Classes.Morphisms_Prop.or_iff_morphism (App Coq.ZArith.BinInt.Z.le n_22222222222222 m_2222222222222) (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App eq Z n_22222222222222 m_2222222222222)) lemma_222222222222222 (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222))) (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.le m_2222222222222 n_22222222222222)) (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.le m_2222222222222 n_22222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.le m_2222222222222 n_22222222222222))))) (App Coq.ZArith.BinInt.Z.lt_eq_cases n_22222222222222 m_2222222222222) (App (Lambda lemma_222222222222222 (App Coq.Init.Logic.iff (App Coq.ZArith.BinInt.Z.le m_2222222222222 n_22222222222222) (App or (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App eq Z m_2222222222222 n_22222222222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App or (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App eq Z n_22222222222222 m_2222222222222)) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222)) (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.le m_2222222222222 n_22222222222222)) (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App or (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App eq Z m_2222222222222 n_22222222222222))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism (Sort Prop) (Prod B_2222222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) or Coq.Classes.Morphisms_Prop.or_iff_morphism (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222)) (App Coq.ZArith.BinInt.Z.le m_2222222222222 n_22222222222222) (App or (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App eq Z m_2222222222222 n_22222222222222)) lemma_222222222222222))) (App Coq.ZArith.BinInt.Z.lt_eq_cases m_2222222222222 n_22222222222222) (App conj (Prod out_222222222222221 (App or (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App eq Z n_22222222222222 m_2222222222222)) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222)) (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App or (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App eq Z m_2222222222222 n_22222222222222)))) (Prod out_222222222222221 (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App or (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App eq Z m_2222222222222 n_22222222222222))) (App or (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App eq Z n_22222222222222 m_2222222222222)) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222))) (Lambda H_222222222222222 (App or (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App eq Z n_22222222222222 m_2222222222222)) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222)) (App Coq.Init.Logic.or_ind (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App eq Z n_22222222222222 m_2222222222222)) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App or (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App eq Z m_2222222222222 n_22222222222222))) (Lambda H0_2222222222222222 (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App eq Z n_22222222222222 m_2222222222222)) (App Coq.Init.Logic.or_ind (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App eq Z n_22222222222222 m_2222222222222) (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App or (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App eq Z m_2222222222222 n_22222222222222))) (Lambda H_22222222222222222 (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App or_introl (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App or (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App eq Z m_2222222222222 n_22222222222222)) H_22222222222222222)) (Lambda H_22222222222222222 (App eq Z n_22222222222222 m_2222222222222) (App or_intror (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App or (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App eq Z m_2222222222222 n_22222222222222)) (App or_intror (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App eq Z m_2222222222222 n_22222222222222) (Cast (App Coq.Classes.RelationClasses.symmetry Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Symmetric Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) n_22222222222222 m_2222222222222 H_22222222222222222) REVERTcast (App eq Z m_2222222222222 n_22222222222222))))) H0_2222222222222222)) (Lambda H0_2222222222222222 (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App or_intror (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App or (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App eq Z m_2222222222222 n_22222222222222)) (App or_introl (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App eq Z m_2222222222222 n_22222222222222) H0_2222222222222222))) H_222222222222222)) (Lambda H_222222222222222 (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App or (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App eq Z m_2222222222222 n_22222222222222))) (App Coq.Init.Logic.or_ind (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App or (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App eq Z m_2222222222222 n_22222222222222)) (App or (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App eq Z n_22222222222222 m_2222222222222)) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222)) (Lambda H0_2222222222222222 (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App or_introl (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App eq Z n_22222222222222 m_2222222222222)) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App or_introl (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App eq Z n_22222222222222 m_2222222222222) H0_2222222222222222))) (Lambda H0_2222222222222222 (App or (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App eq Z m_2222222222222 n_22222222222222)) (App Coq.Init.Logic.or_ind (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App eq Z m_2222222222222 n_22222222222222) (App or (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App eq Z n_22222222222222 m_2222222222222)) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222)) (Lambda H_22222222222222222 (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App or_intror (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App eq Z n_22222222222222 m_2222222222222)) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) H_22222222222222222)) (Lambda H_22222222222222222 (App eq Z m_2222222222222 n_22222222222222) (App or_introl (App or (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App eq Z n_22222222222222 m_2222222222222)) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_22222222222222) (App or_intror (App Coq.ZArith.BinInt.Z.lt n_22222222222222 m_2222222222222) (App eq Z n_22222222222222 m_2222222222222) (Cast (App Coq.Classes.RelationClasses.symmetry Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Symmetric Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) m_2222222222222 n_22222222222222 H_22222222222222222) REVERTcast (App eq Z n_22222222222222 m_2222222222222))))) H0_2222222222222222)) H_222222222222222)))))))) n_222222222222) REVERTcast (App or (App Coq.ZArith.BinInt.Z.le n_222222222222 m_2222222222222) (App Coq.ZArith.BinInt.Z.lt m_2222222222222 n_222222222222)))))) (Definition Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.not_gt_le (Lambda x_22222222222322 Z (Lambda y_222222222223222 Z (Lambda H_2222222222232222 (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.lt y_222222222223222 x_22222222222322)) (App (Lambda lemma_22222222222322222 (App Coq.Init.Logic.iff (App Coq.ZArith.BinInt.Z.le x_22222222222322 y_222222222223222) (App or (App Coq.ZArith.BinInt.Z.lt x_22222222222322 y_222222222223222) (App eq Z x_22222222222322 y_222222222223222))) (App Coq.Classes.Morphisms.iff_flip_impl_subrelation (App Coq.ZArith.BinInt.Z.le x_22222222222322 y_222222222223222) (App or (App Coq.ZArith.BinInt.Z.lt x_22222222222322 y_222222222223222) (App eq Z x_22222222222322 y_222222222223222)) lemma_22222222222322222)) (App Coq.ZArith.BinInt.Z.Private_OrderTac.IsTotal.le_lteq x_22222222222322 y_222222222223222) (App (Lambda H0_22222222222322222 (App or (App Coq.ZArith.BinInt.Z.lt x_22222222222322 y_222222222223222) (App or (App eq Z x_22222222222322 y_222222222223222) (App Coq.ZArith.BinInt.Z.lt y_222222222223222 x_22222222222322))) (App Coq.Init.Logic.or_ind (App Coq.ZArith.BinInt.Z.lt x_22222222222322 y_222222222223222) (App or (App eq Z x_22222222222322 y_222222222223222) (App Coq.ZArith.BinInt.Z.lt y_222222222223222 x_22222222222322)) (App or (App Coq.ZArith.BinInt.Z.lt x_22222222222322 y_222222222223222) (App eq Z x_22222222222322 y_222222222223222)) (Lambda H1_222222222223222222 (App Coq.ZArith.BinInt.Z.lt x_22222222222322 y_222222222223222) (App or_introl (App Coq.ZArith.BinInt.Z.lt x_22222222222322 y_222222222223222) (App eq Z x_22222222222322 y_222222222223222) H1_222222222223222222)) (Lambda H1_222222222223222222 (App or (App eq Z x_22222222222322 y_222222222223222) (App Coq.ZArith.BinInt.Z.lt y_222222222223222 x_22222222222322)) (App Coq.Init.Logic.or_ind (App eq Z x_22222222222322 y_222222222223222) (App Coq.ZArith.BinInt.Z.lt y_222222222223222 x_22222222222322) (App or (App Coq.ZArith.BinInt.Z.lt x_22222222222322 y_222222222223222) (App eq Z x_22222222222322 y_222222222223222)) (Lambda H0_2222222222232222222 (App eq Z x_22222222222322 y_222222222223222) (App or_intror (App Coq.ZArith.BinInt.Z.lt x_22222222222322 y_222222222223222) (App eq Z x_22222222222322 y_222222222223222) H0_2222222222232222222)) (Lambda H0_2222222222232222222 (App Coq.ZArith.BinInt.Z.lt y_222222222223222 x_22222222222322) (LetIn H1_22222222222322222223 (App H_2222222222232222 H0_2222222222232222222) False (App Coq.Init.Logic.False_ind (App or (App Coq.ZArith.BinInt.Z.lt x_22222222222322 y_222222222223222) (App eq Z x_22222222222322 y_222222222223222)) H1_22222222222322222223))) H1_222222222223222222)) H0_22222222222322222)) (App Coq.ZArith.BinInt.Z.Private_OrderTac.IsTotal.lt_total x_22222222222322 y_222222222223222))))))) (Definition Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.le_lt_trans (Lambda x_222222222223222 Z (Lambda y_2222222222232222 Z (Lambda z_22222222222322222 Z (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.trans OLE OLT x_222222222223222 y_2222222222232222 z_22222222222322222))))) (Definition Coq.ZArith.BinInt.Z.le_decidable (Lambda n_2222222222 Z (Lambda m_22222222222 Z (LetIn o_222222222223 (App Coq.ZArith.BinInt.Z.le_gt_cases n_2222222222 m_22222222222) (App or (App Coq.ZArith.BinInt.Z.le n_2222222222 m_22222222222) (App Coq.ZArith.BinInt.Z.lt m_22222222222 n_2222222222)) (Case 2 (Lambda out_2222222222232 (App or (App Coq.ZArith.BinInt.Z.le n_2222222222 m_22222222222) (App Coq.ZArith.BinInt.Z.lt m_22222222222 n_2222222222)) (App Coq.Logic.Decidable.decidable (App Coq.ZArith.BinInt.Z.le n_2222222222 m_22222222222))) (CaseMatch o_222222222223) (CaseBranches (Lambda H_2222222222232 (App Coq.ZArith.BinInt.Z.le n_2222222222 m_22222222222) (App or_introl (App Coq.ZArith.BinInt.Z.le n_2222222222 m_22222222222) (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le n_2222222222 m_22222222222)) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.not_gt_le n_2222222222 m_22222222222 (Cast (Lambda H0_22222222222322 (App Coq.ZArith.BinInt.Z.lt m_22222222222 n_2222222222) (App (Lambda H1_222222222223222 (App Coq.ZArith.BinInt.Z.lt n_2222222222 n_2222222222) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.lt_irrefl n_2222222222 H1_222222222223222)) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.le_lt_trans n_2222222222 m_22222222222 n_2222222222 H_2222222222232 H0_22222222222322))) REVERTcast (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.lt m_22222222222 n_2222222222)))))) (Lambda H_2222222222232 (App Coq.ZArith.BinInt.Z.lt m_22222222222 n_2222222222) (App or_intror (App Coq.ZArith.BinInt.Z.le n_2222222222 m_22222222222) (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le n_2222222222 m_22222222222)) (Cast (Lambda H0_22222222222322 (App Coq.ZArith.BinInt.Z.le n_2222222222 m_22222222222) (App Coq.Init.Logic.False_ind False (App (Lambda H1_222222222223222 (App Coq.ZArith.BinInt.Z.lt n_2222222222 n_2222222222) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.lt_irrefl n_2222222222 H1_222222222223222)) (App Coq.ZArith.BinInt.Z.Private_OrderTac.Tac.le_lt_trans n_2222222222 m_22222222222 n_2222222222 H0_22222222222322 H_2222222222232)))) REVERTcast (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le n_2222222222 m_22222222222))))))))))) (Definition Coq.ZArith.BinInt.Zopp_mult_distr_r (Lambda n_22222222222222222 Z (Lambda m_222222222222222222 Z (App Coq.Init.Logic.eq_sym Z (App Coq.ZArith.BinIntDef.Z.mul n_22222222222222222 (App Coq.ZArith.BinIntDef.Z.opp m_222222222222222222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul n_22222222222222222 m_222222222222222222)) (App Coq.ZArith.BinInt.Z.mul_opp_r n_22222222222222222 m_222222222222222222))))) (Definition Coq.omega.OmegaLemmas.fast_Zopp_mult_distr_r (Lambda x_2222222222222 Z (Lambda y_22222222222222 Z (Lambda P_222222222222222 (Prod out_222222222222221 Z (Sort Prop)) (Lambda H_2222222222222222 (App P_222222222222222 (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222 (App Coq.ZArith.BinIntDef.Z.opp y_22222222222222))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222 (App Coq.ZArith.BinIntDef.Z.opp y_22222222222222)) P_222222222222222 H_2222222222222222 (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.mul x_2222222222222 y_22222222222222)) (App Coq.ZArith.BinInt.Zopp_mult_distr_r x_2222222222222 y_22222222222222))))))) (Definition Coq.omega.OmegaLemmas.OMEGA13 (Lambda v_22222222222222222222 Z (Lambda l1_222222222222222222222 Z (Lambda l2_2222222222222222222222 Z (Lambda x_22222222222222222222222 positive (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v_22222222222222222222 (App Zpos x_22222222222222222222222)) (App Coq.ZArith.BinIntDef.Z.mul v_22222222222222222222 (App Zneg x_22222222222222222222222))) (App Coq.ZArith.BinIntDef.Z.add l1_222222222222222222222 l2_2222222222222222222222)) (Lambda z_222222222222222222222222 Z (App eq Z z_222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.add l1_222222222222222222222 l2_2222222222222222222222))) (App Coq.Init.Logic.eq_ind Z (App Coq.ZArith.BinIntDef.Z.mul v_22222222222222222222 (App Coq.ZArith.BinIntDef.Z.add (App Zpos x_22222222222222222222222) (App Zneg x_22222222222222222222222))) (Lambda z_222222222222222222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.add z_222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.add l1_222222222222222222222 l2_2222222222222222222222)) (App Coq.ZArith.BinIntDef.Z.add l1_222222222222222222222 l2_2222222222222222222222))) (App Coq.Init.Logic.eq_ind Z (App Coq.ZArith.BinIntDef.Z.opp (App Zneg x_22222222222222222222222)) (Lambda z_222222222222222222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v_22222222222222222222 (App Coq.ZArith.BinIntDef.Z.add z_222222222222222222222222 (App Zneg x_22222222222222222222222))) (App Coq.ZArith.BinIntDef.Z.add l1_222222222222222222222 l2_2222222222222222222222)) (App Coq.ZArith.BinIntDef.Z.add l1_222222222222222222222 l2_2222222222222222222222))) (App Coq.Init.Logic.eq_ind_r Z Z0 (Lambda z_222222222222222222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v_22222222222222222222 z_222222222222222222222222) (App Coq.ZArith.BinIntDef.Z.add l1_222222222222222222222 l2_2222222222222222222222)) (App Coq.ZArith.BinIntDef.Z.add l1_222222222222222222222 l2_2222222222222222222222))) (App Coq.Init.Logic.eq_ind_r Z Z0 (Lambda z_222222222222222222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.add z_222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.add l1_222222222222222222222 l2_2222222222222222222222)) (App Coq.ZArith.BinIntDef.Z.add l1_222222222222222222222 l2_2222222222222222222222))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add l1_222222222222222222222 l2_2222222222222222222222) (Lambda z_222222222222222222222222 Z (App eq Z z_222222222222222222222222 (App Coq.ZArith.BinIntDef.Z.add l1_222222222222222222222 l2_2222222222222222222222))) (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.add l1_222222222222222222222 l2_2222222222222222222222)) (App Coq.ZArith.BinIntDef.Z.add Z0 (App Coq.ZArith.BinIntDef.Z.add l1_222222222222222222222 l2_2222222222222222222222)) (App Coq.ZArith.BinInt.Z.add_0_l (App Coq.ZArith.BinIntDef.Z.add l1_222222222222222222222 l2_2222222222222222222222))) (App Coq.ZArith.BinIntDef.Z.mul v_22222222222222222222 Z0) (App Coq.ZArith.BinInt.Z.mul_0_r v_22222222222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.opp (App Zneg x_22222222222222222222222)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.opp (App Zneg x_22222222222222222222222)))) (App Coq.ZArith.BinInt.Z.add_opp_diag_r (App Coq.ZArith.BinIntDef.Z.opp (App Zneg x_22222222222222222222222)))) (App Zpos x_22222222222222222222222) (App Coq.ZArith.BinInt.Pos2Z.opp_neg x_22222222222222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v_22222222222222222222 (App Zpos x_22222222222222222222222)) (App Coq.ZArith.BinIntDef.Z.mul v_22222222222222222222 (App Zneg x_22222222222222222222222))) (App Coq.ZArith.BinInt.Z.mul_add_distr_l v_22222222222222222222 (App Zpos x_22222222222222222222222) (App Zneg x_22222222222222222222222))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v_22222222222222222222 (App Zpos x_22222222222222222222222)) l1_222222222222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v_22222222222222222222 (App Zneg x_22222222222222222222222)) l2_2222222222222222222222)) (App Coq.ZArith.BinInt.Z.add_shuffle1 (App Coq.ZArith.BinIntDef.Z.mul v_22222222222222222222 (App Zpos x_22222222222222222222222)) l1_222222222222222222222 (App Coq.ZArith.BinIntDef.Z.mul v_22222222222222222222 (App Zneg x_22222222222222222222222)) l2_2222222222222222222222))))))) (Definition Coq.omega.OmegaLemmas.fast_OMEGA13 (Lambda v_22222222222222 Z (Lambda l1_222222222222222 Z (Lambda l2_2222222222222222 Z (Lambda x_22222222222222222 positive (Lambda P_222222222222222222 (Prod out_222222222222222221 Z (Sort Prop)) (Lambda H_2222222222222222222 (App P_222222222222222222 (App Coq.ZArith.BinIntDef.Z.add l1_222222222222222 l2_2222222222222222)) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add l1_222222222222222 l2_2222222222222222) P_222222222222222222 H_2222222222222222222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v_22222222222222 (App Zpos x_22222222222222222)) l1_222222222222222) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul v_22222222222222 (App Zneg x_22222222222222222)) l2_2222222222222222)) (App Coq.omega.OmegaLemmas.OMEGA13 v_22222222222222 l1_222222222222222 l2_2222222222222222 x_22222222222222222))))))))) (Definition Coq.ZArith.BinInt.Z.add_nonneg_nonneg (Lambda n_2222222222222222 Z (Lambda m_22222222222222222 Z (Lambda H1_222222222222222222 (App Coq.ZArith.BinInt.Z.le Z0 n_2222222222222222) (Lambda H2_2222222222222222222 (App Coq.ZArith.BinInt.Z.le Z0 m_22222222222222222) (App (Lambda lemma_22222222222222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add Z0 Z0) Z0) (App Coq.Classes.Morphisms.subrelation_proper (Prod out_222222222222222222221 Z (Prod out_2222222222222222222211 Z (Sort Prop))) (App Coq.Classes.Morphisms.respectful Z (Prod out_222222222222222222221 Z (Sort Prop)) (App eq Z) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff)) Coq.ZArith.BinInt.Z.le Coq.ZArith.BinInt.Z.le_wd (App Coq.Classes.Morphisms.respectful Z (Prod out_222222222222222222221 Z (Sort Prop)) (App eq Z) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful Z (Prod out_222222222222222222221 Z (Sort Prop)) (App eq Z) (App eq Z) (App Coq.Classes.Morphisms.subrelation_refl Z (App eq Z)) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful Z (Sort Prop) (App eq Z) (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful Z (Sort Prop) (App eq Z) (App eq Z) (App Coq.Classes.Morphisms.subrelation_refl Z (App eq Z)) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) Z0 (App Coq.ZArith.BinIntDef.Z.add Z0 Z0) (App Coq.Classes.RelationClasses.symmetry Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Symmetric Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add Z0 Z0) Z0 lemma_22222222222222222222) (App Coq.ZArith.BinIntDef.Z.add n_2222222222222222 m_22222222222222222) (App Coq.ZArith.BinIntDef.Z.add n_2222222222222222 m_22222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy Z (App eq Z) (App Coq.Classes.RelationClasses.Equivalence_Reflexive Z (App eq Z) Coq.ZArith.BinInt.Z.eq_equiv) (App Coq.ZArith.BinIntDef.Z.add n_2222222222222222 m_22222222222222222)))) (App Coq.ZArith.BinInt.Z.add_0_l Z0) (App Coq.ZArith.BinInt.Z.add_le_mono Z0 n_2222222222222222 Z0 m_22222222222222222 H1_222222222222222222 H2_2222222222222222222))))))) (Definition Coq.omega.OmegaLemmas.OMEGA2 (Lambda x_22222222222222 Z (Lambda y_222222222222222 Z (App Coq.ZArith.BinInt.Z.add_nonneg_nonneg x_22222222222222 y_222222222222222)))) (Definition Coq.Classes.Morphisms.subrelation_proper (LetIn U_2222222222222223 (Sort Type) (Sort Type) (Lambda A_22222222222222232 U_2222222222222223 (Lambda R'_222222222222222322 (App Coq.Relations.Relation_Definitions.relation A_22222222222222232) (Lambda m_2222222222222223222 A_22222222222222232 (Lambda mor_22222222222222232222 (App Coq.Classes.Morphisms.Proper A_22222222222222232 R'_222222222222222322 m_2222222222222223222) (Lambda R_222222222222222322222 (App Coq.Relations.Relation_Definitions.relation A_22222222222222232) (Lambda unc_2222222222222223222222 (App Coq.Classes.Init.Unconvertible (App Coq.Relations.Relation_Definitions.relation A_22222222222222232) R_222222222222222322222 R'_222222222222222322) (Lambda sub_22222222222222232222222 (App Coq.Classes.RelationClasses.subrelation A_22222222222222232 R'_222222222222222322 R_222222222222222322222) (App sub_22222222222222232222222 m_2222222222222223222 m_2222222222222223222 mor_22222222222222232222)))))))))) (Definition Coq.Program.Basics.impl (Lambda A_2222222222222222 (Sort Prop) (Lambda B_22222222222222222 (Sort Prop) (Prod out_222222222222222221 A_2222222222222222 B_22222222222222222)))) (Definition Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism_obligation_1) (Definition Coq.Program.Basics.flip (Lambda A_2222222222222222 (Sort Type) (Lambda B_22222222222222222 (Sort Type) (Lambda C_222222222222222222 (Sort Type) (Lambda f_2222222222222222222 (Prod out_2222222222222222221 A_2222222222222222 (Prod out_22222222222222222211 B_22222222222222222 C_222222222222222222)) (Lambda x_22222222222222222222 B_22222222222222222 (Lambda y_222222222222222222222 A_2222222222222222 (App f_2222222222222222222 y_222222222222222222222 x_22222222222222222222)))))))) (Definition Coq.Classes.Morphisms.subrelation_respectful (LetIn U_2222222222222223 (Sort Type) (Sort Type) (Lambda A_22222222222222232 U_2222222222222223 (Lambda B_222222222222222322 U_2222222222222223 (Lambda RA'_2222222222222223222 (App Coq.Relations.Relation_Definitions.relation A_22222222222222232) (Lambda RA_22222222222222232222 (App Coq.Relations.Relation_Definitions.relation A_22222222222222232) (Lambda subl_222222222222222322222 (App Coq.Classes.RelationClasses.subrelation A_22222222222222232 RA'_2222222222222223222 RA_22222222222222232222) (Lambda RB_2222222222222223222222 (App Coq.Relations.Relation_Definitions.relation B_222222222222222322) (Lambda RB'_22222222222222232222222 (App Coq.Relations.Relation_Definitions.relation B_222222222222222322) (Lambda subr_222222222222222322222222 (App Coq.Classes.RelationClasses.subrelation B_222222222222222322 RB_2222222222222223222222 RB'_22222222222222232222222) (Cast (Lambda x_2222222222222223222222222 (Prod out_2222222222222223222222221 A_22222222222222232 B_222222222222222322) (Lambda y_22222222222222232222222222 (Prod out_22222222222222232222222221 A_22222222222222232 B_222222222222222322) (Lambda H_222222222222222322222222222 (App Coq.Classes.Morphisms.respectful A_22222222222222232 B_222222222222222322 RA_22222222222222232222 RB_2222222222222223222222 x_2222222222222223222222222 y_22222222222222232222222222) (Cast (Lambda x0_2222222222222223222222222222 A_22222222222222232 (Lambda y0_22222222222222232222222222222 A_22222222222222232 (Lambda H0_222222222222222322222222222222 (App RA'_2222222222222223222 x0_2222222222222223222222222222 y0_22222222222222232222222222222) (App (Lambda H1_2222222222222223222222222222222 (Prod y_2222222222222223222222222222221 B_222222222222222322 (Prod out_22222222222222232222222222222211 (App RB_2222222222222223222222 (App x_2222222222222223222222222 x0_2222222222222223222222222222) y_2222222222222223222222222222221) (App RB'_22222222222222232222222 (App x_2222222222222223222222222 x0_2222222222222223222222222222) y_2222222222222223222222222222221))) (App (Lambda H2_22222222222222232222222222222222 (Prod y_22222222222222232222222222222221 A_22222222222222232 (Prod out_222222222222222322222222222222211 (App RA_22222222222222232222 x0_2222222222222223222222222222 y_22222222222222232222222222222221) (App RB_2222222222222223222222 (App x_2222222222222223222222222 x0_2222222222222223222222222222) (App y_22222222222222232222222222 y_22222222222222232222222222222221)))) (App (Lambda H3_222222222222222322222222222222222 (Prod out_222222222222222322222222222222221 (App RB_2222222222222223222222 (App x_2222222222222223222222222 x0_2222222222222223222222222222) (App y_22222222222222232222222222 y0_22222222222222232222222222222)) (App RB'_22222222222222232222222 (App x_2222222222222223222222222 x0_2222222222222223222222222222) (App y_22222222222222232222222222 y0_22222222222222232222222222222))) (App subr_222222222222222322222222 (App x_2222222222222223222222222 x0_2222222222222223222222222222) (App y_22222222222222232222222222 y0_22222222222222232222222222222) (App H_222222222222222322222222222 x0_2222222222222223222222222222 y0_22222222222222232222222222222 (App subl_222222222222222322222 x0_2222222222222223222222222222 y0_22222222222222232222222222222 H0_222222222222222322222222222222)))) (App H1_2222222222222223222222222222222 (App y_22222222222222232222222222 y0_22222222222222232222222222222)))) (App H_222222222222222322222222222 x0_2222222222222223222222222222))) (App subr_222222222222222322222222 (App x_2222222222222223222222222 x0_2222222222222223222222222222)))))) REVERTcast (App Coq.Classes.Morphisms.respectful A_22222222222222232 B_222222222222222322 RA'_2222222222222223222 RB'_22222222222222232222222 x_2222222222222223222222222 y_22222222222222232222222222))))) REVERTcast (App Coq.Classes.RelationClasses.subrelation (Prod out_2222222222222223222222221 A_22222222222222232 B_222222222222222322) (App Coq.Classes.Morphisms.respectful A_22222222222222232 B_222222222222222322 RA_22222222222222232222 RB_2222222222222223222222) (App Coq.Classes.Morphisms.respectful A_22222222222222232 B_222222222222222322 RA'_2222222222222223222 RB'_22222222222222232222222))))))))))))) (Definition Coq.Classes.Morphisms.subrelation_refl (LetIn U_2222222222222223 (Sort Type) (Sort Type) (Lambda A_22222222222222232 U_2222222222222223 (Lambda R_222222222222222322 (App Coq.Relations.Relation_Definitions.relation A_22222222222222232) (Cast (Lambda x_2222222222222223222 A_22222222222222232 (Lambda y_22222222222222232222 A_22222222222222232 (Lambda H_222222222222222322222 (App R_222222222222222322 x_2222222222222223222 y_22222222222222232222) H_222222222222222322222))) REVERTcast (App Coq.Classes.RelationClasses.subrelation A_22222222222222232 R_222222222222222322 R_222222222222222322)))))) (Definition Coq.Classes.Morphisms.reflexive_proper_proxy (LetIn U_2222222222222223 (Sort Type) (Sort Type) (Lambda A_22222222222222232 U_2222222222222223 (Lambda R_222222222222222322 (App Coq.Relations.Relation_Definitions.relation A_22222222222222232) (Lambda H_2222222222222223222 (App Coq.Classes.RelationClasses.Reflexive A_22222222222222232 R_222222222222222322) (Lambda x_22222222222222232222 A_22222222222222232 (App (Lambda H0_222222222222222322222 (App R_222222222222222322 x_22222222222222232222 x_22222222222222232222) H0_222222222222222322222) (App H_2222222222222223222 x_22222222222222232222)))))))) (Definition Coq.Classes.RelationClasses.iff_Reflexive Coq.Init.Logic.iff_refl) (Definition Coq.ZArith.auxiliary.Zlt_left (Lambda n_222222222222222 Z (Lambda m_2222222222222222 Z (Lambda H_22222222222222222 (App Coq.ZArith.BinInt.Z.lt n_222222222222222 m_2222222222222222) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add m_2222222222222222 (App Coq.ZArith.BinIntDef.Z.opp n_222222222222222)) (App Zneg xH)) (Lambda z_222222222222222222 Z (App Coq.ZArith.BinInt.Z.le Z0 z_222222222222222222)) (LetIn H0_222222222222222223 (Lambda n_222222222222222222 Z (Lambda m_2222222222222222222 Z (Case 2 (Lambda out_22222222222222222222 (App and (Prod out_22222222222222222221 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.sub m_2222222222222222222 n_222222222222222222)) (App Coq.ZArith.BinInt.Z.le n_222222222222222222 m_2222222222222222222)) (Prod out_22222222222222222221 (App Coq.ZArith.BinInt.Z.le n_222222222222222222 m_2222222222222222222) (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.sub m_2222222222222222222 n_222222222222222222)))) (Prod out_222222222222222222221 (App Coq.ZArith.BinInt.Z.le n_222222222222222222 m_2222222222222222222) (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.sub m_2222222222222222222 n_222222222222222222)))) (CaseMatch (App Coq.ZArith.BinInt.Z.le_0_sub n_222222222222222222 m_2222222222222222222)) (CaseBranches (Lambda out_22222222222222222222 (Prod out_22222222222222222221 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.sub m_2222222222222222222 n_222222222222222222)) (App Coq.ZArith.BinInt.Z.le n_222222222222222222 m_2222222222222222222)) (Lambda out_222222222222222222222 (Prod out_222222222222222222221 (App Coq.ZArith.BinInt.Z.le n_222222222222222222 m_2222222222222222222) (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.sub m_2222222222222222222 n_222222222222222222))) out_222222222222222222222)))))) (Prod n_222222222222222221 Z (Prod m_2222222222222222211 Z (Prod out_22222222222222222111 (App Coq.ZArith.BinInt.Z.le n_222222222222222221 m_2222222222222222211) (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.sub m_2222222222222222211 n_222222222222222221))))) (App H0_222222222222222223 (App Coq.ZArith.BinIntDef.Z.succ Z0) (App Coq.ZArith.BinIntDef.Z.add m_2222222222222222 (App Coq.ZArith.BinIntDef.Z.opp n_222222222222222)) (LetIn H0_2222222222222222233 (Lambda n_2222222222222222232 Z (Lambda m_22222222222222222322 Z (Case 2 (Lambda out_222222222222222223222 (App and (Prod out_222222222222222223221 (App Coq.ZArith.BinInt.Z.le (App Coq.ZArith.BinIntDef.Z.succ n_2222222222222222232) m_22222222222222222322) (App Coq.ZArith.BinInt.Z.lt n_2222222222222222232 m_22222222222222222322)) (Prod out_222222222222222223221 (App Coq.ZArith.BinInt.Z.lt n_2222222222222222232 m_22222222222222222322) (App Coq.ZArith.BinInt.Z.le (App Coq.ZArith.BinIntDef.Z.succ n_2222222222222222232) m_22222222222222222322))) (Prod out_2222222222222222232221 (App Coq.ZArith.BinInt.Z.lt n_2222222222222222232 m_22222222222222222322) (App Coq.ZArith.BinInt.Z.le (App Coq.ZArith.BinIntDef.Z.succ n_2222222222222222232) m_22222222222222222322))) (CaseMatch (App Coq.ZArith.BinInt.Z.le_succ_l n_2222222222222222232 m_22222222222222222322)) (CaseBranches (Lambda out_222222222222222223222 (Prod out_222222222222222223221 (App Coq.ZArith.BinInt.Z.le (App Coq.ZArith.BinIntDef.Z.succ n_2222222222222222232) m_22222222222222222322) (App Coq.ZArith.BinInt.Z.lt n_2222222222222222232 m_22222222222222222322)) (Lambda out_2222222222222222232222 (Prod out_2222222222222222232221 (App Coq.ZArith.BinInt.Z.lt n_2222222222222222232 m_22222222222222222322) (App Coq.ZArith.BinInt.Z.le (App Coq.ZArith.BinIntDef.Z.succ n_2222222222222222232) m_22222222222222222322)) out_2222222222222222232222)))))) (Prod n_2222222222222222231 Z (Prod m_22222222222222222311 Z (Prod out_222222222222222223111 (App Coq.ZArith.BinInt.Z.lt n_2222222222222222231 m_22222222222222222311) (App Coq.ZArith.BinInt.Z.le (App Coq.ZArith.BinIntDef.Z.succ n_2222222222222222231) m_22222222222222222311)))) (App H0_2222222222222222233 Z0 (App Coq.ZArith.BinIntDef.Z.add m_2222222222222222 (App Coq.ZArith.BinIntDef.Z.opp n_222222222222222)) (LetIn H0_22222222222222222333 (Lambda n_22222222222222222332 Z (Lambda m_222222222222222223322 Z (Case 2 (Lambda out_2222222222222222233222 (App and (Prod out_2222222222222222233221 (App Coq.ZArith.BinInt.Z.lt Z0 (App Coq.ZArith.BinIntDef.Z.sub m_222222222222222223322 n_22222222222222222332)) (App Coq.ZArith.BinInt.Z.lt n_22222222222222222332 m_222222222222222223322)) (Prod out_2222222222222222233221 (App Coq.ZArith.BinInt.Z.lt n_22222222222222222332 m_222222222222222223322) (App Coq.ZArith.BinInt.Z.lt Z0 (App Coq.ZArith.BinIntDef.Z.sub m_222222222222222223322 n_22222222222222222332)))) (Prod out_22222222222222222332221 (App Coq.ZArith.BinInt.Z.lt n_22222222222222222332 m_222222222222222223322) (App Coq.ZArith.BinInt.Z.lt Z0 (App Coq.ZArith.BinIntDef.Z.sub m_222222222222222223322 n_22222222222222222332)))) (CaseMatch (App Coq.ZArith.BinInt.Z.lt_0_sub n_22222222222222222332 m_222222222222222223322)) (CaseBranches (Lambda out_2222222222222222233222 (Prod out_2222222222222222233221 (App Coq.ZArith.BinInt.Z.lt Z0 (App Coq.ZArith.BinIntDef.Z.sub m_222222222222222223322 n_22222222222222222332)) (App Coq.ZArith.BinInt.Z.lt n_22222222222222222332 m_222222222222222223322)) (Lambda out_22222222222222222332222 (Prod out_22222222222222222332221 (App Coq.ZArith.BinInt.Z.lt n_22222222222222222332 m_222222222222222223322) (App Coq.ZArith.BinInt.Z.lt Z0 (App Coq.ZArith.BinIntDef.Z.sub m_222222222222222223322 n_22222222222222222332))) out_22222222222222222332222)))))) (Prod n_22222222222222222331 Z (Prod m_222222222222222223311 Z (Prod out_2222222222222222233111 (App Coq.ZArith.BinInt.Z.lt n_22222222222222222331 m_222222222222222223311) (App Coq.ZArith.BinInt.Z.lt Z0 (App Coq.ZArith.BinIntDef.Z.sub m_222222222222222223311 n_22222222222222222331))))) (App H0_22222222222222222333 n_222222222222222 m_2222222222222222 H_22222222222222222)))))) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add m_2222222222222222 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.opp n_222222222222222)) (App Coq.ZArith.BinInt.Z.add_shuffle0 m_2222222222222222 (App Zneg xH) (App Coq.ZArith.BinIntDef.Z.opp n_222222222222222))))))) (Definition Coq.ZArith.auxiliary.Zgt_left (Lambda n_2222222222222 Z (Lambda m_22222222222222 Z (App (Lambda lemma_222222222222222 (App Coq.Init.Logic.iff (App Coq.ZArith.BinInt.Z.gt n_2222222222222 m_22222222222222) (App Coq.ZArith.BinInt.Z.lt m_22222222222222 n_2222222222222)) (App Coq.Classes.Morphisms.subrelation_proper (Prod A_2222222222222221 (Sort Prop) (Prod B_22222222222222211 (Sort Prop) (Sort Prop))) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Prod out_2222222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff)) Coq.Program.Basics.impl Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism (App Coq.Classes.Morphisms.respectful (Sort Prop) (Prod B_2222222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Prod B_2222222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App Coq.ZArith.BinInt.Z.gt n_2222222222222 m_22222222222222) (App Coq.ZArith.BinInt.Z.lt m_22222222222222 n_2222222222222) lemma_222222222222222 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add n_2222222222222 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222))) (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add n_2222222222222 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222))) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add n_2222222222222 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.opp m_22222222222222)))))) (App Coq.ZArith.BinInt.Z.gt_lt_iff n_2222222222222 m_22222222222222) (App Coq.ZArith.auxiliary.Zlt_left m_22222222222222 n_2222222222222))))) (Definition Coq.ZArith.Zorder.Znot_le_gt (Lambda n_22222222222 Z (Lambda m_222222222222 Z (App (Lambda lemma_2222222222222 (App Coq.Init.Logic.iff (App Coq.ZArith.BinInt.Z.gt n_22222222222 m_222222222222) (App Coq.ZArith.BinInt.Z.lt m_222222222222 n_22222222222)) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism (Sort Prop) (Prod B_22222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) Coq.Program.Basics.impl (App Coq.Classes.Morphisms.subrelation_proper (Prod out_22222222222221 (Sort Prop) (Prod B_222222222222211 (Sort Prop) (Sort Prop))) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Prod out_22222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff)) Coq.Program.Basics.impl Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism (App Coq.Classes.Morphisms.respectful (Sort Prop) (Prod B_22222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Prod B_22222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation))) (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le n_22222222222 m_222222222222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le n_22222222222 m_222222222222))) (App Coq.ZArith.BinInt.Z.gt n_22222222222 m_222222222222) (App Coq.ZArith.BinInt.Z.lt m_222222222222 n_22222222222) lemma_2222222222222)) (App Coq.ZArith.BinInt.Z.gt_lt_iff n_22222222222 m_222222222222) (LetIn H_2222222222223 (Lambda n_2222222222222 Z (Lambda m_22222222222222 Z (Case 2 (Lambda out_222222222222222 (App and (Prod out_222222222222221 (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le n_2222222222222 m_22222222222222)) (App Coq.ZArith.BinInt.Z.lt m_22222222222222 n_2222222222222)) (Prod out_222222222222221 (App Coq.ZArith.BinInt.Z.lt m_22222222222222 n_2222222222222) (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le n_2222222222222 m_22222222222222)))) (Prod out_2222222222222221 (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le n_2222222222222 m_22222222222222)) (App Coq.ZArith.BinInt.Z.lt m_22222222222222 n_2222222222222))) (CaseMatch (App Coq.ZArith.BinInt.Z.nle_gt n_2222222222222 m_22222222222222)) (CaseBranches (Lambda out_222222222222222 (Prod out_222222222222221 (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le n_2222222222222 m_22222222222222)) (App Coq.ZArith.BinInt.Z.lt m_22222222222222 n_2222222222222)) (Lambda out_2222222222222222 (Prod out_2222222222222221 (App Coq.ZArith.BinInt.Z.lt m_22222222222222 n_2222222222222) (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le n_2222222222222 m_22222222222222))) out_222222222222222)))))) (Prod n_2222222222221 Z (Prod m_22222222222211 Z (Prod out_222222222222111 (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le n_2222222222221 m_22222222222211)) (App Coq.ZArith.BinInt.Z.lt m_22222222222211 n_2222222222221)))) (App H_2222222222223 n_22222222222 m_222222222222)))))) (Definition Coq.ZArith.BinInt.Zplus_assoc_reverse (Lambda n_22222222222222 Z (Lambda m_222222222222222 Z (Lambda p_2222222222222222 Z (App Coq.Init.Logic.eq_sym Z (App Coq.ZArith.BinIntDef.Z.add n_22222222222222 (App Coq.ZArith.BinIntDef.Z.add m_222222222222222 p_2222222222222222)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add n_22222222222222 m_222222222222222) p_2222222222222222) (App Coq.ZArith.BinInt.Z.add_assoc n_22222222222222 m_222222222222222 p_2222222222222222)))))) (Definition Coq.omega.OmegaLemmas.fast_Zplus_assoc_reverse (Lambda n_222222222 Z (Lambda m_2222222222 Z (Lambda p_22222222222 Z (Lambda P_222222222222 (Prod out_222222222221 Z (Sort Prop)) (Lambda H_2222222222222 (App P_222222222222 (App Coq.ZArith.BinIntDef.Z.add n_222222222 (App Coq.ZArith.BinIntDef.Z.add m_2222222222 p_22222222222))) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.add n_222222222 (App Coq.ZArith.BinIntDef.Z.add m_2222222222 p_22222222222)) P_222222222222 H_2222222222222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add n_222222222 m_2222222222) p_22222222222) (App Coq.ZArith.BinInt.Zplus_assoc_reverse n_222222222 m_2222222222 p_22222222222)))))))) (Definition Coq.ZArith.Znumtheory.euclid (Lambda a_22222 Z (Lambda b_222222 Z (App (Lambda Coq_ZArith_Znumtheory_extended_euclid_algorithm_euclid_subproof_2222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Zpos xH) a_22222) (App Coq.ZArith.BinIntDef.Z.mul Z0 b_222222)) a_22222) (App (Lambda Coq_ZArith_Znumtheory_extended_euclid_algorithm_euclid_subproof0_22222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul Z0 a_22222) (App Coq.ZArith.BinIntDef.Z.mul (App Zpos xH) b_222222)) b_222222) (App (Lambda Coq_ZArith_Znumtheory_extended_euclid_algorithm_euclid_subproof1_222222222 (Prod g_222222221 (App Coq.ZArith.BinInt.Z.gt Z0 b_222222) (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.opp b_222222))) (App (Lambda Coq_ZArith_Znumtheory_extended_euclid_algorithm_euclid_subproof2_2222222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Zpos xH) a_22222) (App Coq.ZArith.BinIntDef.Z.mul Z0 b_222222)) a_22222) (Case 2 (Lambda s_22222222222 (App sumbool (App Coq.ZArith.BinInt.Z.le Z0 b_222222) (App Coq.ZArith.BinInt.Z.gt Z0 b_222222)) (App Euclid a_22222 b_222222)) (CaseMatch (App Coq.ZArith.ZArith_dec.Z_le_gt_dec Z0 b_222222)) (CaseBranches (Lambda l_22222222222 (App Coq.ZArith.BinInt.Z.le Z0 b_222222) (App Coq.ZArith.Znumtheory.euclid_rec a_22222 b_222222 b_222222 l_22222222222 (App Zpos xH) Z0 a_22222 Z0 (App Zpos xH) Coq_ZArith_Znumtheory_extended_euclid_algorithm_euclid_subproof_2222222 Coq_ZArith_Znumtheory_extended_euclid_algorithm_euclid_subproof0_22222222 (Lambda d_222222222222 Z (Lambda H_2222222222222 (App Zis_gcd a_22222 b_222222 d_222222222222) H_2222222222222)))) (Lambda g_22222222222 (App Coq.ZArith.BinInt.Z.gt Z0 b_222222) (App Coq.ZArith.Znumtheory.euclid_rec a_22222 b_222222 (App Coq.ZArith.BinIntDef.Z.opp b_222222) (App Coq_ZArith_Znumtheory_extended_euclid_algorithm_euclid_subproof1_222222222 g_22222222222) (App Zpos xH) Z0 a_22222 Z0 (App Zneg xH) Coq_ZArith_Znumtheory_extended_euclid_algorithm_euclid_subproof2_2222222222 (App eq_refl Z (App Coq.ZArith.BinIntDef.Z.opp b_222222)) (Lambda d_222222222222 Z (Lambda H_2222222222222 (App Zis_gcd a_22222 (App Coq.ZArith.BinIntDef.Z.opp b_222222) d_222222222222) (App Coq.ZArith.Znumtheory.Zis_gcd_sym b_222222 a_22222 d_222222222222 (App Coq.ZArith.Znumtheory.Zis_gcd_minus a_22222 b_222222 d_222222222222 H_2222222222222))))))))) (App Coq.Logic.Decidable.dec_not_not (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Zpos xH) a_22222) (App Coq.ZArith.BinIntDef.Z.mul Z0 b_222222)) a_22222) (App Coq.ZArith.BinInt.Z.eq_decidable (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Zpos xH) a_22222) (App Coq.ZArith.BinIntDef.Z.mul Z0 b_222222)) a_22222) (Lambda H_2222222222 (App Coq.Init.Logic.not (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Zpos xH) a_22222) (App Coq.ZArith.BinIntDef.Z.mul Z0 b_222222)) a_22222)) (App Coq.omega.OmegaLemmas.fast_Zmult_comm (App Zpos xH) a_22222 (Lambda x_22222222222 Z (Prod out_222222222221 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add x_22222222222 (App Coq.ZArith.BinIntDef.Z.mul Z0 b_222222)) (App Coq.ZArith.BinIntDef.Z.opp a_22222)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zmult_comm Z0 b_222222 (Lambda x_22222222222 Z (Prod out_222222222221 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul a_22222 (App Zpos xH)) x_22222222222) (App Coq.ZArith.BinIntDef.Z.opp a_22222)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 a_22222 (Lambda x_22222222222 Z (Prod out_222222222221 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul a_22222 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.mul b_222222 Z0)) x_22222222222) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_comm (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul a_22222 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.mul b_222222 Z0)) (App Coq.ZArith.BinIntDef.Z.mul a_22222 (App Zneg xH)) (Lambda x_22222222222 Z (Prod out_222222222221 (App Coq.ZArith.BinInt.Zne x_22222222222 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_assoc (App Coq.ZArith.BinIntDef.Z.mul a_22222 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.mul a_22222 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.mul b_222222 Z0) (Lambda x_22222222222 Z (Prod out_222222222221 (App Coq.ZArith.BinInt.Zne x_22222222222 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor4 a_22222 (App Zneg xH) (App Zpos xH) (Lambda x_22222222222 Z (Prod out_222222222221 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add x_22222222222 (App Coq.ZArith.BinIntDef.Z.mul b_222222 Z0)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor6 (App Coq.ZArith.BinIntDef.Z.mul b_222222 Z0) (Lambda x_22222222222 Z (Prod out_222222222221 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul a_22222 Z0) x_22222222222) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 a_22222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul b_222222 Z0) Z0) (Lambda x_22222222222 Z (Prod out_222222222221 (App Coq.ZArith.BinInt.Zne x_22222222222 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 b_222222 Z0 (Lambda x_22222222222 Z (Prod out_222222222221 (App Coq.ZArith.BinInt.Zne x_22222222222 Z0) False)) (Lambda Omega0_22222222222 (App Coq.ZArith.BinInt.Zne Z0 Z0) (App Omega0_22222222222 (App eq_refl Z Z0))))))))))) (App Coq.ZArith.auxiliary.Zne_left (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Zpos xH) a_22222) (App Coq.ZArith.BinIntDef.Z.mul Z0 b_222222)) a_22222 H_2222222222)))))) (Lambda g_222222222 (App Coq.ZArith.BinInt.Z.gt Z0 b_222222) (App Coq.Logic.Decidable.dec_not_not (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.opp b_222222)) (App Coq.ZArith.BinInt.Z.le_decidable Z0 (App Coq.ZArith.BinIntDef.Z.opp b_222222)) (Lambda H_2222222222 (App Coq.Init.Logic.not (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.opp b_222222))) (App (Lambda H_22222222222 (App Coq.ZArith.BinInt.Z.gt Z0 (App Coq.ZArith.BinIntDef.Z.opp b_222222)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 b_222222 (Lambda x_222222222222 Z (Prod out_2222222222221 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.add (App Zneg xH) x_222222222222)) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_comm (App Zneg xH) (App Coq.ZArith.BinIntDef.Z.mul b_222222 (App Zneg xH)) (Lambda x_222222222222 Z (Prod out_2222222222221 (App Coq.ZArith.BinInt.Z.le Z0 x_222222222222) False)) (Lambda Omega1_222222222222 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul b_222222 (App Zneg xH)) (App Zneg xH))) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 b_222222 (Lambda x_2222222222222 Z (Prod out_22222222222221 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.add (App Zneg xH) (App Coq.ZArith.BinIntDef.Z.opp x_2222222222222))) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_mult_distr_r b_222222 (App Zneg xH) (Lambda x_2222222222222 Z (Prod out_22222222222221 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.add (App Zneg xH) x_2222222222222)) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_comm (App Zneg xH) (App Coq.ZArith.BinIntDef.Z.mul b_222222 (App Zpos xH)) (Lambda x_2222222222222 Z (Prod out_22222222222221 (App Coq.ZArith.BinInt.Z.le Z0 x_2222222222222) False)) (Lambda Omega0_2222222222222 (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul b_222222 (App Zpos xH)) (App Zneg xH))) (App Coq.omega.OmegaLemmas.fast_OMEGA13 b_222222 (App Zneg xH) (App Zneg xH) xH (Lambda x_22222222222222 Z (Prod out_222222222222221 (App Coq.ZArith.BinInt.Z.le Z0 x_22222222222222) False)) (Cast (Cast (Lambda H_22222222222222 (App Coq.Init.Logic.not (App eq comparison Gt Gt)) (App Coq.Init.Logic.False_ind False (App H_22222222222222 (App eq_refl comparison Gt)))) REVERTcast (Prod out_22222222222221 (App Coq.Init.Logic.not (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare Z0 (App Zneg (App xO xH))) Gt)) False)) REVERTcast (Prod out_22222222222221 (App Coq.ZArith.BinInt.Z.le Z0 (App Zneg (App xO xH))) False)) (App Coq.omega.OmegaLemmas.OMEGA2 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul b_222222 (App Zpos xH)) (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul b_222222 (App Zneg xH)) (App Zneg xH)) Omega0_2222222222222 Omega1_222222222222))))) (App Coq.ZArith.auxiliary.Zgt_left Z0 (App Coq.ZArith.BinIntDef.Z.opp b_222222) H_22222222222)))) (App Coq.ZArith.auxiliary.Zgt_left Z0 b_222222 g_222222222))) (App Coq.ZArith.Zorder.Znot_le_gt Z0 (App Coq.ZArith.BinIntDef.Z.opp b_222222) H_2222222222))))))) (App Coq.Logic.Decidable.dec_not_not (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul Z0 a_22222) (App Coq.ZArith.BinIntDef.Z.mul (App Zpos xH) b_222222)) b_222222) (App Coq.ZArith.BinInt.Z.eq_decidable (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul Z0 a_22222) (App Coq.ZArith.BinIntDef.Z.mul (App Zpos xH) b_222222)) b_222222) (Lambda H_22222222 (App Coq.Init.Logic.not (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul Z0 a_22222) (App Coq.ZArith.BinIntDef.Z.mul (App Zpos xH) b_222222)) b_222222)) (App Coq.omega.OmegaLemmas.fast_Zmult_comm Z0 a_22222 (Lambda x_222222222 Z (Prod out_2222222221 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add x_222222222 (App Coq.ZArith.BinIntDef.Z.mul (App Zpos xH) b_222222)) (App Coq.ZArith.BinIntDef.Z.opp b_222222)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zmult_comm (App Zpos xH) b_222222 (Lambda x_222222222 Z (Prod out_2222222221 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul a_22222 Z0) x_222222222) (App Coq.ZArith.BinIntDef.Z.opp b_222222)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 b_222222 (Lambda x_222222222 Z (Prod out_2222222221 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul a_22222 Z0) (App Coq.ZArith.BinIntDef.Z.mul b_222222 (App Zpos xH))) x_222222222) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_assoc_reverse (App Coq.ZArith.BinIntDef.Z.mul a_22222 Z0) (App Coq.ZArith.BinIntDef.Z.mul b_222222 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.mul b_222222 (App Zneg xH)) (Lambda x_222222222 Z (Prod out_2222222221 (App Coq.ZArith.BinInt.Zne x_222222222 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor4 b_222222 (App Zpos xH) (App Zneg xH) (Lambda x_222222222 Z (Prod out_2222222221 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul a_22222 Z0) x_222222222) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor6 (App Coq.ZArith.BinIntDef.Z.mul b_222222 Z0) (Lambda x_222222222 Z (Prod out_2222222221 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul a_22222 Z0) x_222222222) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 a_22222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul b_222222 Z0) Z0) (Lambda x_222222222 Z (Prod out_2222222221 (App Coq.ZArith.BinInt.Zne x_222222222 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 b_222222 Z0 (Lambda x_222222222 Z (Prod out_2222222221 (App Coq.ZArith.BinInt.Zne x_222222222 Z0) False)) (Lambda Omega0_222222222 (App Coq.ZArith.BinInt.Zne Z0 Z0) (App Omega0_222222222 (App eq_refl Z Z0)))))))))) (App Coq.ZArith.auxiliary.Zne_left (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul Z0 a_22222) (App Coq.ZArith.BinIntDef.Z.mul (App Zpos xH) b_222222)) b_222222 H_22222222)))))) (App Coq.Logic.Decidable.dec_not_not (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Zpos xH) a_22222) (App Coq.ZArith.BinIntDef.Z.mul Z0 b_222222)) a_22222) (App Coq.ZArith.BinInt.Z.eq_decidable (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Zpos xH) a_22222) (App Coq.ZArith.BinIntDef.Z.mul Z0 b_222222)) a_22222) (Lambda H_2222222 (App Coq.Init.Logic.not (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Zpos xH) a_22222) (App Coq.ZArith.BinIntDef.Z.mul Z0 b_222222)) a_22222)) (App Coq.omega.OmegaLemmas.fast_Zmult_comm (App Zpos xH) a_22222 (Lambda x_22222222 Z (Prod out_222222221 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add x_22222222 (App Coq.ZArith.BinIntDef.Z.mul Z0 b_222222)) (App Coq.ZArith.BinIntDef.Z.opp a_22222)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zmult_comm Z0 b_222222 (Lambda x_22222222 Z (Prod out_222222221 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul a_22222 (App Zpos xH)) x_22222222) (App Coq.ZArith.BinIntDef.Z.opp a_22222)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zopp_eq_mult_neg_1 a_22222 (Lambda x_22222222 Z (Prod out_222222221 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul a_22222 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.mul b_222222 Z0)) x_22222222) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_comm (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul a_22222 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.mul b_222222 Z0)) (App Coq.ZArith.BinIntDef.Z.mul a_22222 (App Zneg xH)) (Lambda x_22222222 Z (Prod out_222222221 (App Coq.ZArith.BinInt.Zne x_22222222 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zplus_assoc (App Coq.ZArith.BinIntDef.Z.mul a_22222 (App Zneg xH)) (App Coq.ZArith.BinIntDef.Z.mul a_22222 (App Zpos xH)) (App Coq.ZArith.BinIntDef.Z.mul b_222222 Z0) (Lambda x_22222222 Z (Prod out_222222221 (App Coq.ZArith.BinInt.Zne x_22222222 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor4 a_22222 (App Zneg xH) (App Zpos xH) (Lambda x_22222222 Z (Prod out_222222221 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add x_22222222 (App Coq.ZArith.BinIntDef.Z.mul b_222222 Z0)) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor6 (App Coq.ZArith.BinIntDef.Z.mul b_222222 Z0) (Lambda x_22222222 Z (Prod out_222222221 (App Coq.ZArith.BinInt.Zne (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul a_22222 Z0) x_22222222) Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 a_22222 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul b_222222 Z0) Z0) (Lambda x_22222222 Z (Prod out_222222221 (App Coq.ZArith.BinInt.Zne x_22222222 Z0) False)) (App Coq.omega.OmegaLemmas.fast_Zred_factor5 b_222222 Z0 (Lambda x_22222222 Z (Prod out_222222221 (App Coq.ZArith.BinInt.Zne x_22222222 Z0) False)) (Lambda Omega0_22222222 (App Coq.ZArith.BinInt.Zne Z0 Z0) (App Omega0_22222222 (App eq_refl Z Z0))))))))))) (App Coq.ZArith.auxiliary.Zne_left (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Zpos xH) a_22222) (App Coq.ZArith.BinIntDef.Z.mul Z0 b_222222)) a_22222 H_2222222)))))))) (Definition Coq.ZArith.Znumtheory.Zis_gcd_bezout (Lambda a_2 Z (Lambda b_22 Z (Lambda d_222 Z (Lambda Hgcd_2222 (App Zis_gcd a_2 b_22 d_222) (App Coq.ZArith.Znumtheory.Euclid_ind a_2 b_22 (Lambda e_22222 (App Euclid a_2 b_22) (App Bezout a_2 b_22 d_222)) (Lambda u_22222 Z (Lambda v_222222 Z (Lambda d0_2222222 Z (Lambda e_22222222 (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul u_22222 a_2) (App Coq.ZArith.BinIntDef.Z.mul v_222222 b_22)) d0_2222222) (Lambda g_222222222 (App Zis_gcd a_2 b_22 d0_2222222) (App (Lambda H_2222222222 (App or (App eq Z d_222 d0_2222222) (App eq Z d_222 (App Coq.ZArith.BinIntDef.Z.opp d0_2222222))) (App Coq.Init.Logic.or_ind (App eq Z d_222 d0_2222222) (App eq Z d_222 (App Coq.ZArith.BinIntDef.Z.opp d0_2222222)) (App Bezout a_2 b_22 d_222) (Lambda H_22222222222 (App eq Z d_222 d0_2222222) (App Bezout_intro a_2 b_22 d_222 u_22222 v_222222 (App Coq.Init.Logic.eq_ind_r Z d0_2222222 (Lambda d_222222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul u_22222 a_2) (App Coq.ZArith.BinIntDef.Z.mul v_222222 b_22)) d_222222222222)) e_22222222 d_222 H_22222222222))) (Lambda H_22222222222 (App eq Z d_222 (App Coq.ZArith.BinIntDef.Z.opp d0_2222222)) (App Bezout_intro a_2 b_22 d_222 (App Coq.ZArith.BinIntDef.Z.opp u_22222) (App Coq.ZArith.BinIntDef.Z.opp v_222222) (App Coq.Init.Logic.eq_ind_r Z (App Coq.ZArith.BinIntDef.Z.opp d0_2222222) (Lambda d_222222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp u_22222) a_2) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp v_222222) b_22)) d_222222222222)) (App Coq.Init.Logic.eq_ind Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul u_22222 a_2) (App Coq.ZArith.BinIntDef.Z.mul v_222222 b_22)) (Lambda d0_222222222222 Z (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp u_22222) a_2) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp v_222222) b_22)) (App Coq.ZArith.BinIntDef.Z.opp d0_222222222222))) (Cast (LetIn hyp_list_222222222223 (App nil (App prod (App PExpr Z) (App PExpr Z))) (App list (App prod (App PExpr Z) (App PExpr Z))) (LetIn fv_list_2222222222233 (App cons Z u_22222 (App cons Z a_2 (App cons Z v_222222 (App cons Z b_22 (App nil Z))))) (App list Z) (App Coq.setoid_ring.ZArithRing.Zr_ring_lemma1 Coq.setoid_ring.Ring_tac.ring_subst_niter fv_list_2222222222233 hyp_list_222222222223 (App PEadd Z (App PEmul Z (App PEopp Z (App PEX Z xH)) (App PEX Z (App xO xH))) (App PEmul Z (App PEopp Z (App PEX Z (App xI xH))) (App PEX Z (App xO (App xO xH))))) (App PEopp Z (App PEadd Z (App PEmul Z (App PEX Z xH) (App PEX Z (App xO xH))) (App PEmul Z (App PEX Z (App xI xH)) (App PEX Z (App xO (App xO xH)))))) I (Cast (App eq_refl bool true) VMcast (App eq bool (LetIn lmp_22222222222333 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem hyp_list_222222222223) (App list (App prod (App prod Z Mon) (App Pol Z))) (App Coq.setoid_ring.Ring_polynom.Peq Z Coq.ZArith.Zbool.Zeq_bool (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter lmp_22222222222333 (App PEadd Z (App PEmul Z (App PEopp Z (App PEX Z xH)) (App PEX Z (App xO xH))) (App PEmul Z (App PEopp Z (App PEX Z (App xI xH))) (App PEX Z (App xO (App xO xH)))))) (App Coq.setoid_ring.Ring_polynom.norm_subst Z Z0 (App Zpos xH) Coq.ZArith.BinIntDef.Z.add Coq.ZArith.BinIntDef.Z.mul Coq.ZArith.BinIntDef.Z.sub Coq.ZArith.BinIntDef.Z.opp Coq.ZArith.Zbool.Zeq_bool Coq.ZArith.BinIntDef.Z.quotrem Coq.setoid_ring.Ring_tac.ring_subst_niter lmp_22222222222333 (App PEopp Z (App PEadd Z (App PEmul Z (App PEX Z xH) (App PEX Z (App xO xH))) (App PEmul Z (App PEX Z (App xI xH)) (App PEX Z (App xO (App xO xH))))))))) true))))) REVERTcast (App eq Z (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp u_22222) a_2) (App Coq.ZArith.BinIntDef.Z.mul (App Coq.ZArith.BinIntDef.Z.opp v_222222) b_22)) (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul u_22222 a_2) (App Coq.ZArith.BinIntDef.Z.mul v_222222 b_22))))) d0_2222222 e_22222222) d_222 H_22222222222))) H_2222222222)) (App Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign a_2 b_22 d_222 d0_2222222 Hgcd_2222 g_222222222))))))) (App Coq.ZArith.Znumtheory.euclid a_2 b_22))))))) 