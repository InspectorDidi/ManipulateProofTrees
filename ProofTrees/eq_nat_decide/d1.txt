(Definition Coq.Arith.EqNat.eq_nat_decide (Lambda gen_var_12 nat (App Coq.Init.Datatypes.nat_rec (Lambda gen_var_2 nat (Prod gen_var_3 nat (App sumbool (App Coq.Arith.EqNat.eq_nat gen_var_2 gen_var_3) (App Coq.Init.Logic.not (App Coq.Arith.EqNat.eq_nat gen_var_2 gen_var_3))))) (Lambda gen_var_6 nat (Case 0 (Lambda gen_var_5 nat (App sumbool (App Coq.Arith.EqNat.eq_nat O gen_var_5) (App Coq.Init.Logic.not (App Coq.Arith.EqNat.eq_nat O gen_var_5)))) (CaseMatch gen_var_4) (CaseBranches (Cast (App left True (App Coq.Init.Logic.not True) I) REVERTcast (App sumbool (App Coq.Arith.EqNat.eq_nat O O) (App Coq.Init.Logic.not (App Coq.Arith.EqNat.eq_nat O O)))) (Lambda gen_var_6 nat (Cast (App right False (App Coq.Init.Logic.not False) (Cast (Lambda gen_var_7 False gen_var_7) REVERTcast (App Coq.Init.Logic.not False))) REVERTcast (App sumbool (App Coq.Arith.EqNat.eq_nat O (App S gen_var_6)) (App Coq.Init.Logic.not (App Coq.Arith.EqNat.eq_nat O (App S gen_var_6))))))))) (Lambda gen_var_12 nat (Lambda gen_var_9 (Prod gen_var_10 nat (App sumbool (App Coq.Arith.EqNat.eq_nat gen_var_8 gen_var_10) (App Coq.Init.Logic.not (App Coq.Arith.EqNat.eq_nat gen_var_8 gen_var_10)))) (Lambda gen_var_14 nat (Case 0 (Lambda gen_var_12 nat (App sumbool (App Coq.Arith.EqNat.eq_nat (App S gen_var_12) gen_var_12) (App Coq.Init.Logic.not (App Coq.Arith.EqNat.eq_nat (App S gen_var_12) gen_var_12)))) (CaseMatch gen_var_11) (CaseBranches (Cast (App right False (App Coq.Init.Logic.not False) (Cast (Lambda gen_var_13 False gen_var_13) REVERTcast (App Coq.Init.Logic.not False))) REVERTcast (App sumbool (App Coq.Arith.EqNat.eq_nat (App S gen_var_12) O) (App Coq.Init.Logic.not (App Coq.Arith.EqNat.eq_nat (App S gen_var_12) O)))) (Lambda gen_var_14 nat (Cast (App gen_var_9 gen_var_14) REVERTcast (App sumbool (App Coq.Arith.EqNat.eq_nat (App S gen_var_12) (App S gen_var_14)) (App Coq.Init.Logic.not (App Coq.Arith.EqNat.eq_nat (App S gen_var_12) (App S gen_var_14))))))))))) gen_var_12))) 