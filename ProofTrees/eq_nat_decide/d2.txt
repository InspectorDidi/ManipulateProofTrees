(Definition Coq.Init.Datatypes.nat_rec (Lambda gen_var_2 (Prod gen_var_3 nat (Sort Set)) (App Coq.Init.Datatypes.nat_rect gen_var_2))) (Definition Coq.Arith.EqNat.eq_nat (Fix (Functions (App gen_var_6 0 (Prod gen_var_7 nat (Prod gen_var_8 nat (Sort Prop))) (Lambda gen_var_13 nat (Lambda gen_var_15 nat (Case 0 (Lambda gen_var_11 nat (Sort Prop)) (CaseMatch gen_var_11) (CaseBranches (Case 0 (Lambda gen_var_12 nat (Sort Prop)) (CaseMatch gen_var_12) (CaseBranches True (Lambda gen_var_13 nat False))) (Lambda gen_var_14 nat (Case 0 (Lambda gen_var_15 nat (Sort Prop)) (CaseMatch gen_var_15) (CaseBranches False (Lambda gen_var_16 nat (App gen_var_6 gen_var_14 gen_var_16))))))))))) 0)) (Definition Coq.Init.Logic.not (Lambda gen_var_17 (Sort Prop) (Prod Anonymous gen_var_17 False))) (Definition Coq.Arith.EqNat.eq_nat_decide (Lambda gen_var_27 nat (App Coq.Init.Datatypes.nat_rec (Lambda gen_var_13 nat (Prod gen_var_15 nat (App sumbool (App Coq.Arith.EqNat.eq_nat gen_var_13 gen_var_15) (App Coq.Init.Logic.not (App Coq.Arith.EqNat.eq_nat gen_var_13 gen_var_15))))) (Lambda gen_var_21 nat (Case 0 (Lambda gen_var_20 nat (App sumbool (App Coq.Arith.EqNat.eq_nat O gen_var_20) (App Coq.Init.Logic.not (App Coq.Arith.EqNat.eq_nat O gen_var_20)))) (CaseMatch gen_var_19) (CaseBranches (Cast (App left True (App Coq.Init.Logic.not True) I) REVERTcast (App sumbool (App Coq.Arith.EqNat.eq_nat O O) (App Coq.Init.Logic.not (App Coq.Arith.EqNat.eq_nat O O)))) (Lambda gen_var_21 nat (Cast (App right False (App Coq.Init.Logic.not False) (Cast (Lambda gen_var_22 False gen_var_22) REVERTcast (App Coq.Init.Logic.not False))) REVERTcast (App sumbool (App Coq.Arith.EqNat.eq_nat O (App S gen_var_21)) (App Coq.Init.Logic.not (App Coq.Arith.EqNat.eq_nat O (App S gen_var_21))))))))) (Lambda gen_var_27 nat (Lambda gen_var_24 (Prod gen_var_25 nat (App sumbool (App Coq.Arith.EqNat.eq_nat gen_var_23 gen_var_25) (App Coq.Init.Logic.not (App Coq.Arith.EqNat.eq_nat gen_var_23 gen_var_25)))) (Lambda gen_var_29 nat (Case 0 (Lambda gen_var_27 nat (App sumbool (App Coq.Arith.EqNat.eq_nat (App S gen_var_27) gen_var_27) (App Coq.Init.Logic.not (App Coq.Arith.EqNat.eq_nat (App S gen_var_27) gen_var_27)))) (CaseMatch gen_var_26) (CaseBranches (Cast (App right False (App Coq.Init.Logic.not False) (Cast (Lambda gen_var_28 False gen_var_28) REVERTcast (App Coq.Init.Logic.not False))) REVERTcast (App sumbool (App Coq.Arith.EqNat.eq_nat (App S gen_var_27) O) (App Coq.Init.Logic.not (App Coq.Arith.EqNat.eq_nat (App S gen_var_27) O)))) (Lambda gen_var_29 nat (Cast (App gen_var_24 gen_var_29) REVERTcast (App sumbool (App Coq.Arith.EqNat.eq_nat (App S gen_var_27) (App S gen_var_29)) (App Coq.Init.Logic.not (App Coq.Arith.EqNat.eq_nat (App S gen_var_27) (App S gen_var_29))))))))))) gen_var_27))) 