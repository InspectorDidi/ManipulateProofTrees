(Definition Coq.ZArith.BinInt.Z.gt (Lambda gen_var_3 Z (Lambda gen_var_4 Z (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare gen_var_3 gen_var_4) Gt)))) (Definition Coq.ZArith.BinIntDef.Z.add (Lambda gen_var_12 Z (Lambda gen_var_18 Z (Case 0 (Lambda gen_var_12 Z Z) (CaseMatch gen_var_12) (CaseBranches gen_var_11 (Lambda gen_var_13 positive (Case 0 (Lambda gen_var_14 Z Z) (CaseMatch gen_var_14) (CaseBranches gen_var_12 (Lambda gen_var_15 positive (App Zpos (App Coq.PArith.BinPosDef.Pos.add gen_var_13 gen_var_15))) (Lambda gen_var_16 positive (App Coq.ZArith.BinIntDef.Z.pos_sub gen_var_13 gen_var_16))))) (Lambda gen_var_17 positive (Case 0 (Lambda gen_var_18 Z Z) (CaseMatch gen_var_18) (CaseBranches gen_var_12 (Lambda gen_var_19 positive (App Coq.ZArith.BinIntDef.Z.pos_sub gen_var_19 gen_var_17)) (Lambda gen_var_20 positive (App Zneg (App Coq.PArith.BinPosDef.Pos.add gen_var_17 gen_var_20))))))))))) (Definition Coq.ZArith.BinIntDef.Z.mul (Lambda gen_var_23 Z (Lambda gen_var_29 Z (Case 0 (Lambda gen_var_23 Z Z) (CaseMatch gen_var_23) (CaseBranches Z0 (Lambda gen_var_24 positive (Case 0 (Lambda gen_var_25 Z Z) (CaseMatch gen_var_25) (CaseBranches Z0 (Lambda gen_var_26 positive (App Zpos (App Coq.PArith.BinPosDef.Pos.mul gen_var_24 gen_var_26))) (Lambda gen_var_27 positive (App Zneg (App Coq.PArith.BinPosDef.Pos.mul gen_var_24 gen_var_27)))))) (Lambda gen_var_28 positive (Case 0 (Lambda gen_var_29 Z Z) (CaseMatch gen_var_29) (CaseBranches Z0 (Lambda gen_var_30 positive (App Zneg (App Coq.PArith.BinPosDef.Pos.mul gen_var_28 gen_var_30))) (Lambda gen_var_31 positive (App Zpos (App Coq.PArith.BinPosDef.Pos.mul gen_var_28 gen_var_31))))))))))) (Definition Coq.ZArith.BinInt.Z.le (Lambda gen_var_32 Z (Lambda gen_var_33 Z (App Coq.Init.Logic.not (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare gen_var_32 gen_var_33) Gt))))) (Definition Coq.ZArith.BinInt.Z.lt (Lambda gen_var_34 Z (Lambda gen_var_35 Z (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare gen_var_34 gen_var_35) Lt)))) (Definition Coq.ZArith.BinIntDef.Z.div_eucl (Lambda gen_var_38 Z (Lambda gen_var_50 Z (Case 0 (Lambda gen_var_38 Z (App prod Z Z)) (CaseMatch gen_var_38) (CaseBranches (App pair Z Z Z0 Z0) (Lambda gen_var_39 positive (Case 0 (Lambda gen_var_40 Z (App prod Z Z)) (CaseMatch gen_var_40) (CaseBranches (App pair Z Z Z0 Z0) (Lambda gen_var_41 positive (App Coq.ZArith.BinIntDef.Z.pos_div_eucl gen_var_39 gen_var_40)) (Lambda gen_var_42 positive (Case 2 (Lambda gen_var_43 (App prod Z Z) (App prod Z Z)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.pos_div_eucl gen_var_39 (App Zpos gen_var_42))) (CaseBranches (Lambda gen_var_44 Z (Lambda gen_var_46 Z (Case 0 (Lambda gen_var_46 Z (App prod Z Z)) (CaseMatch gen_var_46) (CaseBranches (App pair Z Z (App Coq.ZArith.BinIntDef.Z.opp gen_var_44) Z0) (Lambda gen_var_47 positive (App pair Z Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add gen_var_44 (App Zpos xH))) (App Coq.ZArith.BinIntDef.Z.add gen_var_40 gen_var_46))) (Lambda gen_var_48 positive (App pair Z Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add gen_var_44 (App Zpos xH))) (App Coq.ZArith.BinIntDef.Z.add gen_var_40 gen_var_46))))))))))))) (Lambda gen_var_49 positive (Case 0 (Lambda gen_var_50 Z (App prod Z Z)) (CaseMatch gen_var_50) (CaseBranches (App pair Z Z Z0 Z0) (Lambda gen_var_57 positive (Case 2 (Lambda gen_var_52 (App prod Z Z) (App prod Z Z)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.pos_div_eucl gen_var_49 gen_var_50)) (CaseBranches (Lambda gen_var_53 Z (Lambda gen_var_55 Z (Case 0 (Lambda gen_var_55 Z (App prod Z Z)) (CaseMatch gen_var_55) (CaseBranches (App pair Z Z (App Coq.ZArith.BinIntDef.Z.opp gen_var_53) Z0) (Lambda gen_var_56 positive (App pair Z Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add gen_var_53 (App Zpos xH))) (App Coq.ZArith.BinIntDef.Z.sub gen_var_50 gen_var_55))) (Lambda gen_var_57 positive (App pair Z Z (App Coq.ZArith.BinIntDef.Z.opp (App Coq.ZArith.BinIntDef.Z.add gen_var_53 (App Zpos xH))) (App Coq.ZArith.BinIntDef.Z.sub gen_var_50 gen_var_55)))))))))) (Lambda gen_var_58 positive (Case 2 (Lambda gen_var_59 (App prod Z Z) (App prod Z Z)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.pos_div_eucl gen_var_49 (App Zpos gen_var_58))) (CaseBranches (Lambda gen_var_60 Z (Lambda gen_var_61 Z (App pair Z Z gen_var_60 (App Coq.ZArith.BinIntDef.Z.opp gen_var_61))))))))))))))) (Definition Coq.ZArith.Zdiv.Z_div_mod (Lambda gen_var_62 Z (Lambda gen_var_63 Z (App (Lambda gen_var_64 (App Coq.Init.Logic.iff (App Coq.ZArith.BinInt.Z.gt gen_var_63 Z0) (App Coq.ZArith.BinInt.Z.lt Z0 gen_var_63)) (App Coq.Classes.Morphisms.subrelation_proper (Prod gen_var_65 (Sort Prop) (Prod gen_var_66 (Sort Prop) (Sort Prop))) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Prod Anonymous (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff)) Coq.Program.Basics.impl Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism (App Coq.Classes.Morphisms.respectful (Sort Prop) (Prod gen_var_68 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Prod gen_var_69 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation)) (App Coq.ZArith.BinInt.Z.gt gen_var_63 Z0) (App Coq.ZArith.BinInt.Z.lt Z0 gen_var_63) gen_var_64 (Case 2 (Lambda gen_var_70 (App prod Z Z) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.div_eucl gen_var_62 gen_var_63)) (CaseBranches (Lambda gen_var_71 Z (Lambda gen_var_72 Z (App and (App eq Z gen_var_62 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_63 gen_var_71) gen_var_72)) (App and (App Coq.ZArith.BinInt.Z.le Z0 gen_var_72) (App Coq.ZArith.BinInt.Z.lt gen_var_72 gen_var_63))))))) (Case 2 (Lambda gen_var_73 (App prod Z Z) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.div_eucl gen_var_62 gen_var_63)) (CaseBranches (Lambda gen_var_74 Z (Lambda gen_var_75 Z (App and (App eq Z gen_var_62 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_63 gen_var_74) gen_var_75)) (App and (App Coq.ZArith.BinInt.Z.le Z0 gen_var_75) (App Coq.ZArith.BinInt.Z.lt gen_var_75 gen_var_63))))))) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (Case 2 (Lambda gen_var_76 (App prod Z Z) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.div_eucl gen_var_62 gen_var_63)) (CaseBranches (Lambda gen_var_77 Z (Lambda gen_var_78 Z (App and (App eq Z gen_var_62 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_63 gen_var_77) gen_var_78)) (App and (App Coq.ZArith.BinInt.Z.le Z0 gen_var_78) (App Coq.ZArith.BinInt.Z.lt gen_var_78 gen_var_63)))))))))) (App Coq.ZArith.BinInt.Z.gt_lt_iff gen_var_63 Z0) (Lambda gen_var_110 (App Coq.ZArith.BinInt.Z.lt Z0 gen_var_63) (LetIn gen_var_80 (App (Case 0 (Lambda gen_var_81 Z (Prod gen_var_82 (App Coq.ZArith.BinInt.Z.lt Z0 gen_var_81) (App Coq.Init.Logic.not (App eq Z gen_var_81 Z0)))) (CaseMatch gen_var_63) (CaseBranches (Lambda gen_var_83 (App Coq.ZArith.BinInt.Z.lt Z0 Z0) (LetIn gen_var_89 (Case 2 (Lambda gen_var_85 comparison (Lambda Anonymous (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare Z0 Z0) gen_var_85) (Prod Anonymous (App eq comparison gen_var_85 Lt) (App Coq.Init.Logic.not (App eq Z Z0 Z0))))) (CaseMatch gen_var_83) (CaseBranches (Lambda gen_var_89 (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare Z0 Z0) Lt) (App (Lambda gen_var_89 (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare Z0 Z0) Lt) (LetIn gen_var_90 (App Coq.Init.Logic.eq_ind comparison (App Coq.ZArith.BinIntDef.Z.compare Z0 Z0) (Lambda gen_var_91 comparison (Case 0 (Lambda gen_var_92 comparison (Sort Prop)) (CaseMatch gen_var_91) (CaseBranches True False False))) I Lt gen_var_89) False (App Coq.Init.Logic.False_ind (App Coq.Init.Logic.not (App eq Z Z0 Z0)) gen_var_90))) gen_var_89)))) (Prod Anonymous (App eq comparison Lt Lt) (App Coq.Init.Logic.not (App eq Z Z0 Z0))) (App gen_var_89 (App eq_refl comparison Lt)))) (Lambda gen_var_94 positive (Lambda gen_var_95 (App Coq.ZArith.BinInt.Z.lt Z0 (App Zpos gen_var_94)) (Cast (Lambda gen_var_96 (App eq Z (App Zpos gen_var_94) Z0) (LetIn gen_var_102 (Case 2 (Lambda gen_var_98 Z (Lambda Anonymous (App eq Z (App Zpos gen_var_94) gen_var_98) (Prod Anonymous (App eq Z gen_var_98 Z0) False))) (CaseMatch gen_var_96) (CaseBranches (Lambda gen_var_102 (App eq Z (App Zpos gen_var_94) Z0) (App (Lambda gen_var_102 (App eq Z (App Zpos gen_var_94) Z0) (LetIn gen_var_103 (App Coq.Init.Logic.eq_ind Z (App Zpos gen_var_94) (Lambda gen_var_104 Z (Case 0 (Lambda gen_var_105 Z (Sort Prop)) (CaseMatch gen_var_104) (CaseBranches False (Lambda Anonymous positive True) (Lambda Anonymous positive False)))) I Z0 gen_var_102) False (App Coq.Init.Logic.False_ind False gen_var_103))) gen_var_102)))) (Prod Anonymous (App eq Z Z0 Z0) False) (App gen_var_102 (App eq_refl Z Z0)))) REVERTcast (App Coq.Init.Logic.not (App eq Z (App Zpos gen_var_94) Z0))))) (Lambda gen_var_109 positive (Lambda gen_var_110 (App Coq.ZArith.BinInt.Z.lt Z0 (App Zneg gen_var_109)) (LetIn gen_var_116 (Case 2 (Lambda gen_var_112 comparison (Lambda Anonymous (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare Z0 (App Zneg gen_var_109)) gen_var_112) (Prod Anonymous (App eq comparison gen_var_112 Lt) (App Coq.Init.Logic.not (App eq Z (App Zneg gen_var_109) Z0))))) (CaseMatch gen_var_110) (CaseBranches (Lambda gen_var_116 (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare Z0 (App Zneg gen_var_109)) Lt) (App (Lambda gen_var_116 (App eq comparison (App Coq.ZArith.BinIntDef.Z.compare Z0 (App Zneg gen_var_109)) Lt) (LetIn gen_var_117 (App Coq.Init.Logic.eq_ind comparison (App Coq.ZArith.BinIntDef.Z.compare Z0 (App Zneg gen_var_109)) (Lambda gen_var_118 comparison (Case 0 (Lambda gen_var_119 comparison (Sort Prop)) (CaseMatch gen_var_118) (CaseBranches False False True))) I Lt gen_var_116) False (App Coq.Init.Logic.False_ind (App Coq.Init.Logic.not (App eq Z (App Zneg gen_var_109) Z0)) gen_var_117))) gen_var_116)))) (Prod Anonymous (App eq comparison Lt Lt) (App Coq.Init.Logic.not (App eq Z (App Zneg gen_var_109) Z0))) (App gen_var_116 (App eq_refl comparison Lt))))))) gen_var_110) (App Coq.Init.Logic.not (App eq Z gen_var_63 Z0)) (App (Cast (LetIn gen_var_134 (App Coq.ZArith.BinIntDef.Z.div_eucl gen_var_62 gen_var_63) (App prod Z Z) (Case 2 (Lambda gen_var_134 (App prod Z Z) (Prod Anonymous (Case 2 (Lambda gen_var_124 (App prod Z Z) (Sort Prop)) (CaseMatch gen_var_124) (CaseBranches (Lambda gen_var_125 Z (Lambda gen_var_126 Z (App eq Z gen_var_62 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_63 gen_var_125) gen_var_126)))))) (Prod Anonymous (App and (App Coq.ZArith.BinInt.Z.le Z0 (Case 2 (Lambda gen_var_128 (App prod Z Z) Z) (CaseMatch gen_var_128) (CaseBranches (Lambda Anonymous Z (Lambda gen_var_130 Z gen_var_130))))) (App Coq.ZArith.BinInt.Z.lt (Case 2 (Lambda gen_var_131 (App prod Z Z) Z) (CaseMatch gen_var_131) (CaseBranches (Lambda Anonymous Z (Lambda gen_var_133 Z gen_var_133)))) gen_var_63)) (Case 2 (Lambda gen_var_134 (App prod Z Z) (Sort Prop)) (CaseMatch gen_var_134) (CaseBranches (Lambda gen_var_135 Z (Lambda gen_var_136 Z (App and (App eq Z gen_var_62 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_63 gen_var_135) gen_var_136)) (App and (App Coq.ZArith.BinInt.Z.le Z0 gen_var_136) (App Coq.ZArith.BinInt.Z.lt gen_var_136 gen_var_63)))))))))) (CaseMatch gen_var_134) (CaseBranches (Lambda gen_var_137 Z (Lambda gen_var_138 Z (Lambda gen_var_139 (App eq Z gen_var_62 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_63 gen_var_137) gen_var_138)) (Lambda gen_var_140 (App and (App Coq.ZArith.BinInt.Z.le Z0 gen_var_138) (App Coq.ZArith.BinInt.Z.lt gen_var_138 gen_var_63)) (App conj (App eq Z gen_var_62 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_63 gen_var_137) gen_var_138)) (App and (App Coq.ZArith.BinInt.Z.le Z0 gen_var_138) (App Coq.ZArith.BinInt.Z.lt gen_var_138 gen_var_63)) gen_var_139 gen_var_140)))))))) REVERTcast (Prod Anonymous (Case 2 (Lambda gen_var_142 (App prod Z Z) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.div_eucl gen_var_62 gen_var_63)) (CaseBranches (Lambda gen_var_143 Z (Lambda gen_var_144 Z (App eq Z gen_var_62 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_63 gen_var_143) gen_var_144)))))) (Prod Anonymous (App and (App Coq.ZArith.BinInt.Z.le Z0 (App Coq.ZArith.BinIntDef.Z.modulo gen_var_62 gen_var_63)) (App Coq.ZArith.BinInt.Z.lt (App Coq.ZArith.BinIntDef.Z.modulo gen_var_62 gen_var_63) gen_var_63)) (Case 2 (Lambda gen_var_146 (App prod Z Z) (Sort Prop)) (CaseMatch (App Coq.ZArith.BinIntDef.Z.div_eucl gen_var_62 gen_var_63)) (CaseBranches (Lambda gen_var_147 Z (Lambda gen_var_148 Z (App and (App eq Z gen_var_62 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_63 gen_var_147) gen_var_148)) (App and (App Coq.ZArith.BinInt.Z.le Z0 gen_var_148) (App Coq.ZArith.BinInt.Z.lt gen_var_148 gen_var_63)))))))))) (App Coq.ZArith.BinInt.Z.div_eucl_eq gen_var_62 gen_var_63 gen_var_80) (App Coq.ZArith.BinInt.Z.mod_pos_bound gen_var_62 gen_var_63 gen_var_110)))))))) (Definition Coq.ZArith.Zdiv.Zdiv_eucl_exist (Lambda gen_var_63 Z (Lambda gen_var_110 (App Coq.ZArith.BinInt.Z.gt gen_var_1 Z0) (Lambda gen_var_62 Z (App exist (App prod Z Z) (Lambda gen_var_7 (App prod Z Z) (Case 2 (Lambda gen_var_7 (App prod Z Z) (Sort Prop)) (CaseMatch gen_var_7) (CaseBranches (Lambda gen_var_8 Z (Lambda gen_var_9 Z (App and (App eq Z gen_var_5 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_1 gen_var_8) gen_var_9)) (App and (App Coq.ZArith.BinInt.Z.le Z0 gen_var_9) (App Coq.ZArith.BinInt.Z.lt gen_var_9 gen_var_1)))))))) (App Coq.ZArith.BinIntDef.Z.div_eucl gen_var_38 gen_var_50) (App Coq.ZArith.Zdiv.Z_div_mod gen_var_62 gen_var_63 gen_var_110)))))) 