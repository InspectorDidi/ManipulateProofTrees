(Definition Coq.Sets.Ensembles.Ensemble (Lambda U_222 (Sort Type) (Prod out_2221 U_222 (Sort Prop)))) (Definition Coq.Init.Peano.lt (Lambda n_222222222 nat (Lambda m_2222222222 nat (App le (App S n_222222222) m_2222222222)))) (Definition Coq.Sets.Image.injective (Lambda U_2222222222 (Sort Type) (Lambda V_22222222222 (Sort Type) (Lambda f_222222222222 (Prod out_222222222221 U_2222222222 V_22222222222) (Prod x_2222222222221 U_2222222222 (Prod y_22222222222211 U_2222222222 (Prod out_222222222222111 (App eq V_22222222222 (App f_222222222222 x_2222222222221) (App f_222222222222 y_22222222222211)) (App eq U_2222222222 x_2222222222221 y_22222222222211)))))))) (Definition Coq.Sets.Image.injective_preserves_cardinal (Lambda U_22222222222 (Sort Type) (Lambda V_222222222222 (Sort Type) (Lambda A_2222222222222 (App Coq.Sets.Ensembles.Ensemble U_22222222222) (Lambda f_22222222222222 (Prod out_22222222222221 U_22222222222 V_222222222222) (Lambda n_222222222222222 nat (Lambda H_2222222222222222 (App Coq.Sets.Image.injective U_22222222222 V_222222222222 f_22222222222222) (Lambda H0_22222222222222222 (App cardinal U_22222222222 A_2222222222222 n_222222222222222) (App Coq.Sets.Finite_sets.cardinal_ind U_22222222222 (Lambda A_222222222222222222 (App Coq.Sets.Ensembles.Ensemble U_22222222222) (Lambda n_2222222222222222222 nat (Prod n'_22222222222222222221 nat (Prod out_222222222222222222211 (App cardinal V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) n'_22222222222222222221) (App eq nat n'_22222222222222222221 n_2222222222222222222))))) (App Coq.Init.Logic.eq_ind_r (App Coq.Sets.Ensembles.Ensemble V_222222222222) (App Empty_set V_222222222222) (Lambda e_222222222222222222 (App Coq.Sets.Ensembles.Ensemble V_222222222222) (Prod n'_2222222222222222221 nat (Prod out_22222222222222222211 (App cardinal V_222222222222 e_222222222222222222 n'_2222222222222222221) (App eq nat n'_2222222222222222221 O)))) (Lambda n'_222222222222222222 nat (Lambda CE_2222222222222222222 (App cardinal V_222222222222 (App Empty_set V_222222222222) n'_222222222222222222) (App Coq.Sets.Finite_sets_facts.cardinal_unicity V_222222222222 (App Empty_set V_222222222222) n'_222222222222222222 CE_2222222222222222222 O (App card_empty V_222222222222)))) (App Im U_22222222222 V_222222222222 (App Empty_set U_22222222222) f_22222222222222) (App Coq.Sets.Image.image_empty U_22222222222 V_222222222222 f_22222222222222)) (Lambda A_222222222222222222 (App Coq.Sets.Ensembles.Ensemble U_22222222222) (Lambda n_2222222222222222222 nat (Lambda H'0_22222222222222222222 (App cardinal U_22222222222 A_222222222222222222 n_2222222222222222222) (Lambda H'1_222222222222222222222 (Prod n'_222222222222222222221 nat (Prod out_2222222222222222222211 (App cardinal V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) n'_222222222222222222221) (App eq nat n'_222222222222222222221 n_2222222222222222222))) (Lambda x_2222222222222222222222 U_22222222222 (Lambda H'2_22222222222222222222222 (App Coq.Init.Logic.not (App Coq.Sets.Ensembles.In U_22222222222 A_222222222222222222 x_2222222222222222222222)) (Lambda n'_222222222222222222222222 nat (App Coq.Init.Logic.eq_ind_r (App Coq.Sets.Ensembles.Ensemble V_222222222222) (App Coq.Sets.Ensembles.Add V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) (App f_22222222222222 x_2222222222222222222222)) (Lambda e_2222222222222222222222222 (App Coq.Sets.Ensembles.Ensemble V_222222222222) (Prod out_22222222222222222222222221 (App cardinal V_222222222222 e_2222222222222222222222222 n'_222222222222222222222222) (App eq nat n'_222222222222222222222222 (App S n_2222222222222222222)))) (Lambda H'3_2222222222222222222222222 (App cardinal V_222222222222 (App Coq.Sets.Ensembles.Add V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) (App f_22222222222222 x_2222222222222222222222)) n'_222222222222222222222222) (App Coq.Init.Logic.ex_ind nat (Lambda p_22222222222222222222222222 nat (App cardinal V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) p_22222222222222222222222222)) (App eq nat n'_222222222222222222222222 (App S n_2222222222222222222)) (Lambda i_22222222222222222222222222 nat (Lambda CI_222222222222222222222222222 (App cardinal V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) i_22222222222222222222222222) (App (LetIn H0_2222222222222222222222222223 (Cast (Lambda H0_2222222222222222222222222222 (App Coq.Sets.Ensembles.In V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) (App f_22222222222222 x_2222222222222222222222)) (App H'2_22222222222222222222222 (App Coq.Sets.Image.In_Image_elim U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222 H_2222222222222222 x_2222222222222222222222 H0_2222222222222222222222222222))) REVERTcast (App Coq.Init.Logic.not (App Coq.Sets.Ensembles.In V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) (App f_22222222222222 x_2222222222222222222222)))) (App Coq.Init.Logic.not (App Coq.Sets.Ensembles.In V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) (App f_22222222222222 x_2222222222222222222222))) (App (Lambda H0_22222222222222222222222222232 (App Coq.Init.Logic.not (App Coq.Sets.Ensembles.In V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) (App f_22222222222222 x_2222222222222222222222))) (Lambda H1_222222222222222222222222222322 (App eq nat i_22222222222222222222222222 n_2222222222222222222) (App Coq.Sets.Finite_sets_facts.cardinal_unicity V_222222222222 (App Coq.Sets.Ensembles.Add V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) (App f_22222222222222 x_2222222222222222222222)) n'_222222222222222222222222 H'3_2222222222222222222222222 (App S n_2222222222222222222) (App card_add V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) n_2222222222222222222 (App Coq.Init.Logic.eq_ind nat i_22222222222222222222222222 (Lambda n_2222222222222222222222222223222 nat (App cardinal V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) n_2222222222222222222222222223222)) CI_222222222222222222222222222 n_2222222222222222222 H1_222222222222222222222222222322) (App f_22222222222222 x_2222222222222222222222) H0_22222222222222222222222222232)))) H0_2222222222222222222222222223)) (App H'1_222222222222222222222 i_22222222222222222222222222 CI_222222222222222222222222222)))) (App Coq.Sets.Image.cardinal_Im_intro U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222 n_2222222222222222222 H'0_22222222222222222222))) (App Im U_22222222222 V_222222222222 (App Coq.Sets.Ensembles.Add U_22222222222 A_222222222222222222 x_2222222222222222222222) f_22222222222222) (App Coq.Sets.Image.Im_add U_22222222222 V_222222222222 A_222222222222222222 x_2222222222222222222222 f_22222222222222))))))))) A_2222222222222 n_222222222222222 H0_22222222222222222))))))))) (Definition Coq.Init.Logic.eq_ind_r (Lambda A_2222222222322 (Sort Type) (Lambda x_22222222223222 A_2222222222322 (Lambda P_222222222232222 (Prod out_222222222232221 A_2222222222322 (Sort Prop)) (Lambda H_2222222222322222 (App P_222222222232222 x_22222222223222) (Lambda y_22222222223222222 A_2222222222322 (Lambda H0_222222222232222222 (App eq A_2222222222322 y_22222222223222222 x_22222222223222) (App Coq.Init.Logic.eq_ind A_2222222222322 x_22222222223222 (Lambda y_2222222222322222222 A_2222222222322 (App P_222222222232222 y_2222222222322222222)) H_2222222222322222 y_22222222223222222 (App Coq.Init.Logic.eq_sym A_2222222222322 y_22222222223222222 x_22222222223222 H0_222222222232222222))))))))) (Definition Coq.Arith.PeanoNat.Nat.lt_irrefl (Lambda x_2222222222322 nat (App (Lambda lemma_22222222223222 (App Coq.Init.Logic.iff (App eq comparison (App Coq.Init.Nat.compare x_2222222222322 x_2222222222322) Lt) (App Coq.Init.Peano.lt x_2222222222322 x_2222222222322)) (App Coq.Classes.Morphisms.subrelation_proper (Prod A_222222222232221 (Sort Prop) (Sort Prop)) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) Coq.Init.Logic.not Coq.Classes.Morphisms_Prop.not_iff_morphism (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) tt (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation) (App Coq.Init.Peano.lt x_2222222222322 x_2222222222322) (App eq comparison (App Coq.Init.Nat.compare x_2222222222322 x_2222222222322) Lt) (App Coq.Classes.RelationClasses.symmetry (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Symmetric (App eq comparison (App Coq.Init.Nat.compare x_2222222222322 x_2222222222322) Lt) (App Coq.Init.Peano.lt x_2222222222322 x_2222222222322) lemma_22222222223222))) (App Coq.Arith.PeanoNat.Nat.compare_lt_iff x_2222222222322 x_2222222222322) (App Coq.Init.Logic.eq_ind_r comparison Eq (Lambda c_22222222223222 comparison (App Coq.Init.Logic.not (App eq comparison c_22222222223222 Lt))) (Cast (Lambda H_22222222223222 (App eq comparison Eq Lt) (LetIn H0_222222222232223 (Case 2 (Lambda y_222222222232222 comparison (Lambda out_2222222222322222 (App eq comparison Eq y_222222222232222) (Prod out_22222222223222221 (App eq comparison y_222222222232222 Lt) False))) (CaseMatch H_22222222223222) (CaseBranches (Lambda H0_222222222232222 (App eq comparison Eq Lt) (App (Lambda H0_2222222222322222 (App eq comparison Eq Lt) (LetIn H1_22222222223222223 (App Coq.Init.Logic.eq_ind comparison Eq (Lambda e_22222222223222222 comparison (Case 0 (Lambda c_222222222232222222 comparison (Sort Prop)) (CaseMatch e_22222222223222222) (CaseBranches True False False))) I Lt H0_2222222222322222) False (App Coq.Init.Logic.False_ind False H1_22222222223222223))) H0_222222222232222)))) (Prod out_222222222232221 (App eq comparison Lt Lt) False) (App H0_222222222232223 (App eq_refl comparison Lt)))) REVERTcast (App Coq.Init.Logic.not (App eq comparison Eq Lt))) (App Coq.Init.Nat.compare x_2222222222322 x_2222222222322) (App Coq.Arith.PeanoNat.Nat.compare_refl x_2222222222322))))) (Definition Coq.Init.Logic.not (Lambda A_2211111112 (Sort Prop) (Prod out_22111111121 A_2211111112 False))) (Definition Coq.Sets.Image.Pigeonhole (Lambda U_2 (Sort Type) (Lambda V_22 (Sort Type) (Cast (Lambda A_222 (App Coq.Sets.Ensembles.Ensemble U_2) (Lambda f_2222 (Prod out_2221 U_2 V_22) (Lambda n_22222 nat (Lambda CAn_222222 (App cardinal U_2 A_222 n_22222) (Lambda n'_2222222 nat (Lambda CIfn'_22222222 (App cardinal V_22 (App Im U_2 V_22 A_222 f_2222) n'_2222222) (Lambda ltn'n_222222222 (App Coq.Init.Peano.lt n'_2222222 n_22222) (Lambda I_2222222222 (App Coq.Sets.Image.injective U_2 V_22 f_2222) (LetIn H_22222222223 (App Coq.Sets.Image.injective_preserves_cardinal U_2 V_22 A_222 f_2222 n_22222 I_2222222222 CAn_222222 n'_2222222 CIfn'_22222222) (App eq nat n'_2222222 n_22222) (App (Lambda E_222222222232 (App eq nat n'_2222222 n_22222) (App Coq.Init.Logic.eq_ind_r nat n_22222 (Lambda n'_2222222222322 nat (Prod ltn'n_22222222223221 (App Coq.Init.Peano.lt n'_2222222222322 n_22222) False)) (App Coq.Arith.PeanoNat.Nat.lt_irrefl n_22222) n'_2222222 E_222222222232 ltn'n_222222222)) H_22222222223)))))))))) REVERTcast (Prod A_221 (App Coq.Sets.Ensembles.Ensemble U_2) (Prod f_2211 (Prod out_2211 U_2 V_22) (Prod n_22111 nat (Prod out_221111 (App cardinal U_2 A_221 n_22111) (Prod n'_2211111 nat (Prod out_22111111 (App cardinal V_22 (App Im U_2 V_22 A_221 f_2211) n'_2211111) (Prod out_221111111 (App Coq.Init.Peano.lt n'_2211111 n_22111) (App Coq.Init.Logic.not (App Coq.Sets.Image.injective U_2 V_22 f_2211))))))))))))) 