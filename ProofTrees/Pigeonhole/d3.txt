(Definition Coq.Sets.Ensembles.Ensemble (Lambda U_222 (Sort Type) (Prod out_2221 U_222 (Sort Prop)))) (Definition Coq.Init.Peano.lt (Lambda n_222222222 nat (Lambda m_2222222222 nat (App le (App S n_222222222) m_2222222222)))) (Definition Coq.Sets.Image.injective (Lambda U_2222222222 (Sort Type) (Lambda V_22222222222 (Sort Type) (Lambda f_222222222222 (Prod out_222222222221 U_2222222222 V_22222222222) (Prod x_2222222222221 U_2222222222 (Prod y_22222222222211 U_2222222222 (Prod out_222222222222111 (App eq V_22222222222 (App f_222222222222 x_2222222222221) (App f_222222222222 y_22222222222211)) (App eq U_2222222222 x_2222222222221 y_22222222222211)))))))) (Definition Coq.Sets.Finite_sets.cardinal_ind (Lambda U_222222222222222222 (Sort Type) (Lambda P_2222222222222222222 (Prod out_2222222222222222221 (App Coq.Sets.Ensembles.Ensemble U_222222222222222222) (Prod out_22222222222222222211 nat (Sort Prop))) (Lambda f_22222222222222222222 (App P_2222222222222222222 (App Empty_set U_222222222222222222) O) (Lambda f_222222222222222222222 (Prod A_222222222222222222221 (App Coq.Sets.Ensembles.Ensemble U_222222222222222222) (Prod n_2222222222222222222211 nat (Prod out_22222222222222222222111 (App cardinal U_222222222222222222 A_222222222222222222221 n_2222222222222222222211) (Prod out_222222222222222222221111 (App P_2222222222222222222 A_222222222222222222221 n_2222222222222222222211) (Prod x_2222222222222222222211111 U_222222222222222222 (Prod out_22222222222222222222111111 (App Coq.Init.Logic.not (App Coq.Sets.Ensembles.In U_222222222222222222 A_222222222222222222221 x_2222222222222222222211111)) (App P_2222222222222222222 (App Coq.Sets.Ensembles.Add U_222222222222222222 A_222222222222222222221 x_2222222222222222222211111) (App S n_2222222222222222222211)))))))) (Fix (Functions (App F 0 (Prod e_2222222222222222222221 (App Coq.Sets.Ensembles.Ensemble U_222222222222222222) (Prod n_22222222222222222222211 nat (Prod c_222222222222222222222111 (App cardinal U_222222222222222222 e_2222222222222222222221 n_22222222222222222222211) (App P_2222222222222222222 e_2222222222222222222221 n_22222222222222222222211)))) (Lambda e_2222222222222222222222 (App Coq.Sets.Ensembles.Ensemble U_222222222222222222) (Lambda n_22222222222222222222222 nat (Lambda c_222222222222222222222222 (App cardinal U_222222222222222222 e_2222222222222222222222 n_22222222222222222222222) (Case 1 (Lambda e_2222222222222222222222222 (App Coq.Sets.Ensembles.Ensemble U_222222222222222222) (Lambda n_22222222222222222222222222 nat (Lambda out_222222222222222222222222222 (App cardinal U_222222222222222222 e_2222222222222222222222222 n_22222222222222222222222222) (App P_2222222222222222222 e_2222222222222222222222222 n_22222222222222222222222222)))) (CaseMatch c_222222222222222222222222) (CaseBranches f_22222222222222222222 (Lambda A_2222222222222222222222222 (App Coq.Sets.Ensembles.Ensemble U_222222222222222222) (Lambda n_22222222222222222222222222 nat (Lambda c_222222222222222222222222222 (App cardinal U_222222222222222222 A_2222222222222222222222222 n_22222222222222222222222222) (Lambda x_2222222222222222222222222222 U_222222222222222222 (Lambda n_22222222222222222222222222222 (App Coq.Init.Logic.not (App Coq.Sets.Ensembles.In U_222222222222222222 A_2222222222222222222222222 x_2222222222222222222222222222)) (App f_222222222222222222222 A_2222222222222222222222222 n_22222222222222222222222222 c_222222222222222222222222222 (App F A_2222222222222222222222222 n_22222222222222222222222222 c_222222222222222222222222222) x_2222222222222222222222222222 n_22222222222222222222222222222))))))))))))) 0)))))) (Definition Coq.Init.Logic.eq_ind_r (Lambda A_222222222222222222 (Sort Type) (Lambda x_2222222222222222222 A_222222222222222222 (Lambda P_22222222222222222222 (Prod out_22222222222222222221 A_222222222222222222 (Sort Prop)) (Lambda H_222222222222222222222 (App P_22222222222222222222 x_2222222222222222222) (Lambda y_2222222222222222222222 A_222222222222222222 (Lambda H0_22222222222222222222222 (App eq A_222222222222222222 y_2222222222222222222222 x_2222222222222222222) (App Coq.Init.Logic.eq_ind A_222222222222222222 x_2222222222222222222 (Lambda y_222222222222222222222222 A_222222222222222222 (App P_22222222222222222222 y_222222222222222222222222)) H_222222222222222222222 y_2222222222222222222222 (App Coq.Init.Logic.eq_sym A_222222222222222222 y_2222222222222222222222 x_2222222222222222222 H0_22222222222222222222222))))))))) (Definition Coq.Sets.Finite_sets_facts.cardinal_unicity (Lambda U_22222222222222222222 (Sort Type) (Lambda X_222222222222222222222 (App Coq.Sets.Ensembles.Ensemble U_22222222222222222222) (Lambda n_2222222222222222222222 nat (Lambda H_22222222222222222222222 (App cardinal U_22222222222222222222 X_222222222222222222222 n_2222222222222222222222) (Lambda m_222222222222222222222222 nat (Lambda H0_2222222222222222222222222 (App cardinal U_22222222222222222222 X_222222222222222222222 m_222222222222222222222222) (App Coq.Sets.Finite_sets_facts.cardinal_is_functional U_22222222222222222222 X_222222222222222222222 n_2222222222222222222222 H_22222222222222222222222 X_222222222222222222222 m_222222222222222222222222 H0_2222222222222222222222222 (App eq_refl (App Coq.Sets.Ensembles.Ensemble U_22222222222222222222) X_222222222222222222222))))))))) (Definition Coq.Sets.Image.image_empty (Lambda U_222222222222222222 (Sort Type) (Lambda V_2222222222222222222 (Sort Type) (Lambda f_22222222222222222222 (Prod out_22222222222222222221 U_222222222222222222 V_2222222222222222222) (App (Axiom Coq.Sets.Ensembles.Extensionality_Ensembles) V_2222222222222222222 (App Im U_222222222222222222 V_2222222222222222222 (App Empty_set U_222222222222222222) f_22222222222222222222) (App Empty_set V_2222222222222222222) (App conj (App Coq.Sets.Ensembles.Included V_2222222222222222222 (App Im U_222222222222222222 V_2222222222222222222 (App Empty_set U_222222222222222222) f_22222222222222222222) (App Empty_set V_2222222222222222222)) (App Coq.Sets.Ensembles.Included V_2222222222222222222 (App Empty_set V_2222222222222222222) (App Im U_222222222222222222 V_2222222222222222222 (App Empty_set U_222222222222222222) f_22222222222222222222)) (Cast (Lambda x_222222222222222222222 V_2222222222222222222 (Lambda H'_2222222222222222222222 (App Coq.Sets.Ensembles.In V_2222222222222222222 (App Im U_222222222222222222 V_2222222222222222222 (App Empty_set U_222222222222222222) f_22222222222222222222) x_222222222222222222222) (App Coq.Sets.Image.Im_ind U_222222222222222222 V_2222222222222222222 (App Empty_set U_222222222222222222) f_22222222222222222222 (Lambda x_22222222222222222222222 V_2222222222222222222 (App Coq.Sets.Ensembles.In V_2222222222222222222 (App Empty_set V_2222222222222222222) x_22222222222222222222222)) (Lambda x0_22222222222222222222222 U_222222222222222222 (Lambda H'0_222222222222222222222222 (App Coq.Sets.Ensembles.In U_222222222222222222 (App Empty_set U_222222222222222222) x0_22222222222222222222222) (App Coq.Sets.Ensembles.Empty_set_ind U_222222222222222222 (Lambda x0_2222222222222222222222222 U_222222222222222222 (Prod y_22222222222222222222222221 V_2222222222222222222 (Prod out_222222222222222222222222211 (App eq V_2222222222222222222 y_22222222222222222222222221 (App f_22222222222222222222 x0_2222222222222222222222222)) (App Coq.Sets.Ensembles.In V_2222222222222222222 (App Empty_set V_2222222222222222222) y_22222222222222222222222221)))) x0_22222222222222222222222 H'0_222222222222222222222222))) x_222222222222222222222 H'_2222222222222222222222))) REVERTcast (App Coq.Sets.Ensembles.Included V_2222222222222222222 (App Im U_222222222222222222 V_2222222222222222222 (App Empty_set U_222222222222222222) f_22222222222222222222) (App Empty_set V_2222222222222222222))) (App Coq.Sets.Powerset.Empty_set_minimal V_2222222222222222222 (App Im U_222222222222222222 V_2222222222222222222 (App Empty_set U_222222222222222222) f_22222222222222222222)))))))) (Definition Coq.Init.Logic.not (Lambda A_22222222222222222222222 (Sort Prop) (Prod out_222222222222222222222221 A_22222222222222222222222 False))) (Definition Coq.Sets.Ensembles.In (Lambda U_22222222222222222222222 (Sort Type) (Lambda A_222222222222222222222222 (App Coq.Sets.Ensembles.Ensemble U_22222222222222222222222) (Lambda x_2222222222222222222222222 U_22222222222222222222222 (App A_222222222222222222222222 x_2222222222222222222222222))))) (Definition Coq.Sets.Ensembles.Add (Lambda U_2222222222222222222222222 (Sort Type) (Lambda B_22222222222222222222222222 (App Coq.Sets.Ensembles.Ensemble U_2222222222222222222222222) (Lambda x_222222222222222222222222222 U_2222222222222222222222222 (App Union U_2222222222222222222222222 B_22222222222222222222222222 (App Singleton U_2222222222222222222222222 x_222222222222222222222222222)))))) (Definition Coq.Init.Logic.ex_ind (Lambda A_22222222222222222222222222 (Sort Type) (Lambda P_222222222222222222222222222 (Prod out_222222222222222222222222221 A_22222222222222222222222222 (Sort Prop)) (Lambda P_2222222222222222222222222222 (Sort Prop) (Lambda f_22222222222222222222222222222 (Prod x_22222222222222222222222222221 A_22222222222222222222222222 (Prod out_222222222222222222222222222211 (App P_222222222222222222222222222 x_22222222222222222222222222221) P_2222222222222222222222222222)) (Lambda e_222222222222222222222222222222 (App ex A_22222222222222222222222222 P_222222222222222222222222222) (Case 2 (Lambda out_2222222222222222222222222222222 (App ex A_22222222222222222222222222 P_222222222222222222222222222) P_2222222222222222222222222222) (CaseMatch e_222222222222222222222222222222) (CaseBranches f_22222222222222222222222222222)))))))) (Definition Coq.Sets.Image.In_Image_elim (Lambda U_22222222222222222222222222222 (Sort Type) (Lambda V_222222222222222222222222222222 (Sort Type) (Lambda A_2222222222222222222222222222222 (App Coq.Sets.Ensembles.Ensemble U_22222222222222222222222222222) (Lambda f_22222222222222222222222222222222 (Prod out_22222222222222222222222222222221 U_22222222222222222222222222222 V_222222222222222222222222222222) (Lambda H_222222222222222222222222222222222 (App Coq.Sets.Image.injective U_22222222222222222222222222222 V_222222222222222222222222222222 f_22222222222222222222222222222222) (Lambda x_2222222222222222222222222222222222 U_22222222222222222222222222222 (Lambda H0_22222222222222222222222222222222222 (App Coq.Sets.Ensembles.In V_222222222222222222222222222222 (App Im U_22222222222222222222222222222 V_222222222222222222222222222222 A_2222222222222222222222222222222 f_22222222222222222222222222222222) (App f_22222222222222222222222222222222 x_2222222222222222222222222222222222)) (App Coq.Init.Logic.ex_ind U_22222222222222222222222222222 (Lambda x_222222222222222222222222222222222222 U_22222222222222222222222222222 (App and (App Coq.Sets.Ensembles.In U_22222222222222222222222222222 A_2222222222222222222222222222222 x_222222222222222222222222222222222222) (App eq V_222222222222222222222222222222 (App f_22222222222222222222222222222222 x_222222222222222222222222222222222222) (App f_22222222222222222222222222222222 x_2222222222222222222222222222222222)))) (App Coq.Sets.Ensembles.In U_22222222222222222222222222222 A_2222222222222222222222222222222 x_2222222222222222222222222222222222) (Lambda z_222222222222222222222222222222222222 U_22222222222222222222222222222 (Lambda C_2222222222222222222222222222222222222 (App and (App Coq.Sets.Ensembles.In U_22222222222222222222222222222 A_2222222222222222222222222222222 z_222222222222222222222222222222222222) (App eq V_222222222222222222222222222222 (App f_22222222222222222222222222222222 z_222222222222222222222222222222222222) (App f_22222222222222222222222222222222 x_2222222222222222222222222222222222))) (App Coq.Init.Logic.and_ind (App Coq.Sets.Ensembles.In U_22222222222222222222222222222 A_2222222222222222222222222222222 z_222222222222222222222222222222222222) (App eq V_222222222222222222222222222222 (App f_22222222222222222222222222222222 z_222222222222222222222222222222222222) (App f_22222222222222222222222222222222 x_2222222222222222222222222222222222)) (App Coq.Sets.Ensembles.In U_22222222222222222222222222222 A_2222222222222222222222222222222 x_2222222222222222222222222222222222) (Lambda InAz_22222222222222222222222222222222222222 (App Coq.Sets.Ensembles.In U_22222222222222222222222222222 A_2222222222222222222222222222222 z_222222222222222222222222222222222222) (Lambda E_222222222222222222222222222222222222222 (App eq V_222222222222222222222222222222 (App f_22222222222222222222222222222222 z_222222222222222222222222222222222222) (App f_22222222222222222222222222222222 x_2222222222222222222222222222222222)) (App Coq.Init.Logic.eq_ind U_22222222222222222222222222222 z_222222222222222222222222222222222222 (Lambda x_2222222222222222222222222222222222222222 U_22222222222222222222222222222 (App Coq.Sets.Ensembles.In U_22222222222222222222222222222 A_2222222222222222222222222222222 x_2222222222222222222222222222222222222222)) InAz_22222222222222222222222222222222222222 x_2222222222222222222222222222222222 (App H_222222222222222222222222222222222 z_222222222222222222222222222222222222 x_2222222222222222222222222222222222 E_222222222222222222222222222222222222222)))) C_2222222222222222222222222222222222222))) (App Coq.Sets.Image.Im_inv U_22222222222222222222222222222 V_222222222222222222222222222222 A_2222222222222222222222222222222 f_22222222222222222222222222222222 (App f_22222222222222222222222222222222 x_2222222222222222222222222222222222) H0_22222222222222222222222222222222222)))))))))) (Definition Coq.Init.Logic.eq_ind (Lambda A_2222222222222222222222222223222 (Sort Type) (Lambda x_22222222222222222222222222232222 A_2222222222222222222222222223222 (Lambda P_222222222222222222222222222322222 (Prod out_222222222222222222222222222322221 A_2222222222222222222222222223222 (Sort Prop)) (Lambda f_2222222222222222222222222223222222 (App P_222222222222222222222222222322222 x_22222222222222222222222222232222) (Lambda y_22222222222222222222222222232222222 A_2222222222222222222222222223222 (Lambda e_222222222222222222222222222322222222 (App eq A_2222222222222222222222222223222 x_22222222222222222222222222232222 y_22222222222222222222222222232222222) (Case 2 (Lambda y_2222222222222222222222222223222222222 A_2222222222222222222222222223222 (Lambda out_22222222222222222222222222232222222222 (App eq A_2222222222222222222222222223222 x_22222222222222222222222222232222 y_2222222222222222222222222223222222222) (App P_222222222222222222222222222322222 y_2222222222222222222222222223222222222))) (CaseMatch e_222222222222222222222222222322222222) (CaseBranches f_2222222222222222222222222223222222))))))))) (Definition Coq.Sets.Image.cardinal_Im_intro (Lambda U_22222222222222222222222222 (Sort Type) (Lambda V_222222222222222222222222222 (Sort Type) (Lambda A_2222222222222222222222222222 (App Coq.Sets.Ensembles.Ensemble U_22222222222222222222222222) (Lambda f_22222222222222222222222222222 (Prod out_22222222222222222222222222221 U_22222222222222222222222222 V_222222222222222222222222222) (Lambda n_222222222222222222222222222222 nat (Lambda H_2222222222222222222222222222222 (App cardinal U_22222222222222222222222222 A_2222222222222222222222222222 n_222222222222222222222222222222) (App Coq.Sets.Finite_sets_facts.finite_cardinal V_222222222222222222222222222 (App Im U_22222222222222222222222222 V_222222222222222222222222222 A_2222222222222222222222222222 f_22222222222222222222222222222) (App Coq.Sets.Image.finite_image U_22222222222222222222222222 V_222222222222222222222222222 A_2222222222222222222222222222 f_22222222222222222222222222222 (App Coq.Sets.Finite_sets_facts.cardinal_finite U_22222222222222222222222222 A_2222222222222222222222222222 n_222222222222222222222222222222 H_2222222222222222222222222222222)))))))))) (Definition Coq.Sets.Image.Im_add (Lambda U_2222222222222222222222222 (Sort Type) (Lambda V_22222222222222222222222222 (Sort Type) (Lambda X_222222222222222222222222222 (App Coq.Sets.Ensembles.Ensemble U_2222222222222222222222222) (Lambda x_2222222222222222222222222222 U_2222222222222222222222222 (Lambda f_22222222222222222222222222222 (Prod out_22222222222222222222222222221 U_2222222222222222222222222 V_22222222222222222222222222) (App (Axiom Coq.Sets.Ensembles.Extensionality_Ensembles) V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add U_2222222222222222222222222 X_222222222222222222222222222 x_2222222222222222222222222222) f_22222222222222222222222222222) (App Coq.Sets.Ensembles.Add V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 X_222222222222222222222222222 f_22222222222222222222222222222) (App f_22222222222222222222222222222 x_2222222222222222222222222222)) (App conj (App Coq.Sets.Ensembles.Included V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add U_2222222222222222222222222 X_222222222222222222222222222 x_2222222222222222222222222222) f_22222222222222222222222222222) (App Coq.Sets.Ensembles.Add V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 X_222222222222222222222222222 f_22222222222222222222222222222) (App f_22222222222222222222222222222 x_2222222222222222222222222222))) (App Coq.Sets.Ensembles.Included V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 X_222222222222222222222222222 f_22222222222222222222222222222) (App f_22222222222222222222222222222 x_2222222222222222222222222222)) (App Im U_2222222222222222222222222 V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add U_2222222222222222222222222 X_222222222222222222222222222 x_2222222222222222222222222222) f_22222222222222222222222222222)) (Cast (Lambda x0_222222222222222222222222222222 V_22222222222222222222222222 (Lambda H'_2222222222222222222222222222222 (App Coq.Sets.Ensembles.In V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add U_2222222222222222222222222 X_222222222222222222222222222 x_2222222222222222222222222222) f_22222222222222222222222222222) x0_222222222222222222222222222222) (App Coq.Sets.Image.Im_ind U_2222222222222222222222222 V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add U_2222222222222222222222222 X_222222222222222222222222222 x_2222222222222222222222222222) f_22222222222222222222222222222 (Lambda x0_22222222222222222222222222222222 V_22222222222222222222222222 (App Coq.Sets.Ensembles.In V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 X_222222222222222222222222222 f_22222222222222222222222222222) (App f_22222222222222222222222222222 x_2222222222222222222222222222)) x0_22222222222222222222222222222222)) (Lambda x1_22222222222222222222222222222222 U_2222222222222222222222222 (Lambda H_222222222222222222222222222222222 (App Coq.Sets.Ensembles.In U_2222222222222222222222222 (App Coq.Sets.Ensembles.Add U_2222222222222222222222222 X_222222222222222222222222222 x_2222222222222222222222222222) x1_22222222222222222222222222222222) (Lambda y_2222222222222222222222222222222222 V_22222222222222222222222222 (Lambda H0_22222222222222222222222222222222222 (App eq V_22222222222222222222222222 y_2222222222222222222222222222222222 (App f_22222222222222222222222222222 x1_22222222222222222222222222222222)) (App Coq.Init.Logic.eq_ind_r V_22222222222222222222222222 (App f_22222222222222222222222222222 x1_22222222222222222222222222222222) (Lambda y_222222222222222222222222222222222222 V_22222222222222222222222222 (App Coq.Sets.Ensembles.In V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 X_222222222222222222222222222 f_22222222222222222222222222222) (App f_22222222222222222222222222222 x_2222222222222222222222222222)) y_222222222222222222222222222222222222)) (App Coq.Init.Logic.or_ind (App Coq.Sets.Ensembles.In U_2222222222222222222222222 X_222222222222222222222222222 x1_22222222222222222222222222222222) (App eq U_2222222222222222222222222 x_2222222222222222222222222222 x1_22222222222222222222222222222222) (App Coq.Sets.Ensembles.In V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 X_222222222222222222222222222 f_22222222222222222222222222222) (App f_22222222222222222222222222222 x_2222222222222222222222222222)) (App f_22222222222222222222222222222 x1_22222222222222222222222222222222)) (Lambda H1_222222222222222222222222222222222222 (App Coq.Sets.Ensembles.In U_2222222222222222222222222 X_222222222222222222222222222 x1_22222222222222222222222222222222) (App Coq.Sets.Constructive_sets.Add_intro1 V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 X_222222222222222222222222222 f_22222222222222222222222222222) (App f_22222222222222222222222222222 x_2222222222222222222222222222) (App f_22222222222222222222222222222 x1_22222222222222222222222222222222) (App Coq.Sets.Image.Im_def U_2222222222222222222222222 V_22222222222222222222222222 X_222222222222222222222222222 f_22222222222222222222222222222 x1_22222222222222222222222222222222 H1_222222222222222222222222222222222222))) (Lambda H1_222222222222222222222222222222222222 (App eq U_2222222222222222222222222 x_2222222222222222222222222222 x1_22222222222222222222222222222222) (App (Case 2 (Lambda y_2222222222222222222222222222222222222 U_2222222222222222222222222 (Lambda out_22222222222222222222222222222222222222 (App eq U_2222222222222222222222222 x_2222222222222222222222222222 y_2222222222222222222222222222222222222) (Prod H_222222222222222222222222222222222222221 (App Coq.Sets.Ensembles.In U_2222222222222222222222222 (App Coq.Sets.Ensembles.Add U_2222222222222222222222222 X_222222222222222222222222222 x_2222222222222222222222222222) y_2222222222222222222222222222222222222) (Prod H0_2222222222222222222222222222222222222211 (App eq V_22222222222222222222222222 y_2222222222222222222222222222222222 (App f_22222222222222222222222222222 y_2222222222222222222222222222222222222)) (App Coq.Sets.Ensembles.In V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 X_222222222222222222222222222 f_22222222222222222222222222222) (App f_22222222222222222222222222222 x_2222222222222222222222222222)) (App f_22222222222222222222222222222 y_2222222222222222222222222222222222222)))))) (CaseMatch H1_222222222222222222222222222222222222) (CaseBranches (Lambda H_2222222222222222222222222222222222222 (App Coq.Sets.Ensembles.In U_2222222222222222222222222 (App Coq.Sets.Ensembles.Add U_2222222222222222222222222 X_222222222222222222222222222 x_2222222222222222222222222222) x_2222222222222222222222222222) (Lambda H0_22222222222222222222222222222222222222 (App eq V_22222222222222222222222222 y_2222222222222222222222222222222222 (App f_22222222222222222222222222222 x_2222222222222222222222222222)) (App Coq.Sets.Constructive_sets.Add_intro2 V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 X_222222222222222222222222222 f_22222222222222222222222222222) (App f_22222222222222222222222222222 x_2222222222222222222222222222)))))) H_222222222222222222222222222222222 H0_22222222222222222222222222222222222)) (App Coq.Sets.Constructive_sets.Add_inv U_2222222222222222222222222 X_222222222222222222222222222 x_2222222222222222222222222222 x1_22222222222222222222222222222222 H_222222222222222222222222222222222)) y_2222222222222222222222222222222222 H0_22222222222222222222222222222222222))))) x0_222222222222222222222222222222 H'_2222222222222222222222222222222))) REVERTcast (App Coq.Sets.Ensembles.Included V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add U_2222222222222222222222222 X_222222222222222222222222222 x_2222222222222222222222222222) f_22222222222222222222222222222) (App Coq.Sets.Ensembles.Add V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 X_222222222222222222222222222 f_22222222222222222222222222222) (App f_22222222222222222222222222222 x_2222222222222222222222222222)))) (Cast (Lambda x0_222222222222222222222222222222 V_22222222222222222222222222 (Lambda H'_2222222222222222222222222222222 (App Coq.Sets.Ensembles.In V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 X_222222222222222222222222222 f_22222222222222222222222222222) (App f_22222222222222222222222222222 x_2222222222222222222222222222)) x0_222222222222222222222222222222) (App Coq.Init.Logic.or_ind (App Coq.Sets.Ensembles.In V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 X_222222222222222222222222222 f_22222222222222222222222222222) x0_222222222222222222222222222222) (App eq V_22222222222222222222222222 (App f_22222222222222222222222222222 x_2222222222222222222222222222) x0_222222222222222222222222222222) (App Coq.Sets.Ensembles.In V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add U_2222222222222222222222222 X_222222222222222222222222222 x_2222222222222222222222222222) f_22222222222222222222222222222) x0_222222222222222222222222222222) (Lambda H_22222222222222222222222222222222 (App Coq.Sets.Ensembles.In V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 X_222222222222222222222222222 f_22222222222222222222222222222) x0_222222222222222222222222222222) (App (Case 4 (Lambda v_222222222222222222222222222222222 V_22222222222222222222222222 (Lambda out_2222222222222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 X_222222222222222222222222222 f_22222222222222222222222222222 v_222222222222222222222222222222222) (Prod H'_22222222222222222222222222222222221 (App Coq.Sets.Ensembles.In V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 X_222222222222222222222222222 f_22222222222222222222222222222) (App f_22222222222222222222222222222 x_2222222222222222222222222222)) v_222222222222222222222222222222222) (App Coq.Sets.Ensembles.In V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add U_2222222222222222222222222 X_222222222222222222222222222 x_2222222222222222222222222222) f_22222222222222222222222222222) v_222222222222222222222222222222222)))) (CaseMatch H_22222222222222222222222222222222) (CaseBranches (Lambda x0_222222222222222222222222222222222 U_2222222222222222222222222 (Lambda H_2222222222222222222222222222222222 (App Coq.Sets.Ensembles.In U_2222222222222222222222222 X_222222222222222222222222222 x0_222222222222222222222222222222222) (Lambda y_22222222222222222222222222222222222 V_22222222222222222222222222 (Lambda H0_222222222222222222222222222222222222 (App eq V_22222222222222222222222222 y_22222222222222222222222222222222222 (App f_22222222222222222222222222222 x0_222222222222222222222222222222222)) (Lambda H'_2222222222222222222222222222222222222 (App Coq.Sets.Ensembles.In V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 X_222222222222222222222222222 f_22222222222222222222222222222) (App f_22222222222222222222222222222 x_2222222222222222222222222222)) y_22222222222222222222222222222222222) (App Coq.Init.Logic.eq_ind_r V_22222222222222222222222222 (App f_22222222222222222222222222222 x0_222222222222222222222222222222222) (Lambda y_22222222222222222222222222222222222222 V_22222222222222222222222222 (App Coq.Sets.Ensembles.In V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add U_2222222222222222222222222 X_222222222222222222222222222 x_2222222222222222222222222222) f_22222222222222222222222222222) y_22222222222222222222222222222222222222)) (App Coq.Sets.Image.Im_def U_2222222222222222222222222 V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add U_2222222222222222222222222 X_222222222222222222222222222 x_2222222222222222222222222222) f_22222222222222222222222222222 x0_222222222222222222222222222222222 (App Coq.Sets.Constructive_sets.Add_intro1 U_2222222222222222222222222 X_222222222222222222222222222 x_2222222222222222222222222222 x0_222222222222222222222222222222222 H_2222222222222222222222222222222222)) y_22222222222222222222222222222222222 H0_222222222222222222222222222222222222)))))))) H'_2222222222222222222222222222222)) (Lambda H_22222222222222222222222222222222 (App eq V_22222222222222222222222222 (App f_22222222222222222222222222222 x_2222222222222222222222222222) x0_222222222222222222222222222222) (App (Case 2 (Lambda y_222222222222222222222222222222222 V_22222222222222222222222222 (Lambda out_2222222222222222222222222222222222 (App eq V_22222222222222222222222222 (App f_22222222222222222222222222222 x_2222222222222222222222222222) y_222222222222222222222222222222222) (Prod H'_22222222222222222222222222222222221 (App Coq.Sets.Ensembles.In V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 X_222222222222222222222222222 f_22222222222222222222222222222) (App f_22222222222222222222222222222 x_2222222222222222222222222222)) y_222222222222222222222222222222222) (App Coq.Sets.Ensembles.In V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add U_2222222222222222222222222 X_222222222222222222222222222 x_2222222222222222222222222222) f_22222222222222222222222222222) y_222222222222222222222222222222222)))) (CaseMatch H_22222222222222222222222222222222) (CaseBranches (Lambda H'_222222222222222222222222222222222 (App Coq.Sets.Ensembles.In V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 X_222222222222222222222222222 f_22222222222222222222222222222) (App f_22222222222222222222222222222 x_2222222222222222222222222222)) (App f_22222222222222222222222222222 x_2222222222222222222222222222)) (App Coq.Sets.Image.Im_def U_2222222222222222222222222 V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add U_2222222222222222222222222 X_222222222222222222222222222 x_2222222222222222222222222222) f_22222222222222222222222222222 x_2222222222222222222222222222 (App Coq.Sets.Constructive_sets.Add_intro2 U_2222222222222222222222222 X_222222222222222222222222222 x_2222222222222222222222222222))))) H'_2222222222222222222222222222222)) (App Coq.Sets.Constructive_sets.Add_inv V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 X_222222222222222222222222222 f_22222222222222222222222222222) (App f_22222222222222222222222222222 x_2222222222222222222222222222) x0_222222222222222222222222222222 H'_2222222222222222222222222222222)))) REVERTcast (App Coq.Sets.Ensembles.Included V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add V_22222222222222222222222222 (App Im U_2222222222222222222222222 V_22222222222222222222222222 X_222222222222222222222222222 f_22222222222222222222222222222) (App f_22222222222222222222222222222 x_2222222222222222222222222222)) (App Im U_2222222222222222222222222 V_22222222222222222222222222 (App Coq.Sets.Ensembles.Add U_2222222222222222222222222 X_222222222222222222222222222 x_2222222222222222222222222222) f_22222222222222222222222222222))))))))))) (Definition Coq.Sets.Image.injective_preserves_cardinal (Lambda U_22222222222 (Sort Type) (Lambda V_222222222222 (Sort Type) (Lambda A_2222222222222 (App Coq.Sets.Ensembles.Ensemble U_22222222222) (Lambda f_22222222222222 (Prod out_22222222222221 U_22222222222 V_222222222222) (Lambda n_222222222222222 nat (Lambda H_2222222222222222 (App Coq.Sets.Image.injective U_22222222222 V_222222222222 f_22222222222222) (Lambda H0_22222222222222222 (App cardinal U_22222222222 A_2222222222222 n_222222222222222) (App Coq.Sets.Finite_sets.cardinal_ind U_22222222222 (Lambda A_222222222222222222 (App Coq.Sets.Ensembles.Ensemble U_22222222222) (Lambda n_2222222222222222222 nat (Prod n'_22222222222222222221 nat (Prod out_222222222222222222211 (App cardinal V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) n'_22222222222222222221) (App eq nat n'_22222222222222222221 n_2222222222222222222))))) (App Coq.Init.Logic.eq_ind_r (App Coq.Sets.Ensembles.Ensemble V_222222222222) (App Empty_set V_222222222222) (Lambda e_222222222222222222 (App Coq.Sets.Ensembles.Ensemble V_222222222222) (Prod n'_2222222222222222221 nat (Prod out_22222222222222222211 (App cardinal V_222222222222 e_222222222222222222 n'_2222222222222222221) (App eq nat n'_2222222222222222221 O)))) (Lambda n'_222222222222222222 nat (Lambda CE_2222222222222222222 (App cardinal V_222222222222 (App Empty_set V_222222222222) n'_222222222222222222) (App Coq.Sets.Finite_sets_facts.cardinal_unicity V_222222222222 (App Empty_set V_222222222222) n'_222222222222222222 CE_2222222222222222222 O (App card_empty V_222222222222)))) (App Im U_22222222222 V_222222222222 (App Empty_set U_22222222222) f_22222222222222) (App Coq.Sets.Image.image_empty U_22222222222 V_222222222222 f_22222222222222)) (Lambda A_222222222222222222 (App Coq.Sets.Ensembles.Ensemble U_22222222222) (Lambda n_2222222222222222222 nat (Lambda H'0_22222222222222222222 (App cardinal U_22222222222 A_222222222222222222 n_2222222222222222222) (Lambda H'1_222222222222222222222 (Prod n'_222222222222222222221 nat (Prod out_2222222222222222222211 (App cardinal V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) n'_222222222222222222221) (App eq nat n'_222222222222222222221 n_2222222222222222222))) (Lambda x_2222222222222222222222 U_22222222222 (Lambda H'2_22222222222222222222222 (App Coq.Init.Logic.not (App Coq.Sets.Ensembles.In U_22222222222 A_222222222222222222 x_2222222222222222222222)) (Lambda n'_222222222222222222222222 nat (App Coq.Init.Logic.eq_ind_r (App Coq.Sets.Ensembles.Ensemble V_222222222222) (App Coq.Sets.Ensembles.Add V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) (App f_22222222222222 x_2222222222222222222222)) (Lambda e_2222222222222222222222222 (App Coq.Sets.Ensembles.Ensemble V_222222222222) (Prod out_22222222222222222222222221 (App cardinal V_222222222222 e_2222222222222222222222222 n'_222222222222222222222222) (App eq nat n'_222222222222222222222222 (App S n_2222222222222222222)))) (Lambda H'3_2222222222222222222222222 (App cardinal V_222222222222 (App Coq.Sets.Ensembles.Add V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) (App f_22222222222222 x_2222222222222222222222)) n'_222222222222222222222222) (App Coq.Init.Logic.ex_ind nat (Lambda p_22222222222222222222222222 nat (App cardinal V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) p_22222222222222222222222222)) (App eq nat n'_222222222222222222222222 (App S n_2222222222222222222)) (Lambda i_22222222222222222222222222 nat (Lambda CI_222222222222222222222222222 (App cardinal V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) i_22222222222222222222222222) (App (LetIn H0_2222222222222222222222222223 (Cast (Lambda H0_2222222222222222222222222222 (App Coq.Sets.Ensembles.In V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) (App f_22222222222222 x_2222222222222222222222)) (App H'2_22222222222222222222222 (App Coq.Sets.Image.In_Image_elim U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222 H_2222222222222222 x_2222222222222222222222 H0_2222222222222222222222222222))) REVERTcast (App Coq.Init.Logic.not (App Coq.Sets.Ensembles.In V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) (App f_22222222222222 x_2222222222222222222222)))) (App Coq.Init.Logic.not (App Coq.Sets.Ensembles.In V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) (App f_22222222222222 x_2222222222222222222222))) (App (Lambda H0_22222222222222222222222222232 (App Coq.Init.Logic.not (App Coq.Sets.Ensembles.In V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) (App f_22222222222222 x_2222222222222222222222))) (Lambda H1_222222222222222222222222222322 (App eq nat i_22222222222222222222222222 n_2222222222222222222) (App Coq.Sets.Finite_sets_facts.cardinal_unicity V_222222222222 (App Coq.Sets.Ensembles.Add V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) (App f_22222222222222 x_2222222222222222222222)) n'_222222222222222222222222 H'3_2222222222222222222222222 (App S n_2222222222222222222) (App card_add V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) n_2222222222222222222 (App Coq.Init.Logic.eq_ind nat i_22222222222222222222222222 (Lambda n_2222222222222222222222222223222 nat (App cardinal V_222222222222 (App Im U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222) n_2222222222222222222222222223222)) CI_222222222222222222222222222 n_2222222222222222222 H1_222222222222222222222222222322) (App f_22222222222222 x_2222222222222222222222) H0_22222222222222222222222222232)))) H0_2222222222222222222222222223)) (App H'1_222222222222222222222 i_22222222222222222222222222 CI_222222222222222222222222222)))) (App Coq.Sets.Image.cardinal_Im_intro U_22222222222 V_222222222222 A_222222222222222222 f_22222222222222 n_2222222222222222222 H'0_22222222222222222222))) (App Im U_22222222222 V_222222222222 (App Coq.Sets.Ensembles.Add U_22222222222 A_222222222222222222 x_2222222222222222222222) f_22222222222222) (App Coq.Sets.Image.Im_add U_22222222222 V_222222222222 A_222222222222222222 x_2222222222222222222222 f_22222222222222))))))))) A_2222222222222 n_222222222222222 H0_22222222222222222))))))))) (Definition Coq.Init.Logic.iff (Lambda A_22222222223222 (Sort Prop) (Lambda B_222222222232222 (Sort Prop) (App and (Prod out_2222222222322221 A_22222222223222 B_222222222232222) (Prod out_2222222222322221 B_222222222232222 A_22222222223222))))) (Definition Coq.Init.Nat.compare (Fix (Functions (App compare 0 (Prod n_22222222223221 nat (Prod m_222222222232211 nat comparison)) (Lambda n_22222222223222 nat (Lambda m_222222222232222 nat (Case 0 (Lambda n_2222222222322222 nat comparison) (CaseMatch n_22222222223222) (CaseBranches (Case 0 (Lambda m_2222222222322222 nat comparison) (CaseMatch m_222222222232222) (CaseBranches Eq (Lambda n_2222222222322222 nat Lt))) (Lambda n'_2222222222322222 nat (Case 0 (Lambda m_22222222223222222 nat comparison) (CaseMatch m_222222222232222) (CaseBranches Gt (Lambda m'_22222222223222222 nat (App compare n'_2222222222322222 m'_22222222223222222))))))))))) 0)) (Definition Coq.Classes.Morphisms.subrelation_proper (LetIn U_222222222232223 (Sort Type) (Sort Type) (Lambda A_2222222222322232 U_222222222232223 (Lambda R'_22222222223222322 (App Coq.Relations.Relation_Definitions.relation A_2222222222322232) (Lambda m_222222222232223222 A_2222222222322232 (Lambda mor_2222222222322232222 (App Coq.Classes.Morphisms.Proper A_2222222222322232 R'_22222222223222322 m_222222222232223222) (Lambda R_22222222223222322222 (App Coq.Relations.Relation_Definitions.relation A_2222222222322232) (Lambda unc_222222222232223222222 (App Coq.Classes.Init.Unconvertible (App Coq.Relations.Relation_Definitions.relation A_2222222222322232) R_22222222223222322222 R'_22222222223222322) (Lambda sub_2222222222322232222222 (App Coq.Classes.RelationClasses.subrelation A_2222222222322232 R'_22222222223222322 R_22222222223222322222) (App sub_2222222222322232222222 m_222222222232223222 m_222222222232223222 mor_2222222222322232222)))))))))) (Definition Coq.Classes.Morphisms.respectful (LetIn U_222222222232223 (Sort Type) (Sort Type) (Lambda A_2222222222322232 U_222222222232223 (Lambda B_22222222223222322 U_222222222232223 (Lambda R_222222222232223222 (App Coq.Relations.Relation_Definitions.relation A_2222222222322232) (Lambda R'_2222222222322232222 (App Coq.Relations.Relation_Definitions.relation B_22222222223222322) (Lambda f_22222222223222322222 (Prod x_22222222223222322221 A_2222222222322232 B_22222222223222322) (Lambda g_222222222232223222222 (Prod x_222222222232223222221 A_2222222222322232 B_22222222223222322) (Prod x_2222222222322232222221 A_2222222222322232 (Prod y_22222222223222322222211 A_2222222222322232 (Prod out_222222222232223222222111 (App R_222222222232223222 x_2222222222322232222221 y_22222222223222322222211) (App R'_2222222222322232222 (App f_22222222223222322222 x_2222222222322232222221) (App g_222222222232223222222 y_22222222223222322222211))))))))))))) (Definition Coq.Classes.Morphisms_Prop.not_iff_morphism Coq.Classes.Morphisms_Prop.not_iff_morphism_obligation_1) (Definition Coq.Program.Basics.flip (Lambda A_222222222232222 (Sort Type) (Lambda B_2222222222322222 (Sort Type) (Lambda C_22222222223222222 (Sort Type) (Lambda f_222222222232222222 (Prod out_222222222232222221 A_222222222232222 (Prod out_2222222222322222211 B_2222222222322222 C_22222222223222222)) (Lambda x_2222222222322222222 B_2222222222322222 (Lambda y_22222222223222222222 A_222222222232222 (App f_222222222232222222 y_22222222223222222222 x_2222222222322222222)))))))) (Definition Coq.Program.Basics.impl (Lambda A_222222222232222 (Sort Prop) (Lambda B_2222222222322222 (Sort Prop) (Prod out_22222222223222221 A_222222222232222 B_2222222222322222)))) (Definition Coq.Classes.Morphisms.subrelation_respectful (LetIn U_222222222232223 (Sort Type) (Sort Type) (Lambda A_2222222222322232 U_222222222232223 (Lambda B_22222222223222322 U_222222222232223 (Lambda RA'_222222222232223222 (App Coq.Relations.Relation_Definitions.relation A_2222222222322232) (Lambda RA_2222222222322232222 (App Coq.Relations.Relation_Definitions.relation A_2222222222322232) (Lambda subl_22222222223222322222 (App Coq.Classes.RelationClasses.subrelation A_2222222222322232 RA'_222222222232223222 RA_2222222222322232222) (Lambda RB_222222222232223222222 (App Coq.Relations.Relation_Definitions.relation B_22222222223222322) (Lambda RB'_2222222222322232222222 (App Coq.Relations.Relation_Definitions.relation B_22222222223222322) (Lambda subr_22222222223222322222222 (App Coq.Classes.RelationClasses.subrelation B_22222222223222322 RB_222222222232223222222 RB'_2222222222322232222222) (Cast (Lambda x_222222222232223222222222 (Prod out_222222222232223222222221 A_2222222222322232 B_22222222223222322) (Lambda y_2222222222322232222222222 (Prod out_2222222222322232222222221 A_2222222222322232 B_22222222223222322) (Lambda H_22222222223222322222222222 (App Coq.Classes.Morphisms.respectful A_2222222222322232 B_22222222223222322 RA_2222222222322232222 RB_222222222232223222222 x_222222222232223222222222 y_2222222222322232222222222) (Cast (Lambda x0_222222222232223222222222222 A_2222222222322232 (Lambda y0_2222222222322232222222222222 A_2222222222322232 (Lambda H0_22222222223222322222222222222 (App RA'_222222222232223222 x0_222222222232223222222222222 y0_2222222222322232222222222222) (App (Lambda H1_222222222232223222222222222222 (Prod y_222222222232223222222222222221 B_22222222223222322 (Prod out_2222222222322232222222222222211 (App RB_222222222232223222222 (App x_222222222232223222222222 x0_222222222232223222222222222) y_222222222232223222222222222221) (App RB'_2222222222322232222222 (App x_222222222232223222222222 x0_222222222232223222222222222) y_222222222232223222222222222221))) (App (Lambda H2_2222222222322232222222222222222 (Prod y_2222222222322232222222222222221 A_2222222222322232 (Prod out_22222222223222322222222222222211 (App RA_2222222222322232222 x0_222222222232223222222222222 y_2222222222322232222222222222221) (App RB_222222222232223222222 (App x_222222222232223222222222 x0_222222222232223222222222222) (App y_2222222222322232222222222 y_2222222222322232222222222222221)))) (App (Lambda H3_22222222223222322222222222222222 (Prod out_22222222223222322222222222222221 (App RB_222222222232223222222 (App x_222222222232223222222222 x0_222222222232223222222222222) (App y_2222222222322232222222222 y0_2222222222322232222222222222)) (App RB'_2222222222322232222222 (App x_222222222232223222222222 x0_222222222232223222222222222) (App y_2222222222322232222222222 y0_2222222222322232222222222222))) (App subr_22222222223222322222222 (App x_222222222232223222222222 x0_222222222232223222222222222) (App y_2222222222322232222222222 y0_2222222222322232222222222222) (App H_22222222223222322222222222 x0_222222222232223222222222222 y0_2222222222322232222222222222 (App subl_22222222223222322222 x0_222222222232223222222222222 y0_2222222222322232222222222222 H0_22222222223222322222222222222)))) (App H1_222222222232223222222222222222 (App y_2222222222322232222222222 y0_2222222222322232222222222222)))) (App H_22222222223222322222222222 x0_222222222232223222222222222))) (App subr_22222222223222322222222 (App x_222222222232223222222222 x0_222222222232223222222222222)))))) REVERTcast (App Coq.Classes.Morphisms.respectful A_2222222222322232 B_22222222223222322 RA'_222222222232223222 RB'_2222222222322232222222 x_222222222232223222222222 y_2222222222322232222222222))))) REVERTcast (App Coq.Classes.RelationClasses.subrelation (Prod out_222222222232223222222221 A_2222222222322232 B_22222222223222322) (App Coq.Classes.Morphisms.respectful A_2222222222322232 B_22222222223222322 RA_2222222222322232222 RB_222222222232223222222) (App Coq.Classes.Morphisms.respectful A_2222222222322232 B_22222222223222322 RA'_222222222232223222 RB'_2222222222322232222222))))))))))))) (Definition Coq.Classes.Morphisms.subrelation_refl (LetIn U_222222222232223 (Sort Type) (Sort Type) (Lambda A_2222222222322232 U_222222222232223 (Lambda R_22222222223222322 (App Coq.Relations.Relation_Definitions.relation A_2222222222322232) (Cast (Lambda x_222222222232223222 A_2222222222322232 (Lambda y_2222222222322232222 A_2222222222322232 (Lambda H_22222222223222322222 (App R_22222222223222322 x_222222222232223222 y_2222222222322232222) H_22222222223222322222))) REVERTcast (App Coq.Classes.RelationClasses.subrelation A_2222222222322232 R_22222222223222322 R_22222222223222322)))))) (Definition Coq.Classes.Morphisms.iff_flip_impl_subrelation (Cast (Lambda x_222222222232222 (Sort Prop) (Lambda y_2222222222322222 (Sort Prop) (Lambda H_22222222223222222 (App Coq.Init.Logic.iff x_222222222232222 y_2222222222322222) (Cast (Lambda H0_222222222232222222 y_2222222222322222 (App Coq.Init.Logic.and_ind (Prod out_2222222222322222221 x_222222222232222 y_2222222222322222) (Prod out_2222222222322222221 y_2222222222322222 x_222222222232222) x_222222222232222 (Lambda H_2222222222322222222 (Prod out_2222222222322222221 x_222222222232222 y_2222222222322222) (Lambda H1_22222222223222222222 (Prod out_22222222223222222221 y_2222222222322222 x_222222222232222) (App (Lambda H1_222222222232222222222 x_222222222232222 H1_222222222232222222222) (App H1_22222222223222222222 H0_222222222232222222)))) H_22222222223222222)) REVERTcast (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl x_222222222232222 y_2222222222322222))))) REVERTcast (App Coq.Classes.RelationClasses.subrelation (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)))) (Definition Coq.Classes.RelationClasses.symmetry (Lambda A_222222222232222 (Sort Type) (Lambda R_2222222222322222 (App Coq.Relations.Relation_Definitions.relation A_222222222232222) (Lambda Symmetric_22222222223222222 (App Coq.Classes.RelationClasses.Symmetric A_222222222232222 R_2222222222322222) Symmetric_22222222223222222)))) (Definition Coq.Classes.RelationClasses.iff_Symmetric Coq.Init.Logic.iff_sym) (Definition Coq.Arith.PeanoNat.Nat.compare_lt_iff (Lambda n_22222222223222 nat (Lambda m_222222222232222 nat (App Coq.Init.Datatypes.nat_ind (Lambda n_2222222222322222 nat (Prod m_22222222223222221 nat (App Coq.Init.Logic.iff (App eq comparison (App Coq.Init.Nat.compare n_2222222222322222 m_22222222223222221) Lt) (App Coq.Init.Peano.lt n_2222222222322222 m_22222222223222221)))) (Lambda m_2222222222322222 nat (Case 0 (Lambda n_22222222223222222 nat (App Coq.Init.Logic.iff (App eq comparison (App Coq.Init.Nat.compare O n_22222222223222222) Lt) (App Coq.Init.Peano.lt O n_22222222223222222))) (CaseMatch m_2222222222322222) (CaseBranches (Cast (App conj (Prod out_22222222223222221 (App eq comparison Eq Lt) (App Coq.Init.Peano.lt O O)) (Prod out_22222222223222221 (App Coq.Init.Peano.lt O O) (App eq comparison Eq Lt)) (Lambda H_22222222223222222 (App eq comparison Eq Lt) (LetIn H0_222222222232222223 (Case 2 (Lambda y_222222222232222222 comparison (Lambda out_2222222222322222222 (App eq comparison Eq y_222222222232222222) (Prod out_22222222223222222221 (App eq comparison y_222222222232222222 Lt) (App Coq.Init.Peano.lt O O)))) (CaseMatch H_22222222223222222) (CaseBranches (Lambda H0_222222222232222222 (App eq comparison Eq Lt) (App (Lambda H0_2222222222322222222 (App eq comparison Eq Lt) (LetIn H1_22222222223222222223 (App Coq.Init.Logic.eq_ind comparison Eq (Lambda e_22222222223222222222 comparison (Case 0 (Lambda c_222222222232222222222 comparison (Sort Prop)) (CaseMatch e_22222222223222222222) (CaseBranches True False False))) I Lt H0_2222222222322222222) False (App Coq.Init.Logic.False_ind (App Coq.Init.Peano.lt O O) H1_22222222223222222223))) H0_222222222232222222)))) (Prod out_222222222232222221 (App eq comparison Lt Lt) (App Coq.Init.Peano.lt O O)) (App H0_222222222232222223 (App eq_refl comparison Lt)))) (Lambda H_22222222223222222 (App Coq.Init.Peano.lt O O) (LetIn H0_222222222232222223 (Case 1 (Lambda n_222222222232222222 nat (Lambda out_2222222222322222222 (App le (App S O) n_222222222232222222) (Prod out_22222222223222222221 (App eq nat n_222222222232222222 O) (App eq comparison Eq Lt)))) (CaseMatch H_22222222223222222) (CaseBranches (Lambda H0_222222222232222222 (App eq nat (App S O) O) (App (Lambda H0_2222222222322222222 (App eq nat (App S O) O) (LetIn H1_22222222223222222223 (App Coq.Init.Logic.eq_ind nat (App S O) (Lambda e_22222222223222222222 nat (Case 0 (Lambda n_222222222232222222222 nat (Sort Prop)) (CaseMatch e_22222222223222222222) (CaseBranches False (Lambda out_222222222232222222222 nat True)))) I O H0_2222222222322222222) False (App Coq.Init.Logic.False_ind (App eq comparison Eq Lt) H1_22222222223222222223))) H0_222222222232222222)) (Lambda m_222222222232222222 nat (Lambda H0_2222222222322222222 (App le (App S O) m_222222222232222222) (Lambda H1_22222222223222222222 (App eq nat (App S m_222222222232222222) O) (App (Lambda H1_222222222232222222222 (App eq nat (App S m_222222222232222222) O) (LetIn H0_2222222222322222222223 (App Coq.Init.Logic.eq_ind nat (App S m_222222222232222222) (Lambda e_2222222222322222222222 nat (Case 0 (Lambda n_22222222223222222222222 nat (Sort Prop)) (CaseMatch e_2222222222322222222222) (CaseBranches False (Lambda out_22222222223222222222222 nat True)))) I O H1_222222222232222222222) False (App Coq.Init.Logic.False_ind (Prod H0_22222222223222222222231 (App le (App S O) m_222222222232222222) (App eq comparison Eq Lt)) H0_2222222222322222222223))) H1_22222222223222222222 H0_2222222222322222222)))))) (Prod out_222222222232222221 (App eq nat O O) (App eq comparison Eq Lt)) (App H0_222222222232222223 (App eq_refl nat O))))) REVERTcast (App Coq.Init.Logic.iff (App eq comparison (App Coq.Init.Nat.compare O O) Lt) (App Coq.Init.Peano.lt O O))) (Lambda m_22222222223222222 nat (Cast (App conj (Prod out_222222222232222221 (App eq comparison Lt Lt) (App Coq.Init.Peano.lt O (App S m_22222222223222222))) (Prod out_222222222232222221 (App Coq.Init.Peano.lt O (App S m_22222222223222222)) (App eq comparison Lt Lt)) (Lambda _tmp_222222222232222222 (App eq comparison Lt Lt) (App Coq.Init.Peano.le_n_S O m_22222222223222222 (App Coq.Init.Peano.le_0_n m_22222222223222222))) (Lambda H_222222222232222222 (App Coq.Init.Peano.lt O (App S m_22222222223222222)) (App eq_refl comparison Lt))) REVERTcast (App Coq.Init.Logic.iff (App eq comparison (App Coq.Init.Nat.compare O (App S m_22222222223222222)) Lt) (App Coq.Init.Peano.lt O (App S m_22222222223222222)))))))) (Lambda n_2222222222322222 nat (Lambda IHn_22222222223222222 (Prod m_22222222223222221 nat (App Coq.Init.Logic.iff (App eq comparison (App Coq.Init.Nat.compare n_2222222222322222 m_22222222223222221) Lt) (App Coq.Init.Peano.lt n_2222222222322222 m_22222222223222221))) (Lambda m_222222222232222222 nat (Case 0 (Lambda n_2222222222322222222 nat (App Coq.Init.Logic.iff (App eq comparison (App Coq.Init.Nat.compare (App S n_2222222222322222) n_2222222222322222222) Lt) (App Coq.Init.Peano.lt (App S n_2222222222322222) n_2222222222322222222))) (CaseMatch m_222222222232222222) (CaseBranches (Cast (App conj (Prod out_2222222222322222221 (App eq comparison Gt Lt) (App Coq.Init.Peano.lt (App S n_2222222222322222) O)) (Prod out_2222222222322222221 (App Coq.Init.Peano.lt (App S n_2222222222322222) O) (App eq comparison Gt Lt)) (Lambda H_2222222222322222222 (App eq comparison Gt Lt) (LetIn H0_22222222223222222223 (Case 2 (Lambda y_22222222223222222222 comparison (Lambda out_222222222232222222222 (App eq comparison Gt y_22222222223222222222) (Prod out_2222222222322222222221 (App eq comparison y_22222222223222222222 Lt) (App Coq.Init.Peano.lt (App S n_2222222222322222) O)))) (CaseMatch H_2222222222322222222) (CaseBranches (Lambda H0_22222222223222222222 (App eq comparison Gt Lt) (App (Lambda H0_222222222232222222222 (App eq comparison Gt Lt) (LetIn H1_2222222222322222222223 (App Coq.Init.Logic.eq_ind comparison Gt (Lambda e_2222222222322222222222 comparison (Case 0 (Lambda c_22222222223222222222222 comparison (Sort Prop)) (CaseMatch e_2222222222322222222222) (CaseBranches False False True))) I Lt H0_222222222232222222222) False (App Coq.Init.Logic.False_ind (App Coq.Init.Peano.lt (App S n_2222222222322222) O) H1_2222222222322222222223))) H0_22222222223222222222)))) (Prod out_22222222223222222221 (App eq comparison Lt Lt) (App Coq.Init.Peano.lt (App S n_2222222222322222) O)) (App H0_22222222223222222223 (App eq_refl comparison Lt)))) (Lambda H_2222222222322222222 (App Coq.Init.Peano.lt (App S n_2222222222322222) O) (LetIn H0_22222222223222222223 (Case 1 (Lambda n_22222222223222222222 nat (Lambda out_222222222232222222222 (App le (App S (App S n_2222222222322222)) n_22222222223222222222) (Prod out_2222222222322222222221 (App eq nat n_22222222223222222222 O) (App eq comparison Gt Lt)))) (CaseMatch H_2222222222322222222) (CaseBranches (Lambda H0_22222222223222222222 (App eq nat (App S (App S n_2222222222322222)) O) (App (Lambda H0_222222222232222222222 (App eq nat (App S (App S n_2222222222322222)) O) (LetIn H1_2222222222322222222223 (App Coq.Init.Logic.eq_ind nat (App S (App S n_2222222222322222)) (Lambda e_2222222222322222222222 nat (Case 0 (Lambda n_22222222223222222222222 nat (Sort Prop)) (CaseMatch e_2222222222322222222222) (CaseBranches False (Lambda out_22222222223222222222222 nat True)))) I O H0_222222222232222222222) False (App Coq.Init.Logic.False_ind (App eq comparison Gt Lt) H1_2222222222322222222223))) H0_22222222223222222222)) (Lambda m_22222222223222222222 nat (Lambda H0_222222222232222222222 (App le (App S (App S n_2222222222322222)) m_22222222223222222222) (Lambda H1_2222222222322222222222 (App eq nat (App S m_22222222223222222222) O) (App (Lambda H1_22222222223222222222222 (App eq nat (App S m_22222222223222222222) O) (LetIn H0_222222222232222222222223 (App Coq.Init.Logic.eq_ind nat (App S m_22222222223222222222) (Lambda e_222222222232222222222222 nat (Case 0 (Lambda n_2222222222322222222222222 nat (Sort Prop)) (CaseMatch e_222222222232222222222222) (CaseBranches False (Lambda out_2222222222322222222222222 nat True)))) I O H1_22222222223222222222222) False (App Coq.Init.Logic.False_ind (Prod H0_2222222222322222222222231 (App le (App S (App S n_2222222222322222)) m_22222222223222222222) (App eq comparison Gt Lt)) H0_222222222232222222222223))) H1_2222222222322222222222 H0_222222222232222222222)))))) (Prod out_22222222223222222221 (App eq nat O O) (App eq comparison Gt Lt)) (App H0_22222222223222222223 (App eq_refl nat O))))) REVERTcast (App Coq.Init.Logic.iff (App eq comparison (App Coq.Init.Nat.compare (App S n_2222222222322222) O) Lt) (App Coq.Init.Peano.lt (App S n_2222222222322222) O))) (Lambda m_2222222222322222222 nat (Cast (App (Lambda lemma_22222222223222222222 (App Coq.Init.Logic.iff (App eq comparison (App Coq.Init.Nat.compare n_2222222222322222 m_2222222222322222222) Lt) (App Coq.Init.Peano.lt n_2222222222322222 m_2222222222322222222)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App eq comparison (App Coq.Init.Nat.compare n_2222222222322222 m_2222222222322222222) Lt) (App Coq.Init.Peano.lt n_2222222222322222 m_2222222222322222222) lemma_22222222223222222222 (App Coq.Init.Peano.lt (App S n_2222222222322222) (App S m_2222222222322222222)) (App Coq.Init.Peano.lt (App S n_2222222222322222) (App S m_2222222222322222222)) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App Coq.Init.Peano.lt (App S n_2222222222322222) (App S m_2222222222322222222))))) (App IHn_22222222223222222 m_2222222222322222222) (App conj (Prod out_22222222223222222221 (App Coq.Init.Peano.lt n_2222222222322222 m_2222222222322222222) (App Coq.Init.Peano.lt (App S n_2222222222322222) (App S m_2222222222322222222))) (Prod out_22222222223222222221 (App Coq.Init.Peano.lt (App S n_2222222222322222) (App S m_2222222222322222222)) (App Coq.Init.Peano.lt n_2222222222322222 m_2222222222322222222)) (App Coq.Init.Peano.le_n_S (App S n_2222222222322222) m_2222222222322222222) (App Coq.Init.Peano.le_S_n (App S n_2222222222322222) m_2222222222322222222))) REVERTcast (App Coq.Init.Logic.iff (App eq comparison (App Coq.Init.Nat.compare (App S n_2222222222322222) (App S m_2222222222322222222)) Lt) (App Coq.Init.Peano.lt (App S n_2222222222322222) (App S m_2222222222322222222)))))))))) n_22222222223222 m_222222222232222)))) (Definition Coq.Init.Logic.False_ind (Lambda P_222222222232222232 (Sort Prop) (Lambda f_2222222222322222322 False (Case 0 (Lambda out_22222222223222223222 False P_222222222232222232) (CaseMatch f_2222222222322222322) (CaseBranches))))) (Definition Coq.Arith.PeanoNat.Nat.compare_refl (Lambda x_22222222223222 nat (LetIn H_222222222232223 (Lambda x_222222222232222 nat (Lambda y_2222222222322222 nat (Case 2 (Lambda out_22222222223222222 (App and (Prod out_22222222223222221 (App eq comparison (App Coq.Init.Nat.compare x_222222222232222 y_2222222222322222) Eq) (App eq nat x_222222222232222 y_2222222222322222)) (Prod out_22222222223222221 (App eq nat x_222222222232222 y_2222222222322222) (App eq comparison (App Coq.Init.Nat.compare x_222222222232222 y_2222222222322222) Eq))) (Prod out_222222222232222221 (App eq nat x_222222222232222 y_2222222222322222) (App eq comparison (App Coq.Init.Nat.compare x_222222222232222 y_2222222222322222) Eq))) (CaseMatch (App Coq.Arith.PeanoNat.Nat.compare_eq_iff x_222222222232222 y_2222222222322222)) (CaseBranches (Lambda out_22222222223222222 (Prod out_22222222223222221 (App eq comparison (App Coq.Init.Nat.compare x_222222222232222 y_2222222222322222) Eq) (App eq nat x_222222222232222 y_2222222222322222)) (Lambda out_222222222232222222 (Prod out_222222222232222221 (App eq nat x_222222222232222 y_2222222222322222) (App eq comparison (App Coq.Init.Nat.compare x_222222222232222 y_2222222222322222) Eq)) out_222222222232222222)))))) (Prod x_222222222232221 nat (Prod y_2222222222322211 nat (Prod out_22222222223222111 (App eq nat x_222222222232221 y_2222222222322211) (App eq comparison (App Coq.Init.Nat.compare x_222222222232221 y_2222222222322211) Eq)))) (App H_222222222232223 x_22222222223222 x_22222222223222 (App Coq.Classes.RelationClasses.reflexivity nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) x_22222222223222))))) (Definition Coq.Arith.PeanoNat.Nat.lt_irrefl (Lambda x_2222222222322 nat (App (Lambda lemma_22222222223222 (App Coq.Init.Logic.iff (App eq comparison (App Coq.Init.Nat.compare x_2222222222322 x_2222222222322) Lt) (App Coq.Init.Peano.lt x_2222222222322 x_2222222222322)) (App Coq.Classes.Morphisms.subrelation_proper (Prod A_222222222232221 (Sort Prop) (Sort Prop)) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) Coq.Init.Logic.not Coq.Classes.Morphisms_Prop.not_iff_morphism (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) tt (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation) (App Coq.Init.Peano.lt x_2222222222322 x_2222222222322) (App eq comparison (App Coq.Init.Nat.compare x_2222222222322 x_2222222222322) Lt) (App Coq.Classes.RelationClasses.symmetry (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Symmetric (App eq comparison (App Coq.Init.Nat.compare x_2222222222322 x_2222222222322) Lt) (App Coq.Init.Peano.lt x_2222222222322 x_2222222222322) lemma_22222222223222))) (App Coq.Arith.PeanoNat.Nat.compare_lt_iff x_2222222222322 x_2222222222322) (App Coq.Init.Logic.eq_ind_r comparison Eq (Lambda c_22222222223222 comparison (App Coq.Init.Logic.not (App eq comparison c_22222222223222 Lt))) (Cast (Lambda H_22222222223222 (App eq comparison Eq Lt) (LetIn H0_222222222232223 (Case 2 (Lambda y_222222222232222 comparison (Lambda out_2222222222322222 (App eq comparison Eq y_222222222232222) (Prod out_22222222223222221 (App eq comparison y_222222222232222 Lt) False))) (CaseMatch H_22222222223222) (CaseBranches (Lambda H0_222222222232222 (App eq comparison Eq Lt) (App (Lambda H0_2222222222322222 (App eq comparison Eq Lt) (LetIn H1_22222222223222223 (App Coq.Init.Logic.eq_ind comparison Eq (Lambda e_22222222223222222 comparison (Case 0 (Lambda c_222222222232222222 comparison (Sort Prop)) (CaseMatch e_22222222223222222) (CaseBranches True False False))) I Lt H0_2222222222322222) False (App Coq.Init.Logic.False_ind False H1_22222222223222223))) H0_222222222232222)))) (Prod out_222222222232221 (App eq comparison Lt Lt) False) (App H0_222222222232223 (App eq_refl comparison Lt)))) REVERTcast (App Coq.Init.Logic.not (App eq comparison Eq Lt))) (App Coq.Init.Nat.compare x_2222222222322 x_2222222222322) (App Coq.Arith.PeanoNat.Nat.compare_refl x_2222222222322))))) (Definition Coq.Sets.Image.Pigeonhole (Lambda U_2 (Sort Type) (Lambda V_22 (Sort Type) (Cast (Lambda A_222 (App Coq.Sets.Ensembles.Ensemble U_2) (Lambda f_2222 (Prod out_2221 U_2 V_22) (Lambda n_22222 nat (Lambda CAn_222222 (App cardinal U_2 A_222 n_22222) (Lambda n'_2222222 nat (Lambda CIfn'_22222222 (App cardinal V_22 (App Im U_2 V_22 A_222 f_2222) n'_2222222) (Lambda ltn'n_222222222 (App Coq.Init.Peano.lt n'_2222222 n_22222) (Lambda I_2222222222 (App Coq.Sets.Image.injective U_2 V_22 f_2222) (LetIn H_22222222223 (App Coq.Sets.Image.injective_preserves_cardinal U_2 V_22 A_222 f_2222 n_22222 I_2222222222 CAn_222222 n'_2222222 CIfn'_22222222) (App eq nat n'_2222222 n_22222) (App (Lambda E_222222222232 (App eq nat n'_2222222 n_22222) (App Coq.Init.Logic.eq_ind_r nat n_22222 (Lambda n'_2222222222322 nat (Prod ltn'n_22222222223221 (App Coq.Init.Peano.lt n'_2222222222322 n_22222) False)) (App Coq.Arith.PeanoNat.Nat.lt_irrefl n_22222) n'_2222222 E_222222222232 ltn'n_222222222)) H_22222222223)))))))))) REVERTcast (Prod A_221 (App Coq.Sets.Ensembles.Ensemble U_2) (Prod f_2211 (Prod out_2211 U_2 V_22) (Prod n_22111 nat (Prod out_221111 (App cardinal U_2 A_221 n_22111) (Prod n'_2211111 nat (Prod out_22111111 (App cardinal V_22 (App Im U_2 V_22 A_221 f_2211) n'_2211111) (Prod out_221111111 (App Coq.Init.Peano.lt n'_2211111 n_22111) (App Coq.Init.Logic.not (App Coq.Sets.Image.injective U_2 V_22 f_2211))))))))))))) 