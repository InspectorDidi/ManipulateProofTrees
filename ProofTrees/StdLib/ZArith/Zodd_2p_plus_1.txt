(Definition Coq.ZArith.Zeven.Zodd (Lambda Z (Case 0 (Lambda Z (Sort Prop)) (CaseMatch gen_var_4) (CaseBranches False (Lambda positive (Case 0 (Lambda positive (Sort Prop)) (CaseMatch gen_var_6) (CaseBranches (Lambda positive True) (Lambda positive False) True))) (Lambda positive (Case 0 (Lambda positive (Sort Prop)) (CaseMatch gen_var_10) (CaseBranches (Lambda positive True) (Lambda positive False) True))))))) (Definition Coq.ZArith.BinIntDef.Z.add (Lambda Z (Lambda Z (Case 0 (Lambda Z Z) (CaseMatch gen_var_15) (CaseBranches gen_var_14 (Lambda positive (Case 0 (Lambda Z Z) (CaseMatch gen_var_17) (CaseBranches gen_var_15 (Lambda positive (App Zpos (App Coq.PArith.BinPosDef.Pos.add gen_var_16 gen_var_18))) (Lambda positive (App Coq.ZArith.BinIntDef.Z.pos_sub gen_var_16 gen_var_19))))) (Lambda positive (Case 0 (Lambda Z Z) (CaseMatch gen_var_21) (CaseBranches gen_var_15 (Lambda positive (App Coq.ZArith.BinIntDef.Z.pos_sub gen_var_22 gen_var_20)) (Lambda positive (App Zneg (App Coq.PArith.BinPosDef.Pos.add gen_var_20 gen_var_23))))))))))) (Definition Coq.ZArith.BinIntDef.Z.mul (Lambda Z (Lambda Z (Case 0 (Lambda Z Z) (CaseMatch gen_var_26) (CaseBranches Z0 (Lambda positive (Case 0 (Lambda Z Z) (CaseMatch gen_var_28) (CaseBranches Z0 (Lambda positive (App Zpos (App Coq.PArith.BinPosDef.Pos.mul gen_var_27 gen_var_29))) (Lambda positive (App Zneg (App Coq.PArith.BinPosDef.Pos.mul gen_var_27 gen_var_30)))))) (Lambda positive (Case 0 (Lambda Z Z) (CaseMatch gen_var_32) (CaseBranches Z0 (Lambda positive (App Zneg (App Coq.PArith.BinPosDef.Pos.mul gen_var_31 gen_var_33))) (Lambda positive (App Zpos (App Coq.PArith.BinPosDef.Pos.mul gen_var_31 gen_var_34))))))))))) (Definition Coq.ZArith.Zeven.Zodd_2p_plus_1 (Lambda Z (Case 0 (Lambda Z (App Coq.ZArith.Zeven.Zodd (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Zpos (App xO xH)) gen_var_4) (App Zpos xH)))) (CaseMatch gen_var_12) (CaseBranches I (Lambda positive (Case 0 (Lambda positive (App Coq.ZArith.Zeven.Zodd (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Zpos (App xO xH)) (App Zpos gen_var_36)) (App Zpos xH)))) (CaseMatch gen_var_36) (CaseBranches (Lambda positive I) (Lambda positive I) I))) (Lambda positive (Case 0 (Lambda positive (App Coq.ZArith.Zeven.Zodd (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul (App Zpos (App xO xH)) (App Zneg gen_var_40)) (App Zpos xH)))) (CaseMatch gen_var_40) (CaseBranches (Lambda positive I) (Lambda positive I) I))))))) 