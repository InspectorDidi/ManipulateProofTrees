(Definition Coq.Init.Peano.gt (Lambda nat (Lambda nat (App Coq.Init.Peano.lt gen_var_6 gen_var_5)))) (Definition Coq.Arith.PeanoNat.Nat.lt_le_trans (Lambda nat (Lambda nat (Lambda nat (Lambda (App Coq.Init.Peano.lt gen_var_8 gen_var_9) (Lambda (App le gen_var_9 gen_var_10) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.not_ge_lt gen_var_8 gen_var_10 (Cast (Lambda (App le gen_var_10 gen_var_8) (App (Lambda (App Coq.Init.Peano.lt gen_var_10 gen_var_9) (App (Lambda (App Coq.Init.Peano.lt gen_var_9 gen_var_9) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.lt_irrefl gen_var_9 gen_var_15)) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.le_lt_trans gen_var_9 gen_var_10 gen_var_9 gen_var_12 gen_var_14))) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.le_lt_trans gen_var_10 gen_var_8 gen_var_9 gen_var_13 gen_var_11))) REVERTcast (App Coq.Init.Logic.not (App le gen_var_10 gen_var_8)))))))))) (Definition Coq.Arith.PeanoNat.Nat.succ_le_mono (Lambda nat (Lambda nat (App (Lambda (App Coq.Init.Logic.iff (App le gen_var_23 gen_var_24) (App or (App Coq.Init.Peano.lt gen_var_23 gen_var_24) (App eq nat gen_var_23 gen_var_24))) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App le gen_var_23 gen_var_24) (App or (App Coq.Init.Peano.lt gen_var_23 gen_var_24) (App eq nat gen_var_23 gen_var_24)) gen_var_25 (App le (App S gen_var_23) (App S gen_var_24)) (App le (App S gen_var_23) (App S gen_var_24)) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App le (App S gen_var_23) (App S gen_var_24))))) (App Coq.Arith.PeanoNat.Nat.lt_eq_cases gen_var_23 gen_var_24) (App (Lambda (App Coq.Init.Logic.iff (App le (App S gen_var_23) (App S gen_var_24)) (App or (App Coq.Init.Peano.lt (App S gen_var_23) (App S gen_var_24)) (App eq nat (App S gen_var_23) (App S gen_var_24)))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App or (App Coq.Init.Peano.lt gen_var_23 gen_var_24) (App eq nat gen_var_23 gen_var_24)) (App le (App S gen_var_23) (App S gen_var_24)) (App or (App Coq.Init.Peano.lt (App S gen_var_23) (App S gen_var_24)) (App eq nat (App S gen_var_23) (App S gen_var_24))) gen_var_26)) (App Coq.Arith.PeanoNat.Nat.lt_eq_cases (App S gen_var_23) (App S gen_var_24)) (App (Lambda (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt gen_var_23 gen_var_24) (App Coq.Init.Peano.lt (App S gen_var_23) (App S gen_var_24))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App or (App Coq.Init.Peano.lt gen_var_23 gen_var_24) (App eq nat gen_var_23 gen_var_24)) (App or (App Coq.Init.Peano.lt (App S gen_var_23) (App S gen_var_24)) (App eq nat (App S gen_var_23) (App S gen_var_24))) (App or (App Coq.Init.Peano.lt gen_var_23 gen_var_24) (App eq nat (App S gen_var_23) (App S gen_var_24))) (App Coq.Classes.Morphisms_Prop.or_iff_morphism (App Coq.Init.Peano.lt (App S gen_var_23) (App S gen_var_24)) (App Coq.Init.Peano.lt gen_var_23 gen_var_24) (App Coq.Classes.RelationClasses.symmetry (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Symmetric (App Coq.Init.Peano.lt gen_var_23 gen_var_24) (App Coq.Init.Peano.lt (App S gen_var_23) (App S gen_var_24)) gen_var_27) (App eq nat (App S gen_var_23) (App S gen_var_24)) (App eq nat (App S gen_var_23) (App S gen_var_24)) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq nat (App S gen_var_23) (App S gen_var_24)))))) (App Coq.Arith.PeanoNat.Nat.succ_lt_mono gen_var_23 gen_var_24) (App (Lambda (App Coq.Init.Logic.iff (App eq nat (App S gen_var_23) (App S gen_var_24)) (App eq nat gen_var_23 gen_var_24)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App or (App Coq.Init.Peano.lt gen_var_23 gen_var_24) (App eq nat gen_var_23 gen_var_24)) (App or (App Coq.Init.Peano.lt gen_var_23 gen_var_24) (App eq nat (App S gen_var_23) (App S gen_var_24))) (App or (App Coq.Init.Peano.lt gen_var_23 gen_var_24) (App eq nat gen_var_23 gen_var_24)) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism (Sort Prop) (Prod gen_var_29 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) or Coq.Classes.Morphisms_Prop.or_iff_morphism (App Coq.Init.Peano.lt gen_var_23 gen_var_24) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Peano.lt gen_var_23 gen_var_24)) (App eq nat (App S gen_var_23) (App S gen_var_24)) (App eq nat gen_var_23 gen_var_24) gen_var_28))) (App Coq.Arith.PeanoNat.Nat.succ_inj_wd gen_var_23 gen_var_24) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App or (App Coq.Init.Peano.lt gen_var_23 gen_var_24) (App eq nat gen_var_23 gen_var_24)))))))))) (Definition Coq.Arith.Gt.gt_trans_S (Lambda nat (Lambda nat (Lambda nat (Lambda (App Coq.Init.Peano.gt (App S gen_var_5) gen_var_6) (Lambda (App Coq.Init.Peano.gt gen_var_6 gen_var_3) (App Coq.Arith.PeanoNat.Nat.lt_le_trans gen_var_10 gen_var_9 gen_var_8 gen_var_12 (LetIn gen_var_16 (Lambda nat (Lambda nat (Case 2 (Lambda (App and (Prod Anonymous (App le gen_var_17 gen_var_18) (App le (App S gen_var_17) (App S gen_var_18))) (Prod Anonymous (App le (App S gen_var_17) (App S gen_var_18)) (App le gen_var_17 gen_var_18))) (Prod Anonymous (App le (App S gen_var_17) (App S gen_var_18)) (App le gen_var_17 gen_var_18))) (CaseMatch (App Coq.Arith.PeanoNat.Nat.succ_le_mono gen_var_23 gen_var_24)) (CaseBranches (Lambda (Prod Anonymous (App le gen_var_23 gen_var_24) (App le (App S gen_var_23) (App S gen_var_24))) (Lambda (Prod Anonymous (App le (App S gen_var_23) (App S gen_var_24)) (App le gen_var_23 gen_var_24)) Anonymous)))))) (Prod gen_var_34 nat (Prod gen_var_35 nat (Prod Anonymous (App le (App S gen_var_34) (App S gen_var_35)) (App le gen_var_34 gen_var_35)))) (App gen_var_16 gen_var_35 gen_var_34 gen_var_11))))))))) 