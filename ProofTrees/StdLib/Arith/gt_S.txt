(Definition Coq.Init.Peano.gt (Lambda nat (Lambda nat (App Coq.Init.Peano.lt gen_var_5 gen_var_4)))) (Definition Coq.Init.Peano.lt (Lambda nat (Lambda nat (App le (App S gen_var_11) gen_var_12)))) (Definition Coq.Arith.PeanoNat.Nat.lt_eq_cases (Lambda nat (Lambda nat (App (Lambda (App Coq.Init.Logic.iff (App eq comparison (App Coq.Init.Nat.compare gen_var_15 gen_var_16) Lt) (App Coq.Init.Peano.lt gen_var_15 gen_var_16)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App le gen_var_15 gen_var_16) (App or (App Coq.Init.Peano.lt gen_var_15 gen_var_16) (App eq nat gen_var_15 gen_var_16)) (App or (App eq comparison (App Coq.Init.Nat.compare gen_var_15 gen_var_16) Lt) (App eq nat gen_var_15 gen_var_16)) (App Coq.Classes.Morphisms_Prop.or_iff_morphism (App Coq.Init.Peano.lt gen_var_15 gen_var_16) (App eq comparison (App Coq.Init.Nat.compare gen_var_15 gen_var_16) Lt) (App Coq.Classes.RelationClasses.symmetry (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Symmetric (App eq comparison (App Coq.Init.Nat.compare gen_var_15 gen_var_16) Lt) (App Coq.Init.Peano.lt gen_var_15 gen_var_16) gen_var_17) (App eq nat gen_var_15 gen_var_16) (App eq nat gen_var_15 gen_var_16) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq nat gen_var_15 gen_var_16))))) (App Coq.Arith.PeanoNat.Nat.compare_lt_iff gen_var_15 gen_var_16) (App (Lambda (App Coq.Init.Logic.iff (App Coq.Init.Logic.not (App eq comparison (App Coq.Init.Nat.compare gen_var_15 gen_var_16) Gt)) (App le gen_var_15 gen_var_16)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App le gen_var_15 gen_var_16) (App Coq.Init.Logic.not (App eq comparison (App Coq.Init.Nat.compare gen_var_15 gen_var_16) Gt)) (App Coq.Classes.RelationClasses.symmetry (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Symmetric (App Coq.Init.Logic.not (App eq comparison (App Coq.Init.Nat.compare gen_var_15 gen_var_16) Gt)) (App le gen_var_15 gen_var_16) gen_var_18) (App or (App eq comparison (App Coq.Init.Nat.compare gen_var_15 gen_var_16) Lt) (App eq nat gen_var_15 gen_var_16)) (App or (App eq comparison (App Coq.Init.Nat.compare gen_var_15 gen_var_16) Lt) (App eq nat gen_var_15 gen_var_16)) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App or (App eq comparison (App Coq.Init.Nat.compare gen_var_15 gen_var_16) Lt) (App eq nat gen_var_15 gen_var_16))))) (App Coq.Arith.PeanoNat.Nat.compare_le_iff gen_var_15 gen_var_16) (App (Lambda (App Coq.Init.Logic.iff (App eq comparison (App Coq.Init.Nat.compare gen_var_15 gen_var_16) Eq) (App eq nat gen_var_15 gen_var_16)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Logic.not (App eq comparison (App Coq.Init.Nat.compare gen_var_15 gen_var_16) Gt)) (App or (App eq comparison (App Coq.Init.Nat.compare gen_var_15 gen_var_16) Lt) (App eq nat gen_var_15 gen_var_16)) (App or (App eq comparison (App Coq.Init.Nat.compare gen_var_15 gen_var_16) Lt) (App eq comparison (App Coq.Init.Nat.compare gen_var_15 gen_var_16) Eq)) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism (Sort Prop) (Prod gen_var_20 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) or Coq.Classes.Morphisms_Prop.or_iff_morphism (App eq comparison (App Coq.Init.Nat.compare gen_var_15 gen_var_16) Lt) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq comparison (App Coq.Init.Nat.compare gen_var_15 gen_var_16) Lt)) (App eq nat gen_var_15 gen_var_16) (App eq comparison (App Coq.Init.Nat.compare gen_var_15 gen_var_16) Eq) (App Coq.Classes.RelationClasses.symmetry (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Symmetric (App eq comparison (App Coq.Init.Nat.compare gen_var_15 gen_var_16) Eq) (App eq nat gen_var_15 gen_var_16) gen_var_19)))) (App Coq.Arith.PeanoNat.Nat.compare_eq_iff gen_var_15 gen_var_16) (LetIn gen_var_105 (App Coq.Init.Nat.compare gen_var_15 gen_var_16) comparison (Case 0 (Lambda comparison (App Coq.Init.Logic.iff (App Coq.Init.Logic.not (App eq comparison gen_var_22 Gt)) (App or (App eq comparison gen_var_22 Lt) (App eq comparison gen_var_22 Eq)))) (CaseMatch gen_var_22) (CaseBranches (App conj (Prod Anonymous (App Coq.Init.Logic.not (App eq comparison Eq Gt)) (App or (App eq comparison Eq Lt) (App eq comparison Eq Eq))) (Prod Anonymous (App or (App eq comparison Eq Lt) (App eq comparison Eq Eq)) (App Coq.Init.Logic.not (App eq comparison Eq Gt))) (Lambda (App Coq.Init.Logic.not (App eq comparison Eq Gt)) (App or_intror (App eq comparison Eq Lt) (App eq comparison Eq Eq) (App eq_refl comparison Eq))) (Lambda (App or (App eq comparison Eq Lt) (App eq comparison Eq Eq)) (Cast (Lambda (App eq comparison Eq Gt) (App Coq.Init.Logic.or_ind (App eq comparison Eq Lt) (App eq comparison Eq Eq) False (Lambda (App eq comparison Eq Lt) (LetIn gen_var_34 (Case 2 (Lambda comparison (Lambda (App eq comparison Eq gen_var_30) (Prod Anonymous (App eq comparison gen_var_30 Lt) False))) (CaseMatch gen_var_28) (CaseBranches (Lambda (App eq comparison Eq Lt) (App (Lambda (App eq comparison Eq Lt) (LetIn gen_var_35 (App Coq.Init.Logic.eq_ind comparison Eq (Lambda comparison (Case 0 (Lambda comparison (Sort Prop)) (CaseMatch gen_var_36) (CaseBranches True False False))) I Lt gen_var_34) False (App Coq.Init.Logic.False_ind False gen_var_35))) gen_var_34)))) (Prod Anonymous (App eq comparison Lt Lt) False) (App gen_var_34 (App eq_refl comparison Lt)))) (Lambda (App eq comparison Eq Eq) (LetIn gen_var_45 (Case 2 (Lambda comparison (Lambda (App eq comparison Eq gen_var_41) (Prod Anonymous (App eq comparison gen_var_41 Gt) False))) (CaseMatch gen_var_27) (CaseBranches (Lambda (App eq comparison Eq Gt) (App (Lambda (App eq comparison Eq Gt) (LetIn gen_var_46 (App Coq.Init.Logic.eq_ind comparison Eq (Lambda comparison (Case 0 (Lambda comparison (Sort Prop)) (CaseMatch gen_var_47) (CaseBranches True False False))) I Gt gen_var_45) False (App Coq.Init.Logic.False_ind False gen_var_46))) gen_var_45)))) (Prod Anonymous (App eq comparison Gt Gt) False) (App gen_var_45 (App eq_refl comparison Gt)))) gen_var_45)) REVERTcast (App Coq.Init.Logic.not (App eq comparison Eq Gt))))) (App conj (Prod Anonymous (App Coq.Init.Logic.not (App eq comparison Lt Gt)) (App or (App eq comparison Lt Lt) (App eq comparison Lt Eq))) (Prod Anonymous (App or (App eq comparison Lt Lt) (App eq comparison Lt Eq)) (App Coq.Init.Logic.not (App eq comparison Lt Gt))) (Lambda (App Coq.Init.Logic.not (App eq comparison Lt Gt)) (App or_introl (App eq comparison Lt Lt) (App eq comparison Lt Eq) (App eq_refl comparison Lt))) (Lambda (App or (App eq comparison Lt Lt) (App eq comparison Lt Eq)) (Cast (Lambda (App eq comparison Lt Gt) (App Coq.Init.Logic.or_ind (App eq comparison Lt Lt) (App eq comparison Lt Eq) False (Lambda (App eq comparison Lt Lt) (LetIn gen_var_61 (Case 2 (Lambda comparison (Lambda (App eq comparison Lt gen_var_57) (Prod Anonymous (App eq comparison gen_var_57 Gt) False))) (CaseMatch gen_var_54) (CaseBranches (Lambda (App eq comparison Lt Gt) (App (Lambda (App eq comparison Lt Gt) (LetIn gen_var_62 (App Coq.Init.Logic.eq_ind comparison Lt (Lambda comparison (Case 0 (Lambda comparison (Sort Prop)) (CaseMatch gen_var_63) (CaseBranches False True False))) I Gt gen_var_61) False (App Coq.Init.Logic.False_ind False gen_var_62))) gen_var_61)))) (Prod Anonymous (App eq comparison Gt Gt) False) (App gen_var_61 (App eq_refl comparison Gt)))) (Lambda (App eq comparison Lt Eq) (LetIn gen_var_72 (Case 2 (Lambda comparison (Lambda (App eq comparison Lt gen_var_68) (Prod Anonymous (App eq comparison gen_var_68 Eq) False))) (CaseMatch gen_var_66) (CaseBranches (Lambda (App eq comparison Lt Eq) (App (Lambda (App eq comparison Lt Eq) (LetIn gen_var_73 (App Coq.Init.Logic.eq_ind comparison Lt (Lambda comparison (Case 0 (Lambda comparison (Sort Prop)) (CaseMatch gen_var_74) (CaseBranches False True False))) I Eq gen_var_72) False (App Coq.Init.Logic.False_ind False gen_var_73))) gen_var_72)))) (Prod Anonymous (App eq comparison Eq Eq) False) (App gen_var_72 (App eq_refl comparison Eq)))) gen_var_72)) REVERTcast (App Coq.Init.Logic.not (App eq comparison Lt Gt))))) (App conj (Prod Anonymous (App Coq.Init.Logic.not (App eq comparison Gt Gt)) (App or (App eq comparison Gt Lt) (App eq comparison Gt Eq))) (Prod Anonymous (App or (App eq comparison Gt Lt) (App eq comparison Gt Eq)) (App Coq.Init.Logic.not (App eq comparison Gt Gt))) (Lambda (App Coq.Init.Logic.not (App eq comparison Gt Gt)) (LetIn gen_var_82 (LetIn gen_var_81 (App eq_refl comparison Gt) (App eq comparison Gt Gt) (App gen_var_79 gen_var_81)) False (App (Lambda False (App Coq.Init.Logic.False_ind (App or (App eq comparison Gt Lt) (App eq comparison Gt Eq)) gen_var_82)) gen_var_82))) (Lambda (App or (App eq comparison Gt Lt) (App eq comparison Gt Eq)) (Cast (Lambda (App eq comparison Gt Gt) (App Coq.Init.Logic.or_ind (App eq comparison Gt Lt) (App eq comparison Gt Eq) False (Lambda (App eq comparison Gt Lt) (LetIn gen_var_91 (Case 2 (Lambda comparison (Lambda (App eq comparison Gt gen_var_87) (Prod Anonymous (App eq comparison gen_var_87 Lt) False))) (CaseMatch gen_var_85) (CaseBranches (Lambda (App eq comparison Gt Lt) (App (Lambda (App eq comparison Gt Lt) (LetIn gen_var_92 (App Coq.Init.Logic.eq_ind comparison Gt (Lambda comparison (Case 0 (Lambda comparison (Sort Prop)) (CaseMatch gen_var_93) (CaseBranches False False True))) I Lt gen_var_91) False (App Coq.Init.Logic.False_ind False gen_var_92))) gen_var_91)))) (Prod Anonymous (App eq comparison Lt Lt) False) (App gen_var_91 (App eq_refl comparison Lt)))) (Lambda (App eq comparison Gt Eq) (LetIn gen_var_102 (Case 2 (Lambda comparison (Lambda (App eq comparison Gt gen_var_98) (Prod Anonymous (App eq comparison gen_var_98 Eq) False))) (CaseMatch gen_var_96) (CaseBranches (Lambda (App eq comparison Gt Eq) (App (Lambda (App eq comparison Gt Eq) (LetIn gen_var_103 (App Coq.Init.Logic.eq_ind comparison Gt (Lambda comparison (Case 0 (Lambda comparison (Sort Prop)) (CaseMatch gen_var_104) (CaseBranches False False True))) I Eq gen_var_102) False (App Coq.Init.Logic.False_ind False gen_var_103))) gen_var_102)))) (Prod Anonymous (App eq comparison Eq Eq) False) (App gen_var_102 (App eq_refl comparison Eq)))) gen_var_102)) REVERTcast (App Coq.Init.Logic.not (App eq comparison Gt Gt)))))))))))))) (Definition Coq.Arith.PeanoNat.Nat.succ_le_mono (Lambda nat (Lambda nat (App (Lambda (App Coq.Init.Logic.iff (App le gen_var_121 gen_var_122) (App or (App Coq.Init.Peano.lt gen_var_121 gen_var_122) (App eq nat gen_var_121 gen_var_122))) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App le gen_var_121 gen_var_122) (App or (App Coq.Init.Peano.lt gen_var_121 gen_var_122) (App eq nat gen_var_121 gen_var_122)) gen_var_123 (App le (App S gen_var_121) (App S gen_var_122)) (App le (App S gen_var_121) (App S gen_var_122)) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App le (App S gen_var_121) (App S gen_var_122))))) (App Coq.Arith.PeanoNat.Nat.lt_eq_cases gen_var_121 gen_var_122) (App (Lambda (App Coq.Init.Logic.iff (App le (App S gen_var_121) (App S gen_var_122)) (App or (App Coq.Init.Peano.lt (App S gen_var_121) (App S gen_var_122)) (App eq nat (App S gen_var_121) (App S gen_var_122)))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App or (App Coq.Init.Peano.lt gen_var_121 gen_var_122) (App eq nat gen_var_121 gen_var_122)) (App le (App S gen_var_121) (App S gen_var_122)) (App or (App Coq.Init.Peano.lt (App S gen_var_121) (App S gen_var_122)) (App eq nat (App S gen_var_121) (App S gen_var_122))) gen_var_124)) (App Coq.Arith.PeanoNat.Nat.lt_eq_cases (App S gen_var_121) (App S gen_var_122)) (App (Lambda (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt gen_var_121 gen_var_122) (App Coq.Init.Peano.lt (App S gen_var_121) (App S gen_var_122))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App or (App Coq.Init.Peano.lt gen_var_121 gen_var_122) (App eq nat gen_var_121 gen_var_122)) (App or (App Coq.Init.Peano.lt (App S gen_var_121) (App S gen_var_122)) (App eq nat (App S gen_var_121) (App S gen_var_122))) (App or (App Coq.Init.Peano.lt gen_var_121 gen_var_122) (App eq nat (App S gen_var_121) (App S gen_var_122))) (App Coq.Classes.Morphisms_Prop.or_iff_morphism (App Coq.Init.Peano.lt (App S gen_var_121) (App S gen_var_122)) (App Coq.Init.Peano.lt gen_var_121 gen_var_122) (App Coq.Classes.RelationClasses.symmetry (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Symmetric (App Coq.Init.Peano.lt gen_var_121 gen_var_122) (App Coq.Init.Peano.lt (App S gen_var_121) (App S gen_var_122)) gen_var_125) (App eq nat (App S gen_var_121) (App S gen_var_122)) (App eq nat (App S gen_var_121) (App S gen_var_122)) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq nat (App S gen_var_121) (App S gen_var_122)))))) (App Coq.Arith.PeanoNat.Nat.succ_lt_mono gen_var_121 gen_var_122) (App (Lambda (App Coq.Init.Logic.iff (App eq nat (App S gen_var_121) (App S gen_var_122)) (App eq nat gen_var_121 gen_var_122)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App or (App Coq.Init.Peano.lt gen_var_121 gen_var_122) (App eq nat gen_var_121 gen_var_122)) (App or (App Coq.Init.Peano.lt gen_var_121 gen_var_122) (App eq nat (App S gen_var_121) (App S gen_var_122))) (App or (App Coq.Init.Peano.lt gen_var_121 gen_var_122) (App eq nat gen_var_121 gen_var_122)) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism (Sort Prop) (Prod gen_var_127 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) or Coq.Classes.Morphisms_Prop.or_iff_morphism (App Coq.Init.Peano.lt gen_var_121 gen_var_122) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Peano.lt gen_var_121 gen_var_122)) (App eq nat (App S gen_var_121) (App S gen_var_122)) (App eq nat gen_var_121 gen_var_122) gen_var_126))) (App Coq.Arith.PeanoNat.Nat.succ_inj_wd gen_var_121 gen_var_122) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App or (App Coq.Init.Peano.lt gen_var_121 gen_var_122) (App eq nat gen_var_121 gen_var_122)))))))))) (Definition Coq.Arith.Gt.gt_S (Lambda nat (Lambda nat (Lambda (App Coq.Init.Peano.gt (App S gen_var_4) gen_var_5) (LetIn gen_var_114 (Lambda nat (Lambda nat (Case 2 (Lambda (App and (Prod Anonymous (App le gen_var_7 gen_var_8) (App or (App Coq.Init.Peano.lt gen_var_11 gen_var_12) (App eq nat gen_var_11 gen_var_12))) (Prod Anonymous (App or (App Coq.Init.Peano.lt gen_var_11 gen_var_12) (App eq nat gen_var_11 gen_var_12)) (App le gen_var_11 gen_var_12))) (Prod Anonymous (App le gen_var_11 gen_var_12) (App or (App Coq.Init.Peano.lt gen_var_11 gen_var_12) (App eq nat gen_var_11 gen_var_12)))) (CaseMatch (App Coq.Arith.PeanoNat.Nat.lt_eq_cases gen_var_15 gen_var_16)) (CaseBranches (Lambda (Prod Anonymous (App le gen_var_15 gen_var_16) (App or (App Coq.Init.Peano.lt gen_var_15 gen_var_16) (App eq nat gen_var_15 gen_var_16))) (Lambda (Prod Anonymous (App or (App Coq.Init.Peano.lt gen_var_15 gen_var_16) (App eq nat gen_var_15 gen_var_16)) (App le gen_var_15 gen_var_16)) Anonymous)))))) (Prod gen_var_111 nat (Prod gen_var_112 nat (Prod Anonymous (App le gen_var_111 gen_var_112) (App or (App Coq.Init.Peano.lt gen_var_111 gen_var_112) (App eq nat gen_var_111 gen_var_112))))) (App gen_var_84 gen_var_112 gen_var_111 (LetIn gen_var_114 (Lambda nat (Lambda nat (Case 2 (Lambda (App and (Prod Anonymous (App le gen_var_115 gen_var_116) (App le (App S gen_var_115) (App S gen_var_116))) (Prod Anonymous (App le (App S gen_var_115) (App S gen_var_116)) (App le gen_var_115 gen_var_116))) (Prod Anonymous (App le (App S gen_var_115) (App S gen_var_116)) (App le gen_var_115 gen_var_116))) (CaseMatch (App Coq.Arith.PeanoNat.Nat.succ_le_mono gen_var_121 gen_var_122)) (CaseBranches (Lambda (Prod Anonymous (App le gen_var_121 gen_var_122) (App le (App S gen_var_121) (App S gen_var_122))) (Lambda (Prod Anonymous (App le (App S gen_var_121) (App S gen_var_122)) (App le gen_var_121 gen_var_122)) Anonymous)))))) (Prod gen_var_132 nat (Prod gen_var_133 nat (Prod Anonymous (App le (App S gen_var_132) (App S gen_var_133)) (App le gen_var_132 gen_var_133)))) (App gen_var_114 gen_var_133 gen_var_132 gen_var_102)))))))) 