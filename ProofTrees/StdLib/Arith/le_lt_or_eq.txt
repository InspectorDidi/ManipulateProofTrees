(Definition Coq.Init.Peano.lt (Lambda nat (Lambda nat (App le (App S gen_var_8) gen_var_9)))) (Definition Coq.Arith.PeanoNat.Nat.lt_eq_cases (Lambda nat (Lambda nat (App (Lambda (App Coq.Init.Logic.iff (App eq comparison (App Coq.Init.Nat.compare gen_var_12 gen_var_13) Lt) (App Coq.Init.Peano.lt gen_var_12 gen_var_13)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App le gen_var_12 gen_var_13) (App or (App Coq.Init.Peano.lt gen_var_12 gen_var_13) (App eq nat gen_var_12 gen_var_13)) (App or (App eq comparison (App Coq.Init.Nat.compare gen_var_12 gen_var_13) Lt) (App eq nat gen_var_12 gen_var_13)) (App Coq.Classes.Morphisms_Prop.or_iff_morphism (App Coq.Init.Peano.lt gen_var_12 gen_var_13) (App eq comparison (App Coq.Init.Nat.compare gen_var_12 gen_var_13) Lt) (App Coq.Classes.RelationClasses.symmetry (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Symmetric (App eq comparison (App Coq.Init.Nat.compare gen_var_12 gen_var_13) Lt) (App Coq.Init.Peano.lt gen_var_12 gen_var_13) gen_var_14) (App eq nat gen_var_12 gen_var_13) (App eq nat gen_var_12 gen_var_13) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq nat gen_var_12 gen_var_13))))) (App Coq.Arith.PeanoNat.Nat.compare_lt_iff gen_var_12 gen_var_13) (App (Lambda (App Coq.Init.Logic.iff (App Coq.Init.Logic.not (App eq comparison (App Coq.Init.Nat.compare gen_var_12 gen_var_13) Gt)) (App le gen_var_12 gen_var_13)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App le gen_var_12 gen_var_13) (App Coq.Init.Logic.not (App eq comparison (App Coq.Init.Nat.compare gen_var_12 gen_var_13) Gt)) (App Coq.Classes.RelationClasses.symmetry (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Symmetric (App Coq.Init.Logic.not (App eq comparison (App Coq.Init.Nat.compare gen_var_12 gen_var_13) Gt)) (App le gen_var_12 gen_var_13) gen_var_15) (App or (App eq comparison (App Coq.Init.Nat.compare gen_var_12 gen_var_13) Lt) (App eq nat gen_var_12 gen_var_13)) (App or (App eq comparison (App Coq.Init.Nat.compare gen_var_12 gen_var_13) Lt) (App eq nat gen_var_12 gen_var_13)) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App or (App eq comparison (App Coq.Init.Nat.compare gen_var_12 gen_var_13) Lt) (App eq nat gen_var_12 gen_var_13))))) (App Coq.Arith.PeanoNat.Nat.compare_le_iff gen_var_12 gen_var_13) (App (Lambda (App Coq.Init.Logic.iff (App eq comparison (App Coq.Init.Nat.compare gen_var_12 gen_var_13) Eq) (App eq nat gen_var_12 gen_var_13)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Logic.not (App eq comparison (App Coq.Init.Nat.compare gen_var_12 gen_var_13) Gt)) (App or (App eq comparison (App Coq.Init.Nat.compare gen_var_12 gen_var_13) Lt) (App eq nat gen_var_12 gen_var_13)) (App or (App eq comparison (App Coq.Init.Nat.compare gen_var_12 gen_var_13) Lt) (App eq comparison (App Coq.Init.Nat.compare gen_var_12 gen_var_13) Eq)) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism (Sort Prop) (Prod gen_var_17 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) or Coq.Classes.Morphisms_Prop.or_iff_morphism (App eq comparison (App Coq.Init.Nat.compare gen_var_12 gen_var_13) Lt) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq comparison (App Coq.Init.Nat.compare gen_var_12 gen_var_13) Lt)) (App eq nat gen_var_12 gen_var_13) (App eq comparison (App Coq.Init.Nat.compare gen_var_12 gen_var_13) Eq) (App Coq.Classes.RelationClasses.symmetry (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Symmetric (App eq comparison (App Coq.Init.Nat.compare gen_var_12 gen_var_13) Eq) (App eq nat gen_var_12 gen_var_13) gen_var_16)))) (App Coq.Arith.PeanoNat.Nat.compare_eq_iff gen_var_12 gen_var_13) (LetIn gen_var_102 (App Coq.Init.Nat.compare gen_var_12 gen_var_13) comparison (Case 0 (Lambda comparison (App Coq.Init.Logic.iff (App Coq.Init.Logic.not (App eq comparison gen_var_19 Gt)) (App or (App eq comparison gen_var_19 Lt) (App eq comparison gen_var_19 Eq)))) (CaseMatch gen_var_19) (CaseBranches (App conj (Prod Anonymous (App Coq.Init.Logic.not (App eq comparison Eq Gt)) (App or (App eq comparison Eq Lt) (App eq comparison Eq Eq))) (Prod Anonymous (App or (App eq comparison Eq Lt) (App eq comparison Eq Eq)) (App Coq.Init.Logic.not (App eq comparison Eq Gt))) (Lambda (App Coq.Init.Logic.not (App eq comparison Eq Gt)) (App or_intror (App eq comparison Eq Lt) (App eq comparison Eq Eq) (App eq_refl comparison Eq))) (Lambda (App or (App eq comparison Eq Lt) (App eq comparison Eq Eq)) (Cast (Lambda (App eq comparison Eq Gt) (App Coq.Init.Logic.or_ind (App eq comparison Eq Lt) (App eq comparison Eq Eq) False (Lambda (App eq comparison Eq Lt) (LetIn gen_var_31 (Case 2 (Lambda comparison (Lambda (App eq comparison Eq gen_var_27) (Prod Anonymous (App eq comparison gen_var_27 Lt) False))) (CaseMatch gen_var_25) (CaseBranches (Lambda (App eq comparison Eq Lt) (App (Lambda (App eq comparison Eq Lt) (LetIn gen_var_32 (App Coq.Init.Logic.eq_ind comparison Eq (Lambda comparison (Case 0 (Lambda comparison (Sort Prop)) (CaseMatch gen_var_33) (CaseBranches True False False))) I Lt gen_var_31) False (App Coq.Init.Logic.False_ind False gen_var_32))) gen_var_31)))) (Prod Anonymous (App eq comparison Lt Lt) False) (App gen_var_31 (App eq_refl comparison Lt)))) (Lambda (App eq comparison Eq Eq) (LetIn gen_var_42 (Case 2 (Lambda comparison (Lambda (App eq comparison Eq gen_var_38) (Prod Anonymous (App eq comparison gen_var_38 Gt) False))) (CaseMatch gen_var_24) (CaseBranches (Lambda (App eq comparison Eq Gt) (App (Lambda (App eq comparison Eq Gt) (LetIn gen_var_43 (App Coq.Init.Logic.eq_ind comparison Eq (Lambda comparison (Case 0 (Lambda comparison (Sort Prop)) (CaseMatch gen_var_44) (CaseBranches True False False))) I Gt gen_var_42) False (App Coq.Init.Logic.False_ind False gen_var_43))) gen_var_42)))) (Prod Anonymous (App eq comparison Gt Gt) False) (App gen_var_42 (App eq_refl comparison Gt)))) gen_var_42)) REVERTcast (App Coq.Init.Logic.not (App eq comparison Eq Gt))))) (App conj (Prod Anonymous (App Coq.Init.Logic.not (App eq comparison Lt Gt)) (App or (App eq comparison Lt Lt) (App eq comparison Lt Eq))) (Prod Anonymous (App or (App eq comparison Lt Lt) (App eq comparison Lt Eq)) (App Coq.Init.Logic.not (App eq comparison Lt Gt))) (Lambda (App Coq.Init.Logic.not (App eq comparison Lt Gt)) (App or_introl (App eq comparison Lt Lt) (App eq comparison Lt Eq) (App eq_refl comparison Lt))) (Lambda (App or (App eq comparison Lt Lt) (App eq comparison Lt Eq)) (Cast (Lambda (App eq comparison Lt Gt) (App Coq.Init.Logic.or_ind (App eq comparison Lt Lt) (App eq comparison Lt Eq) False (Lambda (App eq comparison Lt Lt) (LetIn gen_var_58 (Case 2 (Lambda comparison (Lambda (App eq comparison Lt gen_var_54) (Prod Anonymous (App eq comparison gen_var_54 Gt) False))) (CaseMatch gen_var_51) (CaseBranches (Lambda (App eq comparison Lt Gt) (App (Lambda (App eq comparison Lt Gt) (LetIn gen_var_59 (App Coq.Init.Logic.eq_ind comparison Lt (Lambda comparison (Case 0 (Lambda comparison (Sort Prop)) (CaseMatch gen_var_60) (CaseBranches False True False))) I Gt gen_var_58) False (App Coq.Init.Logic.False_ind False gen_var_59))) gen_var_58)))) (Prod Anonymous (App eq comparison Gt Gt) False) (App gen_var_58 (App eq_refl comparison Gt)))) (Lambda (App eq comparison Lt Eq) (LetIn gen_var_69 (Case 2 (Lambda comparison (Lambda (App eq comparison Lt gen_var_65) (Prod Anonymous (App eq comparison gen_var_65 Eq) False))) (CaseMatch gen_var_63) (CaseBranches (Lambda (App eq comparison Lt Eq) (App (Lambda (App eq comparison Lt Eq) (LetIn gen_var_70 (App Coq.Init.Logic.eq_ind comparison Lt (Lambda comparison (Case 0 (Lambda comparison (Sort Prop)) (CaseMatch gen_var_71) (CaseBranches False True False))) I Eq gen_var_69) False (App Coq.Init.Logic.False_ind False gen_var_70))) gen_var_69)))) (Prod Anonymous (App eq comparison Eq Eq) False) (App gen_var_69 (App eq_refl comparison Eq)))) gen_var_69)) REVERTcast (App Coq.Init.Logic.not (App eq comparison Lt Gt))))) (App conj (Prod Anonymous (App Coq.Init.Logic.not (App eq comparison Gt Gt)) (App or (App eq comparison Gt Lt) (App eq comparison Gt Eq))) (Prod Anonymous (App or (App eq comparison Gt Lt) (App eq comparison Gt Eq)) (App Coq.Init.Logic.not (App eq comparison Gt Gt))) (Lambda (App Coq.Init.Logic.not (App eq comparison Gt Gt)) (LetIn gen_var_79 (LetIn gen_var_78 (App eq_refl comparison Gt) (App eq comparison Gt Gt) (App gen_var_76 gen_var_78)) False (App (Lambda False (App Coq.Init.Logic.False_ind (App or (App eq comparison Gt Lt) (App eq comparison Gt Eq)) gen_var_79)) gen_var_79))) (Lambda (App or (App eq comparison Gt Lt) (App eq comparison Gt Eq)) (Cast (Lambda (App eq comparison Gt Gt) (App Coq.Init.Logic.or_ind (App eq comparison Gt Lt) (App eq comparison Gt Eq) False (Lambda (App eq comparison Gt Lt) (LetIn gen_var_88 (Case 2 (Lambda comparison (Lambda (App eq comparison Gt gen_var_84) (Prod Anonymous (App eq comparison gen_var_84 Lt) False))) (CaseMatch gen_var_82) (CaseBranches (Lambda (App eq comparison Gt Lt) (App (Lambda (App eq comparison Gt Lt) (LetIn gen_var_89 (App Coq.Init.Logic.eq_ind comparison Gt (Lambda comparison (Case 0 (Lambda comparison (Sort Prop)) (CaseMatch gen_var_90) (CaseBranches False False True))) I Lt gen_var_88) False (App Coq.Init.Logic.False_ind False gen_var_89))) gen_var_88)))) (Prod Anonymous (App eq comparison Lt Lt) False) (App gen_var_88 (App eq_refl comparison Lt)))) (Lambda (App eq comparison Gt Eq) (LetIn gen_var_99 (Case 2 (Lambda comparison (Lambda (App eq comparison Gt gen_var_95) (Prod Anonymous (App eq comparison gen_var_95 Eq) False))) (CaseMatch gen_var_93) (CaseBranches (Lambda (App eq comparison Gt Eq) (App (Lambda (App eq comparison Gt Eq) (LetIn gen_var_100 (App Coq.Init.Logic.eq_ind comparison Gt (Lambda comparison (Case 0 (Lambda comparison (Sort Prop)) (CaseMatch gen_var_101) (CaseBranches False False True))) I Eq gen_var_99) False (App Coq.Init.Logic.False_ind False gen_var_100))) gen_var_99)))) (Prod Anonymous (App eq comparison Eq Eq) False) (App gen_var_99 (App eq_refl comparison Eq)))) gen_var_99)) REVERTcast (App Coq.Init.Logic.not (App eq comparison Gt Gt)))))))))))))) (Definition Coq.Arith.Lt.le_lt_or_eq (Lambda nat (Lambda nat (LetIn gen_var_99 (Lambda nat (Lambda nat (Case 2 (Lambda (App and (Prod Anonymous (App le gen_var_4 gen_var_5) (App or (App Coq.Init.Peano.lt gen_var_8 gen_var_9) (App eq nat gen_var_8 gen_var_9))) (Prod Anonymous (App or (App Coq.Init.Peano.lt gen_var_8 gen_var_9) (App eq nat gen_var_8 gen_var_9)) (App le gen_var_8 gen_var_9))) (Prod Anonymous (App le gen_var_8 gen_var_9) (App or (App Coq.Init.Peano.lt gen_var_8 gen_var_9) (App eq nat gen_var_8 gen_var_9)))) (CaseMatch (App Coq.Arith.PeanoNat.Nat.lt_eq_cases gen_var_12 gen_var_13)) (CaseBranches (Lambda (Prod Anonymous (App le gen_var_12 gen_var_13) (App or (App Coq.Init.Peano.lt gen_var_12 gen_var_13) (App eq nat gen_var_12 gen_var_13))) (Lambda (Prod Anonymous (App or (App Coq.Init.Peano.lt gen_var_12 gen_var_13) (App eq nat gen_var_12 gen_var_13)) (App le gen_var_12 gen_var_13)) Anonymous)))))) (Prod gen_var_108 nat (Prod gen_var_109 nat (Prod Anonymous (App le gen_var_108 gen_var_109) (App or (App Coq.Init.Peano.lt gen_var_108 gen_var_109) (App eq nat gen_var_108 gen_var_109))))) (App gen_var_99 gen_var_108 gen_var_109))))) 