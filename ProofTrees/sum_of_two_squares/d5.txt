(Definition Coq.PArith.BinPosDef.Pos.succ (Fix (Functions (App gen_var_21 0 (Prod gen_var_22 positive positive) (Lambda gen_var_24 positive (Case 0 (Lambda gen_var_24 positive positive) (CaseMatch gen_var_24) (CaseBranches (Lambda gen_var_25 positive (App xO (App gen_var_21 gen_var_25))) (Lambda gen_var_26 positive (App xI gen_var_26)) (App xO xH)))))) 0)) (Definition Coq.PArith.BinPosDef.Pos.add (Fix (Functions (App gen_var_10 0 (Prod gen_var_12 positive (Prod gen_var_13 positive positive)) (Lambda gen_var_24 positive (Lambda gen_var_31 positive (Case 0 (Lambda gen_var_16 positive positive) (CaseMatch gen_var_16) (CaseBranches (Lambda gen_var_26 positive (Case 0 (Lambda gen_var_18 positive positive) (CaseMatch gen_var_18) (CaseBranches (Lambda gen_var_19 positive (App xO (App gen_var_10 gen_var_17 gen_var_19))) (Lambda gen_var_20 positive (App xI (App gen_var_11 gen_var_17 gen_var_20))) (App xO (App Coq.PArith.BinPosDef.Pos.succ gen_var_26))))) (Lambda gen_var_27 positive (Case 0 (Lambda gen_var_28 positive positive) (CaseMatch gen_var_28) (CaseBranches (Lambda gen_var_29 positive (App xI (App gen_var_11 gen_var_27 gen_var_29))) (Lambda gen_var_30 positive (App xO (App gen_var_11 gen_var_27 gen_var_30))) (App xI gen_var_27)))) (Case 0 (Lambda gen_var_31 positive positive) (CaseMatch gen_var_31) (CaseBranches (Lambda gen_var_32 positive (App xO (App Coq.PArith.BinPosDef.Pos.succ gen_var_32))) (Lambda gen_var_33 positive (App xI gen_var_33)) (App xO xH)))))))) (App gen_var_11 1 (Prod gen_var_34 positive (Prod gen_var_35 positive positive)) (Lambda gen_var_38 positive (Lambda gen_var_47 positive (Case 0 (Lambda gen_var_38 positive positive) (CaseMatch gen_var_38) (CaseBranches (Lambda gen_var_39 positive (Case 0 (Lambda gen_var_40 positive positive) (CaseMatch gen_var_40) (CaseBranches (Lambda gen_var_41 positive (App xI (App gen_var_10 gen_var_39 gen_var_41))) (Lambda gen_var_42 positive (App xO (App gen_var_10 gen_var_39 gen_var_42))) (App xI (App Coq.PArith.BinPosDef.Pos.succ gen_var_39))))) (Lambda gen_var_43 positive (Case 0 (Lambda gen_var_44 positive positive) (CaseMatch gen_var_44) (CaseBranches (Lambda gen_var_45 positive (App xO (App gen_var_10 gen_var_43 gen_var_45))) (Lambda gen_var_46 positive (App xI (App gen_var_11 gen_var_43 gen_var_46))) (App xO (App Coq.PArith.BinPosDef.Pos.succ gen_var_43))))) (Case 0 (Lambda gen_var_47 positive positive) (CaseMatch gen_var_47) (CaseBranches (Lambda gen_var_48 positive (App xI (App Coq.PArith.BinPosDef.Pos.succ gen_var_48))) (Lambda gen_var_49 positive (App xO (App Coq.PArith.BinPosDef.Pos.succ gen_var_49))) (App xI xH))))))))) 0)) (Definition Coq.ZArith.BinIntDef.Z.double (Lambda gen_var_61 Z (Case 0 (Lambda gen_var_61 Z Z) (CaseMatch gen_var_61) (CaseBranches Z0 (Lambda gen_var_62 positive (App Zpos (App xO gen_var_62))) (Lambda gen_var_63 positive (App Zneg (App xO gen_var_63))))))) (Definition Coq.PArith.BinPosDef.Pos.pred_double (Fix (Functions (App gen_var_69 0 (Prod gen_var_70 positive positive) (Lambda gen_var_72 positive (Case 0 (Lambda gen_var_72 positive positive) (CaseMatch gen_var_72) (CaseBranches (Lambda gen_var_73 positive (App xI (App xO gen_var_73))) (Lambda gen_var_74 positive (App xI (App gen_var_69 gen_var_74))) xH))))) 0)) (Definition Coq.ZArith.BinIntDef.Z.succ_double (Lambda gen_var_72 Z (Case 0 (Lambda gen_var_66 Z Z) (CaseMatch gen_var_66) (CaseBranches (App Zpos xH) (Lambda gen_var_67 positive (App Zpos (App xI gen_var_67))) (Lambda gen_var_74 positive (App Zneg (App Coq.PArith.BinPosDef.Pos.pred_double gen_var_74))))))) (Definition Coq.ZArith.BinIntDef.Z.pred_double (Lambda gen_var_79 Z (Case 0 (Lambda gen_var_79 Z Z) (CaseMatch gen_var_79) (CaseBranches (App Zneg xH) (Lambda gen_var_80 positive (App Zpos (App Coq.PArith.BinPosDef.Pos.pred_double gen_var_80))) (Lambda gen_var_81 positive (App Zneg (App xI gen_var_81))))))) (Definition Coq.ZArith.BinIntDef.Z.pos_sub (Fix (Functions (App gen_var_51 0 (Prod gen_var_52 positive (Prod gen_var_53 positive Z)) (Lambda gen_var_79 positive (Lambda gen_var_83 positive (Case 0 (Lambda gen_var_56 positive Z) (CaseMatch gen_var_56) (CaseBranches (Lambda gen_var_74 positive (Case 0 (Lambda gen_var_58 positive Z) (CaseMatch gen_var_58) (CaseBranches (Lambda gen_var_59 positive (App Coq.ZArith.BinIntDef.Z.double (App gen_var_51 gen_var_63 gen_var_59))) (Lambda gen_var_64 positive (App Coq.ZArith.BinIntDef.Z.succ_double (App gen_var_51 gen_var_74 gen_var_64))) (App Zpos (App xO gen_var_74))))) (Lambda gen_var_81 positive (Case 0 (Lambda gen_var_76 positive Z) (CaseMatch gen_var_76) (CaseBranches (Lambda gen_var_77 positive (App Coq.ZArith.BinIntDef.Z.pred_double (App gen_var_51 gen_var_81 gen_var_77))) (Lambda gen_var_82 positive (App Coq.ZArith.BinIntDef.Z.double (App gen_var_51 gen_var_81 gen_var_82))) (App Zpos (App Coq.PArith.BinPosDef.Pos.pred_double gen_var_81))))) (Case 0 (Lambda gen_var_83 positive Z) (CaseMatch gen_var_83) (CaseBranches (Lambda gen_var_84 positive (App Zneg (App xO gen_var_84))) (Lambda gen_var_85 positive (App Zneg (App Coq.PArith.BinPosDef.Pos.pred_double gen_var_85))) Z0)))))))) 0)) (Definition Coq.ZArith.BinIntDef.Z.add (Lambda gen_var_79 Z (Lambda gen_var_87 Z (Case 0 (Lambda gen_var_6 Z Z) (CaseMatch gen_var_6) (CaseBranches gen_var_5 (Lambda gen_var_7 positive (Case 0 (Lambda gen_var_8 Z Z) (CaseMatch gen_var_8) (CaseBranches gen_var_6 (Lambda gen_var_9 positive (App Zpos (App Coq.PArith.BinPosDef.Pos.add gen_var_7 gen_var_9))) (Lambda gen_var_50 positive (App Coq.ZArith.BinIntDef.Z.pos_sub gen_var_7 gen_var_50))))) (Lambda gen_var_86 positive (Case 0 (Lambda gen_var_87 Z Z) (CaseMatch gen_var_87) (CaseBranches gen_var_79 (Lambda gen_var_88 positive (App Coq.ZArith.BinIntDef.Z.pos_sub gen_var_88 gen_var_86)) (Lambda gen_var_89 positive (App Zneg (App Coq.PArith.BinPosDef.Pos.add gen_var_86 gen_var_89))))))))))) (Definition Coq.PArith.BinPosDef.Pos.mul (Fix (Functions (App gen_var_96 0 (Prod gen_var_97 positive (Prod gen_var_98 positive positive)) (Lambda gen_var_101 positive (Lambda gen_var_100 positive (Case 0 (Lambda gen_var_101 positive positive) (CaseMatch gen_var_101) (CaseBranches (Lambda gen_var_102 positive (App Coq.PArith.BinPosDef.Pos.add gen_var_100 (App xO (App gen_var_96 gen_var_102 gen_var_100)))) (Lambda gen_var_103 positive (App xO (App gen_var_96 gen_var_103 gen_var_100))) gen_var_100)))))) 0)) (Definition Coq.ZArith.BinIntDef.Z.mul (Lambda gen_var_101 Z (Lambda gen_var_106 Z (Case 0 (Lambda gen_var_92 Z Z) (CaseMatch gen_var_92) (CaseBranches Z0 (Lambda gen_var_93 positive (Case 0 (Lambda gen_var_94 Z Z) (CaseMatch gen_var_94) (CaseBranches Z0 (Lambda gen_var_95 positive (App Zpos (App Coq.PArith.BinPosDef.Pos.mul gen_var_93 gen_var_95))) (Lambda gen_var_104 positive (App Zneg (App Coq.PArith.BinPosDef.Pos.mul gen_var_93 gen_var_104)))))) (Lambda gen_var_105 positive (Case 0 (Lambda gen_var_106 Z Z) (CaseMatch gen_var_106) (CaseBranches Z0 (Lambda gen_var_107 positive (App Zneg (App Coq.PArith.BinPosDef.Pos.mul gen_var_105 gen_var_107))) (Lambda gen_var_108 positive (App Zpos (App Coq.PArith.BinPosDef.Pos.mul gen_var_105 gen_var_108))))))))))) (Definition SumOfTwoSquare.TwoSquares.sum_of_two_squares (Lambda gen_var_103 Z (App ex Z (Lambda gen_var_2 Z (App ex Z (Lambda gen_var_3 Z (App eq Z gen_var_1 (App Coq.ZArith.BinIntDef.Z.add (App Coq.ZArith.BinIntDef.Z.mul gen_var_2 gen_var_2) (App Coq.ZArith.BinIntDef.Z.mul gen_var_3 gen_var_3))))))))) 