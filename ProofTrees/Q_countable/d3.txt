(Definition Coq.Init.Nat.add (Fix (Functions (App add 0 (Prod n_221 nat (Prod m_2211 nat nat)) (Lambda n_222 nat (Lambda m_2222 nat (Case 0 (Lambda n_22222 nat nat) (CaseMatch n_222) (CaseBranches m_2222 (Lambda p_22222 nat (App S (App add p_22222 m_2222))))))))) 0)) (Definition Coq.Init.Peano.lt (Lambda n_3222 nat (Lambda m_32222 nat (App le (App S n_3222) m_32222)))) (Definition Coq.Init.Peano.le_ind (Lambda n_32222 nat (Lambda P_322222 (Prod out_322221 nat (Sort Prop)) (Lambda f_3222222 (App P_322222 n_32222) (Lambda f_32222222 (Prod m_32222221 nat (Prod out_322222211 (App le n_32222 m_32222221) (Prod out_3222222111 (App P_322222 m_32222221) (App P_322222 (App S m_32222221))))) (Fix (Functions (App F 0 (Prod n_322222221 nat (Prod l_3222222211 (App le n_32222 n_322222221) (App P_322222 n_322222221))) (Lambda n_322222222 nat (Lambda l_3222222222 (App le n_32222 n_322222222) (Case 1 (Lambda n_32222222222 nat (Lambda out_322222222222 (App le n_32222 n_32222222222) (App P_322222 n_32222222222))) (CaseMatch l_3222222222) (CaseBranches f_3222222 (Lambda m_32222222222 nat (Lambda l_322222222222 (App le n_32222 m_32222222222) (App f_32222222 m_32222222222 l_322222222222 (App F m_32222222222 l_322222222222)))))))))) 0)))))) (Definition Coq.Arith.Gt.gt_le_S (Lambda n_32222 nat (Lambda m_322222 nat (LetIn H_3222223 (Lambda n_3222222 nat (Lambda m_32222222 nat (Case 2 (Lambda out_322222222 (App and (Prod out_322222221 (App le (App S n_3222222) m_32222222) (App Coq.Init.Peano.lt n_3222222 m_32222222)) (Prod out_322222221 (App Coq.Init.Peano.lt n_3222222 m_32222222) (App le (App S n_3222222) m_32222222))) (Prod out_3222222221 (App Coq.Init.Peano.lt n_3222222 m_32222222) (App le (App S n_3222222) m_32222222))) (CaseMatch (App Coq.Arith.PeanoNat.Nat.le_succ_l n_3222222 m_32222222)) (CaseBranches (Lambda out_322222222 (Prod out_322222221 (App le (App S n_3222222) m_32222222) (App Coq.Init.Peano.lt n_3222222 m_32222222)) (Lambda out_3222222222 (Prod out_3222222221 (App Coq.Init.Peano.lt n_3222222 m_32222222) (App le (App S n_3222222) m_32222222)) out_3222222222)))))) (Prod n_3222221 nat (Prod m_32222211 nat (Prod out_322222111 (App Coq.Init.Peano.lt n_3222221 m_32222211) (App le (App S n_3222221) m_32222211)))) (App H_3222223 n_32222 m_322222))))) (Definition Coq.Arith.Plus.plus_lt_compat_l (Lambda n_32222 nat (Lambda m_322222 nat (Lambda p_3222222 nat (LetIn H_32222223 (Lambda n_32222222 nat (Lambda m_322222222 nat (Lambda p_3222222222 nat (Case 2 (Lambda out_32222222222 (App and (Prod out_32222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add p_3222222222 n_32222222) (App Coq.Init.Nat.add p_3222222222 m_322222222))) (Prod out_32222222221 (App Coq.Init.Peano.lt (App Coq.Init.Nat.add p_3222222222 n_32222222) (App Coq.Init.Nat.add p_3222222222 m_322222222)) (App Coq.Init.Peano.lt n_32222222 m_322222222))) (Prod out_322222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add p_3222222222 n_32222222) (App Coq.Init.Nat.add p_3222222222 m_322222222)))) (CaseMatch (App Coq.Arith.PeanoNat.Nat.add_lt_mono_l n_32222222 m_322222222 p_3222222222)) (CaseBranches (Lambda out_32222222222 (Prod out_32222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add p_3222222222 n_32222222) (App Coq.Init.Nat.add p_3222222222 m_322222222))) (Lambda out_322222222222 (Prod out_322222222221 (App Coq.Init.Peano.lt (App Coq.Init.Nat.add p_3222222222 n_32222222) (App Coq.Init.Nat.add p_3222222222 m_322222222)) (App Coq.Init.Peano.lt n_32222222 m_322222222)) out_32222222222))))))) (Prod n_32222221 nat (Prod m_322222211 nat (Prod p_3222222111 nat (Prod out_32222221111 (App Coq.Init.Peano.lt n_32222221 m_322222211) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add p_3222222111 n_32222221) (App Coq.Init.Nat.add p_3222222111 m_322222211)))))) (App H_32222223 n_32222 m_322222 p_3222222)))))) (Definition Coq.Arith.PeanoNat.Nat.lt_succ_diag_r (Lambda n_32222 nat (App (Lambda lemma_322222 (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222 (App S n_32222)) (App le n_32222 n_32222)) (App Coq.Classes.Morphisms.iff_flip_impl_subrelation (App Coq.Init.Peano.lt n_32222 (App S n_32222)) (App le n_32222 n_32222) lemma_322222)) (App Coq.Arith.PeanoNat.Nat.lt_succ_r n_32222 n_32222) (App Coq.Arith.PeanoNat.Nat.le_refl n_32222)))) (Definition Coq.Init.Peano.gt (Lambda n_32222 nat (Lambda m_322222 nat (App Coq.Init.Peano.lt m_322222 n_32222)))) (Definition Coq.Arith.PeanoNat.Nat.lt_trans (Lambda n_32222222 nat (Lambda m_322222222 nat (Lambda p_3222222222 nat (Cast (App Coq.Arith.PeanoNat.Nat.central_induction (Lambda t_32222222222 nat (Prod out_322222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_3222222222211 (App Coq.Init.Peano.lt m_322222222 t_32222222222) (App Coq.Init.Peano.lt n_32222222 t_32222222222)))) (Cast (Cast (Lambda x_32222222222 nat (Lambda y_322222222222 nat (Lambda H_3222222222222 (App eq nat x_32222222222 y_322222222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (Prod out_32222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_322222222222211 (App Coq.Init.Peano.lt m_322222222 x_32222222222) (App Coq.Init.Peano.lt n_32222222 x_32222222222))) (Prod out_32222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_322222222222211 (App Coq.Init.Peano.lt m_322222222 y_322222222222) (App Coq.Init.Peano.lt n_32222222 y_322222222222))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism (Sort Prop) (Prod B_32222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) Coq.Program.Basics.impl Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism (App Coq.Init.Peano.lt n_32222222 m_322222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Peano.lt n_32222222 m_322222222)) (Prod out_32222222222221 (App Coq.Init.Peano.lt m_322222222 x_32222222222) (App Coq.Init.Peano.lt n_32222222 x_32222222222)) (Prod out_32222222222221 (App Coq.Init.Peano.lt m_322222222 y_322222222222) (App Coq.Init.Peano.lt n_32222222 y_322222222222)) (App Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism (App Coq.Init.Peano.lt m_322222222 x_32222222222) (App Coq.Init.Peano.lt m_322222222 y_322222222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_32222222222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) Coq.Init.Peano.lt Coq.Arith.PeanoNat.Nat.lt_wd m_322222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) m_322222222) x_32222222222 y_322222222222 H_3222222222222) (App Coq.Init.Peano.lt n_32222222 x_32222222222) (App Coq.Init.Peano.lt n_32222222 y_322222222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_32222222222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) Coq.Init.Peano.lt Coq.Arith.PeanoNat.Nat.lt_wd n_32222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) n_32222222) x_32222222222 y_322222222222 H_3222222222222))) (Prod out_32222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_322222222222211 (App Coq.Init.Peano.lt m_322222222 y_322222222222) (App Coq.Init.Peano.lt n_32222222 y_322222222222))) (Prod out_32222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_322222222222211 (App Coq.Init.Peano.lt m_322222222 y_322222222222) (App Coq.Init.Peano.lt n_32222222 y_322222222222))) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (Prod out_32222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_322222222222211 (App Coq.Init.Peano.lt m_322222222 y_322222222222) (App Coq.Init.Peano.lt n_32222222 y_322222222222)))) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (Prod out_32222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_322222222222211 (App Coq.Init.Peano.lt m_322222222 y_322222222222) (App Coq.Init.Peano.lt n_32222222 y_322222222222)))))))) REVERTcast (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff (Lambda t_32222222222 nat (Prod out_322222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_3222222222211 (App Coq.Init.Peano.lt m_322222222 t_32222222222) (App Coq.Init.Peano.lt n_32222222 t_32222222222)))) (Lambda t_32222222222 nat (Prod out_322222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_3222222222211 (App Coq.Init.Peano.lt m_322222222 t_32222222222) (App Coq.Init.Peano.lt n_32222222 t_32222222222)))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_32222222221 nat (Sort Prop)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (Lambda t_32222222222 nat (Prod out_322222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_3222222222211 (App Coq.Init.Peano.lt m_322222222 t_32222222222) (App Coq.Init.Peano.lt n_32222222 t_32222222222)))))) m_322222222 (Lambda _tmp_32222222222 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Lambda H_322222222222 (App Coq.Init.Peano.lt m_322222222 m_322222222) (App Coq.Init.Logic.False_ind (App Coq.Init.Peano.lt n_32222222 m_322222222) (App Coq.Arith.PeanoNat.Nat.lt_irrefl m_322222222 H_322222222222)))) (Lambda p_32222222222 nat (App (Lambda lemma_322222222222 (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt m_322222222 (App S p_32222222222)) (App le m_322222222 p_32222222222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (Prod out_3222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_32222222222211 (App Coq.Init.Peano.lt m_322222222 p_32222222222) (App Coq.Init.Peano.lt n_32222222 p_32222222222))) (Prod out_3222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_32222222222211 (App Coq.Init.Peano.lt m_322222222 (App S p_32222222222)) (App Coq.Init.Peano.lt n_32222222 (App S p_32222222222)))) (Prod out_3222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_32222222222211 (App le m_322222222 p_32222222222) (App Coq.Init.Peano.lt n_32222222 (App S p_32222222222)))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism (Sort Prop) (Prod B_3222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) Coq.Program.Basics.impl Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism (App Coq.Init.Peano.lt n_32222222 m_322222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Peano.lt n_32222222 m_322222222)) (Prod out_3222222222221 (App Coq.Init.Peano.lt m_322222222 (App S p_32222222222)) (App Coq.Init.Peano.lt n_32222222 (App S p_32222222222))) (Prod out_3222222222221 (App le m_322222222 p_32222222222) (App Coq.Init.Peano.lt n_32222222 (App S p_32222222222))) (App Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism (App Coq.Init.Peano.lt m_322222222 (App S p_32222222222)) (App le m_322222222 p_32222222222) lemma_322222222222 (App Coq.Init.Peano.lt n_32222222 (App S p_32222222222)) (App Coq.Init.Peano.lt n_32222222 (App S p_32222222222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Peano.lt n_32222222 (App S p_32222222222))))))) (App Coq.Arith.PeanoNat.Nat.lt_succ_r m_322222222 p_32222222222) (App (Lambda lemma_322222222222 (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222 (App S p_32222222222)) (App le n_32222222 p_32222222222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (Prod out_3222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_32222222222211 (App Coq.Init.Peano.lt m_322222222 p_32222222222) (App Coq.Init.Peano.lt n_32222222 p_32222222222))) (Prod out_3222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_32222222222211 (App le m_322222222 p_32222222222) (App Coq.Init.Peano.lt n_32222222 (App S p_32222222222)))) (Prod out_3222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_32222222222211 (App le m_322222222 p_32222222222) (App le n_32222222 p_32222222222))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism (Sort Prop) (Prod B_3222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) Coq.Program.Basics.impl Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism (App Coq.Init.Peano.lt n_32222222 m_322222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Peano.lt n_32222222 m_322222222)) (Prod out_3222222222221 (App le m_322222222 p_32222222222) (App Coq.Init.Peano.lt n_32222222 (App S p_32222222222))) (Prod out_3222222222221 (App le m_322222222 p_32222222222) (App le n_32222222 p_32222222222)) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism (Sort Prop) (Prod B_3222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) Coq.Program.Basics.impl Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism (App le m_322222222 p_32222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App le m_322222222 p_32222222222)) (App Coq.Init.Peano.lt n_32222222 (App S p_32222222222)) (App le n_32222222 p_32222222222) lemma_322222222222)))) (App Coq.Arith.PeanoNat.Nat.lt_succ_r n_32222222 p_32222222222) (App conj (Prod out_322222222221 (Prod out_322222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_3222222222211 (App Coq.Init.Peano.lt m_322222222 p_32222222222) (App Coq.Init.Peano.lt n_32222222 p_32222222222))) (Prod out_3222222222211 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_32222222222111 (App le m_322222222 p_32222222222) (App le n_32222222 p_32222222222)))) (Prod out_322222222221 (Prod out_322222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_3222222222211 (App le m_322222222 p_32222222222) (App le n_32222222 p_32222222222))) (Prod out_3222222222211 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_32222222222111 (App Coq.Init.Peano.lt m_322222222 p_32222222222) (App Coq.Init.Peano.lt n_32222222 p_32222222222)))) (Lambda H_322222222222 (Prod out_322222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_3222222222211 (App Coq.Init.Peano.lt m_322222222 p_32222222222) (App Coq.Init.Peano.lt n_32222222 p_32222222222))) (Lambda H1_3222222222222 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Lambda H2_32222222222222 (App le m_322222222 p_32222222222) (App Coq.Arith.PeanoNat.Nat.lt_le_incl n_32222222 p_32222222222 (Case 2 (Lambda out_322222222222222 (App or (App Coq.Init.Peano.lt m_322222222 p_32222222222) (App eq nat m_322222222 p_32222222222)) (App Coq.Init.Peano.lt n_32222222 p_32222222222)) (CaseMatch (App (Lambda lemma_322222222222222 (App Coq.Init.Logic.iff (App le m_322222222 p_32222222222) (App or (App Coq.Init.Peano.lt m_322222222 p_32222222222) (App eq nat m_322222222 p_32222222222))) (App Coq.Classes.Morphisms.iff_impl_subrelation (App le m_322222222 p_32222222222) (App or (App Coq.Init.Peano.lt m_322222222 p_32222222222) (App eq nat m_322222222 p_32222222222)) lemma_322222222222222)) (App Coq.Arith.PeanoNat.Nat.lt_eq_cases m_322222222 p_32222222222) H2_32222222222222)) (CaseBranches (Lambda H2_322222222222222 (App Coq.Init.Peano.lt m_322222222 p_32222222222) (App H_322222222222 H1_3222222222222 H2_322222222222222)) (Lambda H2_322222222222222 (App eq nat m_322222222 p_32222222222) (App (Lambda lemma_3222222222222222 (App eq nat m_322222222 p_32222222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_32222222222222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Program.Basics.impl) Coq.Init.Peano.lt (App Coq.Classes.Morphisms.subrelation_proper (Prod out_32222222222222221 nat (Prod out_322222222222222211 nat (Sort Prop))) (App Coq.Classes.Morphisms.respectful nat (Prod out_32222222222222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff)) Coq.Init.Peano.lt Coq.Arith.PeanoNat.Nat.lt_wd (App Coq.Classes.Morphisms.respectful nat (Prod out_32222222222222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Program.Basics.impl)) tt (App Coq.Classes.Morphisms.subrelation_respectful nat (Prod out_32222222222222221 nat (Sort Prop)) (App eq nat) (App eq nat) (App Coq.Classes.Morphisms.subrelation_refl nat (App eq nat)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Program.Basics.impl) (App Coq.Classes.Morphisms.subrelation_respectful nat (Sort Prop) (App eq nat) (App eq nat) (App Coq.Classes.Morphisms.subrelation_refl nat (App eq nat)) Coq.Init.Logic.iff Coq.Program.Basics.impl Coq.Classes.Morphisms.iff_impl_subrelation))) n_32222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) n_32222222) m_322222222 p_32222222222 lemma_3222222222222222)) H2_322222222222222 H1_3222222222222)))))))) (Lambda H_322222222222 (Prod out_322222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_3222222222211 (App le m_322222222 p_32222222222) (App le n_32222222 p_32222222222))) (Lambda H1_3222222222222 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Lambda H2_32222222222222 (App Coq.Init.Peano.lt m_322222222 p_32222222222) (LetIn H3_322222222222223 (App H_322222222222 H1_3222222222222 (App Coq.Arith.PeanoNat.Nat.lt_le_incl m_322222222 p_32222222222 H2_32222222222222)) (App le n_32222222 p_32222222222) (Case 2 (Lambda out_3222222222222232 (App or (App Coq.Init.Peano.lt n_32222222 p_32222222222) (App eq nat n_32222222 p_32222222222)) (App Coq.Init.Peano.lt n_32222222 p_32222222222)) (CaseMatch (App (Lambda lemma_3222222222222232 (App Coq.Init.Logic.iff (App le n_32222222 p_32222222222) (App or (App Coq.Init.Peano.lt n_32222222 p_32222222222) (App eq nat n_32222222 p_32222222222))) (App Coq.Classes.Morphisms.iff_impl_subrelation (App le n_32222222 p_32222222222) (App or (App Coq.Init.Peano.lt n_32222222 p_32222222222) (App eq nat n_32222222 p_32222222222)) lemma_3222222222222232)) (App Coq.Arith.PeanoNat.Nat.lt_eq_cases n_32222222 p_32222222222) H3_322222222222223)) (CaseBranches (Lambda H3_3222222222222232 (App Coq.Init.Peano.lt n_32222222 p_32222222222) H3_3222222222222232) (Lambda H3_3222222222222232 (App eq nat n_32222222 p_32222222222) (App Coq.Init.Logic.False_ind (App Coq.Init.Peano.lt n_32222222 p_32222222222) (App Coq.Arith.PeanoNat.Nat.lt_asymm n_32222222 m_322222222 H1_3222222222222 (App (Lambda lemma_32222222222222322 (App eq nat n_32222222 p_32222222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_322222222222223221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Program.Basics.impl) Coq.Init.Peano.lt (App Coq.Classes.Morphisms.subrelation_proper (Prod out_322222222222223221 nat (Prod out_3222222222222232211 nat (Sort Prop))) (App Coq.Classes.Morphisms.respectful nat (Prod out_322222222222223221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff)) Coq.Init.Peano.lt Coq.Arith.PeanoNat.Nat.lt_wd (App Coq.Classes.Morphisms.respectful nat (Prod out_322222222222223221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Program.Basics.impl)) tt (App Coq.Classes.Morphisms.subrelation_respectful nat (Prod out_322222222222223221 nat (Sort Prop)) (App eq nat) (App eq nat) (App Coq.Classes.Morphisms.subrelation_refl nat (App eq nat)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Program.Basics.impl) (App Coq.Classes.Morphisms.subrelation_respectful nat (Sort Prop) (App eq nat) (App eq nat) (App Coq.Classes.Morphisms.subrelation_refl nat (App eq nat)) Coq.Init.Logic.iff Coq.Program.Basics.impl Coq.Classes.Morphisms.iff_impl_subrelation))) m_322222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) m_322222222) p_32222222222 n_32222222 (App Coq.Classes.RelationClasses.symmetry nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Symmetric nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) n_32222222 p_32222222222 lemma_32222222222222322))) H3_3222222222222232 H2_32222222222222)))))))))))))) p_3222222222) REVERTcast (Prod out_32222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_322222222211 (App Coq.Init.Peano.lt m_322222222 p_3222222222) (App Coq.Init.Peano.lt n_32222222 p_3222222222)))))))) (Definition Coq.Arith.Lt.lt_le_S (Lambda n_32222222 nat (Lambda m_322222222 nat (LetIn H_3222222223 (Lambda n_3222222222 nat (Lambda m_32222222222 nat (Case 2 (Lambda out_322222222222 (App and (Prod out_322222222221 (App le (App S n_3222222222) m_32222222222) (App Coq.Init.Peano.lt n_3222222222 m_32222222222)) (Prod out_322222222221 (App Coq.Init.Peano.lt n_3222222222 m_32222222222) (App le (App S n_3222222222) m_32222222222))) (Prod out_3222222222221 (App Coq.Init.Peano.lt n_3222222222 m_32222222222) (App le (App S n_3222222222) m_32222222222))) (CaseMatch (App Coq.Arith.PeanoNat.Nat.le_succ_l n_3222222222 m_32222222222)) (CaseBranches (Lambda out_322222222222 (Prod out_322222222221 (App le (App S n_3222222222) m_32222222222) (App Coq.Init.Peano.lt n_3222222222 m_32222222222)) (Lambda out_3222222222222 (Prod out_3222222222221 (App Coq.Init.Peano.lt n_3222222222 m_32222222222) (App le (App S n_3222222222) m_32222222222)) out_3222222222222)))))) (Prod n_3222222221 nat (Prod m_32222222211 nat (Prod out_322222222111 (App Coq.Init.Peano.lt n_3222222221 m_32222222211) (App le (App S n_3222222221) m_32222222211)))) (App H_3222222223 n_32222222 m_322222222))))) (Definition Coq.Arith.PeanoNat.Nat.lt_0_succ (Lambda n_32222222 nat (Cast (App Coq.Arith.PeanoNat.Nat.induction (Lambda t_322222222 nat (App Coq.Init.Peano.lt O (App S t_322222222))) (Cast (Cast (Lambda x_322222222 nat (Lambda y_3222222222 nat (Lambda H_32222222222 (App eq nat x_322222222 y_3222222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App Coq.Init.Peano.lt O (App S x_322222222)) (App Coq.Init.Peano.lt O (App S y_3222222222)) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_322222222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) Coq.Init.Peano.lt Coq.Arith.PeanoNat.Nat.lt_wd O (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) O) (App S x_322222222) (App S y_3222222222) (App Coq.Arith.PeanoNat.Nat.succ_wd x_322222222 y_3222222222 H_32222222222)) (App Coq.Init.Peano.lt O (App S y_3222222222)) (App Coq.Init.Peano.lt O (App S y_3222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App Coq.Init.Peano.lt O (App S y_3222222222))) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Peano.lt O (App S y_3222222222))))))) REVERTcast (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff (Lambda t_322222222 nat (App Coq.Init.Peano.lt O (App S t_322222222))) (Lambda t_322222222 nat (App Coq.Init.Peano.lt O (App S t_322222222))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_322222221 nat (Sort Prop)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (Lambda t_322222222 nat (App Coq.Init.Peano.lt O (App S t_322222222))))) (App Coq.Arith.PeanoNat.Nat.lt_succ_diag_r O) (Lambda n_322222222 nat (Lambda H_3222222222 (App Coq.Init.Peano.lt O (App S n_322222222)) (App Coq.Arith.PeanoNat.Nat.lt_lt_succ_r O (App S n_322222222) H_3222222222))) n_32222222) REVERTcast (App Coq.Init.Peano.lt O (App S n_32222222))))) (Definition Coq.Init.Logic.eq_sym (Lambda A_3222222332 (Sort Type) (Lambda x_32222223322 A_3222222332 (Lambda y_322222233222 A_3222222332 (Lambda H_3222222332222 (App eq A_3222222332 x_32222223322 y_322222233222) (Case 2 (Lambda y_32222223322222 A_3222222332 (Lambda out_322222233222222 (App eq A_3222222332 x_32222223322 y_32222223322222) (App eq A_3222222332 y_32222223322222 x_32222223322))) (CaseMatch H_3222222332222) (CaseBranches (App eq_refl A_3222222332 x_32222223322)))))))) (Definition Coq.Init.Peano.plus_n_O (Lambda n_3222222332 nat (App Coq.Init.Datatypes.nat_ind (Lambda n_32222223322 nat (App eq nat n_32222223322 (App Coq.Init.Nat.add n_32222223322 O))) (Cast (App eq_refl nat O) REVERTcast (App eq nat O (App Coq.Init.Nat.add O O))) (Lambda n_32222223322 nat (Lambda IHn_322222233222 (App eq nat n_32222223322 (App Coq.Init.Nat.add n_32222223322 O)) (Cast (App Coq.Init.Peano.f_equal_nat nat S n_32222223322 (App Coq.Init.Nat.add n_32222223322 O) IHn_322222233222) REVERTcast (App eq nat (App S n_32222223322) (App Coq.Init.Nat.add (App S n_32222223322) O))))) n_3222222332))) (Definition Coq.Init.Logic.eq_ind (Lambda A_32222223332 (Sort Type) (Lambda x_322222233322 A_32222223332 (Lambda P_3222222333222 (Prod out_3222222333221 A_32222223332 (Sort Prop)) (Lambda f_32222223332222 (App P_3222222333222 x_322222233322) (Lambda y_322222233322222 A_32222223332 (Lambda e_3222222333222222 (App eq A_32222223332 x_322222233322 y_322222233322222) (Case 2 (Lambda y_32222223332222222 A_32222223332 (Lambda out_322222233322222222 (App eq A_32222223332 x_322222233322 y_32222223332222222) (App P_3222222333222 y_32222223332222222))) (CaseMatch e_3222222333222222) (CaseBranches f_32222223332222))))))))) (Definition Coq.Arith.Compare_dec.lt_eq_lt_dec (Lambda n_332222222222 nat (Lambda m_3322222222222 nat (App Coq.Init.Datatypes.nat_rec (Lambda n_33222222222222 nat (Prod m_332222222222221 nat (App sumor (App sumbool (App Coq.Init.Peano.lt n_33222222222222 m_332222222222221) (App eq nat n_33222222222222 m_332222222222221)) (App Coq.Init.Peano.lt m_332222222222221 n_33222222222222)))) (Lambda m_33222222222222 nat (Case 0 (Lambda n_332222222222222 nat (App sumor (App sumbool (App Coq.Init.Peano.lt O n_332222222222222) (App eq nat O n_332222222222222)) (App Coq.Init.Peano.lt n_332222222222222 O))) (CaseMatch m_33222222222222) (CaseBranches (App inleft (App sumbool (App Coq.Init.Peano.lt O O) (App eq nat O O)) (App Coq.Init.Peano.lt O O) (App right (App Coq.Init.Peano.lt O O) (App eq nat O O) (App eq_refl nat O))) (Lambda m_332222222222222 nat (App inleft (App sumbool (App Coq.Init.Peano.lt O (App S m_332222222222222)) (App eq nat O (App S m_332222222222222))) (App Coq.Init.Peano.lt (App S m_332222222222222) O) (App left (App Coq.Init.Peano.lt O (App S m_332222222222222)) (App eq nat O (App S m_332222222222222)) (Cast (App Coq.Arith.Gt.gt_le_S O (App S m_332222222222222) (App Coq.Arith.Gt.gt_Sn_O m_332222222222222)) REVERTcast (App Coq.Init.Peano.lt O (App S m_332222222222222))))))))) (Lambda n_33222222222222 nat (Lambda IHn_332222222222222 (Prod m_332222222222221 nat (App sumor (App sumbool (App Coq.Init.Peano.lt n_33222222222222 m_332222222222221) (App eq nat n_33222222222222 m_332222222222221)) (App Coq.Init.Peano.lt m_332222222222221 n_33222222222222))) (Lambda m_3322222222222222 nat (Case 0 (Lambda n_33222222222222222 nat (App sumor (App sumbool (App Coq.Init.Peano.lt (App S n_33222222222222) n_33222222222222222) (App eq nat (App S n_33222222222222) n_33222222222222222)) (App Coq.Init.Peano.lt n_33222222222222222 (App S n_33222222222222)))) (CaseMatch m_3322222222222222) (CaseBranches (App inright (App sumbool (App Coq.Init.Peano.lt (App S n_33222222222222) O) (App eq nat (App S n_33222222222222) O)) (App Coq.Init.Peano.lt O (App S n_33222222222222)) (Cast (App Coq.Arith.Gt.gt_le_S O (App S n_33222222222222) (Cast (App Coq.Arith.PeanoNat.Nat.lt_0_succ n_33222222222222) REVERTcast (App Coq.Init.Peano.gt (App S n_33222222222222) O))) REVERTcast (App Coq.Init.Peano.lt O (App S n_33222222222222)))) (Lambda m_33222222222222222 nat (LetIn s_332222222222222223 (App IHn_332222222222222 m_33222222222222222) (App sumor (App sumbool (App Coq.Init.Peano.lt n_33222222222222 m_33222222222222222) (App eq nat n_33222222222222 m_33222222222222222)) (App Coq.Init.Peano.lt m_33222222222222222 n_33222222222222)) (Case 2 (Lambda s_3322222222222222232 (App sumor (App sumbool (App Coq.Init.Peano.lt n_33222222222222 m_33222222222222222) (App eq nat n_33222222222222 m_33222222222222222)) (App Coq.Init.Peano.lt m_33222222222222222 n_33222222222222)) (App sumor (App sumbool (App Coq.Init.Peano.lt (App S n_33222222222222) (App S m_33222222222222222)) (App eq nat (App S n_33222222222222) (App S m_33222222222222222))) (App Coq.Init.Peano.lt (App S m_33222222222222222) (App S n_33222222222222)))) (CaseMatch s_332222222222222223) (CaseBranches (Lambda H_3322222222222222232 (App sumbool (App Coq.Init.Peano.lt n_33222222222222 m_33222222222222222) (App eq nat n_33222222222222 m_33222222222222222)) (Case 2 (Lambda s_33222222222222222322 (App sumbool (App Coq.Init.Peano.lt n_33222222222222 m_33222222222222222) (App eq nat n_33222222222222 m_33222222222222222)) (App sumor (App sumbool (App Coq.Init.Peano.lt (App S n_33222222222222) (App S m_33222222222222222)) (App eq nat (App S n_33222222222222) (App S m_33222222222222222))) (App Coq.Init.Peano.lt (App S m_33222222222222222) (App S n_33222222222222)))) (CaseMatch H_3322222222222222232) (CaseBranches (Lambda l_33222222222222222322 (App Coq.Init.Peano.lt n_33222222222222 m_33222222222222222) (App inleft (App sumbool (App Coq.Init.Peano.lt (App S n_33222222222222) (App S m_33222222222222222)) (App eq nat (App S n_33222222222222) (App S m_33222222222222222))) (App Coq.Init.Peano.lt (App S m_33222222222222222) (App S n_33222222222222)) (App left (App Coq.Init.Peano.lt (App S n_33222222222222) (App S m_33222222222222222)) (App eq nat (App S n_33222222222222) (App S m_33222222222222222)) (Cast (App Coq.Arith.Le.le_n_S (App S n_33222222222222) m_33222222222222222 l_33222222222222222322) REVERTcast (App Coq.Init.Peano.lt (App S n_33222222222222) (App S m_33222222222222222)))))) (Lambda e_33222222222222222322 (App eq nat n_33222222222222 m_33222222222222222) (App inleft (App sumbool (App Coq.Init.Peano.lt (App S n_33222222222222) (App S m_33222222222222222)) (App eq nat (App S n_33222222222222) (App S m_33222222222222222))) (App Coq.Init.Peano.lt (App S m_33222222222222222) (App S n_33222222222222)) (App right (App Coq.Init.Peano.lt (App S n_33222222222222) (App S m_33222222222222222)) (App eq nat (App S n_33222222222222) (App S m_33222222222222222)) (App Coq.Init.Peano.f_equal_nat nat S n_33222222222222 m_33222222222222222 e_33222222222222222322))))))) (Lambda H_3322222222222222232 (App Coq.Init.Peano.lt m_33222222222222222 n_33222222222222) (App inright (App sumbool (App Coq.Init.Peano.lt (App S n_33222222222222) (App S m_33222222222222222)) (App eq nat (App S n_33222222222222) (App S m_33222222222222222))) (App Coq.Init.Peano.lt (App S m_33222222222222222) (App S n_33222222222222)) (Cast (App Coq.Arith.Gt.gt_le_S (App S m_33222222222222222) (App S n_33222222222222) (Cast (App Coq.Arith.Lt.le_lt_n_Sm (App S m_33222222222222222) n_33222222222222 H_3322222222222222232) REVERTcast (App Coq.Init.Peano.gt (App S n_33222222222222) (App S m_33222222222222222)))) REVERTcast (App Coq.Init.Peano.lt (App S m_33222222222222222) (App S n_33222222222222)))))))))))))) n_332222222222 m_3322222222222)))) (Definition Coq.Arith.PeanoNat.Nat.le_lt_trans (Lambda n_33222222222222 nat (Lambda m_332222222222222 nat (Lambda p_3322222222222222 nat (Lambda H_33222222222222222 (App le n_33222222222222 m_332222222222222) (Lambda H0_332222222222222222 (App Coq.Init.Peano.lt m_332222222222222 p_3322222222222222) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.not_ge_lt n_33222222222222 p_3322222222222222 (Cast (Lambda H1_3322222222222222222 (App le p_3322222222222222 n_33222222222222) (App (Lambda H2_33222222222222222222 (App Coq.Init.Peano.lt n_33222222222222 p_3322222222222222) (App (Lambda H3_332222222222222222222 (App Coq.Init.Peano.lt p_3322222222222222 p_3322222222222222) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.lt_irrefl p_3322222222222222 H3_332222222222222222222)) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.le_lt_trans p_3322222222222222 n_33222222222222 p_3322222222222222 H1_3322222222222222222 H2_33222222222222222222))) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.le_lt_trans n_33222222222222 m_332222222222222 p_3322222222222222 H_33222222222222222 H0_332222222222222222))) REVERTcast (App Coq.Init.Logic.not (App le p_3322222222222222 n_33222222222222)))))))))) (Definition Coq.setoid_ring.ArithRing.natr_ring_lemma1 (App Coq.setoid_ring.Ring_polynom.ring_correct nat O (App S O) Coq.Init.Nat.add Coq.Init.Nat.mul (App Coq.setoid_ring.Ring_theory.SRsub nat Coq.Init.Nat.add) (App Coq.setoid_ring.Ring_theory.SRopp nat) (App eq nat) (App Coq.setoid_ring.Ring_theory.Eqsth nat) (App Coq.setoid_ring.Ring_theory.SReqe_Reqe nat Coq.Init.Nat.add Coq.Init.Nat.mul (App eq nat) (App Coq.setoid_ring.Ring_theory.Eq_s_ext nat Coq.Init.Nat.add Coq.Init.Nat.mul)) (App Coq.setoid_ring.Ring_theory.SRth_ARth nat O (App S O) Coq.Init.Nat.add Coq.Init.Nat.mul (App eq nat) (App Coq.setoid_ring.Ring_theory.Eqsth nat) Coq.setoid_ring.ArithRing.natSRth) N N0 (App Npos xH) Coq.NArith.BinNatDef.N.add Coq.NArith.BinNatDef.N.mul Coq.NArith.BinNatDef.N.add (Lambda x_3322222222222332 N x_3322222222222332) Coq.NArith.BinNatDef.N.eqb Coq.NArith.BinNatDef.N.to_nat (App Coq.setoid_ring.Ring_theory.SRmorph_Rmorph nat O (App S O) Coq.Init.Nat.add Coq.Init.Nat.mul (App eq nat) (App Coq.setoid_ring.Ring_theory.Eqsth nat) N N0 (App Npos xH) Coq.NArith.BinNatDef.N.add Coq.NArith.BinNatDef.N.mul Coq.NArith.BinNatDef.N.eqb Coq.NArith.BinNatDef.N.to_nat Coq.setoid_ring.ArithRing.nat_morph_N) N Coq.setoid_ring.Ring_theory.id_phi_N (App Coq.setoid_ring.Ring_theory.pow_N nat (App S O) Coq.Init.Nat.mul) (App Coq.setoid_ring.Ring_theory.pow_N_th nat (App S O) Coq.Init.Nat.mul (App eq nat) (App Coq.setoid_ring.Ring_theory.Eqsth nat)) Coq.NArith.BinNatDef.N.div_eucl (App Coq.setoid_ring.InitialRing.Ntriv_div_th nat (App eq nat) (App Coq.setoid_ring.Ring_theory.Eqsth nat) Coq.NArith.BinNatDef.N.to_nat))) (Definition Coq.setoid_ring.Ring_tac.ring_subst_niter (App Coq.Init.Nat.mul (App Coq.Init.Nat.mul (App S (App S (App S (App S (App S (App S (App S (App S (App S (App S O)))))))))) (App S (App S (App S (App S (App S (App S (App S (App S (App S (App S O))))))))))) (App S (App S (App S (App S (App S (App S (App S (App S (App S (App S O)))))))))))) (Definition Coq.setoid_ring.Ring_polynom.mk_monpol_list (Lambda C_3322222222222332 (Sort Type) (Lambda cO_33222222222223322 C_3322222222222332 (Lambda cI_332222222222233222 C_3322222222222332 (Lambda cadd_3322222222222332222 (Prod out_3322222222222332221 C_3322222222222332 (Prod out_33222222222223322211 C_3322222222222332 C_3322222222222332)) (Lambda cmul_33222222222223322222 (Prod out_33222222222223322221 C_3322222222222332 (Prod out_332222222222233222211 C_3322222222222332 C_3322222222222332)) (Lambda csub_332222222222233222222 (Prod out_332222222222233222221 C_3322222222222332 (Prod out_3322222222222332222211 C_3322222222222332 C_3322222222222332)) (Lambda copp_3322222222222332222222 (Prod out_3322222222222332222221 C_3322222222222332 C_3322222222222332) (Lambda ceqb_33222222222223322222222 (Prod out_33222222222223322222221 C_3322222222222332 (Prod out_332222222222233222222211 C_3322222222222332 bool)) (Lambda cdiv_332222222222233222222222 (Prod out_332222222222233222222221 C_3322222222222332 (Prod out_3322222222222332222222211 C_3322222222222332 (App prod C_3322222222222332 C_3322222222222332))) (Fix (Functions (App mk_monpol_list 0 (Prod lpe_3322222222222332222222221 (App list (App prod (App PExpr C_3322222222222332) (App PExpr C_3322222222222332))) (App list (App prod (App prod C_3322222222222332 Mon) (App Pol C_3322222222222332)))) (Lambda lpe_3322222222222332222222222 (App list (App prod (App PExpr C_3322222222222332) (App PExpr C_3322222222222332))) (Case 1 (Lambda lpe_33222222222223322222222222 (App list (App prod (App PExpr C_3322222222222332) (App PExpr C_3322222222222332))) (App list (App prod (App prod C_3322222222222332 Mon) (App Pol C_3322222222222332)))) (CaseMatch lpe_3322222222222332222222222) (CaseBranches (App nil (App prod (App prod C_3322222222222332 Mon) (App Pol C_3322222222222332))) (Lambda p_33222222222223322222222222 (App prod (App PExpr C_3322222222222332) (App PExpr C_3322222222222332)) (Lambda lpe_332222222222233222222222222 (App list (App prod (App PExpr C_3322222222222332) (App PExpr C_3322222222222332))) (Case 2 (Lambda p_3322222222222332222222222222 (App prod (App PExpr C_3322222222222332) (App PExpr C_3322222222222332)) (App list (App prod (App prod C_3322222222222332 Mon) (App Pol C_3322222222222332)))) (CaseMatch p_33222222222223322222222222) (CaseBranches (Lambda me_3322222222222332222222222222 (App PExpr C_3322222222222332) (Lambda pe_33222222222223322222222222222 (App PExpr C_3322222222222332) (Case 1 (Lambda x_332222222222233222222222222222 (App option (App prod C_3322222222222332 Mon)) (App list (App prod (App prod C_3322222222222332 Mon) (App Pol C_3322222222222332)))) (CaseMatch (App Coq.setoid_ring.Ring_polynom.mon_of_pol C_3322222222222332 cO_33222222222223322 ceqb_33222222222223322222222 (App Coq.setoid_ring.Ring_polynom.norm_subst C_3322222222222332 cO_33222222222223322 cI_332222222222233222 cadd_3322222222222332222 cmul_33222222222223322222 csub_332222222222233222222 copp_3322222222222332222222 ceqb_33222222222223322222222 cdiv_332222222222233222222222 O (App nil (App prod (App prod C_3322222222222332 Mon) (App Pol C_3322222222222332))) me_3322222222222332222222222222))) (CaseBranches (Lambda m_332222222222233222222222222222 (App prod C_3322222222222332 Mon) (App cons (App prod (App prod C_3322222222222332 Mon) (App Pol C_3322222222222332)) (App pair (App prod C_3322222222222332 Mon) (App Pol C_3322222222222332) m_332222222222233222222222222222 (App Coq.setoid_ring.Ring_polynom.norm_subst C_3322222222222332 cO_33222222222223322 cI_332222222222233222 cadd_3322222222222332222 cmul_33222222222223322222 csub_332222222222233222222 copp_3322222222222332222222 ceqb_33222222222223322222222 cdiv_332222222222233222222222 O (App nil (App prod (App prod C_3322222222222332 Mon) (App Pol C_3322222222222332))) pe_33222222222223322222222222222)) (App mk_monpol_list lpe_332222222222233222222222222))) (App mk_monpol_list lpe_332222222222233222222222222)))))))))))))) 0))))))))))) (Definition Coq.NArith.BinNatDef.N.add (Lambda n_3322222222222332 N (Lambda m_33222222222223322 N (Case 0 (Lambda n_332222222222233222 N N) (CaseMatch n_3322222222222332) (CaseBranches m_33222222222223322 (Lambda p_332222222222233222 positive (Case 0 (Lambda m_3322222222222332222 N N) (CaseMatch m_33222222222223322) (CaseBranches n_3322222222222332 (Lambda q_3322222222222332222 positive (App Npos (App Coq.PArith.BinPosDef.Pos.add p_332222222222233222 q_3322222222222332222))))))))))) (Definition Coq.NArith.BinNatDef.N.mul (Lambda n_3322222222222332 N (Lambda m_33222222222223322 N (Case 0 (Lambda n_332222222222233222 N N) (CaseMatch n_3322222222222332) (CaseBranches N0 (Lambda p_332222222222233222 positive (Case 0 (Lambda m_3322222222222332222 N N) (CaseMatch m_33222222222223322) (CaseBranches N0 (Lambda q_3322222222222332222 positive (App Npos (App Coq.PArith.BinPosDef.Pos.mul p_332222222222233222 q_3322222222222332222))))))))))) (Definition Coq.NArith.BinNatDef.N.eqb (Fix (Functions (App eqb 0 (Prod n_3322222222222331 N (Prod m_33222222222223311 N bool)) (Lambda n_3322222222222332 N (Lambda m_33222222222223322 N (Case 0 (Lambda n_332222222222233222 N bool) (CaseMatch n_3322222222222332) (CaseBranches (Case 0 (Lambda m_332222222222233222 N bool) (CaseMatch m_33222222222223322) (CaseBranches true (Lambda p_332222222222233222 positive false))) (Lambda p_332222222222233222 positive (Case 0 (Lambda m_3322222222222332222 N bool) (CaseMatch m_33222222222223322) (CaseBranches false (Lambda q_3322222222222332222 positive (App Coq.PArith.BinPosDef.Pos.eqb p_332222222222233222 q_3322222222222332222))))))))))) 0)) (Definition Coq.NArith.BinNatDef.N.div_eucl (Lambda a_3322222222222332 N (Lambda b_33222222222223322 N (Case 0 (Lambda a_332222222222233222 N (App prod N N)) (CaseMatch a_3322222222222332) (CaseBranches (App pair N N N0 N0) (Lambda na_332222222222233222 positive (Case 0 (Lambda b_3322222222222332222 N (App prod N N)) (CaseMatch b_33222222222223322) (CaseBranches (App pair N N N0 a_3322222222222332) (Lambda p_3322222222222332222 positive (App Coq.NArith.BinNatDef.N.pos_div_eucl na_332222222222233222 b_33222222222223322)))))))))) (Definition Coq.setoid_ring.Ring_polynom.Peq (Lambda C_33222222222223332 (Sort Type) (Lambda ceqb_332222222222233322 (Prod out_332222222222233321 C_33222222222223332 (Prod out_3322222222222333211 C_33222222222223332 bool)) (Fix (Functions (App Peq 0 (Prod P_3322222222222333221 (App Pol C_33222222222223332) (Prod P'_33222222222223332211 (App Pol C_33222222222223332) bool)) (Lambda P_3322222222222333222 (App Pol C_33222222222223332) (Lambda P'_33222222222223332222 (App Pol C_33222222222223332) (Case 1 (Lambda P_332222222222233322222 (App Pol C_33222222222223332) bool) (CaseMatch P_3322222222222333222) (CaseBranches (Lambda c_332222222222233322222 C_33222222222223332 (Case 1 (Lambda P'_3322222222222333222222 (App Pol C_33222222222223332) bool) (CaseMatch P'_33222222222223332222) (CaseBranches (Lambda c'_3322222222222333222222 C_33222222222223332 (App ceqb_332222222222233322 c_332222222222233322222 c'_3322222222222333222222)) (Lambda p_3322222222222333222222 positive (Lambda p0_33222222222223332222222 (App Pol C_33222222222223332) false)) (Lambda p_3322222222222333222222 (App Pol C_33222222222223332) (Lambda p0_33222222222223332222222 positive (Lambda p1_332222222222233322222222 (App Pol C_33222222222223332) false)))))) (Lambda j_332222222222233322222 positive (Lambda Q_3322222222222333222222 (App Pol C_33222222222223332) (Case 1 (Lambda P'_33222222222223332222222 (App Pol C_33222222222223332) bool) (CaseMatch P'_33222222222223332222) (CaseBranches (Lambda c_33222222222223332222222 C_33222222222223332 false) (Lambda j'_33222222222223332222222 positive (Lambda Q'_332222222222233322222222 (App Pol C_33222222222223332) (Case 0 (Lambda x_3322222222222333222222222 comparison bool) (CaseMatch (App Coq.PArith.BinPosDef.Pos.compare j_332222222222233322222 j'_33222222222223332222222)) (CaseBranches (App Peq Q_3322222222222333222222 Q'_332222222222233322222222) false false)))) (Lambda p_33222222222223332222222 (App Pol C_33222222222223332) (Lambda p0_332222222222233322222222 positive (Lambda p1_3322222222222333222222222 (App Pol C_33222222222223332) false))))))) (Lambda P_332222222222233322222 (App Pol C_33222222222223332) (Lambda i_3322222222222333222222 positive (Lambda Q_33222222222223332222222 (App Pol C_33222222222223332) (Case 1 (Lambda P'_332222222222233322222222 (App Pol C_33222222222223332) bool) (CaseMatch P'_33222222222223332222) (CaseBranches (Lambda c_332222222222233322222222 C_33222222222223332 false) (Lambda p_332222222222233322222222 positive (Lambda p0_3322222222222333222222222 (App Pol C_33222222222223332) false)) (Lambda P'_332222222222233322222222 (App Pol C_33222222222223332) (Lambda i'_3322222222222333222222222 positive (Lambda Q'_33222222222223332222222222 (App Pol C_33222222222223332) (Case 0 (Lambda x_332222222222233322222222222 comparison bool) (CaseMatch (App Coq.PArith.BinPosDef.Pos.compare i_3322222222222333222222 i'_3322222222222333222222222)) (CaseBranches (Case 0 (Lambda b_332222222222233322222222222 bool bool) (CaseMatch (App Peq P_332222222222233322222 P'_332222222222233322222222)) (CaseBranches (App Peq Q_33222222222223332222222 Q'_33222222222223332222222222) false)) false false)))))))))))))))) 0)))) (Definition Coq.setoid_ring.Ring_polynom.norm_subst (Lambda C_33222222222223332 (Sort Type) (Lambda cO_332222222222233322 C_33222222222223332 (Lambda cI_3322222222222333222 C_33222222222223332 (Lambda cadd_33222222222223332222 (Prod out_33222222222223332221 C_33222222222223332 (Prod out_332222222222233322211 C_33222222222223332 C_33222222222223332)) (Lambda cmul_332222222222233322222 (Prod out_332222222222233322221 C_33222222222223332 (Prod out_3322222222222333222211 C_33222222222223332 C_33222222222223332)) (Lambda csub_3322222222222333222222 (Prod out_3322222222222333222221 C_33222222222223332 (Prod out_33222222222223332222211 C_33222222222223332 C_33222222222223332)) (Lambda copp_33222222222223332222222 (Prod out_33222222222223332222221 C_33222222222223332 C_33222222222223332) (Lambda ceqb_332222222222233322222222 (Prod out_332222222222233322222221 C_33222222222223332 (Prod out_3322222222222333222222211 C_33222222222223332 bool)) (Lambda cdiv_3322222222222333222222222 (Prod out_3322222222222333222222221 C_33222222222223332 (Prod out_33222222222223332222222211 C_33222222222223332 (App prod C_33222222222223332 C_33222222222223332))) (Lambda n_33222222222223332222222222 nat (Lambda lmp_332222222222233322222222222 (App list (App prod (App prod C_33222222222223332 Mon) (App Pol C_33222222222223332))) (LetIn subst_l_3322222222222333222222222223 (Lambda P_3322222222222333222222222222 (App Pol C_33222222222223332) (App Coq.setoid_ring.Ring_polynom.PNSubstL C_33222222222223332 cO_332222222222233322 cI_3322222222222333222 cadd_33222222222223332222 cmul_332222222222233322222 ceqb_332222222222233322222222 cdiv_3322222222222333222222222 P_3322222222222333222222222222 lmp_332222222222233322222222222 n_33222222222223332222222222 n_33222222222223332222222222)) (Prod P_3322222222222333222222222221 (App Pol C_33222222222223332) (App Pol C_33222222222223332)) (Lambda pe_33222222222223332222222222232 (App PExpr C_33222222222223332) (App subst_l_3322222222222333222222222223 (App Coq.setoid_ring.Ring_polynom.norm_aux C_33222222222223332 cO_332222222222233322 cI_3322222222222333222 cadd_33222222222223332222 cmul_332222222222233322222 csub_3322222222222333222222 copp_33222222222223332222222 ceqb_332222222222233322222222 pe_33222222222223332222222222232)))))))))))))))) (Definition Coq.Arith.Plus.plus_le_compat_l (Lambda n_332222222222232 nat (Lambda m_3322222222222322 nat (Lambda p_33222222222223222 nat (LetIn H_332222222222232223 (Lambda n_332222222222232222 nat (Lambda m_3322222222222322222 nat (Lambda p_33222222222223222222 nat (Case 2 (Lambda out_332222222222232222222 (App and (Prod out_332222222222232222221 (App le n_332222222222232222 m_3322222222222322222) (App le (App Coq.Init.Nat.add p_33222222222223222222 n_332222222222232222) (App Coq.Init.Nat.add p_33222222222223222222 m_3322222222222322222))) (Prod out_332222222222232222221 (App le (App Coq.Init.Nat.add p_33222222222223222222 n_332222222222232222) (App Coq.Init.Nat.add p_33222222222223222222 m_3322222222222322222)) (App le n_332222222222232222 m_3322222222222322222))) (Prod out_3322222222222322222221 (App le n_332222222222232222 m_3322222222222322222) (App le (App Coq.Init.Nat.add p_33222222222223222222 n_332222222222232222) (App Coq.Init.Nat.add p_33222222222223222222 m_3322222222222322222)))) (CaseMatch (App Coq.Arith.PeanoNat.Nat.add_le_mono_l n_332222222222232222 m_3322222222222322222 p_33222222222223222222)) (CaseBranches (Lambda out_332222222222232222222 (Prod out_332222222222232222221 (App le n_332222222222232222 m_3322222222222322222) (App le (App Coq.Init.Nat.add p_33222222222223222222 n_332222222222232222) (App Coq.Init.Nat.add p_33222222222223222222 m_3322222222222322222))) (Lambda out_3322222222222322222222 (Prod out_3322222222222322222221 (App le (App Coq.Init.Nat.add p_33222222222223222222 n_332222222222232222) (App Coq.Init.Nat.add p_33222222222223222222 m_3322222222222322222)) (App le n_332222222222232222 m_3322222222222322222)) out_332222222222232222222))))))) (Prod n_332222222222232221 nat (Prod m_3322222222222322211 nat (Prod p_33222222222223222111 nat (Prod out_332222222222232221111 (App le n_332222222222232221 m_3322222222222322211) (App le (App Coq.Init.Nat.add p_33222222222223222111 n_332222222222232221) (App Coq.Init.Nat.add p_33222222222223222111 m_3322222222222322211)))))) (App H_332222222222232223 n_332222222222232 m_3322222222222322 p_33222222222223222)))))) (Definition Coq.Arith.Plus.le_plus_r (Lambda n_332222222222232 nat (Lambda m_3322222222222322 nat (App Coq.Init.Logic.eq_ind_r nat (App Coq.Init.Nat.add m_3322222222222322 n_332222222222232) (Lambda n_33222222222223222 nat (App le m_3322222222222322 n_33222222222223222)) (App Coq.Arith.PeanoNat.Nat.le_add_r m_3322222222222322 n_332222222222232) (App Coq.Init.Nat.add n_332222222222232 m_3322222222222322) (App Coq.Arith.PeanoNat.Nat.add_comm n_332222222222232 m_3322222222222322))))) (Definition Coq.Arith.PeanoNat.Nat.lt_le_trans (Lambda n_33222222222222 nat (Lambda m_332222222222222 nat (Lambda p_3322222222222222 nat (Lambda H_33222222222222222 (App Coq.Init.Peano.lt n_33222222222222 m_332222222222222) (Lambda H0_332222222222222222 (App le m_332222222222222 p_3322222222222222) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.not_ge_lt n_33222222222222 p_3322222222222222 (Cast (Lambda H1_3322222222222222222 (App le p_3322222222222222 n_33222222222222) (App (Lambda H2_33222222222222222222 (App Coq.Init.Peano.lt p_3322222222222222 m_332222222222222) (App (Lambda H3_332222222222222222222 (App Coq.Init.Peano.lt m_332222222222222 m_332222222222222) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.lt_irrefl m_332222222222222 H3_332222222222222222222)) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.le_lt_trans m_332222222222222 p_3322222222222222 m_332222222222222 H0_332222222222222222 H2_33222222222222222222))) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.le_lt_trans p_3322222222222222 n_33222222222222 m_332222222222222 H1_3322222222222222222 H_33222222222222222))) REVERTcast (App Coq.Init.Logic.not (App le p_3322222222222222 n_33222222222222)))))))))) (Definition Coq.Arith.Plus.le_plus_l (Lambda n_33222222222222 nat (Lambda m_332222222222222 nat (App Coq.Arith.PeanoNat.Nat.le_add_r n_33222222222222 m_332222222222222)))) (Definition Coq.Init.Logic.False_ind (Lambda P_3322222222222332 (Sort Prop) (Lambda f_33222222222223322 False (Case 0 (Lambda out_332222222222233222 False P_3322222222222332) (CaseMatch f_33222222222223322) (CaseBranches))))) (Definition Coq.Arith.PeanoNat.Nat.lt_irrefl (Lambda x_3322222222222332 nat (App (Lambda lemma_33222222222223322 (App Coq.Init.Logic.iff (App eq comparison (App Coq.Init.Nat.compare x_3322222222222332 x_3322222222222332) Lt) (App Coq.Init.Peano.lt x_3322222222222332 x_3322222222222332)) (App Coq.Classes.Morphisms.subrelation_proper (Prod A_332222222222233221 (Sort Prop) (Sort Prop)) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) Coq.Init.Logic.not Coq.Classes.Morphisms_Prop.not_iff_morphism (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) tt (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation) (App Coq.Init.Peano.lt x_3322222222222332 x_3322222222222332) (App eq comparison (App Coq.Init.Nat.compare x_3322222222222332 x_3322222222222332) Lt) (App Coq.Classes.RelationClasses.symmetry (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Symmetric (App eq comparison (App Coq.Init.Nat.compare x_3322222222222332 x_3322222222222332) Lt) (App Coq.Init.Peano.lt x_3322222222222332 x_3322222222222332) lemma_33222222222223322))) (App Coq.Arith.PeanoNat.Nat.compare_lt_iff x_3322222222222332 x_3322222222222332) (App Coq.Init.Logic.eq_ind_r comparison Eq (Lambda c_33222222222223322 comparison (App Coq.Init.Logic.not (App eq comparison c_33222222222223322 Lt))) (Cast (Lambda H_33222222222223322 (App eq comparison Eq Lt) (LetIn H0_332222222222233223 (Case 2 (Lambda y_332222222222233222 comparison (Lambda out_3322222222222332222 (App eq comparison Eq y_332222222222233222) (Prod out_33222222222223322221 (App eq comparison y_332222222222233222 Lt) False))) (CaseMatch H_33222222222223322) (CaseBranches (Lambda H0_332222222222233222 (App eq comparison Eq Lt) (App (Lambda H0_3322222222222332222 (App eq comparison Eq Lt) (LetIn H1_33222222222223322223 (App Coq.Init.Logic.eq_ind comparison Eq (Lambda e_33222222222223322222 comparison (Case 0 (Lambda c_332222222222233222222 comparison (Sort Prop)) (CaseMatch e_33222222222223322222) (CaseBranches True False False))) I Lt H0_3322222222222332222) False (App Coq.Init.Logic.False_ind False H1_33222222222223322223))) H0_332222222222233222)))) (Prod out_332222222222233221 (App eq comparison Lt Lt) False) (App H0_332222222222233223 (App eq_refl comparison Lt)))) REVERTcast (App Coq.Init.Logic.not (App eq comparison Eq Lt))) (App Coq.Init.Nat.compare x_3322222222222332 x_3322222222222332) (App Coq.Arith.PeanoNat.Nat.compare_refl x_3322222222222332))))) (Definition Coq.Arith.Plus.plus_reg_l (Lambda n_332222222222232 nat (Lambda m_3322222222222322 nat (Lambda p_33222222222223222 nat (LetIn H_332222222222232223 (Lambda n_332222222222232222 nat (Lambda m_3322222222222322222 nat (Lambda p_33222222222223222222 nat (Case 2 (Lambda out_332222222222232222222 (App and (Prod out_332222222222232222221 (App eq nat (App Coq.Init.Nat.add p_33222222222223222222 n_332222222222232222) (App Coq.Init.Nat.add p_33222222222223222222 m_3322222222222322222)) (App eq nat n_332222222222232222 m_3322222222222322222)) (Prod out_332222222222232222221 (App eq nat n_332222222222232222 m_3322222222222322222) (App eq nat (App Coq.Init.Nat.add p_33222222222223222222 n_332222222222232222) (App Coq.Init.Nat.add p_33222222222223222222 m_3322222222222322222)))) (Prod out_3322222222222322222221 (App eq nat (App Coq.Init.Nat.add p_33222222222223222222 n_332222222222232222) (App Coq.Init.Nat.add p_33222222222223222222 m_3322222222222322222)) (App eq nat n_332222222222232222 m_3322222222222322222))) (CaseMatch (App Coq.Arith.PeanoNat.Nat.add_cancel_l n_332222222222232222 m_3322222222222322222 p_33222222222223222222)) (CaseBranches (Lambda out_332222222222232222222 (Prod out_332222222222232222221 (App eq nat (App Coq.Init.Nat.add p_33222222222223222222 n_332222222222232222) (App Coq.Init.Nat.add p_33222222222223222222 m_3322222222222322222)) (App eq nat n_332222222222232222 m_3322222222222322222)) (Lambda out_3322222222222322222222 (Prod out_3322222222222322222221 (App eq nat n_332222222222232222 m_3322222222222322222) (App eq nat (App Coq.Init.Nat.add p_33222222222223222222 n_332222222222232222) (App Coq.Init.Nat.add p_33222222222223222222 m_3322222222222322222))) out_332222222222232222222))))))) (Prod n_332222222222232221 nat (Prod m_3322222222222322211 nat (Prod p_33222222222223222111 nat (Prod out_332222222222232221111 (App eq nat (App Coq.Init.Nat.add p_33222222222223222111 n_332222222222232221) (App Coq.Init.Nat.add p_33222222222223222111 m_3322222222222322211)) (App eq nat n_332222222222232221 m_3322222222222322211))))) (App H_332222222222232223 n_332222222222232 m_3322222222222322 p_33222222222223222)))))) (Definition Coq.Arith.PeanoNat.Nat.add_comm (Lambda n_33222222222223332 nat (Lambda m_332222222222233322 nat (Cast (App Coq.Arith.PeanoNat.Nat.bi_induction (Lambda t_3322222222222333222 nat (App eq nat (App Coq.Init.Nat.add t_3322222222222333222 m_332222222222233322) (App Coq.Init.Nat.add m_332222222222233322 t_3322222222222333222))) (Cast (Cast (Lambda x_3322222222222333222 nat (Lambda y_33222222222223332222 nat (Lambda H_332222222222233322222 (App eq nat x_3322222222222333222 y_33222222222223332222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App eq nat (App Coq.Init.Nat.add x_3322222222222333222 m_332222222222233322) (App Coq.Init.Nat.add m_332222222222233322 x_3322222222222333222)) (App eq nat (App Coq.Init.Nat.add y_33222222222223332222 m_332222222222233322) (App Coq.Init.Nat.add m_332222222222233322 y_33222222222223332222)) (App Coq.Classes.Morphisms.PER_morphism nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_PER nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App Coq.Init.Nat.add x_3322222222222333222 m_332222222222233322) (App Coq.Init.Nat.add y_33222222222223332222 m_332222222222233322) (App Coq.Arith.PeanoNat.Nat.add_wd x_3322222222222333222 y_33222222222223332222 H_332222222222233322222 m_332222222222233322 m_332222222222233322 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) m_332222222222233322)) (App Coq.Init.Nat.add m_332222222222233322 x_3322222222222333222) (App Coq.Init.Nat.add m_332222222222233322 y_33222222222223332222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_3322222222222333222221 nat nat) (App eq nat) (App Coq.Classes.Morphisms.respectful nat nat (App eq nat) (App eq nat)) Coq.Init.Nat.add Coq.Arith.PeanoNat.Nat.add_wd m_332222222222233322 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) m_332222222222233322) x_3322222222222333222 y_33222222222223332222 H_332222222222233322222)) (App eq nat (App Coq.Init.Nat.add y_33222222222223332222 m_332222222222233322) (App Coq.Init.Nat.add m_332222222222233322 y_33222222222223332222)) (App eq nat (App Coq.Init.Nat.add y_33222222222223332222 m_332222222222233322) (App Coq.Init.Nat.add m_332222222222233322 y_33222222222223332222)) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App eq nat (App Coq.Init.Nat.add y_33222222222223332222 m_332222222222233322) (App Coq.Init.Nat.add m_332222222222233322 y_33222222222223332222))) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq nat (App Coq.Init.Nat.add y_33222222222223332222 m_332222222222233322) (App Coq.Init.Nat.add m_332222222222233322 y_33222222222223332222))))))) REVERTcast (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff (Lambda t_3322222222222333222 nat (App eq nat (App Coq.Init.Nat.add t_3322222222222333222 m_332222222222233322) (App Coq.Init.Nat.add m_332222222222233322 t_3322222222222333222))) (Lambda t_3322222222222333222 nat (App eq nat (App Coq.Init.Nat.add t_3322222222222333222 m_332222222222233322) (App Coq.Init.Nat.add m_332222222222233322 t_3322222222222333222))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_3322222222222333221 nat (Sort Prop)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (Lambda t_3322222222222333222 nat (App eq nat (App Coq.Init.Nat.add t_3322222222222333222 m_332222222222233322) (App Coq.Init.Nat.add m_332222222222233322 t_3322222222222333222))))) (App (Lambda lemma_3322222222222333222 (App eq nat (App Coq.Init.Nat.add m_332222222222233322 O) m_332222222222233322) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_PER nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App Coq.Init.Nat.add O m_332222222222233322) (App Coq.Init.Nat.add m_332222222222233322 O) m_332222222222233322 lemma_3322222222222333222)) (App Coq.Arith.PeanoNat.Nat.add_0_r m_332222222222233322) (App (Lambda lemma_3322222222222333222 (App eq nat (App Coq.Init.Nat.add O m_332222222222233322) m_332222222222233322) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Transitive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App Coq.Init.Nat.add O m_332222222222233322) m_332222222222233322 lemma_3322222222222333222 m_332222222222233322 m_332222222222233322 (App Coq.Classes.Morphisms.eq_proper_proxy nat m_332222222222233322))) (App Coq.Arith.PeanoNat.Nat.add_0_l m_332222222222233322) (App Coq.Classes.RelationClasses.reflexivity nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) m_332222222222233322))) (Lambda n_3322222222222333222 nat (App (Lambda lemma_33222222222223332222 (App eq nat (App Coq.Init.Nat.add m_332222222222233322 (App S n_3322222222222333222)) (App S (App Coq.Init.Nat.add m_332222222222233322 n_3322222222222333222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq nat (App Coq.Init.Nat.add n_3322222222222333222 m_332222222222233322) (App Coq.Init.Nat.add m_332222222222233322 n_3322222222222333222)) (App eq nat (App Coq.Init.Nat.add (App S n_3322222222222333222) m_332222222222233322) (App Coq.Init.Nat.add m_332222222222233322 (App S n_3322222222222333222))) (App eq nat (App Coq.Init.Nat.add (App S n_3322222222222333222) m_332222222222233322) (App S (App Coq.Init.Nat.add m_332222222222233322 n_3322222222222333222))) (App Coq.Classes.Morphisms.per_partial_app_morphism nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_PER nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App Coq.Init.Nat.add (App S n_3322222222222333222) m_332222222222233322) (App Coq.Init.Nat.add m_332222222222233322 (App S n_3322222222222333222)) (App S (App Coq.Init.Nat.add m_332222222222233322 n_3322222222222333222)) lemma_33222222222223332222))) (App Coq.Arith.PeanoNat.Nat.add_succ_r m_332222222222233322 n_3322222222222333222) (App (Lambda lemma_33222222222223332222 (App eq nat (App Coq.Init.Nat.add (App S n_3322222222222333222) m_332222222222233322) (App S (App Coq.Init.Nat.add n_3322222222222333222 m_332222222222233322))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq nat (App Coq.Init.Nat.add n_3322222222222333222 m_332222222222233322) (App Coq.Init.Nat.add m_332222222222233322 n_3322222222222333222)) (App eq nat (App Coq.Init.Nat.add (App S n_3322222222222333222) m_332222222222233322) (App S (App Coq.Init.Nat.add m_332222222222233322 n_3322222222222333222))) (App eq nat (App S (App Coq.Init.Nat.add n_3322222222222333222 m_332222222222233322)) (App S (App Coq.Init.Nat.add m_332222222222233322 n_3322222222222333222))) (App Coq.Classes.Morphisms.PER_morphism nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_PER nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App Coq.Init.Nat.add (App S n_3322222222222333222) m_332222222222233322) (App S (App Coq.Init.Nat.add n_3322222222222333222 m_332222222222233322)) lemma_33222222222223332222 (App S (App Coq.Init.Nat.add m_332222222222233322 n_3322222222222333222)) (App S (App Coq.Init.Nat.add m_332222222222233322 n_3322222222222333222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App S (App Coq.Init.Nat.add m_332222222222233322 n_3322222222222333222)))))) (App Coq.Arith.PeanoNat.Nat.add_succ_l n_3322222222222333222 m_332222222222233322) (App (Lambda lemma_33222222222223332222 (App Coq.Init.Logic.iff (App eq nat (App S (App Coq.Init.Nat.add n_3322222222222333222 m_332222222222233322)) (App S (App Coq.Init.Nat.add m_332222222222233322 n_3322222222222333222))) (App eq nat (App Coq.Init.Nat.add n_3322222222222333222 m_332222222222233322) (App Coq.Init.Nat.add m_332222222222233322 n_3322222222222333222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq nat (App Coq.Init.Nat.add n_3322222222222333222 m_332222222222233322) (App Coq.Init.Nat.add m_332222222222233322 n_3322222222222333222)) (App eq nat (App S (App Coq.Init.Nat.add n_3322222222222333222 m_332222222222233322)) (App S (App Coq.Init.Nat.add m_332222222222233322 n_3322222222222333222))) (App eq nat (App Coq.Init.Nat.add n_3322222222222333222 m_332222222222233322) (App Coq.Init.Nat.add m_332222222222233322 n_3322222222222333222)) lemma_33222222222223332222)) (App Coq.Arith.PeanoNat.Nat.succ_inj_wd (App Coq.Init.Nat.add n_3322222222222333222 m_332222222222233322) (App Coq.Init.Nat.add m_332222222222233322 n_3322222222222333222)) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq nat (App Coq.Init.Nat.add n_3322222222222333222 m_332222222222233322) (App Coq.Init.Nat.add m_332222222222233322 n_3322222222222333222))))))) n_33222222222223332) REVERTcast (App eq nat (App Coq.Init.Nat.add n_33222222222223332 m_332222222222233322) (App Coq.Init.Nat.add m_332222222222233322 n_33222222222223332)))))) (Definition Coq.Init.Logic.eq_trans (Lambda A_33222222222223333322222 (Sort Type) (Lambda x_332222222222233333222222 A_33222222222223333322222 (Lambda y_3322222222222333332222222 A_33222222222223333322222 (Lambda z_33222222222223333322222222 A_33222222222223333322222 (Lambda H_332222222222233333222222222 (App eq A_33222222222223333322222 x_332222222222233333222222 y_3322222222222333332222222) (Lambda H0_3322222222222333332222222222 (App eq A_33222222222223333322222 y_3322222222222333332222222 z_33222222222223333322222222) (Case 2 (Lambda y_33222222222223333322222222222 A_33222222222223333322222 (Lambda out_332222222222233333222222222222 (App eq A_33222222222223333322222 y_3322222222222333332222222 y_33222222222223333322222222222) (App eq A_33222222222223333322222 x_332222222222233333222222 y_33222222222223333322222222222))) (CaseMatch H0_3322222222222333332222222222) (CaseBranches H_332222222222233333222222222))))))))) (Definition Coq.Init.Logic.f_equal (Lambda A_33222222222223333322222 (Sort Type) (Lambda B_332222222222233333222222 (Sort Type) (Lambda f_3322222222222333332222222 (Prod out_3322222222222333332222221 A_33222222222223333322222 B_332222222222233333222222) (Lambda x_33222222222223333322222222 A_33222222222223333322222 (Lambda y_332222222222233333222222222 A_33222222222223333322222 (Lambda H_3322222222222333332222222222 (App eq A_33222222222223333322222 x_33222222222223333322222222 y_332222222222233333222222222) (Case 2 (Lambda y_33222222222223333322222222222 A_33222222222223333322222 (Lambda out_332222222222233333222222222222 (App eq A_33222222222223333322222 x_33222222222223333322222222 y_33222222222223333322222222222) (App eq B_332222222222233333222222 (App f_3322222222222333332222222 x_33222222222223333322222222) (App f_3322222222222333332222222 y_33222222222223333322222222222)))) (CaseMatch H_3322222222222333332222222222) (CaseBranches (App eq_refl B_332222222222233333222222 (App f_3322222222222333332222222 x_33222222222223333322222222))))))))))) (Definition ZornsLemma.FunctionProperties.injective (Lambda X_332 (Sort Type) (Lambda Y_3322 (Sort Type) (Lambda f_33222 (Prod out_33221 X_332 Y_3322) (Prod x1_332221 X_332 (Prod x2_3322211 X_332 (Prod out_33222111 (App eq Y_3322 (App f_33222 x1_332221) (App f_33222 x2_3322211)) (App eq X_332 x1_332221 x2_3322211)))))))) (Definition ZornsLemma.CountableTypes.countable_nat_product (LetIn sum_1_to_n_3 (Fix (Functions (App sum_1_to_n 0 (Prod n_1 nat nat) (Lambda n_2 nat (Case 0 (Lambda n_22 nat nat) (CaseMatch n_2) (CaseBranches O (Lambda m_22 nat (App Coq.Init.Nat.add (App sum_1_to_n m_22) n_2))))))) 0) (Prod n_1 nat nat) (App intro_nat_injection (App prod nat nat) (Lambda p_32 (App prod nat nat) (Case 2 (Lambda p_322 (App prod nat nat) nat) (CaseMatch p_32) (CaseBranches (Lambda m_322 nat (Lambda n_3222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_322 n_3222)) n_3222)))))) (LetIn H_33 (Lambda m_32 nat (Lambda n_322 nat (Lambda H_3222 (App Coq.Init.Peano.lt m_32 n_322) (App Coq.Init.Peano.le_ind (App S m_32) (Lambda n_32222 nat (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) m_32) (App sum_1_to_n_3 n_32222))) (Cast (Cast (App Coq.Arith.Gt.gt_le_S (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) m_32) (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) (App S m_32)) (Cast (App Coq.Arith.Plus.plus_lt_compat_l m_32 (App S m_32) (App sum_1_to_n_3 m_32) (App Coq.Arith.PeanoNat.Nat.lt_succ_diag_r m_32)) REVERTcast (App Coq.Init.Peano.gt (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) (App S m_32)) (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) m_32)))) REVERTcast (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) m_32) (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) (App S m_32)))) REVERTcast (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) m_32) (App sum_1_to_n_3 (App S m_32)))) (Lambda m0_32222 nat (Lambda H_322222 (App le (App S m_32) m0_32222) (Lambda IHle_3222222 (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) m_32) (App sum_1_to_n_3 m0_32222)) (App Coq.Arith.PeanoNat.Nat.lt_trans (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) m_32) (App sum_1_to_n_3 m0_32222) (App sum_1_to_n_3 (App S m0_32222)) IHle_3222222 (Cast (LetIn H0_32222223 (Cast (App Coq.Arith.Gt.gt_le_S O (App S m0_32222) (Cast (Cast (App Coq.Arith.Lt.lt_le_S O (App S m0_32222) (App Coq.Arith.PeanoNat.Nat.lt_0_succ m0_32222)) REVERTcast (App Coq.Init.Peano.lt O (App S m0_32222))) REVERTcast (App Coq.Init.Peano.gt (App S m0_32222) O))) REVERTcast (App Coq.Init.Peano.lt O (App S m0_32222))) (App Coq.Init.Peano.lt O (App S m0_32222)) (LetIn H1_322222233 (Cast (App Coq.Arith.Gt.gt_le_S (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) O) (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) (App S m0_32222)) (Cast (App Coq.Arith.Plus.plus_lt_compat_l O (App S m0_32222) (App sum_1_to_n_3 m0_32222) H0_32222223) REVERTcast (App Coq.Init.Peano.gt (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) (App S m0_32222)) (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) O)))) REVERTcast (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) O) (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) (App S m0_32222)))) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) O) (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) (App S m0_32222))) (LetIn H2_3222222333 (App Coq.Init.Logic.eq_sym nat (App sum_1_to_n_3 m0_32222) (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) O) (App Coq.Init.Peano.plus_n_O (App sum_1_to_n_3 m0_32222))) (App eq nat (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) O) (App sum_1_to_n_3 m0_32222)) (LetIn H1_32222223333 (App Coq.Init.Logic.eq_ind nat (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) O) (Lambda n_32222223332 nat (App Coq.Init.Peano.lt n_32222223332 (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) (App S m0_32222)))) H1_322222233 (App sum_1_to_n_3 m0_32222) H2_3222222333) (App Coq.Init.Peano.lt (App sum_1_to_n_3 m0_32222) (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) (App S m0_32222))) H1_32222223333)))) REVERTcast (App Coq.Init.Peano.lt (App sum_1_to_n_3 m0_32222) (App sum_1_to_n_3 (App S m0_32222)))))))) n_322 H_3222)))) (Prod m_31 nat (Prod n_311 nat (Prod out_3111 (App Coq.Init.Peano.lt m_31 n_311) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 m_31) m_31) (App sum_1_to_n_3 n_311))))) (Cast (Lambda x1_332 (App prod nat nat) (Lambda x2_3322 (App prod nat nat) (Lambda H0_33222 (App eq nat (Case 2 (Lambda p_33222 (App prod nat nat) nat) (CaseMatch x1_332) (CaseBranches (Lambda m_33222 nat (Lambda n_332222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_33222 n_332222)) n_332222))))) (Case 2 (Lambda p_33222 (App prod nat nat) nat) (CaseMatch x2_3322) (CaseBranches (Lambda m_33222 nat (Lambda n_332222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_33222 n_332222)) n_332222)))))) (App (Case 2 (Lambda p_332222 (App prod nat nat) (Prod H0_3322221 (App eq nat (Case 2 (Lambda p_3322222 (App prod nat nat) nat) (CaseMatch p_332222) (CaseBranches (Lambda m_3322222 nat (Lambda n_33222222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_3322222 n_33222222)) n_33222222))))) (Case 2 (Lambda p_3322222 (App prod nat nat) nat) (CaseMatch x2_3322) (CaseBranches (Lambda m_3322222 nat (Lambda n_33222222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_3322222 n_33222222)) n_33222222)))))) (App eq (App prod nat nat) p_332222 x2_3322))) (CaseMatch x1_332) (CaseBranches (Lambda x1_332222 nat (Lambda y1_3322222 nat (Lambda H0_33222222 (App eq nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (Case 2 (Lambda p_33222222 (App prod nat nat) nat) (CaseMatch x2_3322) (CaseBranches (Lambda m_33222222 nat (Lambda n_332222222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_33222222 n_332222222)) n_332222222)))))) (App (Case 2 (Lambda p_332222222 (App prod nat nat) (Prod H0_3322222221 (App eq nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (Case 2 (Lambda p_3322222222 (App prod nat nat) nat) (CaseMatch p_332222222) (CaseBranches (Lambda m_3322222222 nat (Lambda n_33222222222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_3322222222 n_33222222222)) n_33222222222)))))) (App eq (App prod nat nat) (App pair nat nat x1_332222 y1_3322222) p_332222222))) (CaseMatch x2_3322) (CaseBranches (Lambda x2_332222222 nat (Lambda y2_3322222222 nat (Lambda H0_33222222222 (App eq nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) (Case 2 (Lambda s_332222222222 (App sumor (App sumbool (App Coq.Init.Peano.lt (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App eq nat (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222))) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add x2_332222222 y2_3322222222) (App Coq.Init.Nat.add x1_332222 y1_3322222))) (App eq (App prod nat nat) (App pair nat nat x1_332222 y1_3322222) (App pair nat nat x2_332222222 y2_3322222222))) (CaseMatch (App Coq.Arith.Compare_dec.lt_eq_lt_dec (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222))) (CaseBranches (Lambda s_332222222222 (App sumbool (App Coq.Init.Peano.lt (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App eq nat (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222))) (Case 2 (Lambda s_3322222222222 (App sumbool (App Coq.Init.Peano.lt (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App eq nat (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222))) (App eq (App prod nat nat) (App pair nat nat x1_332222 y1_3322222) (App pair nat nat x2_332222222 y2_3322222222))) (CaseMatch s_332222222222) (CaseBranches (Lambda l_3322222222222 (App Coq.Init.Peano.lt (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (LetIn H1_33222222222223 (App Coq.Arith.PeanoNat.Nat.le_lt_trans (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (LetIn H1_33222222222223 (LetIn hyp_list_33222222222223 (App nil (App prod (App PExpr N) (App PExpr N))) (App list (App prod (App PExpr N) (App PExpr N))) (LetIn fv_list_332222222222233 (App cons nat (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App cons nat x1_332222 (App cons nat y1_3322222 (App nil nat)))) (App list nat) (App Coq.setoid_ring.ArithRing.natr_ring_lemma1 Coq.setoid_ring.Ring_tac.ring_subst_niter fv_list_332222222222233 hyp_list_33222222222223 (App PEadd N (App PEX N xH) (App PEadd N (App PEX N (App xO xH)) (App PEX N (App xI xH)))) (App PEadd N (App PEadd N (App PEX N xH) (App PEX N (App xI xH))) (App PEX N (App xO xH))) I (Cast (App eq_refl bool true) VMcast (App eq bool (LetIn lmp_3322222222222333 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list N N0 (App Npos xH) Coq.NArith.BinNatDef.N.add Coq.NArith.BinNatDef.N.mul Coq.NArith.BinNatDef.N.add (Lambda x_3322222222222332 N x_3322222222222332) Coq.NArith.BinNatDef.N.eqb Coq.NArith.BinNatDef.N.div_eucl hyp_list_33222222222223) (App list (App prod (App prod N Mon) (App Pol N))) (App Coq.setoid_ring.Ring_polynom.Peq N Coq.NArith.BinNatDef.N.eqb (App Coq.setoid_ring.Ring_polynom.norm_subst N N0 (App Npos xH) Coq.NArith.BinNatDef.N.add Coq.NArith.BinNatDef.N.mul Coq.NArith.BinNatDef.N.add (Lambda x_33222222222223332 N x_33222222222223332) Coq.NArith.BinNatDef.N.eqb Coq.NArith.BinNatDef.N.div_eucl Coq.setoid_ring.Ring_tac.ring_subst_niter lmp_3322222222222333 (App PEadd N (App PEX N xH) (App PEadd N (App PEX N (App xO xH)) (App PEX N (App xI xH))))) (App Coq.setoid_ring.Ring_polynom.norm_subst N N0 (App Npos xH) Coq.NArith.BinNatDef.N.add Coq.NArith.BinNatDef.N.mul Coq.NArith.BinNatDef.N.add (Lambda x_33222222222223332 N x_33222222222223332) Coq.NArith.BinNatDef.N.eqb Coq.NArith.BinNatDef.N.div_eucl Coq.setoid_ring.Ring_tac.ring_subst_niter lmp_3322222222222333 (App PEadd N (App PEadd N (App PEX N xH) (App PEX N (App xI xH))) (App PEX N (App xO xH)))))) true))))) (App eq nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App Coq.Init.Nat.add (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) x1_332222)) (App Coq.Arith.Plus.plus_le_compat_l y1_3322222 (App Coq.Init.Nat.add x1_332222 y1_3322222) (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App Coq.Arith.Plus.le_plus_r x1_332222 y1_3322222))) (App Coq.Arith.PeanoNat.Nat.lt_le_trans (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (App H_33 (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222) l_3322222222222) (App Coq.Arith.Plus.le_plus_l (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222))) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) (LetIn H1_332222222222233 (App Coq.Init.Logic.eq_ind nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (Lambda n_332222222222232 nat (App Coq.Init.Peano.lt n_332222222222232 (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222))) H1_33222222222223 (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) H0_33222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) (App Coq.Init.Logic.False_ind (App eq (App prod nat nat) (App pair nat nat x1_332222 y1_3322222) (App pair nat nat x2_332222222 y2_3322222222)) (App (Cast (App Coq.Arith.PeanoNat.Nat.lt_irrefl (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) REVERTcast (Prod H1_3322222222222331 (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) False)) H1_332222222222233))))) (Lambda e_3322222222222 (App eq nat (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (LetIn H1_33222222222223 (LetIn H0_33222222222223 (App Coq.Init.Logic.eq_ind nat (App Coq.Init.Nat.add x1_332222 y1_3322222) (Lambda n_33222222222222 nat (App eq nat (App Coq.Init.Nat.add (App sum_1_to_n_3 n_33222222222222) y1_3322222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222))) H0_33222222222 (App Coq.Init.Nat.add x2_332222222 y2_3322222222) e_3322222222222) (App eq nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y1_3322222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) (LetIn H0_332222222222233 (App Coq.Arith.Plus.plus_reg_l y1_3322222 y2_3322222222 (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) H0_33222222222223) (App eq nat y1_3322222 y2_3322222222) H0_332222222222233)) (App eq nat y1_3322222 y2_3322222222) (LetIn H2_332222222222233 H1_33222222222223 (App eq nat y1_3322222 y2_3322222222) (App (LetIn H2_3322222222222333 (LetIn e_3322222222222333 (App Coq.Init.Logic.eq_ind nat y1_3322222 (Lambda y1_3322222222222332 nat (App eq nat (App Coq.Init.Nat.add x1_332222 y1_3322222222222332) (App Coq.Init.Nat.add x2_332222222 y2_3322222222))) e_3322222222222 y2_3322222222 H1_33222222222223) (App eq nat (App Coq.Init.Nat.add x1_332222 y2_3322222222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (LetIn e_33222222222223333 (App Coq.Init.Logic.eq_ind nat (App Coq.Init.Nat.add x1_332222 y2_3322222222) (Lambda n_33222222222223332 nat (App eq nat n_33222222222223332 (App Coq.Init.Nat.add x2_332222222 y2_3322222222))) e_3322222222222333 (App Coq.Init.Nat.add y2_3322222222 x1_332222) (App Coq.Arith.PeanoNat.Nat.add_comm x1_332222 y2_3322222222)) (App eq nat (App Coq.Init.Nat.add y2_3322222222 x1_332222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (LetIn e_332222222222233333 (App Coq.Init.Logic.eq_ind nat (App Coq.Init.Nat.add x2_332222222 y2_3322222222) (Lambda n_332222222222233332 nat (App eq nat (App Coq.Init.Nat.add y2_3322222222 x1_332222) n_332222222222233332)) e_33222222222223333 (App Coq.Init.Nat.add y2_3322222222 x2_332222222) (App Coq.Arith.PeanoNat.Nat.add_comm x2_332222222 y2_3322222222)) (App eq nat (App Coq.Init.Nat.add y2_3322222222 x1_332222) (App Coq.Init.Nat.add y2_3322222222 x2_332222222)) (LetIn e_3322222222222333333 (App Coq.Arith.Plus.plus_reg_l x1_332222 x2_332222222 y2_3322222222 e_332222222222233333) (App eq nat x1_332222 x2_332222222) e_3322222222222333333)))) (App eq nat x1_332222 x2_332222222) (App (LetIn H2_33222222222223333 (App eq_refl (Sort Set) nat) (App eq (Sort Set) nat nat) (App (LetIn H2_332222222222233333 (App eq_refl (Sort Set) nat) (App eq (Sort Set) nat nat) (App (Lambda H2_3322222222222333332 (App eq (Sort Set) nat nat) (Lambda H3_33222222222223333322 (App eq (Sort Set) nat nat) (Lambda H4_332222222222233333222 (App eq nat x1_332222 x2_332222222) (Lambda H5_3322222222222333332222 (App eq nat y1_3322222 y2_3322222222) (App Coq.Init.Logic.eq_trans (App prod nat nat) (App pair nat nat x1_332222 y1_3322222) (App pair nat nat x2_332222222 y1_3322222) (App pair nat nat x2_332222222 y2_3322222222) (App Coq.Init.Logic.f_equal (Prod out_33222222222223333322221 nat (App prod nat nat)) (App prod nat nat) (Lambda f_33222222222223333322222 (Prod out_33222222222223333322221 nat (App prod nat nat)) (App f_33222222222223333322222 y1_3322222)) (App pair nat nat x1_332222) (App pair nat nat x2_332222222) (App Coq.Init.Logic.eq_trans (Prod out_33222222222223333322221 nat (App prod nat nat)) (App pair nat nat x1_332222) (App pair nat nat x1_332222) (App pair nat nat x2_332222222) (App Coq.Init.Logic.f_equal (Prod out_33222222222223333322221 nat (Prod out_332222222222233333222211 nat (App prod nat nat))) (Prod out_33222222222223333322221 nat (App prod nat nat)) (Lambda f_33222222222223333322222 (Prod out_33222222222223333322221 nat (Prod out_332222222222233333222211 nat (App prod nat nat))) (App f_33222222222223333322222 x1_332222)) (App pair nat nat) (App pair nat nat) (App eq_refl (Prod out_33222222222223333322221 nat (Prod out_332222222222233333222211 nat (App prod nat nat))) (App pair nat nat))) (App Coq.Init.Logic.f_equal nat (Prod out_33222222222223333322221 nat (App prod nat nat)) (App pair nat nat) x1_332222 x2_332222222 H4_332222222222233333222))) (App Coq.Init.Logic.f_equal nat (App prod nat nat) (App pair nat nat x2_332222222) y1_3322222 y2_3322222222 H5_3322222222222333332222)))))) H2_332222222222233333)) H2_33222222222223333)) H2_3322222222222333)) H2_332222222222233))))))) (Lambda l_332222222222 (App Coq.Init.Peano.lt (App Coq.Init.Nat.add x2_332222222 y2_3322222222) (App Coq.Init.Nat.add x1_332222 y1_3322222)) (LetIn H1_3322222222223 (App Coq.Arith.PeanoNat.Nat.le_lt_trans (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (App Coq.Arith.Plus.plus_le_compat_l y2_3322222222 (App Coq.Init.Nat.add x2_332222222 y2_3322222222) (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App Coq.Arith.Plus.le_plus_r x2_332222222 y2_3322222222)) (App Coq.Arith.PeanoNat.Nat.lt_le_trans (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (App H_33 (App Coq.Init.Nat.add x2_332222222 y2_3322222222) (App Coq.Init.Nat.add x1_332222 y1_3322222) l_332222222222) (App Coq.Arith.Plus.le_plus_l (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222))) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222)) (LetIn H1_33222222222233 (App Coq.Init.Logic.eq_ind nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (Lambda n_33222222222232 nat (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) n_33222222222232)) H1_3322222222223 (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) H0_33222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) (App Coq.Init.Logic.False_ind (App eq (App prod nat nat) (App pair nat nat x1_332222 y1_3322222) (App pair nat nat x2_332222222 y2_3322222222)) (App (Cast (App Coq.Arith.PeanoNat.Nat.lt_irrefl (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) REVERTcast (Prod H1_332222222222331 (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) False)) H1_33222222222233)))))))))))) H0_33222222)))))) H0_33222)))) REVERTcast (App ZornsLemma.FunctionProperties.injective (App prod nat nat) nat (Lambda p_332 (App prod nat nat) (Case 2 (Lambda p_3322 (App prod nat nat) nat) (CaseMatch p_332) (CaseBranches (Lambda m_3322 nat (Lambda n_33222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_3322 n_33222)) n_33222)))))))))))) (Definition Coq.PArith.BinPosDef.Pos.to_nat (Lambda x_3222 positive (App Coq.PArith.BinPosDef.Pos.iter_op nat Coq.Init.Nat.add x_3222 (App S O)))) (Definition Coq.PArith.Pnat.Pos2Nat.inj (Lambda p_3222222 positive (Lambda q_32222222 positive (Lambda H_322222222 (App eq nat (App Coq.PArith.BinPosDef.Pos.to_nat p_3222222) (App Coq.PArith.BinPosDef.Pos.to_nat q_32222222)) (App Coq.Init.Logic.eq_ind positive (App Coq.PArith.BinPosDef.Pos.of_nat (App Coq.PArith.BinPosDef.Pos.to_nat p_3222222)) (Lambda p_3222222222 positive (App eq positive p_3222222222 q_32222222)) (App Coq.Init.Logic.eq_ind positive (App Coq.PArith.BinPosDef.Pos.of_nat (App Coq.PArith.BinPosDef.Pos.to_nat q_32222222)) (Lambda q_3222222222 positive (App eq positive (App Coq.PArith.BinPosDef.Pos.of_nat (App Coq.PArith.BinPosDef.Pos.to_nat p_3222222)) q_3222222222)) (App Coq.Init.Logic.eq_ind_r nat (App Coq.PArith.BinPosDef.Pos.to_nat q_32222222) (Lambda n_3222222222 nat (App eq positive (App Coq.PArith.BinPosDef.Pos.of_nat n_3222222222) (App Coq.PArith.BinPosDef.Pos.of_nat (App Coq.PArith.BinPosDef.Pos.to_nat q_32222222)))) (App eq_refl positive (App Coq.PArith.BinPosDef.Pos.of_nat (App Coq.PArith.BinPosDef.Pos.to_nat q_32222222))) (App Coq.PArith.BinPosDef.Pos.to_nat p_3222222) H_322222222) q_32222222 (App Coq.PArith.Pnat.Pos2Nat.id q_32222222)) p_3222222 (App Coq.PArith.Pnat.Pos2Nat.id p_3222222)))))) (Definition ZornsLemma.CountableTypes.positive_countable (App intro_nat_injection positive Coq.PArith.BinPosDef.Pos.to_nat (Cast (Lambda x1_3222 positive (Lambda x2_32222 positive (Lambda H_322222 (App eq nat (App Coq.PArith.BinPosDef.Pos.to_nat x1_3222) (App Coq.PArith.BinPosDef.Pos.to_nat x2_32222)) (App Coq.PArith.Pnat.Pos2Nat.inj x1_3222 x2_32222 H_322222)))) REVERTcast (App ZornsLemma.FunctionProperties.injective positive nat Coq.PArith.BinPosDef.Pos.to_nat)))) (Definition ZornsLemma.CountableTypes.Z_countable (LetIn c_3223223 ZornsLemma.CountableTypes.countable_nat_product (App CountableT (App prod nat nat)) (Case 1 (Lambda out_32232232 (App CountableT (App prod nat nat)) (App CountableT Z)) (CaseMatch c_3223223) (CaseBranches (Lambda f_32232232 (Prod out_32232231 (App prod nat nat) nat) (Lambda H_322322322 (App ZornsLemma.FunctionProperties.injective (App prod nat nat) nat f_32232232) (LetIn c_3223223223 ZornsLemma.CountableTypes.positive_countable (App CountableT positive) (Case 1 (Lambda out_32232232232 (App CountableT positive) (App CountableT Z)) (CaseMatch c_3223223223) (CaseBranches (Lambda g_32232232232 (Prod out_32232232231 positive nat) (Lambda H0_322322322322 (App ZornsLemma.FunctionProperties.injective positive nat g_32232232232) (App intro_nat_injection Z (Lambda n_3223223223222 Z (Case 0 (Lambda n_32232232232222 Z nat) (CaseMatch n_3223223223222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_32232232232222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_32232232232222)))) (Lambda p_32232232232222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_32232232232222))))))) (Cast (Lambda n1_3223223223222 Z (Lambda n2_32232232232222 Z (Lambda H1_322322322322222 (App eq nat (Case 0 (Lambda n_322322322322222 Z nat) (CaseMatch n1_3223223223222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_322322322322222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_322322322322222)))) (Lambda p_322322322322222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_322322322322222)))))) (Case 0 (Lambda n_322322322322222 Z nat) (CaseMatch n2_32232232232222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_322322322322222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_322322322322222)))) (Lambda p_322322322322222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_322322322322222))))))) (App (Case 0 (Lambda z_3223223223222222 Z (Prod H1_32232232232222221 (App eq nat (Case 0 (Lambda n_32232232232222222 Z nat) (CaseMatch z_3223223223222222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_32232232232222222)))) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_32232232232222222)))))) (Case 0 (Lambda n_32232232232222222 Z nat) (CaseMatch n2_32232232232222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_32232232232222222)))) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_32232232232222222))))))) (App eq Z z_3223223223222222 n2_32232232232222))) (CaseMatch n1_3223223223222) (CaseBranches (Lambda H1_3223223223222222 (App eq nat (App f_32232232 (App pair nat nat O O)) (Case 0 (Lambda n_3223223223222222 Z nat) (CaseMatch n2_32232232232222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_3223223223222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_3223223223222222)))) (Lambda p_3223223223222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_3223223223222222))))))) (App (Case 0 (Lambda z_32232232232222222 Z (Prod H1_322322322322222221 (App eq nat (App f_32232232 (App pair nat nat O O)) (Case 0 (Lambda n_322322322322222222 Z nat) (CaseMatch z_32232232232222222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_322322322322222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_322322322322222222)))) (Lambda p_322322322322222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_322322322322222222))))))) (App eq Z Z0 z_32232232232222222))) (CaseMatch n2_32232232232222) (CaseBranches (Lambda H1_32232232232222222 (App eq nat (App f_32232232 (App pair nat nat O O)) (App f_32232232 (App pair nat nat O O))) (LetIn H1_322322322322222223 (App H_322322322 (App pair nat nat O O) (App pair nat nat O O) H1_32232232232222222) (App eq (App prod nat nat) (App pair nat nat O O) (App pair nat nat O O)) (App eq_refl Z Z0))) (Lambda p2_32232232232222222 positive (Lambda H1_322322322322222222 (App eq nat (App f_32232232 (App pair nat nat O O)) (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p2_32232232232222222)))) (LetIn H1_3223223223222222223 (App H_322322322 (App pair nat nat O O) (App pair nat nat (App S O) (App g_32232232232 p2_32232232232222222)) H1_322322322322222222) (App eq (App prod nat nat) (App pair nat nat O O) (App pair nat nat (App S O) (App g_32232232232 p2_32232232232222222))) (LetIn H2_32232232232222222233 (App Coq.Init.Logic.eq_ind (App prod nat nat) (App pair nat nat O O) (Lambda e_32232232232222222232 (App prod nat nat) (Case 2 (Lambda p_322322322322222222322 (App prod nat nat) (Sort Prop)) (CaseMatch e_32232232232222222232) (CaseBranches (Lambda n_322322322322222222322 nat (Lambda n_3223223223222222223222 nat (Case 0 (Lambda n_32232232232222222232222 nat (Sort Prop)) (CaseMatch n_322322322322222222322) (CaseBranches True (Lambda out_32232232232222222232222 nat False)))))))) I (App pair nat nat (App S O) (App g_32232232232 p2_32232232232222222)) H1_3223223223222222223) False (App Coq.Init.Logic.False_ind (App eq Z Z0 (App Zpos p2_32232232232222222)) H2_32232232232222222233))))) (Lambda p2_32232232232222222 positive (Lambda H1_322322322322222222 (App eq nat (App f_32232232 (App pair nat nat O O)) (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p2_32232232232222222)))) (LetIn H1_3223223223222222223 (App H_322322322 (App pair nat nat O O) (App pair nat nat (App S (App S O)) (App g_32232232232 p2_32232232232222222)) H1_322322322322222222) (App eq (App prod nat nat) (App pair nat nat O O) (App pair nat nat (App S (App S O)) (App g_32232232232 p2_32232232232222222))) (LetIn H2_32232232232222222233 (App Coq.Init.Logic.eq_ind (App prod nat nat) (App pair nat nat O O) (Lambda e_32232232232222222232 (App prod nat nat) (Case 2 (Lambda p_322322322322222222322 (App prod nat nat) (Sort Prop)) (CaseMatch e_32232232232222222232) (CaseBranches (Lambda n_322322322322222222322 nat (Lambda n_3223223223222222223222 nat (Case 0 (Lambda n_32232232232222222232222 nat (Sort Prop)) (CaseMatch n_322322322322222222322) (CaseBranches True (Lambda out_32232232232222222232222 nat False)))))))) I (App pair nat nat (App S (App S O)) (App g_32232232232 p2_32232232232222222)) H1_3223223223222222223) False (App Coq.Init.Logic.False_ind (App eq Z Z0 (App Zneg p2_32232232232222222)) H2_32232232232222222233))))))) H1_3223223223222222)) (Lambda p1_3223223223222222 positive (Lambda H1_32232232232222222 (App eq nat (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222))) (Case 0 (Lambda n_32232232232222222 Z nat) (CaseMatch n2_32232232232222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_32232232232222222)))) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_32232232232222222))))))) (App (Case 0 (Lambda z_322322322322222222 Z (Prod H1_3223223223222222221 (App eq nat (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222))) (Case 0 (Lambda n_3223223223222222222 Z nat) (CaseMatch z_322322322322222222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_3223223223222222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_3223223223222222222)))) (Lambda p_3223223223222222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_3223223223222222222))))))) (App eq Z (App Zpos p1_3223223223222222) z_322322322322222222))) (CaseMatch n2_32232232232222) (CaseBranches (Lambda H1_322322322322222222 (App eq nat (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222))) (App f_32232232 (App pair nat nat O O))) (LetIn H1_3223223223222222223 (App H_322322322 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (App pair nat nat O O) H1_322322322322222222) (App eq (App prod nat nat) (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (App pair nat nat O O)) (LetIn H2_32232232232222222233 (App Coq.Init.Logic.eq_ind (App prod nat nat) (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (Lambda e_32232232232222222232 (App prod nat nat) (Case 2 (Lambda p_322322322322222222322 (App prod nat nat) (Sort Prop)) (CaseMatch e_32232232232222222232) (CaseBranches (Lambda n_322322322322222222322 nat (Lambda n_3223223223222222223222 nat (Case 0 (Lambda n_32232232232222222232222 nat (Sort Prop)) (CaseMatch n_322322322322222222322) (CaseBranches False (Lambda out_32232232232222222232222 nat True)))))))) I (App pair nat nat O O) H1_3223223223222222223) False (App Coq.Init.Logic.False_ind (App eq Z (App Zpos p1_3223223223222222) Z0) H2_32232232232222222233)))) (Lambda p2_322322322322222222 positive (Lambda H1_3223223223222222222 (App eq nat (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222))) (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222)))) (LetIn H1_32232232232222222223 (App H_322322322 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222)) H1_3223223223222222222) (App eq (App prod nat nat) (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222))) (LetIn H2_322322322322222222233 (App Coq.Init.Logic.f_equal (App prod nat nat) nat (Lambda e_322322322322222222232 (App prod nat nat) (Case 2 (Lambda p_3223223223222222222322 (App prod nat nat) nat) (CaseMatch e_322322322322222222232) (CaseBranches (Lambda n_3223223223222222222322 nat (Lambda n_32232232232222222223222 nat n_32232232232222222223222))))) (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222)) H1_32232232232222222223) (App eq nat (App g_32232232232 p1_3223223223222222) (App g_32232232232 p2_322322322322222222)) (App (Lambda H2_3223223223222222222332 (App eq nat (App g_32232232232 p1_3223223223222222) (App g_32232232232 p2_322322322322222222)) (LetIn H3_32232232232222222223323 (App H0_322322322322 p1_3223223223222222 p2_322322322322222222 H2_3223223223222222222332) (App eq positive p1_3223223223222222 p2_322322322322222222) (App (Lambda H3_322322322322222222233232 (App eq positive p1_3223223223222222 p2_322322322322222222) (App Coq.Init.Logic.eq_trans Z (App Zpos p1_3223223223222222) (App Zpos p1_3223223223222222) (App Zpos p2_322322322322222222) (App Coq.Init.Logic.f_equal (Prod out_3223223223222222222332321 positive Z) Z (Lambda f0_3223223223222222222332322 (Prod out_3223223223222222222332321 positive Z) (App f0_3223223223222222222332322 p1_3223223223222222)) Zpos Zpos (App eq_refl (Prod out_3223223223222222222332321 positive Z) Zpos)) (App Coq.Init.Logic.f_equal positive Z Zpos p1_3223223223222222 p2_322322322322222222 H3_322322322322222222233232))) H3_32232232232222222223323))) H2_322322322322222222233))))) (Lambda p2_322322322322222222 positive (Lambda H1_3223223223222222222 (App eq nat (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222))) (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222)))) (LetIn H1_32232232232222222223 (App H_322322322 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222)) H1_3223223223222222222) (App eq (App prod nat nat) (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222))) (LetIn H2_322322322322222222233 (App Coq.Init.Logic.eq_ind (App prod nat nat) (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (Lambda e_322322322322222222232 (App prod nat nat) (Case 2 (Lambda p_3223223223222222222322 (App prod nat nat) (Sort Prop)) (CaseMatch e_322322322322222222232) (CaseBranches (Lambda n_3223223223222222222322 nat (Lambda n_32232232232222222223222 nat (Case 0 (Lambda n_322322322322222222232222 nat (Sort Prop)) (CaseMatch n_3223223223222222222322) (CaseBranches False (Lambda n_322322322322222222232222 nat (Case 0 (Lambda n_3223223223222222222322222 nat (Sort Prop)) (CaseMatch n_322322322322222222232222) (CaseBranches True (Lambda out_3223223223222222222322222 nat False))))))))))) I (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222)) H1_32232232232222222223) False (App Coq.Init.Logic.False_ind (App eq Z (App Zpos p1_3223223223222222) (App Zneg p2_322322322322222222)) H2_322322322322222222233))))))) H1_32232232232222222))) (Lambda p1_3223223223222222 positive (Lambda H1_32232232232222222 (App eq nat (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222))) (Case 0 (Lambda n_32232232232222222 Z nat) (CaseMatch n2_32232232232222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_32232232232222222)))) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_32232232232222222))))))) (App (Case 0 (Lambda z_322322322322222222 Z (Prod H1_3223223223222222221 (App eq nat (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222))) (Case 0 (Lambda n_3223223223222222222 Z nat) (CaseMatch z_322322322322222222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_3223223223222222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_3223223223222222222)))) (Lambda p_3223223223222222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_3223223223222222222))))))) (App eq Z (App Zneg p1_3223223223222222) z_322322322322222222))) (CaseMatch n2_32232232232222) (CaseBranches (Lambda H1_322322322322222222 (App eq nat (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222))) (App f_32232232 (App pair nat nat O O))) (LetIn H1_3223223223222222223 (App H_322322322 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (App pair nat nat O O) H1_322322322322222222) (App eq (App prod nat nat) (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (App pair nat nat O O)) (LetIn H2_32232232232222222233 (App Coq.Init.Logic.eq_ind (App prod nat nat) (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (Lambda e_32232232232222222232 (App prod nat nat) (Case 2 (Lambda p_322322322322222222322 (App prod nat nat) (Sort Prop)) (CaseMatch e_32232232232222222232) (CaseBranches (Lambda n_322322322322222222322 nat (Lambda n_3223223223222222223222 nat (Case 0 (Lambda n_32232232232222222232222 nat (Sort Prop)) (CaseMatch n_322322322322222222322) (CaseBranches False (Lambda out_32232232232222222232222 nat True)))))))) I (App pair nat nat O O) H1_3223223223222222223) False (App Coq.Init.Logic.False_ind (App eq Z (App Zneg p1_3223223223222222) Z0) H2_32232232232222222233)))) (Lambda p2_322322322322222222 positive (Lambda H1_3223223223222222222 (App eq nat (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222))) (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222)))) (LetIn H1_32232232232222222223 (App H_322322322 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222)) H1_3223223223222222222) (App eq (App prod nat nat) (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222))) (LetIn H2_322322322322222222233 (App Coq.Init.Logic.eq_ind (App prod nat nat) (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (Lambda e_322322322322222222232 (App prod nat nat) (Case 2 (Lambda p_3223223223222222222322 (App prod nat nat) (Sort Prop)) (CaseMatch e_322322322322222222232) (CaseBranches (Lambda n_3223223223222222222322 nat (Lambda n_32232232232222222223222 nat (Case 0 (Lambda n_322322322322222222232222 nat (Sort Prop)) (CaseMatch n_3223223223222222222322) (CaseBranches False (Lambda n_322322322322222222232222 nat (Case 0 (Lambda n_3223223223222222222322222 nat (Sort Prop)) (CaseMatch n_322322322322222222232222) (CaseBranches False (Lambda out_3223223223222222222322222 nat True))))))))))) I (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222)) H1_32232232232222222223) False (App Coq.Init.Logic.False_ind (App eq Z (App Zneg p1_3223223223222222) (App Zpos p2_322322322322222222)) H2_322322322322222222233))))) (Lambda p2_322322322322222222 positive (Lambda H1_3223223223222222222 (App eq nat (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222))) (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222)))) (LetIn H1_32232232232222222223 (App H_322322322 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222)) H1_3223223223222222222) (App eq (App prod nat nat) (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222))) (LetIn H2_322322322322222222233 (App Coq.Init.Logic.f_equal (App prod nat nat) nat (Lambda e_322322322322222222232 (App prod nat nat) (Case 2 (Lambda p_3223223223222222222322 (App prod nat nat) nat) (CaseMatch e_322322322322222222232) (CaseBranches (Lambda n_3223223223222222222322 nat (Lambda n_32232232232222222223222 nat n_32232232232222222223222))))) (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222)) H1_32232232232222222223) (App eq nat (App g_32232232232 p1_3223223223222222) (App g_32232232232 p2_322322322322222222)) (App (Lambda H2_3223223223222222222332 (App eq nat (App g_32232232232 p1_3223223223222222) (App g_32232232232 p2_322322322322222222)) (LetIn H3_32232232232222222223323 (App H0_322322322322 p1_3223223223222222 p2_322322322322222222 H2_3223223223222222222332) (App eq positive p1_3223223223222222 p2_322322322322222222) (App (Lambda H3_322322322322222222233232 (App eq positive p1_3223223223222222 p2_322322322322222222) (App Coq.Init.Logic.eq_trans Z (App Zneg p1_3223223223222222) (App Zneg p1_3223223223222222) (App Zneg p2_322322322322222222) (App Coq.Init.Logic.f_equal (Prod out_3223223223222222222332321 positive Z) Z (Lambda f0_3223223223222222222332322 (Prod out_3223223223222222222332321 positive Z) (App f0_3223223223222222222332322 p1_3223223223222222)) Zneg Zneg (App eq_refl (Prod out_3223223223222222222332321 positive Z) Zneg)) (App Coq.Init.Logic.f_equal positive Z Zneg p1_3223223223222222 p2_322322322322222222 H3_322322322322222222233232))) H3_32232232232222222223323))) H2_322322322322222222233))))))) H1_32232232232222222))))) H1_322322322322222)))) REVERTcast (App ZornsLemma.FunctionProperties.injective Z nat (Lambda n_3223223223222 Z (Case 0 (Lambda n_32232232232222 Z nat) (CaseMatch n_3223223223222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_32232232232222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_32232232232222)))) (Lambda p_32232232232222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_32232232232222))))))))))))))))))))) (Definition ZornsLemma.CountableTypes.Q_countable (LetIn c_3 ZornsLemma.CountableTypes.countable_nat_product (App CountableT (App prod nat nat)) (Case 1 (Lambda out_32 (App CountableT (App prod nat nat)) (App CountableT Q)) (CaseMatch c_3) (CaseBranches (Lambda f_32 (Prod out_31 (App prod nat nat) nat) (Lambda H_322 (App ZornsLemma.FunctionProperties.injective (App prod nat nat) nat f_32) (LetIn c_3223 ZornsLemma.CountableTypes.positive_countable (App CountableT positive) (Case 1 (Lambda out_32232 (App CountableT positive) (App CountableT Q)) (CaseMatch c_3223) (CaseBranches (Lambda g_32232 (Prod out_32231 positive nat) (Lambda H0_322322 (App ZornsLemma.FunctionProperties.injective positive nat g_32232) (LetIn c_3223223 ZornsLemma.CountableTypes.Z_countable (App CountableT Z) (Case 1 (Lambda out_32232232 (App CountableT Z) (App CountableT Q)) (CaseMatch c_3223223) (CaseBranches (Lambda h_32232232 (Prod out_32232231 Z nat) (Lambda H1_322322322 (App ZornsLemma.FunctionProperties.injective Z nat h_32232232) (App intro_nat_injection Q (Lambda q_3223223222 Q (Case 0 (Lambda q_32232232222 Q nat) (CaseMatch q_3223223222) (CaseBranches (Lambda n_32232232222 Z (Lambda d_322322322222 positive (App f_32 (App pair nat nat (App h_32232232 n_32232232222) (App g_32232 d_322322322222)))))))) (Cast (Lambda q1_3223223222 Q (Lambda q2_32232232222 Q (Lambda H2_322322322222 (App eq nat (Case 0 (Lambda q_322322322222 Q nat) (CaseMatch q1_3223223222) (CaseBranches (Lambda n_322322322222 Z (Lambda d_3223223222222 positive (App f_32 (App pair nat nat (App h_32232232 n_322322322222) (App g_32232 d_3223223222222))))))) (Case 0 (Lambda q_322322322222 Q nat) (CaseMatch q2_32232232222) (CaseBranches (Lambda n_322322322222 Z (Lambda d_3223223222222 positive (App f_32 (App pair nat nat (App h_32232232 n_322322322222) (App g_32232 d_3223223222222)))))))) (App (Case 0 (Lambda q_3223223222222 Q (Prod H2_32232232222221 (App eq nat (Case 0 (Lambda q_32232232222222 Q nat) (CaseMatch q_3223223222222) (CaseBranches (Lambda n_32232232222222 Z (Lambda d_322322322222222 positive (App f_32 (App pair nat nat (App h_32232232 n_32232232222222) (App g_32232 d_322322322222222))))))) (Case 0 (Lambda q_32232232222222 Q nat) (CaseMatch q2_32232232222) (CaseBranches (Lambda n_32232232222222 Z (Lambda d_322322322222222 positive (App f_32 (App pair nat nat (App h_32232232 n_32232232222222) (App g_32232 d_322322322222222)))))))) (App eq Q q_3223223222222 q2_32232232222))) (CaseMatch q1_3223223222) (CaseBranches (Lambda n1_3223223222222 Z (Lambda d1_32232232222222 positive (Lambda H2_322322322222222 (App eq nat (App f_32 (App pair nat nat (App h_32232232 n1_3223223222222) (App g_32232 d1_32232232222222))) (Case 0 (Lambda q_322322322222222 Q nat) (CaseMatch q2_32232232222) (CaseBranches (Lambda n_322322322222222 Z (Lambda d_3223223222222222 positive (App f_32 (App pair nat nat (App h_32232232 n_322322322222222) (App g_32232 d_3223223222222222)))))))) (App (Case 0 (Lambda q_3223223222222222 Q (Prod H2_32232232222222221 (App eq nat (App f_32 (App pair nat nat (App h_32232232 n1_3223223222222) (App g_32232 d1_32232232222222))) (Case 0 (Lambda q_32232232222222222 Q nat) (CaseMatch q_3223223222222222) (CaseBranches (Lambda n_32232232222222222 Z (Lambda d_322322322222222222 positive (App f_32 (App pair nat nat (App h_32232232 n_32232232222222222) (App g_32232 d_322322322222222222)))))))) (App eq Q (App Qmake n1_3223223222222 d1_32232232222222) q_3223223222222222))) (CaseMatch q2_32232232222) (CaseBranches (Lambda n2_3223223222222222 Z (Lambda d2_32232232222222222 positive (Lambda H2_322322322222222222 (App eq nat (App f_32 (App pair nat nat (App h_32232232 n1_3223223222222) (App g_32232 d1_32232232222222))) (App f_32 (App pair nat nat (App h_32232232 n2_3223223222222222) (App g_32232 d2_32232232222222222)))) (LetIn H2_3223223222222222223 (App H_322 (App pair nat nat (App h_32232232 n1_3223223222222) (App g_32232 d1_32232232222222)) (App pair nat nat (App h_32232232 n2_3223223222222222) (App g_32232 d2_32232232222222222)) H2_322322322222222222) (App eq (App prod nat nat) (App pair nat nat (App h_32232232 n1_3223223222222) (App g_32232 d1_32232232222222)) (App pair nat nat (App h_32232232 n2_3223223222222222) (App g_32232 d2_32232232222222222))) (LetIn H3_32232232222222222233 (App Coq.Init.Logic.f_equal (App prod nat nat) nat (Lambda e_32232232222222222232 (App prod nat nat) (Case 2 (Lambda p_322322322222222222322 (App prod nat nat) nat) (CaseMatch e_32232232222222222232) (CaseBranches (Lambda n_322322322222222222322 nat (Lambda n_3223223222222222223222 nat n_322322322222222222322))))) (App pair nat nat (App h_32232232 n1_3223223222222) (App g_32232 d1_32232232222222)) (App pair nat nat (App h_32232232 n2_3223223222222222) (App g_32232 d2_32232232222222222)) H2_3223223222222222223) (App eq nat (App h_32232232 n1_3223223222222) (App h_32232232 n2_3223223222222222)) (App (LetIn H3_322322322222222222333 (App Coq.Init.Logic.f_equal (App prod nat nat) nat (Lambda e_322322322222222222332 (App prod nat nat) (Case 2 (Lambda p_3223223222222222223322 (App prod nat nat) nat) (CaseMatch e_322322322222222222332) (CaseBranches (Lambda n_3223223222222222223322 nat (Lambda n_32232232222222222233222 nat n_32232232222222222233222))))) (App pair nat nat (App h_32232232 n1_3223223222222) (App g_32232 d1_32232232222222)) (App pair nat nat (App h_32232232 n2_3223223222222222) (App g_32232 d2_32232232222222222)) H2_3223223222222222223) (App eq nat (App g_32232 d1_32232232222222) (App g_32232 d2_32232232222222222)) (App (Lambda H3_3223223222222222223332 (App eq nat (App g_32232 d1_32232232222222) (App g_32232 d2_32232232222222222)) (Lambda H4_32232232222222222233322 (App eq nat (App h_32232232 n1_3223223222222) (App h_32232232 n2_3223223222222222)) (LetIn H5_322322322222222222333223 (App H0_322322 d1_32232232222222 d2_32232232222222222 H3_3223223222222222223332) (App eq positive d1_32232232222222 d2_32232232222222222) (App (LetIn H5_3223223222222222223332233 (App H1_322322322 n1_3223223222222 n2_3223223222222222 H4_32232232222222222233322) (App eq Z n1_3223223222222 n2_3223223222222222) (App (Lambda H5_32232232222222222233322332 (App eq Z n1_3223223222222 n2_3223223222222222) (Lambda H6_322322322222222222333223322 (App eq positive d1_32232232222222 d2_32232232222222222) (App Coq.Init.Logic.eq_trans Q (App Qmake n1_3223223222222 d1_32232232222222) (App Qmake n2_3223223222222222 d1_32232232222222) (App Qmake n2_3223223222222222 d2_32232232222222222) (App Coq.Init.Logic.f_equal (Prod Qden_3223223222222222223332233221 positive Q) Q (Lambda f0_3223223222222222223332233222 (Prod Qden_3223223222222222223332233221 positive Q) (App f0_3223223222222222223332233222 d1_32232232222222)) (App Qmake n1_3223223222222) (App Qmake n2_3223223222222222) (App Coq.Init.Logic.eq_trans (Prod Qden_3223223222222222223332233221 positive Q) (App Qmake n1_3223223222222) (App Qmake n1_3223223222222) (App Qmake n2_3223223222222222) (App Coq.Init.Logic.f_equal (Prod Qnum_3223223222222222223332233221 Z (Prod Qden_32232232222222222233322332211 positive Q)) (Prod Qden_3223223222222222223332233221 positive Q) (Lambda f0_3223223222222222223332233222 (Prod Qnum_3223223222222222223332233221 Z (Prod Qden_32232232222222222233322332211 positive Q)) (App f0_3223223222222222223332233222 n1_3223223222222)) Qmake Qmake (App eq_refl (Prod Qnum_3223223222222222223332233221 Z (Prod Qden_32232232222222222233322332211 positive Q)) Qmake)) (App Coq.Init.Logic.f_equal Z (Prod Qden_3223223222222222223332233221 positive Q) Qmake n1_3223223222222 n2_3223223222222222 H5_32232232222222222233322332))) (App Coq.Init.Logic.f_equal positive Q (App Qmake n2_3223223222222222) d1_32232232222222 d2_32232232222222222 H6_322322322222222222333223322)))) H5_3223223222222222223332233)) H5_322322322222222222333223)))) H3_322322322222222222333)) H3_32232232222222222233)))))))) H2_322322322222222)))))) H2_322322322222)))) REVERTcast (App ZornsLemma.FunctionProperties.injective Q nat (Lambda q_3223223222 Q (Case 0 (Lambda q_32232232222 Q nat) (CaseMatch q_3223223222) (CaseBranches (Lambda n_32232232222 Z (Lambda d_322322322222 positive (App f_32 (App pair nat nat (App h_32232232 n_32232232222) (App g_32232 d_322322322222))))))))))))))))))))))))))) 