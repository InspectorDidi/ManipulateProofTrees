(Definition ZornsLemma.CountableTypes.Q_countable (LetIn gen_var_11 ZornsLemma.CountableTypes.countable_nat_product (App CountableT (App prod nat nat)) (Case 1 (Lambda Anonymous (App CountableT (App prod nat nat)) (App CountableT Q)) (CaseMatch gen_var_1) (CaseBranches (Lambda gen_var_3 (Prod Anonymous (App prod nat nat) nat) (Lambda gen_var_5 (App ZornsLemma.FunctionProperties.injective (App prod nat nat) nat gen_var_3) (LetIn gen_var_11 ZornsLemma.CountableTypes.positive_countable (App CountableT positive) (Case 1 (Lambda Anonymous (App CountableT positive) (App CountableT Q)) (CaseMatch gen_var_6) (CaseBranches (Lambda gen_var_8 (Prod Anonymous positive nat) (Lambda gen_var_10 (App ZornsLemma.FunctionProperties.injective positive nat gen_var_8) (LetIn gen_var_11 ZornsLemma.CountableTypes.Z_countable (App CountableT Z) (Case 1 (Lambda Anonymous (App CountableT Z) (App CountableT Q)) (CaseMatch gen_var_11) (CaseBranches (Lambda gen_var_13 (Prod Anonymous Z nat) (Lambda gen_var_15 (App ZornsLemma.FunctionProperties.injective Z nat gen_var_13) (App intro_nat_injection Q (Lambda gen_var_17 Q (Case 0 (Lambda gen_var_17 Q nat) (CaseMatch gen_var_17) (CaseBranches (Lambda gen_var_18 Z (Lambda gen_var_19 positive (App gen_var_3 (App pair nat nat (App gen_var_13 gen_var_18) (App gen_var_8 gen_var_19)))))))) (Cast (Lambda gen_var_20 Q (Lambda gen_var_21 Q (Lambda gen_var_51 (App eq nat (Case 0 (Lambda gen_var_23 Q nat) (CaseMatch gen_var_20) (CaseBranches (Lambda gen_var_24 Z (Lambda gen_var_25 positive (App gen_var_3 (App pair nat nat (App gen_var_13 gen_var_24) (App gen_var_8 gen_var_25))))))) (Case 0 (Lambda gen_var_26 Q nat) (CaseMatch gen_var_21) (CaseBranches (Lambda gen_var_27 Z (Lambda gen_var_28 positive (App gen_var_3 (App pair nat nat (App gen_var_13 gen_var_27) (App gen_var_8 gen_var_28)))))))) (App (Case 0 (Lambda gen_var_34 Q (Prod gen_var_30 (App eq nat (Case 0 (Lambda gen_var_31 Q nat) (CaseMatch gen_var_31) (CaseBranches (Lambda gen_var_32 Z (Lambda gen_var_33 positive (App gen_var_3 (App pair nat nat (App gen_var_13 gen_var_32) (App gen_var_8 gen_var_33))))))) (Case 0 (Lambda gen_var_34 Q nat) (CaseMatch gen_var_21) (CaseBranches (Lambda gen_var_35 Z (Lambda gen_var_36 positive (App gen_var_3 (App pair nat nat (App gen_var_13 gen_var_35) (App gen_var_8 gen_var_36)))))))) (App eq Q gen_var_34 gen_var_21))) (CaseMatch gen_var_20) (CaseBranches (Lambda gen_var_37 Z (Lambda gen_var_38 positive (Lambda gen_var_51 (App eq nat (App gen_var_3 (App pair nat nat (App gen_var_13 gen_var_37) (App gen_var_8 gen_var_38))) (Case 0 (Lambda gen_var_40 Q nat) (CaseMatch gen_var_21) (CaseBranches (Lambda gen_var_41 Z (Lambda gen_var_42 positive (App gen_var_3 (App pair nat nat (App gen_var_13 gen_var_41) (App gen_var_8 gen_var_42)))))))) (App (Case 0 (Lambda gen_var_45 Q (Prod gen_var_44 (App eq nat (App gen_var_3 (App pair nat nat (App gen_var_13 gen_var_37) (App gen_var_8 gen_var_38))) (Case 0 (Lambda gen_var_45 Q nat) (CaseMatch gen_var_45) (CaseBranches (Lambda gen_var_46 Z (Lambda gen_var_47 positive (App gen_var_3 (App pair nat nat (App gen_var_13 gen_var_46) (App gen_var_8 gen_var_47)))))))) (App eq Q (App Qmake gen_var_37 gen_var_38) gen_var_45))) (CaseMatch gen_var_21) (CaseBranches (Lambda gen_var_48 Z (Lambda gen_var_49 positive (Lambda gen_var_51 (App eq nat (App gen_var_3 (App pair nat nat (App gen_var_13 gen_var_37) (App gen_var_8 gen_var_38))) (App gen_var_3 (App pair nat nat (App gen_var_13 gen_var_48) (App gen_var_8 gen_var_49)))) (LetIn gen_var_51 (App gen_var_5 (App pair nat nat (App gen_var_13 gen_var_37) (App gen_var_8 gen_var_38)) (App pair nat nat (App gen_var_13 gen_var_48) (App gen_var_8 gen_var_49)) gen_var_51) (App eq (App prod nat nat) (App pair nat nat (App gen_var_13 gen_var_37) (App gen_var_8 gen_var_38)) (App pair nat nat (App gen_var_13 gen_var_48) (App gen_var_8 gen_var_49))) (LetIn gen_var_62 (App Coq.Init.Logic.f_equal (App prod nat nat) nat (Lambda gen_var_53 (App prod nat nat) (Case 2 (Lambda gen_var_54 (App prod nat nat) nat) (CaseMatch gen_var_53) (CaseBranches (Lambda gen_var_56 nat (Lambda gen_var_56 nat gen_var_56))))) (App pair nat nat (App gen_var_13 gen_var_37) (App gen_var_8 gen_var_38)) (App pair nat nat (App gen_var_13 gen_var_48) (App gen_var_8 gen_var_49)) gen_var_51) (App eq nat (App gen_var_13 gen_var_37) (App gen_var_13 gen_var_48)) (App (LetIn gen_var_62 (App Coq.Init.Logic.f_equal (App prod nat nat) nat (Lambda gen_var_58 (App prod nat nat) (Case 2 (Lambda gen_var_59 (App prod nat nat) nat) (CaseMatch gen_var_58) (CaseBranches (Lambda gen_var_61 nat (Lambda gen_var_61 nat gen_var_61))))) (App pair nat nat (App gen_var_13 gen_var_37) (App gen_var_8 gen_var_38)) (App pair nat nat (App gen_var_13 gen_var_48) (App gen_var_8 gen_var_49)) gen_var_51) (App eq nat (App gen_var_8 gen_var_38) (App gen_var_8 gen_var_49)) (App (Lambda gen_var_62 (App eq nat (App gen_var_8 gen_var_38) (App gen_var_8 gen_var_49)) (Lambda gen_var_63 (App eq nat (App gen_var_13 gen_var_37) (App gen_var_13 gen_var_48)) (LetIn gen_var_66 (App gen_var_10 gen_var_38 gen_var_49 gen_var_62) (App eq positive gen_var_38 gen_var_49) (App (LetIn gen_var_66 (App gen_var_15 gen_var_37 gen_var_48 gen_var_63) (App eq Z gen_var_37 gen_var_48) (App (Lambda gen_var_66 (App eq Z gen_var_37 gen_var_48) (Lambda gen_var_67 (App eq positive gen_var_38 gen_var_49) (App Coq.Init.Logic.eq_trans Q (App Qmake gen_var_37 gen_var_38) (App Qmake gen_var_48 gen_var_38) (App Qmake gen_var_48 gen_var_49) (App Coq.Init.Logic.f_equal (Prod gen_var_68 positive Q) Q (Lambda gen_var_69 (Prod gen_var_70 positive Q) (App gen_var_69 gen_var_38)) (App Qmake gen_var_37) (App Qmake gen_var_48) (App Coq.Init.Logic.eq_trans (Prod gen_var_71 positive Q) (App Qmake gen_var_37) (App Qmake gen_var_37) (App Qmake gen_var_48) (App Coq.Init.Logic.f_equal (Prod gen_var_72 Z (Prod gen_var_73 positive Q)) (Prod gen_var_74 positive Q) (Lambda gen_var_75 (Prod gen_var_76 Z (Prod gen_var_77 positive Q)) (App gen_var_75 gen_var_37)) Qmake Qmake (App eq_refl (Prod gen_var_78 Z (Prod gen_var_79 positive Q)) Qmake)) (App Coq.Init.Logic.f_equal Z (Prod gen_var_80 positive Q) Qmake gen_var_37 gen_var_48 gen_var_66))) (App Coq.Init.Logic.f_equal positive Q (App Qmake gen_var_48) gen_var_38 gen_var_49 gen_var_67)))) gen_var_66)) gen_var_66)))) gen_var_62)) gen_var_62)))))))) gen_var_51)))))) gen_var_51)))) REVERTcast (App ZornsLemma.FunctionProperties.injective Q nat (Lambda gen_var_82 Q (Case 0 (Lambda gen_var_82 Q nat) (CaseMatch gen_var_82) (CaseBranches (Lambda gen_var_83 Z (Lambda gen_var_84 positive (App gen_var_3 (App pair nat nat (App gen_var_13 gen_var_83) (App gen_var_8 gen_var_84))))))))))))))))))))))))))) 