(Definition Coq.Init.Nat.add (Fix (Functions (App add 0 (Prod n_221 nat (Prod m_2211 nat nat)) (Lambda n_222 nat (Lambda m_2222 nat (Case 0 (Lambda n_22222 nat nat) (CaseMatch n_222) (CaseBranches m_2222 (Lambda p_22222 nat (App S (App add p_22222 m_2222))))))))) 0)) (Definition Coq.Init.Peano.lt (Lambda n_3222 nat (Lambda m_32222 nat (App le (App S n_3222) m_32222)))) (Definition Coq.Init.Peano.le_ind (Lambda n_32222 nat (Lambda P_322222 (Prod out_322221 nat (Sort Prop)) (Lambda f_3222222 (App P_322222 n_32222) (Lambda f_32222222 (Prod m_32222221 nat (Prod out_322222211 (App le n_32222 m_32222221) (Prod out_3222222111 (App P_322222 m_32222221) (App P_322222 (App S m_32222221))))) (Fix (Functions (App F 0 (Prod n_322222221 nat (Prod l_3222222211 (App le n_32222 n_322222221) (App P_322222 n_322222221))) (Lambda n_322222222 nat (Lambda l_3222222222 (App le n_32222 n_322222222) (Case 1 (Lambda n_32222222222 nat (Lambda out_322222222222 (App le n_32222 n_32222222222) (App P_322222 n_32222222222))) (CaseMatch l_3222222222) (CaseBranches f_3222222 (Lambda m_32222222222 nat (Lambda l_322222222222 (App le n_32222 m_32222222222) (App f_32222222 m_32222222222 l_322222222222 (App F m_32222222222 l_322222222222)))))))))) 0)))))) (Definition Coq.Arith.PeanoNat.Nat.le_succ_l (Lambda n_322222222 nat (Lambda m_3222222222 nat (Cast (App Coq.Arith.PeanoNat.Nat.central_induction (Lambda t_32222222222 nat (App Coq.Init.Logic.iff (App le (App S n_322222222) t_32222222222) (App Coq.Init.Peano.lt n_322222222 t_32222222222))) (Cast (Cast (Lambda x_32222222222 nat (Lambda y_322222222222 nat (Lambda H_3222222222222 (App eq nat x_32222222222 y_322222222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App Coq.Init.Logic.iff (App le (App S n_322222222) x_32222222222) (App Coq.Init.Peano.lt n_322222222 x_32222222222)) (App Coq.Init.Logic.iff (App le (App S n_322222222) y_322222222222) (App Coq.Init.Peano.lt n_322222222 y_322222222222)) (App Coq.Classes.Morphisms.PER_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App le (App S n_322222222) x_32222222222) (App le (App S n_322222222) y_322222222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_32222222222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) le Coq.Arith.PeanoNat.Nat.le_wd (App S n_322222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App S n_322222222)) x_32222222222 y_322222222222 H_3222222222222) (App Coq.Init.Peano.lt n_322222222 x_32222222222) (App Coq.Init.Peano.lt n_322222222 y_322222222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_32222222222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) Coq.Init.Peano.lt Coq.Arith.PeanoNat.Nat.lt_wd n_322222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) n_322222222) x_32222222222 y_322222222222 H_3222222222222)) (App Coq.Init.Logic.iff (App le (App S n_322222222) y_322222222222) (App Coq.Init.Peano.lt n_322222222 y_322222222222)) (App Coq.Init.Logic.iff (App le (App S n_322222222) y_322222222222) (App Coq.Init.Peano.lt n_322222222 y_322222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App Coq.Init.Logic.iff (App le (App S n_322222222) y_322222222222) (App Coq.Init.Peano.lt n_322222222 y_322222222222))) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Logic.iff (App le (App S n_322222222) y_322222222222) (App Coq.Init.Peano.lt n_322222222 y_322222222222))))))) REVERTcast (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff (Lambda t_32222222222 nat (App Coq.Init.Logic.iff (App le (App S n_322222222) t_32222222222) (App Coq.Init.Peano.lt n_322222222 t_32222222222))) (Lambda t_32222222222 nat (App Coq.Init.Logic.iff (App le (App S n_322222222) t_32222222222) (App Coq.Init.Peano.lt n_322222222 t_32222222222))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_32222222221 nat (Sort Prop)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (Lambda t_32222222222 nat (App Coq.Init.Logic.iff (App le (App S n_322222222) t_32222222222) (App Coq.Init.Peano.lt n_322222222 t_32222222222))))) n_322222222 (App conj (Prod out_32222222221 (App le (App S n_322222222) n_322222222) (App Coq.Init.Peano.lt n_322222222 n_322222222)) (Prod out_32222222221 (App Coq.Init.Peano.lt n_322222222 n_322222222) (App le (App S n_322222222) n_322222222)) (Lambda H_32222222222 (App le (App S n_322222222) n_322222222) (App Coq.Init.Logic.False_ind (App Coq.Init.Peano.lt n_322222222 n_322222222) (App Coq.Arith.PeanoNat.Nat.nle_succ_diag_l n_322222222 H_32222222222))) (Lambda H_32222222222 (App Coq.Init.Peano.lt n_322222222 n_322222222) (App Coq.Init.Logic.False_ind (App le (App S n_322222222) n_322222222) (App Coq.Arith.PeanoNat.Nat.lt_irrefl n_322222222 H_32222222222)))) (Lambda m_32222222222 nat (App (Lambda lemma_322222222222 (App Coq.Init.Logic.iff (App le (App S n_322222222) (App S m_32222222222)) (App or (App Coq.Init.Peano.lt (App S n_322222222) (App S m_32222222222)) (App eq nat (App S n_322222222) (App S m_32222222222)))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Logic.iff (App le (App S n_322222222) m_32222222222) (App Coq.Init.Peano.lt n_322222222 m_32222222222)) (App Coq.Init.Logic.iff (App le (App S n_322222222) (App S m_32222222222)) (App Coq.Init.Peano.lt n_322222222 (App S m_32222222222))) (App Coq.Init.Logic.iff (App or (App Coq.Init.Peano.lt (App S n_322222222) (App S m_32222222222)) (App eq nat (App S n_322222222) (App S m_32222222222))) (App Coq.Init.Peano.lt n_322222222 (App S m_32222222222))) (App Coq.Classes.Morphisms.PER_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App le (App S n_322222222) (App S m_32222222222)) (App or (App Coq.Init.Peano.lt (App S n_322222222) (App S m_32222222222)) (App eq nat (App S n_322222222) (App S m_32222222222))) lemma_322222222222 (App Coq.Init.Peano.lt n_322222222 (App S m_32222222222)) (App Coq.Init.Peano.lt n_322222222 (App S m_32222222222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Peano.lt n_322222222 (App S m_32222222222)))))) (App Coq.Arith.PeanoNat.Nat.lt_eq_cases (App S n_322222222) (App S m_32222222222)) (App (Lambda lemma_322222222222 (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt (App S n_322222222) (App S m_32222222222)) (App le (App S n_322222222) m_32222222222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Logic.iff (App le (App S n_322222222) m_32222222222) (App Coq.Init.Peano.lt n_322222222 m_32222222222)) (App Coq.Init.Logic.iff (App or (App Coq.Init.Peano.lt (App S n_322222222) (App S m_32222222222)) (App eq nat (App S n_322222222) (App S m_32222222222))) (App Coq.Init.Peano.lt n_322222222 (App S m_32222222222))) (App Coq.Init.Logic.iff (App or (App le (App S n_322222222) m_32222222222) (App eq nat (App S n_322222222) (App S m_32222222222))) (App Coq.Init.Peano.lt n_322222222 (App S m_32222222222))) (App Coq.Classes.Morphisms.PER_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App or (App Coq.Init.Peano.lt (App S n_322222222) (App S m_32222222222)) (App eq nat (App S n_322222222) (App S m_32222222222))) (App or (App le (App S n_322222222) m_32222222222) (App eq nat (App S n_322222222) (App S m_32222222222))) (App Coq.Classes.Morphisms_Prop.or_iff_morphism (App Coq.Init.Peano.lt (App S n_322222222) (App S m_32222222222)) (App le (App S n_322222222) m_32222222222) lemma_322222222222 (App eq nat (App S n_322222222) (App S m_32222222222)) (App eq nat (App S n_322222222) (App S m_32222222222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq nat (App S n_322222222) (App S m_32222222222)))) (App Coq.Init.Peano.lt n_322222222 (App S m_32222222222)) (App Coq.Init.Peano.lt n_322222222 (App S m_32222222222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Peano.lt n_322222222 (App S m_32222222222)))))) (App Coq.Arith.PeanoNat.Nat.lt_succ_r (App S n_322222222) m_32222222222) (App (Lambda lemma_322222222222 (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_322222222 (App S m_32222222222)) (App le n_322222222 m_32222222222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Logic.iff (App le (App S n_322222222) m_32222222222) (App Coq.Init.Peano.lt n_322222222 m_32222222222)) (App Coq.Init.Logic.iff (App or (App le (App S n_322222222) m_32222222222) (App eq nat (App S n_322222222) (App S m_32222222222))) (App Coq.Init.Peano.lt n_322222222 (App S m_32222222222))) (App Coq.Init.Logic.iff (App or (App le (App S n_322222222) m_32222222222) (App eq nat (App S n_322222222) (App S m_32222222222))) (App le n_322222222 m_32222222222)) (App Coq.Classes.Morphisms.per_partial_app_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App or (App le (App S n_322222222) m_32222222222) (App eq nat (App S n_322222222) (App S m_32222222222))) (App Coq.Init.Peano.lt n_322222222 (App S m_32222222222)) (App le n_322222222 m_32222222222) lemma_322222222222))) (App Coq.Arith.PeanoNat.Nat.lt_succ_r n_322222222 m_32222222222) (App (Lambda lemma_322222222222 (App Coq.Init.Logic.iff (App le n_322222222 m_32222222222) (App or (App Coq.Init.Peano.lt n_322222222 m_32222222222) (App eq nat n_322222222 m_32222222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Logic.iff (App le (App S n_322222222) m_32222222222) (App Coq.Init.Peano.lt n_322222222 m_32222222222)) (App Coq.Init.Logic.iff (App or (App le (App S n_322222222) m_32222222222) (App eq nat (App S n_322222222) (App S m_32222222222))) (App le n_322222222 m_32222222222)) (App Coq.Init.Logic.iff (App or (App le (App S n_322222222) m_32222222222) (App eq nat (App S n_322222222) (App S m_32222222222))) (App or (App Coq.Init.Peano.lt n_322222222 m_32222222222) (App eq nat n_322222222 m_32222222222))) (App Coq.Classes.Morphisms.per_partial_app_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App or (App le (App S n_322222222) m_32222222222) (App eq nat (App S n_322222222) (App S m_32222222222))) (App le n_322222222 m_32222222222) (App or (App Coq.Init.Peano.lt n_322222222 m_32222222222) (App eq nat n_322222222 m_32222222222)) lemma_322222222222))) (App Coq.Arith.PeanoNat.Nat.lt_eq_cases n_322222222 m_32222222222) (App (Lambda lemma_322222222222 (App Coq.Init.Logic.iff (App eq nat (App S n_322222222) (App S m_32222222222)) (App eq nat n_322222222 m_32222222222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Logic.iff (App le (App S n_322222222) m_32222222222) (App Coq.Init.Peano.lt n_322222222 m_32222222222)) (App Coq.Init.Logic.iff (App or (App le (App S n_322222222) m_32222222222) (App eq nat (App S n_322222222) (App S m_32222222222))) (App or (App Coq.Init.Peano.lt n_322222222 m_32222222222) (App eq nat n_322222222 m_32222222222))) (App Coq.Init.Logic.iff (App or (App le (App S n_322222222) m_32222222222) (App eq nat n_322222222 m_32222222222)) (App or (App Coq.Init.Peano.lt n_322222222 m_32222222222) (App eq nat n_322222222 m_32222222222))) (App Coq.Classes.Morphisms.PER_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App or (App le (App S n_322222222) m_32222222222) (App eq nat (App S n_322222222) (App S m_32222222222))) (App or (App le (App S n_322222222) m_32222222222) (App eq nat n_322222222 m_32222222222)) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism (Sort Prop) (Prod B_3222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) or Coq.Classes.Morphisms_Prop.or_iff_morphism (App le (App S n_322222222) m_32222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App le (App S n_322222222) m_32222222222)) (App eq nat (App S n_322222222) (App S m_32222222222)) (App eq nat n_322222222 m_32222222222) lemma_322222222222) (App or (App Coq.Init.Peano.lt n_322222222 m_32222222222) (App eq nat n_322222222 m_32222222222)) (App or (App Coq.Init.Peano.lt n_322222222 m_32222222222) (App eq nat n_322222222 m_32222222222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App or (App Coq.Init.Peano.lt n_322222222 m_32222222222) (App eq nat n_322222222 m_32222222222)))))) (App Coq.Arith.PeanoNat.Nat.succ_inj_wd n_322222222 m_32222222222) (App (Lambda lemma_322222222222 (App Coq.Init.Logic.iff (App Coq.Init.Logic.iff (App or (App le (App S n_322222222) m_32222222222) (App eq nat n_322222222 m_32222222222)) (App or (App Coq.Init.Peano.lt n_322222222 m_32222222222) (App eq nat n_322222222 m_32222222222))) (App Coq.Init.Logic.iff (App le (App S n_322222222) m_32222222222) (App Coq.Init.Peano.lt n_322222222 m_32222222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Logic.iff (App le (App S n_322222222) m_32222222222) (App Coq.Init.Peano.lt n_322222222 m_32222222222)) (App Coq.Init.Logic.iff (App or (App le (App S n_322222222) m_32222222222) (App eq nat n_322222222 m_32222222222)) (App or (App Coq.Init.Peano.lt n_322222222 m_32222222222) (App eq nat n_322222222 m_32222222222))) (App Coq.Init.Logic.iff (App le (App S n_322222222) m_32222222222) (App Coq.Init.Peano.lt n_322222222 m_32222222222)) lemma_322222222222)) (App Coq.Init.Logic.or_cancel_r (App eq nat n_322222222 m_32222222222) (App le (App S n_322222222) m_32222222222) (App Coq.Init.Peano.lt n_322222222 m_32222222222) (Lambda LE_322222222222 (App le (App S n_322222222) m_32222222222) (Cast (Lambda EQ_3222222222222 (App eq nat n_322222222 m_32222222222) (App Coq.Init.Logic.False_ind False (App Coq.Arith.PeanoNat.Nat.nle_succ_diag_l m_32222222222 (App (Lambda lemma_32222222222222 (App eq nat n_322222222 m_32222222222) (App Coq.Classes.Morphisms.subrelation_proper (Prod out_322222222222221 nat (Prod out_3222222222222211 nat (Sort Prop))) (App Coq.Classes.Morphisms.respectful nat (Prod out_322222222222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff)) le Coq.Arith.PeanoNat.Nat.le_wd (App Coq.Classes.Morphisms.respectful nat (Prod out_322222222222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Program.Basics.impl)) tt (App Coq.Classes.Morphisms.subrelation_respectful nat (Prod out_322222222222221 nat (Sort Prop)) (App eq nat) (App eq nat) (App Coq.Classes.Morphisms.subrelation_refl nat (App eq nat)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Program.Basics.impl) (App Coq.Classes.Morphisms.subrelation_respectful nat (Sort Prop) (App eq nat) (App eq nat) (App Coq.Classes.Morphisms.subrelation_refl nat (App eq nat)) Coq.Init.Logic.iff Coq.Program.Basics.impl Coq.Classes.Morphisms.iff_impl_subrelation)) (App S n_322222222) (App S m_32222222222) (App Coq.Arith.PeanoNat.Nat.succ_wd n_322222222 m_32222222222 lemma_32222222222222) m_32222222222 m_32222222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) m_32222222222))) EQ_3222222222222 LE_322222222222)))) REVERTcast (App Coq.Init.Logic.not (App eq nat n_322222222 m_32222222222)))) (Lambda LT_322222222222 (App Coq.Init.Peano.lt n_322222222 m_32222222222) (Cast (Lambda EQ_3222222222222 (App eq nat n_322222222 m_32222222222) (App Coq.Init.Logic.False_ind False (App Coq.Arith.PeanoNat.Nat.lt_irrefl m_32222222222 (App (Lambda lemma_32222222222222 (App eq nat n_322222222 m_32222222222) (App Coq.Classes.Morphisms.subrelation_proper (Prod out_322222222222221 nat (Prod out_3222222222222211 nat (Sort Prop))) (App Coq.Classes.Morphisms.respectful nat (Prod out_322222222222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff)) Coq.Init.Peano.lt Coq.Arith.PeanoNat.Nat.lt_wd (App Coq.Classes.Morphisms.respectful nat (Prod out_322222222222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Program.Basics.impl)) tt (App Coq.Classes.Morphisms.subrelation_respectful nat (Prod out_322222222222221 nat (Sort Prop)) (App eq nat) (App eq nat) (App Coq.Classes.Morphisms.subrelation_refl nat (App eq nat)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Program.Basics.impl) (App Coq.Classes.Morphisms.subrelation_respectful nat (Sort Prop) (App eq nat) (App eq nat) (App Coq.Classes.Morphisms.subrelation_refl nat (App eq nat)) Coq.Init.Logic.iff Coq.Program.Basics.impl Coq.Classes.Morphisms.iff_impl_subrelation)) n_322222222 m_32222222222 lemma_32222222222222 m_32222222222 m_32222222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) m_32222222222))) EQ_3222222222222 LT_322222222222)))) REVERTcast (App Coq.Init.Logic.not (App eq nat n_322222222 m_32222222222))))) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Logic.iff (App le (App S n_322222222) m_32222222222) (App Coq.Init.Peano.lt n_322222222 m_32222222222)))))))))) m_3222222222) REVERTcast (App Coq.Init.Logic.iff (App le (App S n_322222222) m_3222222222) (App Coq.Init.Peano.lt n_322222222 m_3222222222)))))) (Definition Coq.Arith.Gt.gt_le_S (Lambda n_32222 nat (Lambda m_322222 nat (LetIn H_3222223 (Lambda n_3222222 nat (Lambda m_32222222 nat (Case 2 (Lambda out_322222222 (App and (Prod out_322222221 (App le (App S n_3222222) m_32222222) (App Coq.Init.Peano.lt n_3222222 m_32222222)) (Prod out_322222221 (App Coq.Init.Peano.lt n_3222222 m_32222222) (App le (App S n_3222222) m_32222222))) (Prod out_3222222221 (App Coq.Init.Peano.lt n_3222222 m_32222222) (App le (App S n_3222222) m_32222222))) (CaseMatch (App Coq.Arith.PeanoNat.Nat.le_succ_l n_3222222 m_32222222)) (CaseBranches (Lambda out_322222222 (Prod out_322222221 (App le (App S n_3222222) m_32222222) (App Coq.Init.Peano.lt n_3222222 m_32222222)) (Lambda out_3222222222 (Prod out_3222222221 (App Coq.Init.Peano.lt n_3222222 m_32222222) (App le (App S n_3222222) m_32222222)) out_3222222222)))))) (Prod n_3222221 nat (Prod m_32222211 nat (Prod out_322222111 (App Coq.Init.Peano.lt n_3222221 m_32222211) (App le (App S n_3222221) m_32222211)))) (App H_3222223 n_32222 m_322222))))) (Definition Coq.Arith.PeanoNat.Nat.add_lt_mono_l (Lambda n_32222222222 nat (Lambda m_322222222222 nat (Lambda p_3222222222222 nat (Cast (App Coq.Arith.PeanoNat.Nat.bi_induction (Lambda t_32222222222222 nat (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add t_32222222222222 n_32222222222) (App Coq.Init.Nat.add t_32222222222222 m_322222222222)))) (Cast (Cast (Lambda x_32222222222222 nat (Lambda y_322222222222222 nat (Lambda H_3222222222222222 (App eq nat x_32222222222222 y_322222222222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add x_32222222222222 n_32222222222) (App Coq.Init.Nat.add x_32222222222222 m_322222222222))) (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add y_322222222222222 n_32222222222) (App Coq.Init.Nat.add y_322222222222222 m_322222222222))) (App Coq.Classes.Morphisms.per_partial_app_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add x_32222222222222 n_32222222222) (App Coq.Init.Nat.add x_32222222222222 m_322222222222)) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add y_322222222222222 n_32222222222) (App Coq.Init.Nat.add y_322222222222222 m_322222222222)) (App Coq.Arith.PeanoNat.Nat.lt_wd (App Coq.Init.Nat.add x_32222222222222 n_32222222222) (App Coq.Init.Nat.add y_322222222222222 n_32222222222) (App Coq.Arith.PeanoNat.Nat.add_wd x_32222222222222 y_322222222222222 H_3222222222222222 n_32222222222 n_32222222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) n_32222222222)) (App Coq.Init.Nat.add x_32222222222222 m_322222222222) (App Coq.Init.Nat.add y_322222222222222 m_322222222222) (App Coq.Arith.PeanoNat.Nat.add_wd x_32222222222222 y_322222222222222 H_3222222222222222 m_322222222222 m_322222222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) m_322222222222)))) (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add y_322222222222222 n_32222222222) (App Coq.Init.Nat.add y_322222222222222 m_322222222222))) (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add y_322222222222222 n_32222222222) (App Coq.Init.Nat.add y_322222222222222 m_322222222222))) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add y_322222222222222 n_32222222222) (App Coq.Init.Nat.add y_322222222222222 m_322222222222)))) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add y_322222222222222 n_32222222222) (App Coq.Init.Nat.add y_322222222222222 m_322222222222)))))))) REVERTcast (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff (Lambda t_32222222222222 nat (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add t_32222222222222 n_32222222222) (App Coq.Init.Nat.add t_32222222222222 m_322222222222)))) (Lambda t_32222222222222 nat (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add t_32222222222222 n_32222222222) (App Coq.Init.Nat.add t_32222222222222 m_322222222222)))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_32222222222221 nat (Sort Prop)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (Lambda t_32222222222222 nat (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add t_32222222222222 n_32222222222) (App Coq.Init.Nat.add t_32222222222222 m_322222222222)))))) (App (Lambda lemma_32222222222222 (App eq nat (App Coq.Init.Nat.add O n_32222222222) n_32222222222) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add O n_32222222222) (App Coq.Init.Nat.add O m_322222222222)) (App Coq.Init.Peano.lt n_32222222222 (App Coq.Init.Nat.add O m_322222222222)) (App Coq.Arith.PeanoNat.Nat.lt_wd (App Coq.Init.Nat.add O n_32222222222) n_32222222222 lemma_32222222222222 (App Coq.Init.Nat.add O m_322222222222) (App Coq.Init.Nat.add O m_322222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App Coq.Init.Nat.add O m_322222222222))))) (App Coq.Arith.PeanoNat.Nat.add_0_l n_32222222222) (App (Lambda lemma_32222222222222 (App eq nat (App Coq.Init.Nat.add O m_322222222222) m_322222222222) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt n_32222222222 (App Coq.Init.Nat.add O m_322222222222)) (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_322222222222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) Coq.Init.Peano.lt Coq.Arith.PeanoNat.Nat.lt_wd n_32222222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) n_32222222222) (App Coq.Init.Nat.add O m_322222222222) m_322222222222 lemma_32222222222222))) (App Coq.Arith.PeanoNat.Nat.add_0_l m_322222222222) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Peano.lt n_32222222222 m_322222222222)))) (Lambda p_32222222222222 nat (App (Lambda lemma_322222222222222 (App eq nat (App Coq.Init.Nat.add (App S p_32222222222222) n_32222222222) (App S (App Coq.Init.Nat.add p_32222222222222 n_32222222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add p_32222222222222 n_32222222222) (App Coq.Init.Nat.add p_32222222222222 m_322222222222))) (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App S p_32222222222222) n_32222222222) (App Coq.Init.Nat.add (App S p_32222222222222) m_322222222222))) (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App S (App Coq.Init.Nat.add p_32222222222222 n_32222222222)) (App Coq.Init.Nat.add (App S p_32222222222222) m_322222222222))) (App Coq.Classes.Morphisms.per_partial_app_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App S p_32222222222222) n_32222222222) (App Coq.Init.Nat.add (App S p_32222222222222) m_322222222222)) (App Coq.Init.Peano.lt (App S (App Coq.Init.Nat.add p_32222222222222 n_32222222222)) (App Coq.Init.Nat.add (App S p_32222222222222) m_322222222222)) (App Coq.Arith.PeanoNat.Nat.lt_wd (App Coq.Init.Nat.add (App S p_32222222222222) n_32222222222) (App S (App Coq.Init.Nat.add p_32222222222222 n_32222222222)) lemma_322222222222222 (App Coq.Init.Nat.add (App S p_32222222222222) m_322222222222) (App Coq.Init.Nat.add (App S p_32222222222222) m_322222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App Coq.Init.Nat.add (App S p_32222222222222) m_322222222222)))))) (App Coq.Arith.PeanoNat.Nat.add_succ_l p_32222222222222 n_32222222222) (App (Lambda lemma_322222222222222 (App eq nat (App Coq.Init.Nat.add (App S p_32222222222222) m_322222222222) (App S (App Coq.Init.Nat.add p_32222222222222 m_322222222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add p_32222222222222 n_32222222222) (App Coq.Init.Nat.add p_32222222222222 m_322222222222))) (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App S (App Coq.Init.Nat.add p_32222222222222 n_32222222222)) (App Coq.Init.Nat.add (App S p_32222222222222) m_322222222222))) (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App S (App Coq.Init.Nat.add p_32222222222222 n_32222222222)) (App S (App Coq.Init.Nat.add p_32222222222222 m_322222222222)))) (App Coq.Classes.Morphisms.per_partial_app_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App S (App Coq.Init.Nat.add p_32222222222222 n_32222222222)) (App Coq.Init.Nat.add (App S p_32222222222222) m_322222222222)) (App Coq.Init.Peano.lt (App S (App Coq.Init.Nat.add p_32222222222222 n_32222222222)) (App S (App Coq.Init.Nat.add p_32222222222222 m_322222222222))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_3222222222222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) Coq.Init.Peano.lt Coq.Arith.PeanoNat.Nat.lt_wd (App S (App Coq.Init.Nat.add p_32222222222222 n_32222222222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App S (App Coq.Init.Nat.add p_32222222222222 n_32222222222))) (App Coq.Init.Nat.add (App S p_32222222222222) m_322222222222) (App S (App Coq.Init.Nat.add p_32222222222222 m_322222222222)) lemma_322222222222222)))) (App Coq.Arith.PeanoNat.Nat.add_succ_l p_32222222222222 m_322222222222) (App (Lambda lemma_322222222222222 (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt (App Coq.Init.Nat.add p_32222222222222 n_32222222222) (App Coq.Init.Nat.add p_32222222222222 m_322222222222)) (App Coq.Init.Peano.lt (App S (App Coq.Init.Nat.add p_32222222222222 n_32222222222)) (App S (App Coq.Init.Nat.add p_32222222222222 m_322222222222)))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add p_32222222222222 n_32222222222) (App Coq.Init.Nat.add p_32222222222222 m_322222222222))) (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App S (App Coq.Init.Nat.add p_32222222222222 n_32222222222)) (App S (App Coq.Init.Nat.add p_32222222222222 m_322222222222)))) (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add p_32222222222222 n_32222222222) (App Coq.Init.Nat.add p_32222222222222 m_322222222222))) (App Coq.Classes.Morphisms.per_partial_app_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App S (App Coq.Init.Nat.add p_32222222222222 n_32222222222)) (App S (App Coq.Init.Nat.add p_32222222222222 m_322222222222))) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add p_32222222222222 n_32222222222) (App Coq.Init.Nat.add p_32222222222222 m_322222222222)) (App Coq.Classes.RelationClasses.symmetry (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Symmetric (App Coq.Init.Peano.lt (App Coq.Init.Nat.add p_32222222222222 n_32222222222) (App Coq.Init.Nat.add p_32222222222222 m_322222222222)) (App Coq.Init.Peano.lt (App S (App Coq.Init.Nat.add p_32222222222222 n_32222222222)) (App S (App Coq.Init.Nat.add p_32222222222222 m_322222222222))) lemma_322222222222222)))) (App Coq.Arith.PeanoNat.Nat.succ_lt_mono (App Coq.Init.Nat.add p_32222222222222 n_32222222222) (App Coq.Init.Nat.add p_32222222222222 m_322222222222)) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add p_32222222222222 n_32222222222) (App Coq.Init.Nat.add p_32222222222222 m_322222222222)))))))) p_3222222222222) REVERTcast (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add p_3222222222222 n_32222222222) (App Coq.Init.Nat.add p_3222222222222 m_322222222222)))))))) (Definition Coq.Arith.Plus.plus_lt_compat_l (Lambda n_32222 nat (Lambda m_322222 nat (Lambda p_3222222 nat (LetIn H_32222223 (Lambda n_32222222 nat (Lambda m_322222222 nat (Lambda p_3222222222 nat (Case 2 (Lambda out_32222222222 (App and (Prod out_32222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add p_3222222222 n_32222222) (App Coq.Init.Nat.add p_3222222222 m_322222222))) (Prod out_32222222221 (App Coq.Init.Peano.lt (App Coq.Init.Nat.add p_3222222222 n_32222222) (App Coq.Init.Nat.add p_3222222222 m_322222222)) (App Coq.Init.Peano.lt n_32222222 m_322222222))) (Prod out_322222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add p_3222222222 n_32222222) (App Coq.Init.Nat.add p_3222222222 m_322222222)))) (CaseMatch (App Coq.Arith.PeanoNat.Nat.add_lt_mono_l n_32222222 m_322222222 p_3222222222)) (CaseBranches (Lambda out_32222222222 (Prod out_32222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add p_3222222222 n_32222222) (App Coq.Init.Nat.add p_3222222222 m_322222222))) (Lambda out_322222222222 (Prod out_322222222221 (App Coq.Init.Peano.lt (App Coq.Init.Nat.add p_3222222222 n_32222222) (App Coq.Init.Nat.add p_3222222222 m_322222222)) (App Coq.Init.Peano.lt n_32222222 m_322222222)) out_32222222222))))))) (Prod n_32222221 nat (Prod m_322222211 nat (Prod p_3222222111 nat (Prod out_32222221111 (App Coq.Init.Peano.lt n_32222221 m_322222211) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add p_3222222111 n_32222221) (App Coq.Init.Nat.add p_3222222111 m_322222211)))))) (App H_32222223 n_32222 m_322222 p_3222222)))))) (Definition Coq.Init.Logic.iff (Lambda A_322222 (Sort Prop) (Lambda B_3222222 (Sort Prop) (App and (Prod out_32222221 A_322222 B_3222222) (Prod out_32222221 B_3222222 A_322222))))) (Definition Coq.Classes.Morphisms.iff_flip_impl_subrelation (Cast (Lambda x_3222222 (Sort Prop) (Lambda y_32222222 (Sort Prop) (Lambda H_322222222 (App Coq.Init.Logic.iff x_3222222 y_32222222) (Cast (Lambda H0_3222222222 y_32222222 (App Coq.Init.Logic.and_ind (Prod out_32222222221 x_3222222 y_32222222) (Prod out_32222222221 y_32222222 x_3222222) x_3222222 (Lambda H_32222222222 (Prod out_32222222221 x_3222222 y_32222222) (Lambda H1_322222222222 (Prod out_322222222221 y_32222222 x_3222222) (App (Lambda H1_3222222222222 x_3222222 H1_3222222222222) (App H1_322222222222 H0_3222222222)))) H_322222222)) REVERTcast (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl x_3222222 y_32222222))))) REVERTcast (App Coq.Classes.RelationClasses.subrelation (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)))) (Definition Coq.Arith.PeanoNat.Nat.lt_succ_r (Lambda n_322222 nat (Lambda m_3222222 nat (App conj (Prod out_32222221 (App Coq.Init.Peano.lt n_322222 (App S m_3222222)) (App le n_322222 m_3222222)) (Prod out_32222221 (App le n_322222 m_3222222) (App Coq.Init.Peano.lt n_322222 (App S m_3222222))) (App Coq.Init.Peano.le_S_n n_322222 m_3222222) (Lambda H_32222222 (App le n_322222 m_3222222) (App Coq.Init.Peano.le_ind n_322222 (Lambda m_322222222 nat (App Coq.Init.Peano.lt n_322222 (App S m_322222222))) (Cast (App le_n (App S n_322222)) REVERTcast (App Coq.Init.Peano.lt n_322222 (App S n_322222))) (Lambda m_322222222 nat (Lambda H_3222222222 (App le n_322222 m_322222222) (Lambda IHle_32222222222 (App Coq.Init.Peano.lt n_322222 (App S m_322222222)) (Cast (App le_S (App S n_322222) (App S m_322222222) IHle_32222222222) REVERTcast (App Coq.Init.Peano.lt n_322222 (App S (App S m_322222222))))))) m_3222222 H_32222222)))))) (Definition Coq.Arith.PeanoNat.Nat.le_refl (Lambda n_322222 nat (LetIn H_3222223 (Lambda n_3222222 nat (Lambda m_32222222 nat (Case 2 (Lambda out_322222222 (App and (Prod out_322222221 (App le n_3222222 m_32222222) (App or (App Coq.Init.Peano.lt n_3222222 m_32222222) (App eq nat n_3222222 m_32222222))) (Prod out_322222221 (App or (App Coq.Init.Peano.lt n_3222222 m_32222222) (App eq nat n_3222222 m_32222222)) (App le n_3222222 m_32222222))) (Prod out_3222222221 (App or (App Coq.Init.Peano.lt n_3222222 m_32222222) (App eq nat n_3222222 m_32222222)) (App le n_3222222 m_32222222))) (CaseMatch (App Coq.Arith.PeanoNat.Nat.lt_eq_cases n_3222222 m_32222222)) (CaseBranches (Lambda out_322222222 (Prod out_322222221 (App le n_3222222 m_32222222) (App or (App Coq.Init.Peano.lt n_3222222 m_32222222) (App eq nat n_3222222 m_32222222))) (Lambda out_3222222222 (Prod out_3222222221 (App or (App Coq.Init.Peano.lt n_3222222 m_32222222) (App eq nat n_3222222 m_32222222)) (App le n_3222222 m_32222222)) out_3222222222)))))) (Prod n_3222221 nat (Prod m_32222211 nat (Prod out_322222111 (App or (App Coq.Init.Peano.lt n_3222221 m_32222211) (App eq nat n_3222221 m_32222211)) (App le n_3222221 m_32222211)))) (App H_3222223 n_322222 n_322222 (App or_intror (App Coq.Init.Peano.lt n_322222 n_322222) (App eq nat n_322222 n_322222) (App Coq.Classes.RelationClasses.reflexivity nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) n_322222)))))) (Definition Coq.Arith.PeanoNat.Nat.lt_succ_diag_r (Lambda n_32222 nat (App (Lambda lemma_322222 (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222 (App S n_32222)) (App le n_32222 n_32222)) (App Coq.Classes.Morphisms.iff_flip_impl_subrelation (App Coq.Init.Peano.lt n_32222 (App S n_32222)) (App le n_32222 n_32222) lemma_322222)) (App Coq.Arith.PeanoNat.Nat.lt_succ_r n_32222 n_32222) (App Coq.Arith.PeanoNat.Nat.le_refl n_32222)))) (Definition Coq.Init.Peano.gt (Lambda n_32222 nat (Lambda m_322222 nat (App Coq.Init.Peano.lt m_322222 n_32222)))) (Definition Coq.Arith.PeanoNat.Nat.central_induction (Lambda A_32222222222 (Prod out_32222222221 nat (Sort Prop)) (Lambda A_wd_322222222222 (App Coq.Classes.Morphisms.Proper (Prod out_322222222221 nat (Sort Prop)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) A_32222222222) (Lambda z_3222222222222 nat (Lambda Base_32222222222222 (App A_32222222222 z_3222222222222) (Lambda Step_322222222222222 (Prod n_322222222222221 nat (App Coq.Init.Logic.iff (App A_32222222222 n_322222222222221) (App A_32222222222 (App S n_322222222222221)))) (App (Cast (App Coq.Arith.PeanoNat.Nat.bi_induction (Lambda t_3222222222222222 nat (Prod Base_32222222222222221 (App A_32222222222 t_3222222222222222) (Prod n_322222222222222211 nat (App A_32222222222 n_322222222222222211)))) (Cast (Cast (Lambda x_3222222222222222 nat (Lambda y_32222222222222222 nat (Lambda H_322222222222222222 (App eq nat x_3222222222222222 y_32222222222222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (Prod Base_3222222222222222221 (App A_32222222222 x_3222222222222222) (Prod n_32222222222222222211 nat (App A_32222222222 n_32222222222222222211))) (Prod out_3222222222222222221 (App A_32222222222 y_32222222222222222) (Prod n_32222222222222222211 nat (App A_32222222222 n_32222222222222222211))) (App Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism (App A_32222222222 x_3222222222222222) (App A_32222222222 y_32222222222222222) (App A_wd_322222222222 x_3222222222222222 y_32222222222222222 H_322222222222222222) (Prod n_3222222222222222221 nat (App A_32222222222 n_3222222222222222221)) (Prod n_3222222222222222221 nat (App A_32222222222 n_3222222222222222221)) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (Prod n_3222222222222222221 nat (App A_32222222222 n_3222222222222222221)))) (Prod Base_3222222222222222221 (App A_32222222222 y_32222222222222222) (Prod n_32222222222222222211 nat (App A_32222222222 n_32222222222222222211))) (Prod Base_3222222222222222221 (App A_32222222222 y_32222222222222222) (Prod n_32222222222222222211 nat (App A_32222222222 n_32222222222222222211))) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (Prod Base_3222222222222222221 (App A_32222222222 y_32222222222222222) (Prod n_32222222222222222211 nat (App A_32222222222 n_32222222222222222211)))) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (Prod Base_3222222222222222221 (App A_32222222222 y_32222222222222222) (Prod n_32222222222222222211 nat (App A_32222222222 n_32222222222222222211)))))))) REVERTcast (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff (Lambda t_3222222222222222 nat (Prod Base_32222222222222221 (App A_32222222222 t_3222222222222222) (Prod n_322222222222222211 nat (App A_32222222222 n_322222222222222211)))) (Lambda t_3222222222222222 nat (Prod Base_32222222222222221 (App A_32222222222 t_3222222222222222) (Prod n_322222222222222211 nat (App A_32222222222 n_322222222222222211)))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_3222222222222221 nat (Sort Prop)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (Lambda t_3222222222222222 nat (Prod Base_32222222222222221 (App A_32222222222 t_3222222222222222) (Prod n_322222222222222211 nat (App A_32222222222 n_322222222222222211)))))) (Lambda Base_3222222222222222 (App A_32222222222 O) (App Coq.Arith.PeanoNat.Nat.bi_induction A_32222222222 A_wd_322222222222 Base_3222222222222222 Step_322222222222222)) (Lambda n_3222222222222222 nat (LetIn H_32222222222222223 (App Step_322222222222222 n_3222222222222222) (App Coq.Init.Logic.iff (App A_32222222222 n_3222222222222222) (App A_32222222222 (App S n_3222222222222222))) (App Coq.Init.Logic.and_ind (Prod out_322222222222222231 (App A_32222222222 n_3222222222222222) (App A_32222222222 (App S n_3222222222222222))) (Prod out_322222222222222231 (App A_32222222222 (App S n_3222222222222222)) (App A_32222222222 n_3222222222222222)) (App Coq.Init.Logic.iff (Prod Base_322222222222222231 (App A_32222222222 n_3222222222222222) (Prod n_3222222222222222311 nat (App A_32222222222 n_3222222222222222311))) (Prod Base_322222222222222231 (App A_32222222222 (App S n_3222222222222222)) (Prod n_3222222222222222311 nat (App A_32222222222 n_3222222222222222311)))) (Lambda H0_322222222222222232 (Prod out_322222222222222231 (App A_32222222222 n_3222222222222222) (App A_32222222222 (App S n_3222222222222222))) (Lambda H1_3222222222222222322 (Prod out_3222222222222222321 (App A_32222222222 (App S n_3222222222222222)) (App A_32222222222 n_3222222222222222)) (App conj (Prod out_32222222222222223221 (Prod Base_32222222222222223221 (App A_32222222222 n_3222222222222222) (Prod n_322222222222222232211 nat (App A_32222222222 n_322222222222222232211))) (Prod Base_322222222222222232211 (App A_32222222222 (App S n_3222222222222222)) (Prod n_3222222222222222322111 nat (App A_32222222222 n_3222222222222222322111)))) (Prod out_32222222222222223221 (Prod Base_32222222222222223221 (App A_32222222222 (App S n_3222222222222222)) (Prod n_322222222222222232211 nat (App A_32222222222 n_322222222222222232211))) (Prod Base_322222222222222232211 (App A_32222222222 n_3222222222222222) (Prod n_3222222222222222322111 nat (App A_32222222222 n_3222222222222222322111)))) (Lambda H_32222222222222223222 (Prod Base_32222222222222223221 (App A_32222222222 n_3222222222222222) (Prod n_322222222222222232211 nat (App A_32222222222 n_322222222222222232211))) (Lambda Base_322222222222222232222 (App A_32222222222 (App S n_3222222222222222)) (LetIn H2_3222222222222222322223 (App H1_3222222222222222322 Base_322222222222222232222) (App A_32222222222 n_3222222222222222) (LetIn H1_32222222222222223222233 (App H0_322222222222222232 H2_3222222222222222322223) (App A_32222222222 (App S n_3222222222222222)) (LetIn H0_322222222222222232222333 (App H_32222222222222223222 H2_3222222222222222322223) (Prod n_322222222222222232222331 nat (App A_32222222222 n_322222222222222232222331)) H0_322222222222222232222333))))) (Lambda H_32222222222222223222 (Prod Base_32222222222222223221 (App A_32222222222 (App S n_3222222222222222)) (Prod n_322222222222222232211 nat (App A_32222222222 n_322222222222222232211))) (Lambda Base_322222222222222232222 (App A_32222222222 n_3222222222222222) (LetIn H2_3222222222222222322223 (App H0_322222222222222232 Base_322222222222222232222) (App A_32222222222 (App S n_3222222222222222)) (LetIn H0_32222222222222223222233 (App H1_3222222222222222322 H2_3222222222222222322223) (App A_32222222222 n_3222222222222222) (LetIn H1_322222222222222232222333 (App H_32222222222222223222 H2_3222222222222222322223) (Prod n_322222222222222232222331 nat (App A_32222222222 n_322222222222222232222331)) H1_322222222222222232222333)))))))) H_32222222222222223))) z_3222222222222) REVERTcast (Prod Base_3222222222222221 (App A_32222222222 z_3222222222222) (Prod n_32222222222222211 nat (App A_32222222222 n_32222222222222211)))) Base_32222222222222))))))) (Definition Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (LetIn U_32222222222223 (Sort Type) (Sort Type) (Lambda A_322222222222232 U_32222222222223 (Lambda R_3222222222222322 (App Coq.Relations.Relation_Definitions.relation A_322222222222232) (Lambda H_32222222222223222 (App Coq.Classes.RelationClasses.Transitive A_322222222222232 R_3222222222222322) (App (Lambda R_322222222222232222 (App Coq.Relations.Relation_Definitions.relation A_322222222222232) (Lambda H_3222222222222322222 (App Coq.Classes.RelationClasses.Transitive A_322222222222232 R_322222222222232222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1 A_322222222222232 R_322222222222232222 H_3222222222222322222))) R_3222222222222322 H_32222222222223222)))))) (Definition Coq.Classes.RelationClasses.iff_Transitive Coq.Init.Logic.iff_trans) (Definition Coq.Classes.Morphisms.Reflexive_partial_app_morphism (LetIn U_32222222222223 (Sort Type) (Sort Type) (Lambda A_322222222222232 U_32222222222223 (Lambda B_3222222222222322 U_32222222222223 (Lambda R_32222222222223222 (App Coq.Relations.Relation_Definitions.relation A_322222222222232) (Lambda R'_322222222222232222 (App Coq.Relations.Relation_Definitions.relation B_3222222222222322) (Lambda m_3222222222222322222 (Prod out_3222222222222322221 A_322222222222232 B_3222222222222322) (Lambda H_32222222222223222222 (App Coq.Classes.Morphisms.Proper (Prod out_32222222222223222221 A_322222222222232 B_3222222222222322) (App Coq.Classes.Morphisms.respectful A_322222222222232 B_3222222222222322 R_32222222222223222 R'_322222222222232222) m_3222222222222322222) (Lambda x_322222222222232222222 A_322222222222232 (Lambda H0_3222222222222322222222 (App Coq.Classes.Morphisms.ProperProxy A_322222222222232 R_32222222222223222 x_322222222222232222222) (Cast (Cast (Cast (Cast (App H_32222222222223222222 x_322222222222232222222 x_322222222222232222222 H0_3222222222222322222222) REVERTcast (App R'_322222222222232222 (App m_3222222222222322222 x_322222222222232222222) (App m_3222222222222322222 x_322222222222232222222))) REVERTcast (App R'_322222222222232222 (App m_3222222222222322222 x_322222222222232222222) (App m_3222222222222322222 x_322222222222232222222))) REVERTcast (App Coq.Classes.Morphisms.Proper B_3222222222222322 R'_322222222222232222 (App m_3222222222222322222 x_322222222222232222222))) REVERTcast (App Coq.Classes.Morphisms.Proper B_3222222222222322 R'_322222222222232222 (App m_3222222222222322222 x_322222222222232222222))))))))))))) (Definition Coq.Classes.Morphisms.respectful (LetIn U_32222222222223 (Sort Type) (Sort Type) (Lambda A_322222222222232 U_32222222222223 (Lambda B_3222222222222322 U_32222222222223 (Lambda R_32222222222223222 (App Coq.Relations.Relation_Definitions.relation A_322222222222232) (Lambda R'_322222222222232222 (App Coq.Relations.Relation_Definitions.relation B_3222222222222322) (Lambda f_3222222222222322222 (Prod x_3222222222222322221 A_322222222222232 B_3222222222222322) (Lambda g_32222222222223222222 (Prod x_32222222222223222221 A_322222222222232 B_3222222222222322) (Prod x_322222222222232222221 A_322222222222232 (Prod y_3222222222222322222211 A_322222222222232 (Prod out_32222222222223222222111 (App R_32222222222223222 x_322222222222232222221 y_3222222222222322222211) (App R'_322222222222232222 (App f_3222222222222322222 x_322222222222232222221) (App g_32222222222223222222 y_3222222222222322222211))))))))))))) (Definition Coq.Program.Basics.impl (Lambda A_32222222222222 (Sort Prop) (Lambda B_322222222222222 (Sort Prop) (Prod out_3222222222222221 A_32222222222222 B_322222222222222)))) (Definition Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism_obligation_1) (Definition Coq.Classes.Morphisms.reflexive_proper_proxy (LetIn U_32222222222223 (Sort Type) (Sort Type) (Lambda A_322222222222232 U_32222222222223 (Lambda R_3222222222222322 (App Coq.Relations.Relation_Definitions.relation A_322222222222232) (Lambda H_32222222222223222 (App Coq.Classes.RelationClasses.Reflexive A_322222222222232 R_3222222222222322) (Lambda x_322222222222232222 A_322222222222232 (App (Lambda H0_3222222222222322222 (App R_3222222222222322 x_322222222222232222 x_322222222222232222) H0_3222222222222322222) (App H_32222222222223222 x_322222222222232222)))))))) (Definition Coq.Classes.RelationClasses.iff_Reflexive Coq.Init.Logic.iff_refl) (Definition Coq.Arith.PeanoNat.Nat.lt_wd Coq.Arith.PeanoNat.Nat.lt_wd_obligation_1) (Definition Coq.Classes.RelationClasses.Equivalence_Reflexive (Lambda A_32222222222222 (Sort Type) (Lambda R_322222222222222 (App Coq.Relations.Relation_Definitions.relation A_32222222222222) (Lambda Equivalence_3222222222222222 (App Equivalence A_32222222222222 R_322222222222222) (Case 2 (Lambda Equivalence_32222222222222222 (App Equivalence A_32222222222222 R_322222222222222) (App Coq.Classes.RelationClasses.Reflexive A_32222222222222 R_322222222222222)) (CaseMatch Equivalence_3222222222222222) (CaseBranches (Lambda Equivalence_Reflexive_32222222222222222 (App Coq.Classes.RelationClasses.Reflexive A_32222222222222 R_322222222222222) (Lambda Equivalence_Symmetric_322222222222222222 (App Coq.Classes.RelationClasses.Symmetric A_32222222222222 R_322222222222222) (Lambda Equivalence_Transitive_3222222222222222222 (App Coq.Classes.RelationClasses.Transitive A_32222222222222 R_322222222222222) Equivalence_Reflexive_32222222222222222))))))))) (Definition Coq.Arith.PeanoNat.Nat.eq_equiv (App Coq.Classes.RelationClasses.eq_equivalence nat)) (Definition Coq.Classes.Morphisms.eq_proper_proxy (LetIn U_32222222222223 (Sort Type) (Sort Type) (Lambda A_322222222222232 U_32222222222223 (Lambda x_3222222222222322 A_322222222222232 (App eq_refl A_322222222222232 x_3222222222222322))))) (Definition Coq.Classes.RelationClasses.reflexivity (Lambda A_32222222222222 (Sort Type) (Lambda R_322222222222222 (App Coq.Relations.Relation_Definitions.relation A_32222222222222) (Lambda Reflexive_3222222222222222 (App Coq.Classes.RelationClasses.Reflexive A_32222222222222 R_322222222222222) Reflexive_3222222222222222)))) (Definition Coq.Classes.Morphisms.Proper (LetIn U_32222222223 (Sort Type) (Sort Type) (Lambda A_322222222232 U_32222222223 (Lambda R_3222222222322 (App Coq.Relations.Relation_Definitions.relation A_322222222232) (Lambda m_32222222223222 A_322222222232 (App R_3222222222322 m_32222222223222 m_32222222223222)))))) (Definition Coq.Init.Logic.False_ind (Lambda P_3222222222222 (Sort Prop) (Lambda f_32222222222222 False (Case 0 (Lambda out_322222222222222 False P_3222222222222) (CaseMatch f_32222222222222) (CaseBranches))))) (Definition Coq.Arith.PeanoNat.Nat.lt_irrefl (Lambda x_3222222222222 nat (App (Lambda lemma_32222222222222 (App Coq.Init.Logic.iff (App eq comparison (App Coq.Init.Nat.compare x_3222222222222 x_3222222222222) Lt) (App Coq.Init.Peano.lt x_3222222222222 x_3222222222222)) (App Coq.Classes.Morphisms.subrelation_proper (Prod A_322222222222221 (Sort Prop) (Sort Prop)) (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) Coq.Init.Logic.not Coq.Classes.Morphisms_Prop.not_iff_morphism (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) tt (App Coq.Classes.Morphisms.subrelation_respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff (App Coq.Classes.Morphisms.subrelation_refl (Sort Prop) Coq.Init.Logic.iff) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation) (App Coq.Init.Peano.lt x_3222222222222 x_3222222222222) (App eq comparison (App Coq.Init.Nat.compare x_3222222222222 x_3222222222222) Lt) (App Coq.Classes.RelationClasses.symmetry (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Symmetric (App eq comparison (App Coq.Init.Nat.compare x_3222222222222 x_3222222222222) Lt) (App Coq.Init.Peano.lt x_3222222222222 x_3222222222222) lemma_32222222222222))) (App Coq.Arith.PeanoNat.Nat.compare_lt_iff x_3222222222222 x_3222222222222) (App Coq.Init.Logic.eq_ind_r comparison Eq (Lambda c_32222222222222 comparison (App Coq.Init.Logic.not (App eq comparison c_32222222222222 Lt))) (Cast (Lambda H_32222222222222 (App eq comparison Eq Lt) (LetIn H0_322222222222223 (Case 2 (Lambda y_322222222222222 comparison (Lambda out_3222222222222222 (App eq comparison Eq y_322222222222222) (Prod out_32222222222222221 (App eq comparison y_322222222222222 Lt) False))) (CaseMatch H_32222222222222) (CaseBranches (Lambda H0_322222222222222 (App eq comparison Eq Lt) (App (Lambda H0_3222222222222222 (App eq comparison Eq Lt) (LetIn H1_32222222222222223 (App Coq.Init.Logic.eq_ind comparison Eq (Lambda e_32222222222222222 comparison (Case 0 (Lambda c_322222222222222222 comparison (Sort Prop)) (CaseMatch e_32222222222222222) (CaseBranches True False False))) I Lt H0_3222222222222222) False (App Coq.Init.Logic.False_ind False H1_32222222222222223))) H0_322222222222222)))) (Prod out_322222222222221 (App eq comparison Lt Lt) False) (App H0_322222222222223 (App eq_refl comparison Lt)))) REVERTcast (App Coq.Init.Logic.not (App eq comparison Eq Lt))) (App Coq.Init.Nat.compare x_3222222222222 x_3222222222222) (App Coq.Arith.PeanoNat.Nat.compare_refl x_3222222222222))))) (Definition Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (LetIn U_3222222222223 (Sort Type) (Sort Type) (Lambda A_32222222222232 U_3222222222223 (Lambda R_322222222222322 (App Coq.Relations.Relation_Definitions.relation A_32222222222232) (Lambda H_3222222222223222 (App PER A_32222222222232 R_322222222222322) (Lambda x_32222222222232222 A_32222222222232 (App (Lambda R_322222222222322222 (App Coq.Relations.Relation_Definitions.relation A_32222222222232) (Lambda H_3222222222223222222 (App PER A_32222222222232 R_322222222222322222) (Lambda x_32222222222232222222 A_32222222222232 (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1 A_32222222222232 R_322222222222322222 H_3222222222223222222 x_32222222222232222222)))) R_322222222222322 H_3222222222223222 x_32222222222232222))))))) (Definition Coq.Classes.RelationClasses.Equivalence_PER (Lambda A_3222222222222 (Sort Type) (Lambda R_32222222222222 (App Coq.Relations.Relation_Definitions.relation A_3222222222222) (Lambda E_322222222222222 (App Equivalence A_3222222222222 R_32222222222222) (App Build_PER A_3222222222222 R_32222222222222 (App Coq.Classes.RelationClasses.Equivalence_Symmetric A_3222222222222 R_32222222222222 E_322222222222222) (App Coq.Classes.RelationClasses.Equivalence_Transitive A_3222222222222 R_32222222222222 E_322222222222222)))))) (Definition Coq.Classes.RelationClasses.iff_equivalence (App Build_Equivalence (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive Coq.Classes.RelationClasses.iff_Symmetric Coq.Classes.RelationClasses.iff_Transitive)) (Definition Coq.Arith.PeanoNat.Nat.lt_le_incl (Lambda n_322222222222222 nat (Lambda m_3222222222222222 nat (Lambda H_32222222222222222 (App Coq.Init.Peano.lt n_322222222222222 m_3222222222222222) (LetIn H0_322222222222222223 (Lambda n_322222222222222222 nat (Lambda m_3222222222222222222 nat (Case 2 (Lambda out_32222222222222222222 (App and (Prod out_32222222222222222221 (App le n_322222222222222222 m_3222222222222222222) (App or (App Coq.Init.Peano.lt n_322222222222222222 m_3222222222222222222) (App eq nat n_322222222222222222 m_3222222222222222222))) (Prod out_32222222222222222221 (App or (App Coq.Init.Peano.lt n_322222222222222222 m_3222222222222222222) (App eq nat n_322222222222222222 m_3222222222222222222)) (App le n_322222222222222222 m_3222222222222222222))) (Prod out_322222222222222222221 (App or (App Coq.Init.Peano.lt n_322222222222222222 m_3222222222222222222) (App eq nat n_322222222222222222 m_3222222222222222222)) (App le n_322222222222222222 m_3222222222222222222))) (CaseMatch (App Coq.Arith.PeanoNat.Nat.lt_eq_cases n_322222222222222222 m_3222222222222222222)) (CaseBranches (Lambda out_32222222222222222222 (Prod out_32222222222222222221 (App le n_322222222222222222 m_3222222222222222222) (App or (App Coq.Init.Peano.lt n_322222222222222222 m_3222222222222222222) (App eq nat n_322222222222222222 m_3222222222222222222))) (Lambda out_322222222222222222222 (Prod out_322222222222222222221 (App or (App Coq.Init.Peano.lt n_322222222222222222 m_3222222222222222222) (App eq nat n_322222222222222222 m_3222222222222222222)) (App le n_322222222222222222 m_3222222222222222222)) out_322222222222222222222)))))) (Prod n_322222222222222221 nat (Prod m_3222222222222222211 nat (Prod out_32222222222222222111 (App or (App Coq.Init.Peano.lt n_322222222222222221 m_3222222222222222211) (App eq nat n_322222222222222221 m_3222222222222222211)) (App le n_322222222222222221 m_3222222222222222211)))) (App H0_322222222222222223 n_322222222222222 m_3222222222222222 (App or_introl (App Coq.Init.Peano.lt n_322222222222222 m_3222222222222222) (App eq nat n_322222222222222 m_3222222222222222) H_32222222222222222))))))) (Definition Coq.Classes.Morphisms.iff_impl_subrelation (Cast (Lambda x_3222222222222222 (Sort Prop) (Lambda y_32222222222222222 (Sort Prop) (Lambda H_322222222222222222 (App Coq.Init.Logic.iff x_3222222222222222 y_32222222222222222) (Cast (Lambda H0_3222222222222222222 x_3222222222222222 (App Coq.Init.Logic.and_ind (Prod out_32222222222222222221 x_3222222222222222 y_32222222222222222) (Prod out_32222222222222222221 y_32222222222222222 x_3222222222222222) y_32222222222222222 (Lambda H_32222222222222222222 (Prod out_32222222222222222221 x_3222222222222222 y_32222222222222222) (Lambda H1_322222222222222222222 (Prod out_322222222222222222221 y_32222222222222222 x_3222222222222222) (App (Lambda H_3222222222222222222222 y_32222222222222222 H_3222222222222222222222) (App H_32222222222222222222 H0_3222222222222222222)))) H_322222222222222222)) REVERTcast (App Coq.Program.Basics.impl x_3222222222222222 y_32222222222222222))))) REVERTcast (App Coq.Classes.RelationClasses.subrelation (Sort Prop) Coq.Init.Logic.iff Coq.Program.Basics.impl))) (Definition Coq.Arith.PeanoNat.Nat.lt_eq_cases (Lambda n_322222222222222 nat (Lambda m_3222222222222222 nat (App (Lambda lemma_32222222222222222 (App Coq.Init.Logic.iff (App eq comparison (App Coq.Init.Nat.compare n_322222222222222 m_3222222222222222) Lt) (App Coq.Init.Peano.lt n_322222222222222 m_3222222222222222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App le n_322222222222222 m_3222222222222222) (App or (App Coq.Init.Peano.lt n_322222222222222 m_3222222222222222) (App eq nat n_322222222222222 m_3222222222222222)) (App or (App eq comparison (App Coq.Init.Nat.compare n_322222222222222 m_3222222222222222) Lt) (App eq nat n_322222222222222 m_3222222222222222)) (App Coq.Classes.Morphisms_Prop.or_iff_morphism (App Coq.Init.Peano.lt n_322222222222222 m_3222222222222222) (App eq comparison (App Coq.Init.Nat.compare n_322222222222222 m_3222222222222222) Lt) (App Coq.Classes.RelationClasses.symmetry (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Symmetric (App eq comparison (App Coq.Init.Nat.compare n_322222222222222 m_3222222222222222) Lt) (App Coq.Init.Peano.lt n_322222222222222 m_3222222222222222) lemma_32222222222222222) (App eq nat n_322222222222222 m_3222222222222222) (App eq nat n_322222222222222 m_3222222222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq nat n_322222222222222 m_3222222222222222))))) (App Coq.Arith.PeanoNat.Nat.compare_lt_iff n_322222222222222 m_3222222222222222) (App (Lambda lemma_32222222222222222 (App Coq.Init.Logic.iff (App Coq.Init.Logic.not (App eq comparison (App Coq.Init.Nat.compare n_322222222222222 m_3222222222222222) Gt)) (App le n_322222222222222 m_3222222222222222)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App le n_322222222222222 m_3222222222222222) (App Coq.Init.Logic.not (App eq comparison (App Coq.Init.Nat.compare n_322222222222222 m_3222222222222222) Gt)) (App Coq.Classes.RelationClasses.symmetry (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Symmetric (App Coq.Init.Logic.not (App eq comparison (App Coq.Init.Nat.compare n_322222222222222 m_3222222222222222) Gt)) (App le n_322222222222222 m_3222222222222222) lemma_32222222222222222) (App or (App eq comparison (App Coq.Init.Nat.compare n_322222222222222 m_3222222222222222) Lt) (App eq nat n_322222222222222 m_3222222222222222)) (App or (App eq comparison (App Coq.Init.Nat.compare n_322222222222222 m_3222222222222222) Lt) (App eq nat n_322222222222222 m_3222222222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App or (App eq comparison (App Coq.Init.Nat.compare n_322222222222222 m_3222222222222222) Lt) (App eq nat n_322222222222222 m_3222222222222222))))) (App Coq.Arith.PeanoNat.Nat.compare_le_iff n_322222222222222 m_3222222222222222) (App (Lambda lemma_32222222222222222 (App Coq.Init.Logic.iff (App eq comparison (App Coq.Init.Nat.compare n_322222222222222 m_3222222222222222) Eq) (App eq nat n_322222222222222 m_3222222222222222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Logic.not (App eq comparison (App Coq.Init.Nat.compare n_322222222222222 m_3222222222222222) Gt)) (App or (App eq comparison (App Coq.Init.Nat.compare n_322222222222222 m_3222222222222222) Lt) (App eq nat n_322222222222222 m_3222222222222222)) (App or (App eq comparison (App Coq.Init.Nat.compare n_322222222222222 m_3222222222222222) Lt) (App eq comparison (App Coq.Init.Nat.compare n_322222222222222 m_3222222222222222) Eq)) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism (Sort Prop) (Prod B_322222222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) or Coq.Classes.Morphisms_Prop.or_iff_morphism (App eq comparison (App Coq.Init.Nat.compare n_322222222222222 m_3222222222222222) Lt) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq comparison (App Coq.Init.Nat.compare n_322222222222222 m_3222222222222222) Lt)) (App eq nat n_322222222222222 m_3222222222222222) (App eq comparison (App Coq.Init.Nat.compare n_322222222222222 m_3222222222222222) Eq) (App Coq.Classes.RelationClasses.symmetry (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Symmetric (App eq comparison (App Coq.Init.Nat.compare n_322222222222222 m_3222222222222222) Eq) (App eq nat n_322222222222222 m_3222222222222222) lemma_32222222222222222)))) (App Coq.Arith.PeanoNat.Nat.compare_eq_iff n_322222222222222 m_3222222222222222) (LetIn c_32222222222222223 (App Coq.Init.Nat.compare n_322222222222222 m_3222222222222222) comparison (Case 0 (Lambda c_322222222222222232 comparison (App Coq.Init.Logic.iff (App Coq.Init.Logic.not (App eq comparison c_322222222222222232 Gt)) (App or (App eq comparison c_322222222222222232 Lt) (App eq comparison c_322222222222222232 Eq)))) (CaseMatch c_32222222222222223) (CaseBranches (App conj (Prod out_322222222222222231 (App Coq.Init.Logic.not (App eq comparison Eq Gt)) (App or (App eq comparison Eq Lt) (App eq comparison Eq Eq))) (Prod out_322222222222222231 (App or (App eq comparison Eq Lt) (App eq comparison Eq Eq)) (App Coq.Init.Logic.not (App eq comparison Eq Gt))) (Lambda H_322222222222222232 (App Coq.Init.Logic.not (App eq comparison Eq Gt)) (App or_intror (App eq comparison Eq Lt) (App eq comparison Eq Eq) (App eq_refl comparison Eq))) (Lambda H_322222222222222232 (App or (App eq comparison Eq Lt) (App eq comparison Eq Eq)) (Cast (Lambda H0_3222222222222222322 (App eq comparison Eq Gt) (App Coq.Init.Logic.or_ind (App eq comparison Eq Lt) (App eq comparison Eq Eq) False (Lambda H1_32222222222222223222 (App eq comparison Eq Lt) (LetIn H_322222222222222232223 (Case 2 (Lambda y_322222222222222232222 comparison (Lambda out_3222222222222222322222 (App eq comparison Eq y_322222222222222232222) (Prod out_32222222222222223222221 (App eq comparison y_322222222222222232222 Lt) False))) (CaseMatch H1_32222222222222223222) (CaseBranches (Lambda H_322222222222222232222 (App eq comparison Eq Lt) (App (Lambda H_3222222222222222322222 (App eq comparison Eq Lt) (LetIn H2_32222222222222223222223 (App Coq.Init.Logic.eq_ind comparison Eq (Lambda e_32222222222222223222222 comparison (Case 0 (Lambda c_322222222222222232222222 comparison (Sort Prop)) (CaseMatch e_32222222222222223222222) (CaseBranches True False False))) I Lt H_3222222222222222322222) False (App Coq.Init.Logic.False_ind False H2_32222222222222223222223))) H_322222222222222232222)))) (Prod out_322222222222222232221 (App eq comparison Lt Lt) False) (App H_322222222222222232223 (App eq_refl comparison Lt)))) (Lambda H1_32222222222222223222 (App eq comparison Eq Eq) (LetIn H_322222222222222232223 (Case 2 (Lambda y_322222222222222232222 comparison (Lambda out_3222222222222222322222 (App eq comparison Eq y_322222222222222232222) (Prod out_32222222222222223222221 (App eq comparison y_322222222222222232222 Gt) False))) (CaseMatch H0_3222222222222222322) (CaseBranches (Lambda H_322222222222222232222 (App eq comparison Eq Gt) (App (Lambda H_3222222222222222322222 (App eq comparison Eq Gt) (LetIn H2_32222222222222223222223 (App Coq.Init.Logic.eq_ind comparison Eq (Lambda e_32222222222222223222222 comparison (Case 0 (Lambda c_322222222222222232222222 comparison (Sort Prop)) (CaseMatch e_32222222222222223222222) (CaseBranches True False False))) I Gt H_3222222222222222322222) False (App Coq.Init.Logic.False_ind False H2_32222222222222223222223))) H_322222222222222232222)))) (Prod out_322222222222222232221 (App eq comparison Gt Gt) False) (App H_322222222222222232223 (App eq_refl comparison Gt)))) H_322222222222222232)) REVERTcast (App Coq.Init.Logic.not (App eq comparison Eq Gt))))) (App conj (Prod out_322222222222222231 (App Coq.Init.Logic.not (App eq comparison Lt Gt)) (App or (App eq comparison Lt Lt) (App eq comparison Lt Eq))) (Prod out_322222222222222231 (App or (App eq comparison Lt Lt) (App eq comparison Lt Eq)) (App Coq.Init.Logic.not (App eq comparison Lt Gt))) (Lambda H_322222222222222232 (App Coq.Init.Logic.not (App eq comparison Lt Gt)) (App or_introl (App eq comparison Lt Lt) (App eq comparison Lt Eq) (App eq_refl comparison Lt))) (Lambda H_322222222222222232 (App or (App eq comparison Lt Lt) (App eq comparison Lt Eq)) (Cast (Lambda H0_3222222222222222322 (App eq comparison Lt Gt) (App Coq.Init.Logic.or_ind (App eq comparison Lt Lt) (App eq comparison Lt Eq) False (Lambda H1_32222222222222223222 (App eq comparison Lt Lt) (LetIn H_322222222222222232223 (Case 2 (Lambda y_322222222222222232222 comparison (Lambda out_3222222222222222322222 (App eq comparison Lt y_322222222222222232222) (Prod out_32222222222222223222221 (App eq comparison y_322222222222222232222 Gt) False))) (CaseMatch H0_3222222222222222322) (CaseBranches (Lambda H_322222222222222232222 (App eq comparison Lt Gt) (App (Lambda H_3222222222222222322222 (App eq comparison Lt Gt) (LetIn H2_32222222222222223222223 (App Coq.Init.Logic.eq_ind comparison Lt (Lambda e_32222222222222223222222 comparison (Case 0 (Lambda c_322222222222222232222222 comparison (Sort Prop)) (CaseMatch e_32222222222222223222222) (CaseBranches False True False))) I Gt H_3222222222222222322222) False (App Coq.Init.Logic.False_ind False H2_32222222222222223222223))) H_322222222222222232222)))) (Prod out_322222222222222232221 (App eq comparison Gt Gt) False) (App H_322222222222222232223 (App eq_refl comparison Gt)))) (Lambda H1_32222222222222223222 (App eq comparison Lt Eq) (LetIn H_322222222222222232223 (Case 2 (Lambda y_322222222222222232222 comparison (Lambda out_3222222222222222322222 (App eq comparison Lt y_322222222222222232222) (Prod out_32222222222222223222221 (App eq comparison y_322222222222222232222 Eq) False))) (CaseMatch H1_32222222222222223222) (CaseBranches (Lambda H_322222222222222232222 (App eq comparison Lt Eq) (App (Lambda H_3222222222222222322222 (App eq comparison Lt Eq) (LetIn H2_32222222222222223222223 (App Coq.Init.Logic.eq_ind comparison Lt (Lambda e_32222222222222223222222 comparison (Case 0 (Lambda c_322222222222222232222222 comparison (Sort Prop)) (CaseMatch e_32222222222222223222222) (CaseBranches False True False))) I Eq H_3222222222222222322222) False (App Coq.Init.Logic.False_ind False H2_32222222222222223222223))) H_322222222222222232222)))) (Prod out_322222222222222232221 (App eq comparison Eq Eq) False) (App H_322222222222222232223 (App eq_refl comparison Eq)))) H_322222222222222232)) REVERTcast (App Coq.Init.Logic.not (App eq comparison Lt Gt))))) (App conj (Prod out_322222222222222231 (App Coq.Init.Logic.not (App eq comparison Gt Gt)) (App or (App eq comparison Gt Lt) (App eq comparison Gt Eq))) (Prod out_322222222222222231 (App or (App eq comparison Gt Lt) (App eq comparison Gt Eq)) (App Coq.Init.Logic.not (App eq comparison Gt Gt))) (Lambda H_322222222222222232 (App Coq.Init.Logic.not (App eq comparison Gt Gt)) (LetIn H0_3222222222222222323 (LetIn H0_3222222222222222323 (App eq_refl comparison Gt) (App eq comparison Gt Gt) (App H_322222222222222232 H0_3222222222222222323)) False (App (Lambda H0_32222222222222223232 False (App Coq.Init.Logic.False_ind (App or (App eq comparison Gt Lt) (App eq comparison Gt Eq)) H0_32222222222222223232)) H0_3222222222222222323))) (Lambda H_322222222222222232 (App or (App eq comparison Gt Lt) (App eq comparison Gt Eq)) (Cast (Lambda H0_3222222222222222322 (App eq comparison Gt Gt) (App Coq.Init.Logic.or_ind (App eq comparison Gt Lt) (App eq comparison Gt Eq) False (Lambda H1_32222222222222223222 (App eq comparison Gt Lt) (LetIn H_322222222222222232223 (Case 2 (Lambda y_322222222222222232222 comparison (Lambda out_3222222222222222322222 (App eq comparison Gt y_322222222222222232222) (Prod out_32222222222222223222221 (App eq comparison y_322222222222222232222 Lt) False))) (CaseMatch H1_32222222222222223222) (CaseBranches (Lambda H_322222222222222232222 (App eq comparison Gt Lt) (App (Lambda H_3222222222222222322222 (App eq comparison Gt Lt) (LetIn H2_32222222222222223222223 (App Coq.Init.Logic.eq_ind comparison Gt (Lambda e_32222222222222223222222 comparison (Case 0 (Lambda c_322222222222222232222222 comparison (Sort Prop)) (CaseMatch e_32222222222222223222222) (CaseBranches False False True))) I Lt H_3222222222222222322222) False (App Coq.Init.Logic.False_ind False H2_32222222222222223222223))) H_322222222222222232222)))) (Prod out_322222222222222232221 (App eq comparison Lt Lt) False) (App H_322222222222222232223 (App eq_refl comparison Lt)))) (Lambda H1_32222222222222223222 (App eq comparison Gt Eq) (LetIn H_322222222222222232223 (Case 2 (Lambda y_322222222222222232222 comparison (Lambda out_3222222222222222322222 (App eq comparison Gt y_322222222222222232222) (Prod out_32222222222222223222221 (App eq comparison y_322222222222222232222 Eq) False))) (CaseMatch H1_32222222222222223222) (CaseBranches (Lambda H_322222222222222232222 (App eq comparison Gt Eq) (App (Lambda H_3222222222222222322222 (App eq comparison Gt Eq) (LetIn H2_32222222222222223222223 (App Coq.Init.Logic.eq_ind comparison Gt (Lambda e_32222222222222223222222 comparison (Case 0 (Lambda c_322222222222222232222222 comparison (Sort Prop)) (CaseMatch e_32222222222222223222222) (CaseBranches False False True))) I Eq H_3222222222222222322222) False (App Coq.Init.Logic.False_ind False H2_32222222222222223222223))) H_322222222222222232222)))) (Prod out_322222222222222232221 (App eq comparison Eq Eq) False) (App H_322222222222222232223 (App eq_refl comparison Eq)))) H_322222222222222232)) REVERTcast (App Coq.Init.Logic.not (App eq comparison Gt Gt)))))))))))))) (Definition Coq.Classes.Morphisms.subrelation_proper (LetIn U_32222222222222223 (Sort Type) (Sort Type) (Lambda A_322222222222222232 U_32222222222222223 (Lambda R'_3222222222222222322 (App Coq.Relations.Relation_Definitions.relation A_322222222222222232) (Lambda m_32222222222222223222 A_322222222222222232 (Lambda mor_322222222222222232222 (App Coq.Classes.Morphisms.Proper A_322222222222222232 R'_3222222222222222322 m_32222222222222223222) (Lambda R_3222222222222222322222 (App Coq.Relations.Relation_Definitions.relation A_322222222222222232) (Lambda unc_32222222222222223222222 (App Coq.Classes.Init.Unconvertible (App Coq.Relations.Relation_Definitions.relation A_322222222222222232) R_3222222222222222322222 R'_3222222222222222322) (Lambda sub_322222222222222232222222 (App Coq.Classes.RelationClasses.subrelation A_322222222222222232 R'_3222222222222222322 R_3222222222222222322222) (App sub_322222222222222232222222 m_32222222222222223222 m_32222222222222223222 mor_322222222222222232222)))))))))) (Definition Coq.Classes.Morphisms.subrelation_respectful (LetIn U_32222222222222223 (Sort Type) (Sort Type) (Lambda A_322222222222222232 U_32222222222222223 (Lambda B_3222222222222222322 U_32222222222222223 (Lambda RA'_32222222222222223222 (App Coq.Relations.Relation_Definitions.relation A_322222222222222232) (Lambda RA_322222222222222232222 (App Coq.Relations.Relation_Definitions.relation A_322222222222222232) (Lambda subl_3222222222222222322222 (App Coq.Classes.RelationClasses.subrelation A_322222222222222232 RA'_32222222222222223222 RA_322222222222222232222) (Lambda RB_32222222222222223222222 (App Coq.Relations.Relation_Definitions.relation B_3222222222222222322) (Lambda RB'_322222222222222232222222 (App Coq.Relations.Relation_Definitions.relation B_3222222222222222322) (Lambda subr_3222222222222222322222222 (App Coq.Classes.RelationClasses.subrelation B_3222222222222222322 RB_32222222222222223222222 RB'_322222222222222232222222) (Cast (Lambda x_32222222222222223222222222 (Prod out_32222222222222223222222221 A_322222222222222232 B_3222222222222222322) (Lambda y_322222222222222232222222222 (Prod out_322222222222222232222222221 A_322222222222222232 B_3222222222222222322) (Lambda H_3222222222222222322222222222 (App Coq.Classes.Morphisms.respectful A_322222222222222232 B_3222222222222222322 RA_322222222222222232222 RB_32222222222222223222222 x_32222222222222223222222222 y_322222222222222232222222222) (Cast (Lambda x0_32222222222222223222222222222 A_322222222222222232 (Lambda y0_322222222222222232222222222222 A_322222222222222232 (Lambda H0_3222222222222222322222222222222 (App RA'_32222222222222223222 x0_32222222222222223222222222222 y0_322222222222222232222222222222) (App (Lambda H1_32222222222222223222222222222222 (Prod y_32222222222222223222222222222221 B_3222222222222222322 (Prod out_322222222222222232222222222222211 (App RB_32222222222222223222222 (App x_32222222222222223222222222 x0_32222222222222223222222222222) y_32222222222222223222222222222221) (App RB'_322222222222222232222222 (App x_32222222222222223222222222 x0_32222222222222223222222222222) y_32222222222222223222222222222221))) (App (Lambda H2_322222222222222232222222222222222 (Prod y_322222222222222232222222222222221 A_322222222222222232 (Prod out_3222222222222222322222222222222211 (App RA_322222222222222232222 x0_32222222222222223222222222222 y_322222222222222232222222222222221) (App RB_32222222222222223222222 (App x_32222222222222223222222222 x0_32222222222222223222222222222) (App y_322222222222222232222222222 y_322222222222222232222222222222221)))) (App (Lambda H3_3222222222222222322222222222222222 (Prod out_3222222222222222322222222222222221 (App RB_32222222222222223222222 (App x_32222222222222223222222222 x0_32222222222222223222222222222) (App y_322222222222222232222222222 y0_322222222222222232222222222222)) (App RB'_322222222222222232222222 (App x_32222222222222223222222222 x0_32222222222222223222222222222) (App y_322222222222222232222222222 y0_322222222222222232222222222222))) (App subr_3222222222222222322222222 (App x_32222222222222223222222222 x0_32222222222222223222222222222) (App y_322222222222222232222222222 y0_322222222222222232222222222222) (App H_3222222222222222322222222222 x0_32222222222222223222222222222 y0_322222222222222232222222222222 (App subl_3222222222222222322222 x0_32222222222222223222222222222 y0_322222222222222232222222222222 H0_3222222222222222322222222222222)))) (App H1_32222222222222223222222222222222 (App y_322222222222222232222222222 y0_322222222222222232222222222222)))) (App H_3222222222222222322222222222 x0_32222222222222223222222222222))) (App subr_3222222222222222322222222 (App x_32222222222222223222222222 x0_32222222222222223222222222222)))))) REVERTcast (App Coq.Classes.Morphisms.respectful A_322222222222222232 B_3222222222222222322 RA'_32222222222222223222 RB'_322222222222222232222222 x_32222222222222223222222222 y_322222222222222232222222222))))) REVERTcast (App Coq.Classes.RelationClasses.subrelation (Prod out_32222222222222223222222221 A_322222222222222232 B_3222222222222222322) (App Coq.Classes.Morphisms.respectful A_322222222222222232 B_3222222222222222322 RA_322222222222222232222 RB_32222222222222223222222) (App Coq.Classes.Morphisms.respectful A_322222222222222232 B_3222222222222222322 RA'_32222222222222223222 RB'_322222222222222232222222))))))))))))) (Definition Coq.Classes.Morphisms.subrelation_refl (LetIn U_32222222222222223 (Sort Type) (Sort Type) (Lambda A_322222222222222232 U_32222222222222223 (Lambda R_3222222222222222322 (App Coq.Relations.Relation_Definitions.relation A_322222222222222232) (Cast (Lambda x_32222222222222223222 A_322222222222222232 (Lambda y_322222222222222232222 A_322222222222222232 (Lambda H_3222222222222222322222 (App R_3222222222222222322 x_32222222222222223222 y_322222222222222232222) H_3222222222222222322222))) REVERTcast (App Coq.Classes.RelationClasses.subrelation A_322222222222222232 R_3222222222222222322 R_3222222222222222322)))))) (Definition Coq.Arith.PeanoNat.Nat.lt_asymm (Lambda n_32222222222222322 nat (Lambda m_322222222222223222 nat (Cast (App Coq.Arith.PeanoNat.Nat.central_induction (Lambda t_3222222222222232222 nat (Prod out_32222222222222322221 (App Coq.Init.Peano.lt t_3222222222222232222 m_322222222222223222) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222223222 t_3222222222222232222)))) (Cast (Cast (Lambda x_3222222222222232222 nat (Lambda y_32222222222222322222 nat (Lambda H_322222222222223222222 (App eq nat x_3222222222222232222 y_32222222222222322222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (Prod out_3222222222222232222221 (App Coq.Init.Peano.lt x_3222222222222232222 m_322222222222223222) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222223222 x_3222222222222232222))) (Prod out_3222222222222232222221 (App Coq.Init.Peano.lt y_32222222222222322222 m_322222222222223222) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222223222 y_32222222222222322222))) (App Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism (App Coq.Init.Peano.lt x_3222222222222232222 m_322222222222223222) (App Coq.Init.Peano.lt y_32222222222222322222 m_322222222222223222) (App Coq.Arith.PeanoNat.Nat.lt_wd x_3222222222222232222 y_32222222222222322222 H_322222222222223222222 m_322222222222223222 m_322222222222223222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) m_322222222222223222)) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222223222 x_3222222222222232222)) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222223222 y_32222222222222322222)) (App Coq.Classes.Morphisms_Prop.not_iff_morphism (App Coq.Init.Peano.lt m_322222222222223222 x_3222222222222232222) (App Coq.Init.Peano.lt m_322222222222223222 y_32222222222222322222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_3222222222222232222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) Coq.Init.Peano.lt Coq.Arith.PeanoNat.Nat.lt_wd m_322222222222223222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) m_322222222222223222) x_3222222222222232222 y_32222222222222322222 H_322222222222223222222))) (Prod out_3222222222222232222221 (App Coq.Init.Peano.lt y_32222222222222322222 m_322222222222223222) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222223222 y_32222222222222322222))) (Prod out_3222222222222232222221 (App Coq.Init.Peano.lt y_32222222222222322222 m_322222222222223222) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222223222 y_32222222222222322222))) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (Prod out_3222222222222232222221 (App Coq.Init.Peano.lt y_32222222222222322222 m_322222222222223222) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222223222 y_32222222222222322222)))) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (Prod out_3222222222222232222221 (App Coq.Init.Peano.lt y_32222222222222322222 m_322222222222223222) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222223222 y_32222222222222322222)))))))) REVERTcast (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff (Lambda t_3222222222222232222 nat (Prod out_32222222222222322221 (App Coq.Init.Peano.lt t_3222222222222232222 m_322222222222223222) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222223222 t_3222222222222232222)))) (Lambda t_3222222222222232222 nat (Prod out_32222222222222322221 (App Coq.Init.Peano.lt t_3222222222222232222 m_322222222222223222) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222223222 t_3222222222222232222)))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_3222222222222232221 nat (Sort Prop)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (Lambda t_3222222222222232222 nat (Prod out_32222222222222322221 (App Coq.Init.Peano.lt t_3222222222222232222 m_322222222222223222) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222223222 t_3222222222222232222)))))) m_322222222222223222 (Lambda H_3222222222222232222 (App Coq.Init.Peano.lt m_322222222222223222 m_322222222222223222) (App Coq.Init.Logic.False_ind (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222223222 m_322222222222223222)) (App Coq.Arith.PeanoNat.Nat.lt_irrefl m_322222222222223222 H_3222222222222232222))) (Lambda n_3222222222222232222 nat (App conj (Prod out_32222222222222322221 (Prod out_32222222222222322221 (App Coq.Init.Peano.lt n_3222222222222232222 m_322222222222223222) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222223222 n_3222222222222232222))) (Prod out_322222222222223222211 (App Coq.Init.Peano.lt (App S n_3222222222222232222) m_322222222222223222) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222223222 (App S n_3222222222222232222))))) (Prod out_32222222222222322221 (Prod out_32222222222222322221 (App Coq.Init.Peano.lt (App S n_3222222222222232222) m_322222222222223222) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222223222 (App S n_3222222222222232222)))) (Prod out_322222222222223222211 (App Coq.Init.Peano.lt n_3222222222222232222 m_322222222222223222) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222223222 n_3222222222222232222)))) (Lambda H_32222222222222322222 (Prod out_32222222222222322221 (App Coq.Init.Peano.lt n_3222222222222232222 m_322222222222223222) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222223222 n_3222222222222232222))) (Lambda H1_322222222222223222222 (App Coq.Init.Peano.lt (App S n_3222222222222232222) m_322222222222223222) (Cast (Lambda H2_3222222222222232222222 (App Coq.Init.Peano.lt m_322222222222223222 (App S n_3222222222222232222)) (LetIn H0_32222222222222322222223 (Lambda n_32222222222222322222222 nat (Lambda m_322222222222223222222222 nat (Case 2 (Lambda out_3222222222222232222222222 (App and (Prod out_3222222222222232222222221 (App Coq.Init.Peano.lt n_32222222222222322222222 (App S m_322222222222223222222222)) (App le n_32222222222222322222222 m_322222222222223222222222)) (Prod out_3222222222222232222222221 (App le n_32222222222222322222222 m_322222222222223222222222) (App Coq.Init.Peano.lt n_32222222222222322222222 (App S m_322222222222223222222222)))) (Prod out_32222222222222322222222221 (App Coq.Init.Peano.lt n_32222222222222322222222 (App S m_322222222222223222222222)) (App le n_32222222222222322222222 m_322222222222223222222222))) (CaseMatch (App Coq.Arith.PeanoNat.Nat.lt_succ_r n_32222222222222322222222 m_322222222222223222222222)) (CaseBranches (Lambda out_3222222222222232222222222 (Prod out_3222222222222232222222221 (App Coq.Init.Peano.lt n_32222222222222322222222 (App S m_322222222222223222222222)) (App le n_32222222222222322222222 m_322222222222223222222222)) (Lambda out_32222222222222322222222222 (Prod out_32222222222222322222222221 (App le n_32222222222222322222222 m_322222222222223222222222) (App Coq.Init.Peano.lt n_32222222222222322222222 (App S m_322222222222223222222222))) out_3222222222222232222222222)))))) (Prod n_32222222222222322222221 nat (Prod m_322222222222223222222211 nat (Prod out_3222222222222232222222111 (App Coq.Init.Peano.lt n_32222222222222322222221 (App S m_322222222222223222222211)) (App le n_32222222222222322222221 m_322222222222223222222211)))) (LetIn H2_322222222222223222222233 (App H0_32222222222222322222223 m_322222222222223222 n_3222222222222232222 H2_3222222222222232222222) (App le m_322222222222223222 n_3222222222222232222) (Case 2 (Lambda out_3222222222222232222222332 (App or (App Coq.Init.Peano.lt m_322222222222223222 n_3222222222222232222) (App eq nat m_322222222222223222 n_3222222222222232222)) False) (CaseMatch (App (Lambda lemma_3222222222222232222222332 (App Coq.Init.Logic.iff (App le m_322222222222223222 n_3222222222222232222) (App or (App Coq.Init.Peano.lt m_322222222222223222 n_3222222222222232222) (App eq nat m_322222222222223222 n_3222222222222232222))) (App Coq.Classes.Morphisms.iff_impl_subrelation (App le m_322222222222223222 n_3222222222222232222) (App or (App Coq.Init.Peano.lt m_322222222222223222 n_3222222222222232222) (App eq nat m_322222222222223222 n_3222222222222232222)) lemma_3222222222222232222222332)) (App Coq.Arith.PeanoNat.Nat.lt_eq_cases m_322222222222223222 n_3222222222222232222) H2_322222222222223222222233)) (CaseBranches (Lambda H2_3222222222222232222222332 (App Coq.Init.Peano.lt m_322222222222223222 n_3222222222222232222) (App H_32222222222222322222 (LetIn H0_32222222222222322222223323 (Lambda n_32222222222222322222223322 nat (Lambda m_322222222222223222222233222 nat (Case 2 (Lambda out_3222222222222232222222332222 (App and (Prod out_3222222222222232222222332221 (App le (App S n_32222222222222322222223322) m_322222222222223222222233222) (App Coq.Init.Peano.lt n_32222222222222322222223322 m_322222222222223222222233222)) (Prod out_3222222222222232222222332221 (App Coq.Init.Peano.lt n_32222222222222322222223322 m_322222222222223222222233222) (App le (App S n_32222222222222322222223322) m_322222222222223222222233222))) (Prod out_32222222222222322222223322221 (App le (App S n_32222222222222322222223322) m_322222222222223222222233222) (App Coq.Init.Peano.lt n_32222222222222322222223322 m_322222222222223222222233222))) (CaseMatch (App Coq.Arith.PeanoNat.Nat.le_succ_l n_32222222222222322222223322 m_322222222222223222222233222)) (CaseBranches (Lambda out_3222222222222232222222332222 (Prod out_3222222222222232222222332221 (App le (App S n_32222222222222322222223322) m_322222222222223222222233222) (App Coq.Init.Peano.lt n_32222222222222322222223322 m_322222222222223222222233222)) (Lambda out_32222222222222322222223322222 (Prod out_32222222222222322222223322221 (App Coq.Init.Peano.lt n_32222222222222322222223322 m_322222222222223222222233222) (App le (App S n_32222222222222322222223322) m_322222222222223222222233222)) out_3222222222222232222222332222)))))) (Prod n_32222222222222322222223321 nat (Prod m_322222222222223222222233211 nat (Prod out_3222222222222232222222332111 (App le (App S n_32222222222222322222223321) m_322222222222223222222233211) (App Coq.Init.Peano.lt n_32222222222222322222223321 m_322222222222223222222233211)))) (App H0_32222222222222322222223323 n_3222222222222232222 m_322222222222223222 (App Coq.Arith.PeanoNat.Nat.lt_le_incl (App S n_3222222222222232222) m_322222222222223222 H1_322222222222223222222))) H2_3222222222222232222222332)) (Lambda H2_3222222222222232222222332 (App eq nat m_322222222222223222 n_3222222222222232222) (App Coq.Init.Logic.False_ind False (App Coq.Arith.PeanoNat.Nat.nlt_succ_diag_l n_3222222222222232222 (App (Lambda lemma_32222222222222322222223322 (App eq nat m_322222222222223222 n_3222222222222232222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_322222222222223222222233221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Program.Basics.impl) Coq.Init.Peano.lt (App Coq.Classes.Morphisms.subrelation_proper (Prod out_322222222222223222222233221 nat (Prod out_3222222222222232222222332211 nat (Sort Prop))) (App Coq.Classes.Morphisms.respectful nat (Prod out_322222222222223222222233221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff)) Coq.Init.Peano.lt Coq.Arith.PeanoNat.Nat.lt_wd (App Coq.Classes.Morphisms.respectful nat (Prod out_322222222222223222222233221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Program.Basics.impl)) tt (App Coq.Classes.Morphisms.subrelation_respectful nat (Prod out_322222222222223222222233221 nat (Sort Prop)) (App eq nat) (App eq nat) (App Coq.Classes.Morphisms.subrelation_refl nat (App eq nat)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Program.Basics.impl) (App Coq.Classes.Morphisms.subrelation_respectful nat (Sort Prop) (App eq nat) (App eq nat) (App Coq.Classes.Morphisms.subrelation_refl nat (App eq nat)) Coq.Init.Logic.iff Coq.Program.Basics.impl Coq.Classes.Morphisms.iff_impl_subrelation))) (App S n_3222222222222232222) (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App S n_3222222222222232222)) m_322222222222223222 n_3222222222222232222 lemma_32222222222222322222223322)) H2_3222222222222232222222332 H1_322222222222223222222))))))))) REVERTcast (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222223222 (App S n_3222222222222232222)))))) (Lambda H_32222222222222322222 (Prod out_32222222222222322221 (App Coq.Init.Peano.lt (App S n_3222222222222232222) m_322222222222223222) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222223222 (App S n_3222222222222232222)))) (Lambda H1_322222222222223222222 (App Coq.Init.Peano.lt n_3222222222222232222 m_322222222222223222) (Cast (Lambda H2_3222222222222232222222 (App Coq.Init.Peano.lt m_322222222222223222 n_3222222222222232222) (LetIn H0_32222222222222322222223 (Lambda n_32222222222222322222222 nat (Lambda m_322222222222223222222222 nat (Case 2 (Lambda out_3222222222222232222222222 (App and (Prod out_3222222222222232222222221 (App le (App S n_32222222222222322222222) m_322222222222223222222222) (App Coq.Init.Peano.lt n_32222222222222322222222 m_322222222222223222222222)) (Prod out_3222222222222232222222221 (App Coq.Init.Peano.lt n_32222222222222322222222 m_322222222222223222222222) (App le (App S n_32222222222222322222222) m_322222222222223222222222))) (Prod out_32222222222222322222222221 (App Coq.Init.Peano.lt n_32222222222222322222222 m_322222222222223222222222) (App le (App S n_32222222222222322222222) m_322222222222223222222222))) (CaseMatch (App Coq.Arith.PeanoNat.Nat.le_succ_l n_32222222222222322222222 m_322222222222223222222222)) (CaseBranches (Lambda out_3222222222222232222222222 (Prod out_3222222222222232222222221 (App le (App S n_32222222222222322222222) m_322222222222223222222222) (App Coq.Init.Peano.lt n_32222222222222322222222 m_322222222222223222222222)) (Lambda out_32222222222222322222222222 (Prod out_32222222222222322222222221 (App Coq.Init.Peano.lt n_32222222222222322222222 m_322222222222223222222222) (App le (App S n_32222222222222322222222) m_322222222222223222222222)) out_32222222222222322222222222)))))) (Prod n_32222222222222322222221 nat (Prod m_322222222222223222222211 nat (Prod out_3222222222222232222222111 (App Coq.Init.Peano.lt n_32222222222222322222221 m_322222222222223222222211) (App le (App S n_32222222222222322222221) m_322222222222223222222211)))) (LetIn H1_322222222222223222222233 (App H0_32222222222222322222223 n_3222222222222232222 m_322222222222223222 H1_322222222222223222222) (App le (App S n_3222222222222232222) m_322222222222223222) (Case 2 (Lambda out_3222222222222232222222332 (App or (App Coq.Init.Peano.lt (App S n_3222222222222232222) m_322222222222223222) (App eq nat (App S n_3222222222222232222) m_322222222222223222)) False) (CaseMatch (App (Lambda lemma_3222222222222232222222332 (App Coq.Init.Logic.iff (App le (App S n_3222222222222232222) m_322222222222223222) (App or (App Coq.Init.Peano.lt (App S n_3222222222222232222) m_322222222222223222) (App eq nat (App S n_3222222222222232222) m_322222222222223222))) (App Coq.Classes.Morphisms.iff_impl_subrelation (App le (App S n_3222222222222232222) m_322222222222223222) (App or (App Coq.Init.Peano.lt (App S n_3222222222222232222) m_322222222222223222) (App eq nat (App S n_3222222222222232222) m_322222222222223222)) lemma_3222222222222232222222332)) (App Coq.Arith.PeanoNat.Nat.lt_eq_cases (App S n_3222222222222232222) m_322222222222223222) H1_322222222222223222222233)) (CaseBranches (Lambda H1_3222222222222232222222332 (App Coq.Init.Peano.lt (App S n_3222222222222232222) m_322222222222223222) (App H_32222222222222322222 H1_3222222222222232222222332 (App (Lambda lemma_32222222222222322222223322 (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt m_322222222222223222 (App S n_3222222222222232222)) (App le m_322222222222223222 n_3222222222222232222)) (App Coq.Classes.Morphisms.iff_flip_impl_subrelation (App Coq.Init.Peano.lt m_322222222222223222 (App S n_3222222222222232222)) (App le m_322222222222223222 n_3222222222222232222) lemma_32222222222222322222223322)) (App Coq.Arith.PeanoNat.Nat.lt_succ_r m_322222222222223222 n_3222222222222232222) (App Coq.Arith.PeanoNat.Nat.lt_le_incl m_322222222222223222 n_3222222222222232222 H2_3222222222222232222222)))) (Lambda H1_3222222222222232222222332 (App eq nat (App S n_3222222222222232222) m_322222222222223222) (App Coq.Init.Logic.False_ind False (App Coq.Arith.PeanoNat.Nat.nlt_succ_diag_l n_3222222222222232222 (App (Lambda lemma_32222222222222322222223322 (App eq nat (App S n_3222222222222232222) m_322222222222223222) (App Coq.Classes.Morphisms.subrelation_proper (Prod out_322222222222223222222233221 nat (Prod out_3222222222222232222222332211 nat (Sort Prop))) (App Coq.Classes.Morphisms.respectful nat (Prod out_322222222222223222222233221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff)) Coq.Init.Peano.lt Coq.Arith.PeanoNat.Nat.lt_wd (App Coq.Classes.Morphisms.respectful nat (Prod out_322222222222223222222233221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Program.Basics.impl)) tt (App Coq.Classes.Morphisms.subrelation_respectful nat (Prod out_322222222222223222222233221 nat (Sort Prop)) (App eq nat) (App eq nat) (App Coq.Classes.Morphisms.subrelation_refl nat (App eq nat)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Program.Basics.impl) (App Coq.Classes.Morphisms.subrelation_respectful nat (Sort Prop) (App eq nat) (App eq nat) (App Coq.Classes.Morphisms.subrelation_refl nat (App eq nat)) Coq.Init.Logic.iff Coq.Program.Basics.impl Coq.Classes.Morphisms.iff_impl_subrelation)) m_322222222222223222 (App S n_3222222222222232222) (App Coq.Classes.RelationClasses.symmetry nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Symmetric nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App S n_3222222222222232222) m_322222222222223222 lemma_32222222222222322222223322) n_3222222222222232222 n_3222222222222232222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) n_3222222222222232222))) H1_3222222222222232222222332 H2_3222222222222232222222))))))))) REVERTcast (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222223222 n_3222222222222232222))))))) n_32222222222222322) REVERTcast (Prod out_3222222222222232221 (App Coq.Init.Peano.lt n_32222222222222322 m_322222222222223222) (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222223222 n_32222222222222322))))))) (Definition Coq.Classes.RelationClasses.symmetry (Lambda A_322222222222223222 (Sort Type) (Lambda R_3222222222222232222 (App Coq.Relations.Relation_Definitions.relation A_322222222222223222) (Lambda Symmetric_32222222222222322222 (App Coq.Classes.RelationClasses.Symmetric A_322222222222223222 R_3222222222222232222) Symmetric_32222222222222322222)))) (Definition Coq.Classes.RelationClasses.Equivalence_Symmetric (Lambda A_322222222222223222 (Sort Type) (Lambda R_3222222222222232222 (App Coq.Relations.Relation_Definitions.relation A_322222222222223222) (Lambda Equivalence_32222222222222322222 (App Equivalence A_322222222222223222 R_3222222222222232222) (Case 2 (Lambda Equivalence_322222222222223222222 (App Equivalence A_322222222222223222 R_3222222222222232222) (App Coq.Classes.RelationClasses.Symmetric A_322222222222223222 R_3222222222222232222)) (CaseMatch Equivalence_32222222222222322222) (CaseBranches (Lambda Equivalence_Reflexive_322222222222223222222 (App Coq.Classes.RelationClasses.Reflexive A_322222222222223222 R_3222222222222232222) (Lambda Equivalence_Symmetric_3222222222222232222222 (App Coq.Classes.RelationClasses.Symmetric A_322222222222223222 R_3222222222222232222) (Lambda Equivalence_Transitive_32222222222222322222222 (App Coq.Classes.RelationClasses.Transitive A_322222222222223222 R_3222222222222232222) Equivalence_Symmetric_3222222222222232222222))))))))) (Definition Coq.Arith.PeanoNat.Nat.lt_trans (Lambda n_32222222 nat (Lambda m_322222222 nat (Lambda p_3222222222 nat (Cast (App Coq.Arith.PeanoNat.Nat.central_induction (Lambda t_32222222222 nat (Prod out_322222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_3222222222211 (App Coq.Init.Peano.lt m_322222222 t_32222222222) (App Coq.Init.Peano.lt n_32222222 t_32222222222)))) (Cast (Cast (Lambda x_32222222222 nat (Lambda y_322222222222 nat (Lambda H_3222222222222 (App eq nat x_32222222222 y_322222222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (Prod out_32222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_322222222222211 (App Coq.Init.Peano.lt m_322222222 x_32222222222) (App Coq.Init.Peano.lt n_32222222 x_32222222222))) (Prod out_32222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_322222222222211 (App Coq.Init.Peano.lt m_322222222 y_322222222222) (App Coq.Init.Peano.lt n_32222222 y_322222222222))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism (Sort Prop) (Prod B_32222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) Coq.Program.Basics.impl Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism (App Coq.Init.Peano.lt n_32222222 m_322222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Peano.lt n_32222222 m_322222222)) (Prod out_32222222222221 (App Coq.Init.Peano.lt m_322222222 x_32222222222) (App Coq.Init.Peano.lt n_32222222 x_32222222222)) (Prod out_32222222222221 (App Coq.Init.Peano.lt m_322222222 y_322222222222) (App Coq.Init.Peano.lt n_32222222 y_322222222222)) (App Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism (App Coq.Init.Peano.lt m_322222222 x_32222222222) (App Coq.Init.Peano.lt m_322222222 y_322222222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_32222222222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) Coq.Init.Peano.lt Coq.Arith.PeanoNat.Nat.lt_wd m_322222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) m_322222222) x_32222222222 y_322222222222 H_3222222222222) (App Coq.Init.Peano.lt n_32222222 x_32222222222) (App Coq.Init.Peano.lt n_32222222 y_322222222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_32222222222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) Coq.Init.Peano.lt Coq.Arith.PeanoNat.Nat.lt_wd n_32222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) n_32222222) x_32222222222 y_322222222222 H_3222222222222))) (Prod out_32222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_322222222222211 (App Coq.Init.Peano.lt m_322222222 y_322222222222) (App Coq.Init.Peano.lt n_32222222 y_322222222222))) (Prod out_32222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_322222222222211 (App Coq.Init.Peano.lt m_322222222 y_322222222222) (App Coq.Init.Peano.lt n_32222222 y_322222222222))) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (Prod out_32222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_322222222222211 (App Coq.Init.Peano.lt m_322222222 y_322222222222) (App Coq.Init.Peano.lt n_32222222 y_322222222222)))) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (Prod out_32222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_322222222222211 (App Coq.Init.Peano.lt m_322222222 y_322222222222) (App Coq.Init.Peano.lt n_32222222 y_322222222222)))))))) REVERTcast (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff (Lambda t_32222222222 nat (Prod out_322222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_3222222222211 (App Coq.Init.Peano.lt m_322222222 t_32222222222) (App Coq.Init.Peano.lt n_32222222 t_32222222222)))) (Lambda t_32222222222 nat (Prod out_322222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_3222222222211 (App Coq.Init.Peano.lt m_322222222 t_32222222222) (App Coq.Init.Peano.lt n_32222222 t_32222222222)))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_32222222221 nat (Sort Prop)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (Lambda t_32222222222 nat (Prod out_322222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_3222222222211 (App Coq.Init.Peano.lt m_322222222 t_32222222222) (App Coq.Init.Peano.lt n_32222222 t_32222222222)))))) m_322222222 (Lambda _tmp_32222222222 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Lambda H_322222222222 (App Coq.Init.Peano.lt m_322222222 m_322222222) (App Coq.Init.Logic.False_ind (App Coq.Init.Peano.lt n_32222222 m_322222222) (App Coq.Arith.PeanoNat.Nat.lt_irrefl m_322222222 H_322222222222)))) (Lambda p_32222222222 nat (App (Lambda lemma_322222222222 (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt m_322222222 (App S p_32222222222)) (App le m_322222222 p_32222222222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (Prod out_3222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_32222222222211 (App Coq.Init.Peano.lt m_322222222 p_32222222222) (App Coq.Init.Peano.lt n_32222222 p_32222222222))) (Prod out_3222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_32222222222211 (App Coq.Init.Peano.lt m_322222222 (App S p_32222222222)) (App Coq.Init.Peano.lt n_32222222 (App S p_32222222222)))) (Prod out_3222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_32222222222211 (App le m_322222222 p_32222222222) (App Coq.Init.Peano.lt n_32222222 (App S p_32222222222)))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism (Sort Prop) (Prod B_3222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) Coq.Program.Basics.impl Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism (App Coq.Init.Peano.lt n_32222222 m_322222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Peano.lt n_32222222 m_322222222)) (Prod out_3222222222221 (App Coq.Init.Peano.lt m_322222222 (App S p_32222222222)) (App Coq.Init.Peano.lt n_32222222 (App S p_32222222222))) (Prod out_3222222222221 (App le m_322222222 p_32222222222) (App Coq.Init.Peano.lt n_32222222 (App S p_32222222222))) (App Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism (App Coq.Init.Peano.lt m_322222222 (App S p_32222222222)) (App le m_322222222 p_32222222222) lemma_322222222222 (App Coq.Init.Peano.lt n_32222222 (App S p_32222222222)) (App Coq.Init.Peano.lt n_32222222 (App S p_32222222222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Peano.lt n_32222222 (App S p_32222222222))))))) (App Coq.Arith.PeanoNat.Nat.lt_succ_r m_322222222 p_32222222222) (App (Lambda lemma_322222222222 (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222 (App S p_32222222222)) (App le n_32222222 p_32222222222)) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (Prod out_3222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_32222222222211 (App Coq.Init.Peano.lt m_322222222 p_32222222222) (App Coq.Init.Peano.lt n_32222222 p_32222222222))) (Prod out_3222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_32222222222211 (App le m_322222222 p_32222222222) (App Coq.Init.Peano.lt n_32222222 (App S p_32222222222)))) (Prod out_3222222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_32222222222211 (App le m_322222222 p_32222222222) (App le n_32222222 p_32222222222))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism (Sort Prop) (Prod B_3222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) Coq.Program.Basics.impl Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism (App Coq.Init.Peano.lt n_32222222 m_322222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Peano.lt n_32222222 m_322222222)) (Prod out_3222222222221 (App le m_322222222 p_32222222222) (App Coq.Init.Peano.lt n_32222222 (App S p_32222222222))) (Prod out_3222222222221 (App le m_322222222 p_32222222222) (App le n_32222222 p_32222222222)) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism (Sort Prop) (Prod B_3222222222221 (Sort Prop) (Sort Prop)) Coq.Init.Logic.iff (App Coq.Classes.Morphisms.respectful (Sort Prop) (Sort Prop) Coq.Init.Logic.iff Coq.Init.Logic.iff) Coq.Program.Basics.impl Coq.Classes.Morphisms_Prop.iff_iff_iff_impl_morphism (App le m_322222222 p_32222222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App le m_322222222 p_32222222222)) (App Coq.Init.Peano.lt n_32222222 (App S p_32222222222)) (App le n_32222222 p_32222222222) lemma_322222222222)))) (App Coq.Arith.PeanoNat.Nat.lt_succ_r n_32222222 p_32222222222) (App conj (Prod out_322222222221 (Prod out_322222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_3222222222211 (App Coq.Init.Peano.lt m_322222222 p_32222222222) (App Coq.Init.Peano.lt n_32222222 p_32222222222))) (Prod out_3222222222211 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_32222222222111 (App le m_322222222 p_32222222222) (App le n_32222222 p_32222222222)))) (Prod out_322222222221 (Prod out_322222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_3222222222211 (App le m_322222222 p_32222222222) (App le n_32222222 p_32222222222))) (Prod out_3222222222211 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_32222222222111 (App Coq.Init.Peano.lt m_322222222 p_32222222222) (App Coq.Init.Peano.lt n_32222222 p_32222222222)))) (Lambda H_322222222222 (Prod out_322222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_3222222222211 (App Coq.Init.Peano.lt m_322222222 p_32222222222) (App Coq.Init.Peano.lt n_32222222 p_32222222222))) (Lambda H1_3222222222222 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Lambda H2_32222222222222 (App le m_322222222 p_32222222222) (App Coq.Arith.PeanoNat.Nat.lt_le_incl n_32222222 p_32222222222 (Case 2 (Lambda out_322222222222222 (App or (App Coq.Init.Peano.lt m_322222222 p_32222222222) (App eq nat m_322222222 p_32222222222)) (App Coq.Init.Peano.lt n_32222222 p_32222222222)) (CaseMatch (App (Lambda lemma_322222222222222 (App Coq.Init.Logic.iff (App le m_322222222 p_32222222222) (App or (App Coq.Init.Peano.lt m_322222222 p_32222222222) (App eq nat m_322222222 p_32222222222))) (App Coq.Classes.Morphisms.iff_impl_subrelation (App le m_322222222 p_32222222222) (App or (App Coq.Init.Peano.lt m_322222222 p_32222222222) (App eq nat m_322222222 p_32222222222)) lemma_322222222222222)) (App Coq.Arith.PeanoNat.Nat.lt_eq_cases m_322222222 p_32222222222) H2_32222222222222)) (CaseBranches (Lambda H2_322222222222222 (App Coq.Init.Peano.lt m_322222222 p_32222222222) (App H_322222222222 H1_3222222222222 H2_322222222222222)) (Lambda H2_322222222222222 (App eq nat m_322222222 p_32222222222) (App (Lambda lemma_3222222222222222 (App eq nat m_322222222 p_32222222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_32222222222222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Program.Basics.impl) Coq.Init.Peano.lt (App Coq.Classes.Morphisms.subrelation_proper (Prod out_32222222222222221 nat (Prod out_322222222222222211 nat (Sort Prop))) (App Coq.Classes.Morphisms.respectful nat (Prod out_32222222222222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff)) Coq.Init.Peano.lt Coq.Arith.PeanoNat.Nat.lt_wd (App Coq.Classes.Morphisms.respectful nat (Prod out_32222222222222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Program.Basics.impl)) tt (App Coq.Classes.Morphisms.subrelation_respectful nat (Prod out_32222222222222221 nat (Sort Prop)) (App eq nat) (App eq nat) (App Coq.Classes.Morphisms.subrelation_refl nat (App eq nat)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Program.Basics.impl) (App Coq.Classes.Morphisms.subrelation_respectful nat (Sort Prop) (App eq nat) (App eq nat) (App Coq.Classes.Morphisms.subrelation_refl nat (App eq nat)) Coq.Init.Logic.iff Coq.Program.Basics.impl Coq.Classes.Morphisms.iff_impl_subrelation))) n_32222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) n_32222222) m_322222222 p_32222222222 lemma_3222222222222222)) H2_322222222222222 H1_3222222222222)))))))) (Lambda H_322222222222 (Prod out_322222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_3222222222211 (App le m_322222222 p_32222222222) (App le n_32222222 p_32222222222))) (Lambda H1_3222222222222 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Lambda H2_32222222222222 (App Coq.Init.Peano.lt m_322222222 p_32222222222) (LetIn H3_322222222222223 (App H_322222222222 H1_3222222222222 (App Coq.Arith.PeanoNat.Nat.lt_le_incl m_322222222 p_32222222222 H2_32222222222222)) (App le n_32222222 p_32222222222) (Case 2 (Lambda out_3222222222222232 (App or (App Coq.Init.Peano.lt n_32222222 p_32222222222) (App eq nat n_32222222 p_32222222222)) (App Coq.Init.Peano.lt n_32222222 p_32222222222)) (CaseMatch (App (Lambda lemma_3222222222222232 (App Coq.Init.Logic.iff (App le n_32222222 p_32222222222) (App or (App Coq.Init.Peano.lt n_32222222 p_32222222222) (App eq nat n_32222222 p_32222222222))) (App Coq.Classes.Morphisms.iff_impl_subrelation (App le n_32222222 p_32222222222) (App or (App Coq.Init.Peano.lt n_32222222 p_32222222222) (App eq nat n_32222222 p_32222222222)) lemma_3222222222222232)) (App Coq.Arith.PeanoNat.Nat.lt_eq_cases n_32222222 p_32222222222) H3_322222222222223)) (CaseBranches (Lambda H3_3222222222222232 (App Coq.Init.Peano.lt n_32222222 p_32222222222) H3_3222222222222232) (Lambda H3_3222222222222232 (App eq nat n_32222222 p_32222222222) (App Coq.Init.Logic.False_ind (App Coq.Init.Peano.lt n_32222222 p_32222222222) (App Coq.Arith.PeanoNat.Nat.lt_asymm n_32222222 m_322222222 H1_3222222222222 (App (Lambda lemma_32222222222222322 (App eq nat n_32222222 p_32222222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_322222222222223221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Program.Basics.impl) Coq.Init.Peano.lt (App Coq.Classes.Morphisms.subrelation_proper (Prod out_322222222222223221 nat (Prod out_3222222222222232211 nat (Sort Prop))) (App Coq.Classes.Morphisms.respectful nat (Prod out_322222222222223221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff)) Coq.Init.Peano.lt Coq.Arith.PeanoNat.Nat.lt_wd (App Coq.Classes.Morphisms.respectful nat (Prod out_322222222222223221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Program.Basics.impl)) tt (App Coq.Classes.Morphisms.subrelation_respectful nat (Prod out_322222222222223221 nat (Sort Prop)) (App eq nat) (App eq nat) (App Coq.Classes.Morphisms.subrelation_refl nat (App eq nat)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Program.Basics.impl) (App Coq.Classes.Morphisms.subrelation_respectful nat (Sort Prop) (App eq nat) (App eq nat) (App Coq.Classes.Morphisms.subrelation_refl nat (App eq nat)) Coq.Init.Logic.iff Coq.Program.Basics.impl Coq.Classes.Morphisms.iff_impl_subrelation))) m_322222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) m_322222222) p_32222222222 n_32222222 (App Coq.Classes.RelationClasses.symmetry nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Symmetric nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) n_32222222 p_32222222222 lemma_32222222222222322))) H3_3222222222222232 H2_32222222222222)))))))))))))) p_3222222222) REVERTcast (Prod out_32222222221 (App Coq.Init.Peano.lt n_32222222 m_322222222) (Prod out_322222222211 (App Coq.Init.Peano.lt m_322222222 p_3222222222) (App Coq.Init.Peano.lt n_32222222 p_3222222222)))))))) (Definition Coq.Arith.Lt.lt_le_S (Lambda n_32222222 nat (Lambda m_322222222 nat (LetIn H_3222222223 (Lambda n_3222222222 nat (Lambda m_32222222222 nat (Case 2 (Lambda out_322222222222 (App and (Prod out_322222222221 (App le (App S n_3222222222) m_32222222222) (App Coq.Init.Peano.lt n_3222222222 m_32222222222)) (Prod out_322222222221 (App Coq.Init.Peano.lt n_3222222222 m_32222222222) (App le (App S n_3222222222) m_32222222222))) (Prod out_3222222222221 (App Coq.Init.Peano.lt n_3222222222 m_32222222222) (App le (App S n_3222222222) m_32222222222))) (CaseMatch (App Coq.Arith.PeanoNat.Nat.le_succ_l n_3222222222 m_32222222222)) (CaseBranches (Lambda out_322222222222 (Prod out_322222222221 (App le (App S n_3222222222) m_32222222222) (App Coq.Init.Peano.lt n_3222222222 m_32222222222)) (Lambda out_3222222222222 (Prod out_3222222222221 (App Coq.Init.Peano.lt n_3222222222 m_32222222222) (App le (App S n_3222222222) m_32222222222)) out_3222222222222)))))) (Prod n_3222222221 nat (Prod m_32222222211 nat (Prod out_322222222111 (App Coq.Init.Peano.lt n_3222222221 m_32222222211) (App le (App S n_3222222221) m_32222222211)))) (App H_3222222223 n_32222222 m_322222222))))) (Definition Coq.Arith.PeanoNat.Nat.induction (Lambda A_322222222 (Prod out_322222221 nat (Sort Prop)) (Lambda A_wd_3222222222 (App Coq.Classes.Morphisms.Proper (Prod out_3222222221 nat (Sort Prop)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) A_322222222) (Lambda A0_32222222222 (App A_322222222 O) (Lambda AS_322222222222 (Prod n_322222222221 nat (Prod out_3222222222211 (App A_322222222 n_322222222221) (App A_322222222 (App S n_322222222221)))) (Lambda n_3222222222222 nat (App Coq.Arith.PeanoNat.Nat.right_induction A_322222222 A_wd_3222222222 O A0_32222222222 (Lambda n0_32222222222222 nat (Lambda H_322222222222222 (App le O n0_32222222222222) (Lambda H0_3222222222222222 (App A_322222222 n0_32222222222222) (App AS_322222222222 n0_32222222222222 H0_3222222222222222)))) n_3222222222222 (App Coq.Arith.PeanoNat.Nat.le_0_l n_3222222222222)))))))) (Definition Coq.Arith.PeanoNat.Nat.succ_wd Coq.Arith.PeanoNat.Nat.succ_wd_obligation_1) (Definition Coq.Arith.PeanoNat.Nat.lt_lt_succ_r (Lambda n_32222222222 nat (Lambda m_322222222222 nat (Lambda H_3222222222222 (App Coq.Init.Peano.lt n_32222222222 m_322222222222) (App (Lambda lemma_32222222222222 (App Coq.Init.Logic.iff (App Coq.Init.Peano.lt n_32222222222 (App S m_322222222222)) (App le n_32222222222 m_322222222222)) (App Coq.Classes.Morphisms.iff_flip_impl_subrelation (App Coq.Init.Peano.lt n_32222222222 (App S m_322222222222)) (App le n_32222222222 m_322222222222) lemma_32222222222222)) (App Coq.Arith.PeanoNat.Nat.lt_succ_r n_32222222222 m_322222222222) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.not_gt_le n_32222222222 m_322222222222 (Cast (Lambda H0_32222222222222 (App Coq.Init.Peano.lt m_322222222222 n_32222222222) (App (Lambda H1_322222222222222 (App Coq.Init.Peano.lt n_32222222222 n_32222222222) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.lt_irrefl n_32222222222 H1_322222222222222)) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.lt_trans n_32222222222 m_322222222222 n_32222222222 H_3222222222222 H0_32222222222222))) REVERTcast (App Coq.Init.Logic.not (App Coq.Init.Peano.lt m_322222222222 n_32222222222))))))))) (Definition Coq.Arith.PeanoNat.Nat.lt_0_succ (Lambda n_32222222 nat (Cast (App Coq.Arith.PeanoNat.Nat.induction (Lambda t_322222222 nat (App Coq.Init.Peano.lt O (App S t_322222222))) (Cast (Cast (Lambda x_322222222 nat (Lambda y_3222222222 nat (Lambda H_32222222222 (App eq nat x_322222222 y_3222222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App Coq.Init.Peano.lt O (App S x_322222222)) (App Coq.Init.Peano.lt O (App S y_3222222222)) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_322222222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) Coq.Init.Peano.lt Coq.Arith.PeanoNat.Nat.lt_wd O (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) O) (App S x_322222222) (App S y_3222222222) (App Coq.Arith.PeanoNat.Nat.succ_wd x_322222222 y_3222222222 H_32222222222)) (App Coq.Init.Peano.lt O (App S y_3222222222)) (App Coq.Init.Peano.lt O (App S y_3222222222)) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App Coq.Init.Peano.lt O (App S y_3222222222))) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Peano.lt O (App S y_3222222222))))))) REVERTcast (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff (Lambda t_322222222 nat (App Coq.Init.Peano.lt O (App S t_322222222))) (Lambda t_322222222 nat (App Coq.Init.Peano.lt O (App S t_322222222))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_322222221 nat (Sort Prop)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (Lambda t_322222222 nat (App Coq.Init.Peano.lt O (App S t_322222222))))) (App Coq.Arith.PeanoNat.Nat.lt_succ_diag_r O) (Lambda n_322222222 nat (Lambda H_3222222222 (App Coq.Init.Peano.lt O (App S n_322222222)) (App Coq.Arith.PeanoNat.Nat.lt_lt_succ_r O (App S n_322222222) H_3222222222))) n_32222222) REVERTcast (App Coq.Init.Peano.lt O (App S n_32222222))))) (Definition Coq.Init.Logic.eq_sym (Lambda A_3222222332 (Sort Type) (Lambda x_32222223322 A_3222222332 (Lambda y_322222233222 A_3222222332 (Lambda H_3222222332222 (App eq A_3222222332 x_32222223322 y_322222233222) (Case 2 (Lambda y_32222223322222 A_3222222332 (Lambda out_322222233222222 (App eq A_3222222332 x_32222223322 y_32222223322222) (App eq A_3222222332 y_32222223322222 x_32222223322))) (CaseMatch H_3222222332222) (CaseBranches (App eq_refl A_3222222332 x_32222223322)))))))) (Definition Coq.Init.Datatypes.nat_ind (Lambda P_32222223322 (Prod n_32222223321 nat (Sort Prop)) (Lambda f_322222233222 (App P_32222223322 O) (Lambda f_3222222332222 (Prod n_3222222332221 nat (Prod out_32222223322211 (App P_32222223322 n_3222222332221) (App P_32222223322 (App S n_3222222332221)))) (Fix (Functions (App F 0 (Prod n_32222223322221 nat (App P_32222223322 n_32222223322221)) (Lambda n_32222223322222 nat (Case 0 (Lambda n_322222233222222 nat (App P_32222223322 n_322222233222222)) (CaseMatch n_32222223322222) (CaseBranches f_322222233222 (Lambda n_322222233222222 nat (App f_3222222332222 n_322222233222222 (App F n_322222233222222)))))))) 0))))) (Definition Coq.Init.Peano.f_equal_nat (App Coq.Init.Logic.f_equal nat)) (Definition Coq.Init.Peano.plus_n_O (Lambda n_3222222332 nat (App Coq.Init.Datatypes.nat_ind (Lambda n_32222223322 nat (App eq nat n_32222223322 (App Coq.Init.Nat.add n_32222223322 O))) (Cast (App eq_refl nat O) REVERTcast (App eq nat O (App Coq.Init.Nat.add O O))) (Lambda n_32222223322 nat (Lambda IHn_322222233222 (App eq nat n_32222223322 (App Coq.Init.Nat.add n_32222223322 O)) (Cast (App Coq.Init.Peano.f_equal_nat nat S n_32222223322 (App Coq.Init.Nat.add n_32222223322 O) IHn_322222233222) REVERTcast (App eq nat (App S n_32222223322) (App Coq.Init.Nat.add (App S n_32222223322) O))))) n_3222222332))) (Definition Coq.Init.Logic.eq_ind (Lambda A_32222223332 (Sort Type) (Lambda x_322222233322 A_32222223332 (Lambda P_3222222333222 (Prod out_3222222333221 A_32222223332 (Sort Prop)) (Lambda f_32222223332222 (App P_3222222333222 x_322222233322) (Lambda y_322222233322222 A_32222223332 (Lambda e_3222222333222222 (App eq A_32222223332 x_322222233322 y_322222233322222) (Case 2 (Lambda y_32222223332222222 A_32222223332 (Lambda out_322222233322222222 (App eq A_32222223332 x_322222233322 y_32222223332222222) (App P_3222222333222 y_32222223332222222))) (CaseMatch e_3222222333222222) (CaseBranches f_32222223332222))))))))) (Definition Coq.Init.Datatypes.nat_rec (Lambda P_33222222222222 (Prod n_33222222222221 nat (Sort Set)) (App Coq.Init.Datatypes.nat_rect P_33222222222222))) (Definition Coq.Arith.Gt.gt_Sn_O (Lambda n_3322222222222222 nat (App Coq.Arith.PeanoNat.Nat.lt_0_succ n_3322222222222222))) (Definition Coq.Arith.Le.le_n_S Coq.Init.Peano.le_n_S) (Definition Coq.Arith.Lt.le_lt_n_Sm (Lambda n_33222222222222222322 nat (Lambda m_332222222222222223222 nat (LetIn H_3322222222222222232223 (Lambda n_3322222222222222232222 nat (Lambda m_33222222222222222322222 nat (Case 2 (Lambda out_332222222222222223222222 (App and (Prod out_332222222222222223222221 (App Coq.Init.Peano.lt n_3322222222222222232222 (App S m_33222222222222222322222)) (App le n_3322222222222222232222 m_33222222222222222322222)) (Prod out_332222222222222223222221 (App le n_3322222222222222232222 m_33222222222222222322222) (App Coq.Init.Peano.lt n_3322222222222222232222 (App S m_33222222222222222322222)))) (Prod out_3322222222222222232222221 (App le n_3322222222222222232222 m_33222222222222222322222) (App Coq.Init.Peano.lt n_3322222222222222232222 (App S m_33222222222222222322222)))) (CaseMatch (App Coq.Arith.PeanoNat.Nat.lt_succ_r n_3322222222222222232222 m_33222222222222222322222)) (CaseBranches (Lambda out_332222222222222223222222 (Prod out_332222222222222223222221 (App Coq.Init.Peano.lt n_3322222222222222232222 (App S m_33222222222222222322222)) (App le n_3322222222222222232222 m_33222222222222222322222)) (Lambda out_3322222222222222232222222 (Prod out_3322222222222222232222221 (App le n_3322222222222222232222 m_33222222222222222322222) (App Coq.Init.Peano.lt n_3322222222222222232222 (App S m_33222222222222222322222))) out_3322222222222222232222222)))))) (Prod n_3322222222222222232221 nat (Prod m_33222222222222222322211 nat (Prod out_332222222222222223222111 (App le n_3322222222222222232221 m_33222222222222222322211) (App Coq.Init.Peano.lt n_3322222222222222232221 (App S m_33222222222222222322211))))) (App H_3322222222222222232223 n_33222222222222222322 m_332222222222222223222))))) (Definition Coq.Arith.Compare_dec.lt_eq_lt_dec (Lambda n_332222222222 nat (Lambda m_3322222222222 nat (App Coq.Init.Datatypes.nat_rec (Lambda n_33222222222222 nat (Prod m_332222222222221 nat (App sumor (App sumbool (App Coq.Init.Peano.lt n_33222222222222 m_332222222222221) (App eq nat n_33222222222222 m_332222222222221)) (App Coq.Init.Peano.lt m_332222222222221 n_33222222222222)))) (Lambda m_33222222222222 nat (Case 0 (Lambda n_332222222222222 nat (App sumor (App sumbool (App Coq.Init.Peano.lt O n_332222222222222) (App eq nat O n_332222222222222)) (App Coq.Init.Peano.lt n_332222222222222 O))) (CaseMatch m_33222222222222) (CaseBranches (App inleft (App sumbool (App Coq.Init.Peano.lt O O) (App eq nat O O)) (App Coq.Init.Peano.lt O O) (App right (App Coq.Init.Peano.lt O O) (App eq nat O O) (App eq_refl nat O))) (Lambda m_332222222222222 nat (App inleft (App sumbool (App Coq.Init.Peano.lt O (App S m_332222222222222)) (App eq nat O (App S m_332222222222222))) (App Coq.Init.Peano.lt (App S m_332222222222222) O) (App left (App Coq.Init.Peano.lt O (App S m_332222222222222)) (App eq nat O (App S m_332222222222222)) (Cast (App Coq.Arith.Gt.gt_le_S O (App S m_332222222222222) (App Coq.Arith.Gt.gt_Sn_O m_332222222222222)) REVERTcast (App Coq.Init.Peano.lt O (App S m_332222222222222))))))))) (Lambda n_33222222222222 nat (Lambda IHn_332222222222222 (Prod m_332222222222221 nat (App sumor (App sumbool (App Coq.Init.Peano.lt n_33222222222222 m_332222222222221) (App eq nat n_33222222222222 m_332222222222221)) (App Coq.Init.Peano.lt m_332222222222221 n_33222222222222))) (Lambda m_3322222222222222 nat (Case 0 (Lambda n_33222222222222222 nat (App sumor (App sumbool (App Coq.Init.Peano.lt (App S n_33222222222222) n_33222222222222222) (App eq nat (App S n_33222222222222) n_33222222222222222)) (App Coq.Init.Peano.lt n_33222222222222222 (App S n_33222222222222)))) (CaseMatch m_3322222222222222) (CaseBranches (App inright (App sumbool (App Coq.Init.Peano.lt (App S n_33222222222222) O) (App eq nat (App S n_33222222222222) O)) (App Coq.Init.Peano.lt O (App S n_33222222222222)) (Cast (App Coq.Arith.Gt.gt_le_S O (App S n_33222222222222) (Cast (App Coq.Arith.PeanoNat.Nat.lt_0_succ n_33222222222222) REVERTcast (App Coq.Init.Peano.gt (App S n_33222222222222) O))) REVERTcast (App Coq.Init.Peano.lt O (App S n_33222222222222)))) (Lambda m_33222222222222222 nat (LetIn s_332222222222222223 (App IHn_332222222222222 m_33222222222222222) (App sumor (App sumbool (App Coq.Init.Peano.lt n_33222222222222 m_33222222222222222) (App eq nat n_33222222222222 m_33222222222222222)) (App Coq.Init.Peano.lt m_33222222222222222 n_33222222222222)) (Case 2 (Lambda s_3322222222222222232 (App sumor (App sumbool (App Coq.Init.Peano.lt n_33222222222222 m_33222222222222222) (App eq nat n_33222222222222 m_33222222222222222)) (App Coq.Init.Peano.lt m_33222222222222222 n_33222222222222)) (App sumor (App sumbool (App Coq.Init.Peano.lt (App S n_33222222222222) (App S m_33222222222222222)) (App eq nat (App S n_33222222222222) (App S m_33222222222222222))) (App Coq.Init.Peano.lt (App S m_33222222222222222) (App S n_33222222222222)))) (CaseMatch s_332222222222222223) (CaseBranches (Lambda H_3322222222222222232 (App sumbool (App Coq.Init.Peano.lt n_33222222222222 m_33222222222222222) (App eq nat n_33222222222222 m_33222222222222222)) (Case 2 (Lambda s_33222222222222222322 (App sumbool (App Coq.Init.Peano.lt n_33222222222222 m_33222222222222222) (App eq nat n_33222222222222 m_33222222222222222)) (App sumor (App sumbool (App Coq.Init.Peano.lt (App S n_33222222222222) (App S m_33222222222222222)) (App eq nat (App S n_33222222222222) (App S m_33222222222222222))) (App Coq.Init.Peano.lt (App S m_33222222222222222) (App S n_33222222222222)))) (CaseMatch H_3322222222222222232) (CaseBranches (Lambda l_33222222222222222322 (App Coq.Init.Peano.lt n_33222222222222 m_33222222222222222) (App inleft (App sumbool (App Coq.Init.Peano.lt (App S n_33222222222222) (App S m_33222222222222222)) (App eq nat (App S n_33222222222222) (App S m_33222222222222222))) (App Coq.Init.Peano.lt (App S m_33222222222222222) (App S n_33222222222222)) (App left (App Coq.Init.Peano.lt (App S n_33222222222222) (App S m_33222222222222222)) (App eq nat (App S n_33222222222222) (App S m_33222222222222222)) (Cast (App Coq.Arith.Le.le_n_S (App S n_33222222222222) m_33222222222222222 l_33222222222222222322) REVERTcast (App Coq.Init.Peano.lt (App S n_33222222222222) (App S m_33222222222222222)))))) (Lambda e_33222222222222222322 (App eq nat n_33222222222222 m_33222222222222222) (App inleft (App sumbool (App Coq.Init.Peano.lt (App S n_33222222222222) (App S m_33222222222222222)) (App eq nat (App S n_33222222222222) (App S m_33222222222222222))) (App Coq.Init.Peano.lt (App S m_33222222222222222) (App S n_33222222222222)) (App right (App Coq.Init.Peano.lt (App S n_33222222222222) (App S m_33222222222222222)) (App eq nat (App S n_33222222222222) (App S m_33222222222222222)) (App Coq.Init.Peano.f_equal_nat nat S n_33222222222222 m_33222222222222222 e_33222222222222222322))))))) (Lambda H_3322222222222222232 (App Coq.Init.Peano.lt m_33222222222222222 n_33222222222222) (App inright (App sumbool (App Coq.Init.Peano.lt (App S n_33222222222222) (App S m_33222222222222222)) (App eq nat (App S n_33222222222222) (App S m_33222222222222222))) (App Coq.Init.Peano.lt (App S m_33222222222222222) (App S n_33222222222222)) (Cast (App Coq.Arith.Gt.gt_le_S (App S m_33222222222222222) (App S n_33222222222222) (Cast (App Coq.Arith.Lt.le_lt_n_Sm (App S m_33222222222222222) n_33222222222222 H_3322222222222222232) REVERTcast (App Coq.Init.Peano.gt (App S n_33222222222222) (App S m_33222222222222222)))) REVERTcast (App Coq.Init.Peano.lt (App S m_33222222222222222) (App S n_33222222222222)))))))))))))) n_332222222222 m_3322222222222)))) (Definition Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.not_ge_lt (Lambda x_3322222222222222222 nat (Lambda y_33222222222222222222 nat (Lambda H_332222222222222222222 (App Coq.Init.Logic.not (App le y_33222222222222222222 x_3322222222222222222)) (LetIn o_3322222222222222222223 (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.IsTotal.lt_total x_3322222222222222222 y_33222222222222222222) (App or (App Coq.Init.Peano.lt x_3322222222222222222 y_33222222222222222222) (App or (App eq nat x_3322222222222222222 y_33222222222222222222) (App Coq.Init.Peano.lt y_33222222222222222222 x_3322222222222222222))) (Case 2 (Lambda out_33222222222222222222232 (App or (App Coq.Init.Peano.lt x_3322222222222222222 y_33222222222222222222) (App or (App eq nat x_3322222222222222222 y_33222222222222222222) (App Coq.Init.Peano.lt y_33222222222222222222 x_3322222222222222222))) (App Coq.Init.Peano.lt x_3322222222222222222 y_33222222222222222222)) (CaseMatch o_3322222222222222222223) (CaseBranches (Lambda H0_33222222222222222222232 (App Coq.Init.Peano.lt x_3322222222222222222 y_33222222222222222222) H0_33222222222222222222232) (Lambda H0_33222222222222222222232 (App or (App eq nat x_3322222222222222222 y_33222222222222222222) (App Coq.Init.Peano.lt y_33222222222222222222 x_3322222222222222222)) (LetIn n_332222222222222222222323 (App H_332222222222222222222 (App (Lambda lemma_332222222222222222222322 (App Coq.Init.Logic.iff (App le y_33222222222222222222 x_3322222222222222222) (App or (App Coq.Init.Peano.lt y_33222222222222222222 x_3322222222222222222) (App eq nat y_33222222222222222222 x_3322222222222222222))) (App Coq.Classes.Morphisms.iff_flip_impl_subrelation (App le y_33222222222222222222 x_3322222222222222222) (App or (App Coq.Init.Peano.lt y_33222222222222222222 x_3322222222222222222) (App eq nat y_33222222222222222222 x_3322222222222222222)) lemma_332222222222222222222322)) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.IsTotal.le_lteq y_33222222222222222222 x_3322222222222222222) (App Coq.Init.Logic.or_ind (App eq nat x_3322222222222222222 y_33222222222222222222) (App Coq.Init.Peano.lt y_33222222222222222222 x_3322222222222222222) (App or (App Coq.Init.Peano.lt y_33222222222222222222 x_3322222222222222222) (App eq nat y_33222222222222222222 x_3322222222222222222)) (Lambda H_332222222222222222222322 (App eq nat x_3322222222222222222 y_33222222222222222222) (App or_intror (App Coq.Init.Peano.lt y_33222222222222222222 x_3322222222222222222) (App eq nat y_33222222222222222222 x_3322222222222222222) (Cast (App Coq.Classes.RelationClasses.symmetry nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Symmetric nat (App eq nat) Coq.Arith.PeanoNat.Nat.Private_OrderTac.IsTotal.eq_equiv) x_3322222222222222222 y_33222222222222222222 H_332222222222222222222322) REVERTcast (App eq nat y_33222222222222222222 x_3322222222222222222)))) (Lambda H_332222222222222222222322 (App Coq.Init.Peano.lt y_33222222222222222222 x_3322222222222222222) (App or_introl (App Coq.Init.Peano.lt y_33222222222222222222 x_3322222222222222222) (App eq nat y_33222222222222222222 x_3322222222222222222) H_332222222222222222222322)) H0_33222222222222222222232))) False (Case 0 (Lambda out_3322222222222222222223232 False (App Coq.Init.Peano.lt x_3322222222222222222 y_33222222222222222222)) (CaseMatch n_332222222222222222222323) (CaseBranches))))))))))) (Definition Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.lt_irrefl (Lambda x_3322222222222222222222 nat (App Coq.Classes.RelationClasses.StrictOrder_Irreflexive nat Coq.Init.Peano.lt Coq.Arith.PeanoNat.Nat.Private_OrderTac.IsTotal.lt_strorder x_3322222222222222222222))) (Definition Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.le_lt_trans (Lambda x_332222222222222222222 nat (Lambda y_3322222222222222222222 nat (Lambda z_33222222222222222222222 nat (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.trans OLE OLT x_332222222222222222222 y_3322222222222222222222 z_33222222222222222222222))))) (Definition Coq.Init.Logic.not (Lambda A_3322222222222222222 (Sort Prop) (Prod out_33222222222222222221 A_3322222222222222222 False))) (Definition Coq.Arith.PeanoNat.Nat.le_lt_trans (Lambda n_33222222222222 nat (Lambda m_332222222222222 nat (Lambda p_3322222222222222 nat (Lambda H_33222222222222222 (App le n_33222222222222 m_332222222222222) (Lambda H0_332222222222222222 (App Coq.Init.Peano.lt m_332222222222222 p_3322222222222222) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.not_ge_lt n_33222222222222 p_3322222222222222 (Cast (Lambda H1_3322222222222222222 (App le p_3322222222222222 n_33222222222222) (App (Lambda H2_33222222222222222222 (App Coq.Init.Peano.lt n_33222222222222 p_3322222222222222) (App (Lambda H3_332222222222222222222 (App Coq.Init.Peano.lt p_3322222222222222 p_3322222222222222) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.lt_irrefl p_3322222222222222 H3_332222222222222222222)) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.le_lt_trans p_3322222222222222 n_33222222222222 p_3322222222222222 H1_3322222222222222222 H2_33222222222222222222))) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.le_lt_trans n_33222222222222 m_332222222222222 p_3322222222222222 H_33222222222222222 H0_332222222222222222))) REVERTcast (App Coq.Init.Logic.not (App le p_3322222222222222 n_33222222222222)))))))))) (Definition Coq.setoid_ring.Ring_polynom.ring_correct (Lambda R_3322222222222332 (Sort Type) (Lambda rO_33222222222223322 R_3322222222222332 (Lambda rI_332222222222233222 R_3322222222222332 (Lambda radd_3322222222222332222 (Prod out_3322222222222332221 R_3322222222222332 (Prod out_33222222222223322211 R_3322222222222332 R_3322222222222332)) (Lambda rmul_33222222222223322222 (Prod out_33222222222223322221 R_3322222222222332 (Prod out_332222222222233222211 R_3322222222222332 R_3322222222222332)) (Lambda rsub_332222222222233222222 (Prod out_332222222222233222221 R_3322222222222332 (Prod out_3322222222222332222211 R_3322222222222332 R_3322222222222332)) (Lambda ropp_3322222222222332222222 (Prod out_3322222222222332222221 R_3322222222222332 R_3322222222222332) (Lambda req_33222222222223322222222 (Prod out_33222222222223322222221 R_3322222222222332 (Prod out_332222222222233222222211 R_3322222222222332 (Sort Prop))) (Lambda Rsth_332222222222233222222222 (App Equivalence R_3322222222222332 req_33222222222223322222222) (Lambda Reqe_3322222222222332222222222 (App ring_eq_ext R_3322222222222332 radd_3322222222222332222 rmul_33222222222223322222 ropp_3322222222222332222222 req_33222222222223322222222) (Lambda ARth_33222222222223322222222222 (App almost_ring_theory R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 rsub_332222222222233222222 ropp_3322222222222332222222 req_33222222222223322222222) (Lambda C_332222222222233222222222222 (Sort Type) (Lambda cO_3322222222222332222222222222 C_332222222222233222222222222 (Lambda cI_33222222222223322222222222222 C_332222222222233222222222222 (Lambda cadd_332222222222233222222222222222 (Prod out_332222222222233222222222222221 C_332222222222233222222222222 (Prod out_3322222222222332222222222222211 C_332222222222233222222222222 C_332222222222233222222222222)) (Lambda cmul_3322222222222332222222222222222 (Prod out_3322222222222332222222222222221 C_332222222222233222222222222 (Prod out_33222222222223322222222222222211 C_332222222222233222222222222 C_332222222222233222222222222)) (Lambda csub_33222222222223322222222222222222 (Prod out_33222222222223322222222222222221 C_332222222222233222222222222 (Prod out_332222222222233222222222222222211 C_332222222222233222222222222 C_332222222222233222222222222)) (Lambda copp_332222222222233222222222222222222 (Prod out_332222222222233222222222222222221 C_332222222222233222222222222 C_332222222222233222222222222) (Lambda ceqb_3322222222222332222222222222222222 (Prod out_3322222222222332222222222222222221 C_332222222222233222222222222 (Prod out_33222222222223322222222222222222211 C_332222222222233222222222222 bool)) (Lambda phi_33222222222223322222222222222222222 (Prod out_33222222222223322222222222222222221 C_332222222222233222222222222 R_3322222222222332) (Lambda CRmorph_332222222222233222222222222222222222 (App ring_morph R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 rsub_332222222222233222222 ropp_3322222222222332222222 req_33222222222223322222222 C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 phi_33222222222223322222222222222222222) (Lambda Cpow_3322222222222332222222222222222222222 (Sort Type) (Lambda Cp_phi_33222222222223322222222222222222222222 (Prod out_33222222222223322222222222222222222221 N Cpow_3322222222222332222222222222222222222) (Lambda rpow_332222222222233222222222222222222222222 (Prod out_332222222222233222222222222222222222221 R_3322222222222332 (Prod out_3322222222222332222222222222222222222211 Cpow_3322222222222332222222222222222222222 R_3322222222222332)) (Lambda pow_th_3322222222222332222222222222222222222222 (App power_theory R_3322222222222332 rI_332222222222233222 rmul_33222222222223322222 req_33222222222223322222222 Cpow_3322222222222332222222222222222222222 Cp_phi_33222222222223322222222222222222222222 rpow_332222222222233222222222222222222222222) (Lambda cdiv_33222222222223322222222222222222222222222 (Prod out_33222222222223322222222222222222222222221 C_332222222222233222222222222 (Prod out_332222222222233222222222222222222222222211 C_332222222222233222222222222 (App prod C_332222222222233222222222222 C_332222222222233222222222222))) (Lambda div_th_332222222222233222222222222222222222222222 (App div_theory R_3322222222222332 req_33222222222223322222222 C_332222222222233222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 phi_33222222222223322222222222222222222 cdiv_33222222222223322222222222222222222222222) (Cast (Lambda n_3322222222222332222222222222222222222222222 nat (Lambda l_33222222222223322222222222222222222222222222 (App list R_3322222222222332) (Lambda lpe_332222222222233222222222222222222222222222222 (App list (App prod (App PExpr C_332222222222233222222222222) (App PExpr C_332222222222233222222222222))) (Lambda pe1_3322222222222332222222222222222222222222222222 (App PExpr C_332222222222233222222222222) (Lambda pe2_33222222222223322222222222222222222222222222222 (App PExpr C_332222222222233222222222222) (Lambda H_332222222222233222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.interp_PElist R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 rsub_332222222222233222222 ropp_3322222222222332222222 req_33222222222223322222222 C_332222222222233222222222222 phi_33222222222223322222222222222222222 Cpow_3322222222222332222222222222222222222 Cp_phi_33222222222223322222222222222222222222 rpow_332222222222233222222222222222222222222 l_33222222222223322222222222222222222222222222 lpe_332222222222233222222222222222222222222222222) (Lambda H0_3322222222222332222222222222222222222222222222222 (App eq bool (App Coq.setoid_ring.Ring_polynom.Peq C_332222222222233222222222222 ceqb_3322222222222332222222222222222222 (App Coq.setoid_ring.Ring_polynom.norm_subst C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 cdiv_33222222222223322222222222222222222222222 n_3322222222222332222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 cdiv_33222222222223322222222222222222222222222 lpe_332222222222233222222222222222222222222222222) pe1_3322222222222332222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.norm_subst C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 cdiv_33222222222223322222222222222222222222222 n_3322222222222332222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 cdiv_33222222222223322222222222222222222222222 lpe_332222222222233222222222222222222222222222222) pe2_33222222222223322222222222222222222222222222222)) true) (App (Lambda lemma_33222222222223322222222222222222222222222222222222 (App req_33222222222223322222222 (App Coq.setoid_ring.Ring_polynom.PEeval R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 rsub_332222222222233222222 ropp_3322222222222332222222 C_332222222222233222222222222 phi_33222222222223322222222222222222222 Cpow_3322222222222332222222222222222222222 Cp_phi_33222222222223322222222222222222222222 rpow_332222222222233222222222222222222222222 l_33222222222223322222222222222222222222222222 pe1_3322222222222332222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_3322222222222332 rO_33222222222223322 radd_3322222222222332222 rmul_33222222222223322222 C_332222222222233222222222222 phi_33222222222223322222222222222222222 l_33222222222223322222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.norm_subst C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 cdiv_33222222222223322222222222222222222222222 n_3322222222222332222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 cdiv_33222222222223322222222222222222222222222 lpe_332222222222233222222222222222222222222222222) pe1_3322222222222332222222222222222222222222222222))) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_3322222222222332 req_33222222222223322222222 (App Coq.Classes.RelationClasses.Equivalence_Transitive R_3322222222222332 req_33222222222223322222222 Rsth_332222222222233222222222) (App Coq.setoid_ring.Ring_polynom.PEeval R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 rsub_332222222222233222222 ropp_3322222222222332222222 C_332222222222233222222222222 phi_33222222222223322222222222222222222 Cpow_3322222222222332222222222222222222222 Cp_phi_33222222222223322222222222222222222222 rpow_332222222222233222222222222222222222222 l_33222222222223322222222222222222222222222222 pe1_3322222222222332222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_3322222222222332 rO_33222222222223322 radd_3322222222222332222 rmul_33222222222223322222 C_332222222222233222222222222 phi_33222222222223322222222222222222222 l_33222222222223322222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.norm_subst C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 cdiv_33222222222223322222222222222222222222222 n_3322222222222332222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 cdiv_33222222222223322222222222222222222222222 lpe_332222222222233222222222222222222222222222222) pe1_3322222222222332222222222222222222222222222222)) lemma_33222222222223322222222222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.PEeval R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 rsub_332222222222233222222 ropp_3322222222222332222222 C_332222222222233222222222222 phi_33222222222223322222222222222222222 Cpow_3322222222222332222222222222222222222 Cp_phi_33222222222223322222222222222222222222 rpow_332222222222233222222222222222222222222 l_33222222222223322222222222222222222222222222 pe2_33222222222223322222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.PEeval R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 rsub_332222222222233222222 ropp_3322222222222332222222 C_332222222222233222222222222 phi_33222222222223322222222222222222222 Cpow_3322222222222332222222222222222222222 Cp_phi_33222222222223322222222222222222222222 rpow_332222222222233222222222222222222222222 l_33222222222223322222222222222222222222222222 pe2_33222222222223322222222222222222222222222222222) (App Coq.Classes.Morphisms.eq_proper_proxy R_3322222222222332 (App Coq.setoid_ring.Ring_polynom.PEeval R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 rsub_332222222222233222222 ropp_3322222222222332222222 C_332222222222233222222222222 phi_33222222222223322222222222222222222 Cpow_3322222222222332222222222222222222222 Cp_phi_33222222222223322222222222222222222222 rpow_332222222222233222222222222222222222222 l_33222222222223322222222222222222222222222222 pe2_33222222222223322222222222222222222222222222222)))) (App Coq.setoid_ring.Ring_polynom.norm_subst_ok R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 rsub_332222222222233222222 ropp_3322222222222332222222 req_33222222222223322222222 Rsth_332222222222233222222222 Reqe_3322222222222332222222222 ARth_33222222222223322222222222 C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 phi_33222222222223322222222222222222222 CRmorph_332222222222233222222222222222222222 Cpow_3322222222222332222222222222222222222 Cp_phi_33222222222223322222222222222222222222 rpow_332222222222233222222222222222222222222 pow_th_3322222222222332222222222222222222222222 cdiv_33222222222223322222222222222222222222222 div_th_332222222222233222222222222222222222222222 n_3322222222222332222222222222222222222222222 l_33222222222223322222222222222222222222222222 lpe_332222222222233222222222222222222222222222222 pe1_3322222222222332222222222222222222222222222222 H_332222222222233222222222222222222222222222222222) (App (Lambda lemma_33222222222223322222222222222222222222222222222222 (App req_33222222222223322222222 (App Coq.setoid_ring.Ring_polynom.PEeval R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 rsub_332222222222233222222 ropp_3322222222222332222222 C_332222222222233222222222222 phi_33222222222223322222222222222222222 Cpow_3322222222222332222222222222222222222 Cp_phi_33222222222223322222222222222222222222 rpow_332222222222233222222222222222222222222 l_33222222222223322222222222222222222222222222 pe2_33222222222223322222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_3322222222222332 rO_33222222222223322 radd_3322222222222332222 rmul_33222222222223322222 C_332222222222233222222222222 phi_33222222222223322222222222222222222 l_33222222222223322222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.norm_subst C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 cdiv_33222222222223322222222222222222222222222 n_3322222222222332222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 cdiv_33222222222223322222222222222222222222222 lpe_332222222222233222222222222222222222222222222) pe2_33222222222223322222222222222222222222222222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism R_3322222222222332 req_33222222222223322222222 (App Coq.Classes.RelationClasses.Equivalence_PER R_3322222222222332 req_33222222222223322222222 Rsth_332222222222233222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_3322222222222332 rO_33222222222223322 radd_3322222222222332222 rmul_33222222222223322222 C_332222222222233222222222222 phi_33222222222223322222222222222222222 l_33222222222223322222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.norm_subst C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 cdiv_33222222222223322222222222222222222222222 n_3322222222222332222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 cdiv_33222222222223322222222222222222222222222 lpe_332222222222233222222222222222222222222222222) pe1_3322222222222332222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.PEeval R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 rsub_332222222222233222222 ropp_3322222222222332222222 C_332222222222233222222222222 phi_33222222222223322222222222222222222 Cpow_3322222222222332222222222222222222222 Cp_phi_33222222222223322222222222222222222222 rpow_332222222222233222222222222222222222222 l_33222222222223322222222222222222222222222222 pe2_33222222222223322222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Pphi R_3322222222222332 rO_33222222222223322 radd_3322222222222332222 rmul_33222222222223322222 C_332222222222233222222222222 phi_33222222222223322222222222222222222 l_33222222222223322222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.norm_subst C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 cdiv_33222222222223322222222222222222222222222 n_3322222222222332222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 cdiv_33222222222223322222222222222222222222222 lpe_332222222222233222222222222222222222222222222) pe2_33222222222223322222222222222222222222222222222)) lemma_33222222222223322222222222222222222222222222222222)) (App Coq.setoid_ring.Ring_polynom.norm_subst_ok R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 rsub_332222222222233222222 ropp_3322222222222332222222 req_33222222222223322222222 Rsth_332222222222233222222222 Reqe_3322222222222332222222222 ARth_33222222222223322222222222 C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 phi_33222222222223322222222222222222222 CRmorph_332222222222233222222222222222222222 Cpow_3322222222222332222222222222222222222 Cp_phi_33222222222223322222222222222222222222 rpow_332222222222233222222222222222222222222 pow_th_3322222222222332222222222222222222222222 cdiv_33222222222223322222222222222222222222222 div_th_332222222222233222222222222222222222222222 n_3322222222222332222222222222222222222222222 l_33222222222223322222222222222222222222222222 lpe_332222222222233222222222222222222222222222222 pe2_33222222222223322222222222222222222222222222222 H_332222222222233222222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.Peq_ok R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 rsub_332222222222233222222 ropp_3322222222222332222222 req_33222222222223322222222 Rsth_332222222222233222222222 Reqe_3322222222222332222222222 C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 phi_33222222222223322222222222222222222 CRmorph_332222222222233222222222222222222222 (App Coq.setoid_ring.Ring_polynom.norm_subst C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 cdiv_33222222222223322222222222222222222222222 n_3322222222222332222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 cdiv_33222222222223322222222222222222222222222 lpe_332222222222233222222222222222222222222222222) pe1_3322222222222332222222222222222222222222222222) (App Coq.setoid_ring.Ring_polynom.norm_subst C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 cdiv_33222222222223322222222222222222222222222 n_3322222222222332222222222222222222222222222 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 cdiv_33222222222223322222222222222222222222222 lpe_332222222222233222222222222222222222222222222) pe2_33222222222223322222222222222222222222222222222) H0_3322222222222332222222222222222222222222222222222 l_33222222222223322222222222222222222222222222)))))))))) REVERTcast (Prod n_3322222222222332222222222222222222222222221 nat (Prod l_33222222222223322222222222222222222222222211 (App list R_3322222222222332) (Prod lpe_332222222222233222222222222222222222222222111 (App list (App prod (App PExpr C_332222222222233222222222222) (App PExpr C_332222222222233222222222222))) (Prod pe1_3322222222222332222222222222222222222222221111 (App PExpr C_332222222222233222222222222) (Prod pe2_33222222222223322222222222222222222222222211111 (App PExpr C_332222222222233222222222222) (Prod out_332222222222233222222222222222222222222222111111 (App Coq.setoid_ring.Ring_polynom.interp_PElist R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 rsub_332222222222233222222 ropp_3322222222222332222222 req_33222222222223322222222 C_332222222222233222222222222 phi_33222222222223322222222222222222222 Cpow_3322222222222332222222222222222222222 Cp_phi_33222222222223322222222222222222222222 rpow_332222222222233222222222222222222222222 l_33222222222223322222222222222222222222222211 lpe_332222222222233222222222222222222222222222111) (Prod out_3322222222222332222222222222222222222222221111111 (App eq bool (LetIn lmp_3322222222222332222222222222222222222222221111113 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 cdiv_33222222222223322222222222222222222222222 lpe_332222222222233222222222222222222222222222111) (App list (App prod (App prod C_332222222222233222222222222 Mon) (App Pol C_332222222222233222222222222))) (App Coq.setoid_ring.Ring_polynom.Peq C_332222222222233222222222222 ceqb_3322222222222332222222222222222222 (App Coq.setoid_ring.Ring_polynom.norm_subst C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 cdiv_33222222222223322222222222222222222222222 n_3322222222222332222222222222222222222222221 lmp_3322222222222332222222222222222222222222221111113 pe1_3322222222222332222222222222222222222222221111) (App Coq.setoid_ring.Ring_polynom.norm_subst C_332222222222233222222222222 cO_3322222222222332222222222222 cI_33222222222223322222222222222 cadd_332222222222233222222222222222 cmul_3322222222222332222222222222222 csub_33222222222223322222222222222222 copp_332222222222233222222222222222222 ceqb_3322222222222332222222222222222222 cdiv_33222222222223322222222222222222222222222 n_3322222222222332222222222222222222222222221 lmp_3322222222222332222222222222222222222222221111113 pe2_33222222222223322222222222222222222222222211111))) true) (App req_33222222222223322222222 (App Coq.setoid_ring.Ring_polynom.PEeval R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 rsub_332222222222233222222 ropp_3322222222222332222222 C_332222222222233222222222222 phi_33222222222223322222222222222222222 Cpow_3322222222222332222222222222222222222 Cp_phi_33222222222223322222222222222222222222 rpow_332222222222233222222222222222222222222 l_33222222222223322222222222222222222222222211 pe1_3322222222222332222222222222222222222222221111) (App Coq.setoid_ring.Ring_polynom.PEeval R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 rsub_332222222222233222222 ropp_3322222222222332222222 C_332222222222233222222222222 phi_33222222222223322222222222222222222 Cpow_3322222222222332222222222222222222222 Cp_phi_33222222222223322222222222222222222222 rpow_332222222222233222222222222222222222222 l_33222222222223322222222222222222222222222211 pe2_33222222222223322222222222222222222222222211111)))))))))))))))))))))))))))))))))))))) (Definition Coq.Init.Nat.mul (Fix (Functions (App mul 0 (Prod n_3322222222222331 nat (Prod m_33222222222223311 nat nat)) (Lambda n_3322222222222332 nat (Lambda m_33222222222223322 nat (Case 0 (Lambda n_332222222222233222 nat nat) (CaseMatch n_3322222222222332) (CaseBranches O (Lambda p_332222222222233222 nat (App Coq.Init.Nat.add m_33222222222223322 (App mul p_332222222222233222 m_33222222222223322))))))))) 0)) (Definition Coq.setoid_ring.Ring_theory.SRsub (Lambda R_3322222222222332 (Sort Type) (Lambda radd_33222222222223322 (Prod out_33222222222223321 R_3322222222222332 (Prod out_332222222222233211 R_3322222222222332 R_3322222222222332)) (Lambda x_332222222222233222 R_3322222222222332 (Lambda y_3322222222222332222 R_3322222222222332 (App radd_33222222222223322 x_332222222222233222 (App Coq.setoid_ring.Ring_theory.SRopp R_3322222222222332 y_3322222222222332222))))))) (Definition Coq.setoid_ring.Ring_theory.SRopp (Lambda R_3322222222222332 (Sort Type) (Lambda x_33222222222223322 R_3322222222222332 x_33222222222223322))) (Definition Coq.setoid_ring.Ring_theory.Eqsth (Lambda R_3322222222222332 (Sort Type) (App Coq.Classes.RelationClasses.eq_equivalence R_3322222222222332))) (Definition Coq.setoid_ring.Ring_theory.SReqe_Reqe (Lambda R_3322222222222332 (Sort Type) (Lambda radd_33222222222223322 (Prod out_33222222222223321 R_3322222222222332 (Prod out_332222222222233211 R_3322222222222332 R_3322222222222332)) (Lambda rmul_332222222222233222 (Prod out_332222222222233221 R_3322222222222332 (Prod out_3322222222222332211 R_3322222222222332 R_3322222222222332)) (Lambda req_3322222222222332222 (Prod out_3322222222222332221 R_3322222222222332 (Prod out_33222222222223322211 R_3322222222222332 (Sort Prop))) (Lambda SReqe_33222222222223322222 (App sring_eq_ext R_3322222222222332 radd_33222222222223322 rmul_332222222222233222 req_3322222222222332222) (App mk_reqe R_3322222222222332 radd_33222222222223322 rmul_332222222222233222 (App Coq.setoid_ring.Ring_theory.SRopp R_3322222222222332) req_3322222222222332222 (App Coq.setoid_ring.Ring_theory.SRadd_ext R_3322222222222332 radd_33222222222223322 rmul_332222222222233222 req_3322222222222332222 SReqe_33222222222223322222) (App Coq.setoid_ring.Ring_theory.SRmul_ext R_3322222222222332 radd_33222222222223322 rmul_332222222222233222 req_3322222222222332222 SReqe_33222222222223322222) (App Coq.setoid_ring.Ring_theory.SRopp_ext R_3322222222222332 req_3322222222222332222)))))))) (Definition Coq.setoid_ring.Ring_theory.Eq_s_ext (Lambda R_3322222222222332 (Sort Type) (Lambda radd_33222222222223322 (Prod out_33222222222223321 R_3322222222222332 (Prod out_332222222222233211 R_3322222222222332 R_3322222222222332)) (Lambda rmul_332222222222233222 (Prod out_332222222222233221 R_3322222222222332 (Prod out_3322222222222332211 R_3322222222222332 R_3322222222222332)) (App mk_seqe R_3322222222222332 radd_33222222222223322 rmul_332222222222233222 (App eq R_3322222222222332) (Cast (Cast (Lambda x_3322222222222332222 R_3322222222222332 (Lambda y_33222222222223322222 R_3322222222222332 (Lambda H_332222222222233222222 (App eq R_3322222222222332 x_3322222222222332222 y_33222222222223322222) (Cast (Lambda x0_3322222222222332222222 R_3322222222222332 (Lambda y0_33222222222223322222222 R_3322222222222332 (Lambda H0_332222222222233222222222 (App eq R_3322222222222332 x0_3322222222222332222222 y0_33222222222223322222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_3322222222222332 (App eq R_3322222222222332) (App Coq.Classes.RelationClasses.eq_Transitive R_3322222222222332) (App radd_33222222222223322 x_3322222222222332222 x0_3322222222222332222222) (App radd_33222222222223322 x_3322222222222332222 y0_33222222222223322222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism R_3322222222222332 (Prod out_3322222222222332222222221 R_3322222222222332 R_3322222222222332) (App eq R_3322222222222332) (App Coq.Classes.Morphisms.respectful R_3322222222222332 R_3322222222222332 (App eq R_3322222222222332) (App eq R_3322222222222332)) radd_33222222222223322 (App Coq.Classes.Morphisms.reflexive_proper (Prod out_3322222222222332222222221 R_3322222222222332 (Prod out_33222222222223322222222211 R_3322222222222332 R_3322222222222332)) (App Coq.Classes.Morphisms.respectful R_3322222222222332 (Prod out_3322222222222332222222221 R_3322222222222332 R_3322222222222332) (App eq R_3322222222222332) (App Coq.Classes.Morphisms.respectful R_3322222222222332 R_3322222222222332 (App eq R_3322222222222332) (App eq R_3322222222222332))) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive R_3322222222222332 (Prod out_3322222222222332222222221 R_3322222222222332 R_3322222222222332) (App Coq.Classes.Morphisms.respectful R_3322222222222332 R_3322222222222332 (App eq R_3322222222222332) (App eq R_3322222222222332)) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive R_3322222222222332 R_3322222222222332 (App eq R_3322222222222332) (App Coq.Classes.RelationClasses.eq_Reflexive R_3322222222222332))) radd_33222222222223322) x_3322222222222332222 (App Coq.Classes.Morphisms.eq_proper_proxy R_3322222222222332 x_3322222222222332222) x0_3322222222222332222222 y0_33222222222223322222222 H0_332222222222233222222222) (App radd_33222222222223322 y_33222222222223322222 y0_33222222222223322222222) (App radd_33222222222223322 y_33222222222223322222 y0_33222222222223322222222) (App Coq.Classes.Morphisms.eq_proper_proxy R_3322222222222332 (App radd_33222222222223322 y_33222222222223322222 y0_33222222222223322222222)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_3322222222222332 (App eq R_3322222222222332) (App Coq.Classes.RelationClasses.eq_Transitive R_3322222222222332) (App radd_33222222222223322 x_3322222222222332222 y0_33222222222223322222222) (App radd_33222222222223322 y_33222222222223322222 y0_33222222222223322222222) (App Coq.Classes.Morphisms.reflexive_proper (Prod out_3322222222222332222222221 R_3322222222222332 (Prod out_33222222222223322222222211 R_3322222222222332 R_3322222222222332)) (App Coq.Classes.Morphisms.respectful R_3322222222222332 (Prod out_3322222222222332222222221 R_3322222222222332 R_3322222222222332) (App eq R_3322222222222332) (App Coq.Classes.Morphisms.respectful R_3322222222222332 R_3322222222222332 (App eq R_3322222222222332) (App eq R_3322222222222332))) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive R_3322222222222332 (Prod out_3322222222222332222222221 R_3322222222222332 R_3322222222222332) (App Coq.Classes.Morphisms.respectful R_3322222222222332 R_3322222222222332 (App eq R_3322222222222332) (App eq R_3322222222222332)) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive R_3322222222222332 R_3322222222222332 (App eq R_3322222222222332) (App Coq.Classes.RelationClasses.eq_Reflexive R_3322222222222332))) radd_33222222222223322 x_3322222222222332222 y_33222222222223322222 H_332222222222233222222 y0_33222222222223322222222 y0_33222222222223322222222 (App Coq.Classes.Morphisms.eq_proper_proxy R_3322222222222332 y0_33222222222223322222222)) (App radd_33222222222223322 y_33222222222223322222 y0_33222222222223322222222) (App radd_33222222222223322 y_33222222222223322222 y0_33222222222223322222222) (App Coq.Classes.Morphisms.eq_proper_proxy R_3322222222222332 (App radd_33222222222223322 y_33222222222223322222 y0_33222222222223322222222)) (App eq_refl R_3322222222222332 (App radd_33222222222223322 y_33222222222223322222 y0_33222222222223322222222))))))) REVERTcast (App Coq.Classes.Morphisms.respectful R_3322222222222332 R_3322222222222332 (App eq R_3322222222222332) (App eq R_3322222222222332) (App radd_33222222222223322 x_3322222222222332222) (App radd_33222222222223322 y_33222222222223322222)))))) REVERTcast (App Coq.Classes.Morphisms.respectful R_3322222222222332 (Prod out_3322222222222332221 R_3322222222222332 R_3322222222222332) (App eq R_3322222222222332) (App Coq.Classes.Morphisms.respectful R_3322222222222332 R_3322222222222332 (App eq R_3322222222222332) (App eq R_3322222222222332)) radd_33222222222223322 radd_33222222222223322)) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_3322222222222332221 R_3322222222222332 (Prod out_33222222222223322211 R_3322222222222332 R_3322222222222332)) (App Coq.Classes.Morphisms.respectful R_3322222222222332 (Prod out_3322222222222332221 R_3322222222222332 R_3322222222222332) (App eq R_3322222222222332) (App Coq.Classes.Morphisms.respectful R_3322222222222332 R_3322222222222332 (App eq R_3322222222222332) (App eq R_3322222222222332))) radd_33222222222223322)) (Cast (Cast (Lambda x_3322222222222332222 R_3322222222222332 (Lambda y_33222222222223322222 R_3322222222222332 (Lambda H_332222222222233222222 (App eq R_3322222222222332 x_3322222222222332222 y_33222222222223322222) (Cast (Lambda x0_3322222222222332222222 R_3322222222222332 (Lambda y0_33222222222223322222222 R_3322222222222332 (Lambda H0_332222222222233222222222 (App eq R_3322222222222332 x0_3322222222222332222222 y0_33222222222223322222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_3322222222222332 (App eq R_3322222222222332) (App Coq.Classes.RelationClasses.eq_Transitive R_3322222222222332) (App rmul_332222222222233222 x_3322222222222332222 x0_3322222222222332222222) (App rmul_332222222222233222 x_3322222222222332222 y0_33222222222223322222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism R_3322222222222332 (Prod out_3322222222222332222222221 R_3322222222222332 R_3322222222222332) (App eq R_3322222222222332) (App Coq.Classes.Morphisms.respectful R_3322222222222332 R_3322222222222332 (App eq R_3322222222222332) (App eq R_3322222222222332)) rmul_332222222222233222 (App Coq.Classes.Morphisms.reflexive_proper (Prod out_3322222222222332222222221 R_3322222222222332 (Prod out_33222222222223322222222211 R_3322222222222332 R_3322222222222332)) (App Coq.Classes.Morphisms.respectful R_3322222222222332 (Prod out_3322222222222332222222221 R_3322222222222332 R_3322222222222332) (App eq R_3322222222222332) (App Coq.Classes.Morphisms.respectful R_3322222222222332 R_3322222222222332 (App eq R_3322222222222332) (App eq R_3322222222222332))) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive R_3322222222222332 (Prod out_3322222222222332222222221 R_3322222222222332 R_3322222222222332) (App Coq.Classes.Morphisms.respectful R_3322222222222332 R_3322222222222332 (App eq R_3322222222222332) (App eq R_3322222222222332)) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive R_3322222222222332 R_3322222222222332 (App eq R_3322222222222332) (App Coq.Classes.RelationClasses.eq_Reflexive R_3322222222222332))) rmul_332222222222233222) x_3322222222222332222 (App Coq.Classes.Morphisms.eq_proper_proxy R_3322222222222332 x_3322222222222332222) x0_3322222222222332222222 y0_33222222222223322222222 H0_332222222222233222222222) (App rmul_332222222222233222 y_33222222222223322222 y0_33222222222223322222222) (App rmul_332222222222233222 y_33222222222223322222 y0_33222222222223322222222) (App Coq.Classes.Morphisms.eq_proper_proxy R_3322222222222332 (App rmul_332222222222233222 y_33222222222223322222 y0_33222222222223322222222)) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism R_3322222222222332 (App eq R_3322222222222332) (App Coq.Classes.RelationClasses.eq_Transitive R_3322222222222332) (App rmul_332222222222233222 x_3322222222222332222 y0_33222222222223322222222) (App rmul_332222222222233222 y_33222222222223322222 y0_33222222222223322222222) (App Coq.Classes.Morphisms.reflexive_proper (Prod out_3322222222222332222222221 R_3322222222222332 (Prod out_33222222222223322222222211 R_3322222222222332 R_3322222222222332)) (App Coq.Classes.Morphisms.respectful R_3322222222222332 (Prod out_3322222222222332222222221 R_3322222222222332 R_3322222222222332) (App eq R_3322222222222332) (App Coq.Classes.Morphisms.respectful R_3322222222222332 R_3322222222222332 (App eq R_3322222222222332) (App eq R_3322222222222332))) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive R_3322222222222332 (Prod out_3322222222222332222222221 R_3322222222222332 R_3322222222222332) (App Coq.Classes.Morphisms.respectful R_3322222222222332 R_3322222222222332 (App eq R_3322222222222332) (App eq R_3322222222222332)) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive R_3322222222222332 R_3322222222222332 (App eq R_3322222222222332) (App Coq.Classes.RelationClasses.eq_Reflexive R_3322222222222332))) rmul_332222222222233222 x_3322222222222332222 y_33222222222223322222 H_332222222222233222222 y0_33222222222223322222222 y0_33222222222223322222222 (App Coq.Classes.Morphisms.eq_proper_proxy R_3322222222222332 y0_33222222222223322222222)) (App rmul_332222222222233222 y_33222222222223322222 y0_33222222222223322222222) (App rmul_332222222222233222 y_33222222222223322222 y0_33222222222223322222222) (App Coq.Classes.Morphisms.eq_proper_proxy R_3322222222222332 (App rmul_332222222222233222 y_33222222222223322222 y0_33222222222223322222222)) (App eq_refl R_3322222222222332 (App rmul_332222222222233222 y_33222222222223322222 y0_33222222222223322222222))))))) REVERTcast (App Coq.Classes.Morphisms.respectful R_3322222222222332 R_3322222222222332 (App eq R_3322222222222332) (App eq R_3322222222222332) (App rmul_332222222222233222 x_3322222222222332222) (App rmul_332222222222233222 y_33222222222223322222)))))) REVERTcast (App Coq.Classes.Morphisms.respectful R_3322222222222332 (Prod out_3322222222222332221 R_3322222222222332 R_3322222222222332) (App eq R_3322222222222332) (App Coq.Classes.Morphisms.respectful R_3322222222222332 R_3322222222222332 (App eq R_3322222222222332) (App eq R_3322222222222332)) rmul_332222222222233222 rmul_332222222222233222)) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_3322222222222332221 R_3322222222222332 (Prod out_33222222222223322211 R_3322222222222332 R_3322222222222332)) (App Coq.Classes.Morphisms.respectful R_3322222222222332 (Prod out_3322222222222332221 R_3322222222222332 R_3322222222222332) (App eq R_3322222222222332) (App Coq.Classes.Morphisms.respectful R_3322222222222332 R_3322222222222332 (App eq R_3322222222222332) (App eq R_3322222222222332))) rmul_332222222222233222))))))) (Definition Coq.setoid_ring.Ring_theory.SRth_ARth (Lambda R_3322222222222332 (Sort Type) (Lambda rO_33222222222223322 R_3322222222222332 (Lambda rI_332222222222233222 R_3322222222222332 (Lambda radd_3322222222222332222 (Prod out_3322222222222332221 R_3322222222222332 (Prod out_33222222222223322211 R_3322222222222332 R_3322222222222332)) (Lambda rmul_33222222222223322222 (Prod out_33222222222223322221 R_3322222222222332 (Prod out_332222222222233222211 R_3322222222222332 R_3322222222222332)) (Lambda req_332222222222233222222 (Prod out_332222222222233222221 R_3322222222222332 (Prod out_3322222222222332222211 R_3322222222222332 (Sort Prop))) (Lambda Rsth_3322222222222332222222 (App Equivalence R_3322222222222332 req_332222222222233222222) (Lambda SRth_33222222222223322222222 (App semi_ring_theory R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 req_332222222222233222222) (App mk_art R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 (App Coq.setoid_ring.Ring_theory.SRsub R_3322222222222332 radd_3322222222222332222) (App Coq.setoid_ring.Ring_theory.SRopp R_3322222222222332) req_332222222222233222222 (App Coq.setoid_ring.Ring_theory.SRadd_0_l R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 req_332222222222233222222 SRth_33222222222223322222222) (App Coq.setoid_ring.Ring_theory.SRadd_comm R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 req_332222222222233222222 SRth_33222222222223322222222) (App Coq.setoid_ring.Ring_theory.SRadd_assoc R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 req_332222222222233222222 SRth_33222222222223322222222) (App Coq.setoid_ring.Ring_theory.SRmul_1_l R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 req_332222222222233222222 SRth_33222222222223322222222) (App Coq.setoid_ring.Ring_theory.SRmul_0_l R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 req_332222222222233222222 SRth_33222222222223322222222) (App Coq.setoid_ring.Ring_theory.SRmul_comm R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 req_332222222222233222222 SRth_33222222222223322222222) (App Coq.setoid_ring.Ring_theory.SRmul_assoc R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 req_332222222222233222222 SRth_33222222222223322222222) (App Coq.setoid_ring.Ring_theory.SRdistr_l R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 req_332222222222233222222 SRth_33222222222223322222222) (App Coq.setoid_ring.Ring_theory.SRopp_mul_l R_3322222222222332 rmul_33222222222223322222 req_332222222222233222222 Rsth_3322222222222332222222) (App Coq.setoid_ring.Ring_theory.SRopp_add R_3322222222222332 radd_3322222222222332222 req_332222222222233222222 Rsth_3322222222222332222222) (App Coq.setoid_ring.Ring_theory.SRsub_def R_3322222222222332 radd_3322222222222332222 req_332222222222233222222 Rsth_3322222222222332222222))))))))))) (Definition Coq.setoid_ring.ArithRing.natSRth (App mk_srt nat O (App S O) Coq.Init.Nat.add Coq.Init.Nat.mul (App eq nat) Coq.Arith.PeanoNat.Nat.add_0_l Coq.Arith.PeanoNat.Nat.add_comm Coq.Arith.PeanoNat.Nat.add_assoc Coq.Arith.PeanoNat.Nat.mul_1_l Coq.Arith.PeanoNat.Nat.mul_0_l Coq.Arith.PeanoNat.Nat.mul_comm Coq.Arith.PeanoNat.Nat.mul_assoc Coq.Arith.PeanoNat.Nat.mul_add_distr_r)) (Definition Coq.NArith.BinNatDef.N.add (Lambda n_3322222222222332 N (Lambda m_33222222222223322 N (Case 0 (Lambda n_332222222222233222 N N) (CaseMatch n_3322222222222332) (CaseBranches m_33222222222223322 (Lambda p_332222222222233222 positive (Case 0 (Lambda m_3322222222222332222 N N) (CaseMatch m_33222222222223322) (CaseBranches n_3322222222222332 (Lambda q_3322222222222332222 positive (App Npos (App Coq.PArith.BinPosDef.Pos.add p_332222222222233222 q_3322222222222332222))))))))))) (Definition Coq.NArith.BinNatDef.N.mul (Lambda n_3322222222222332 N (Lambda m_33222222222223322 N (Case 0 (Lambda n_332222222222233222 N N) (CaseMatch n_3322222222222332) (CaseBranches N0 (Lambda p_332222222222233222 positive (Case 0 (Lambda m_3322222222222332222 N N) (CaseMatch m_33222222222223322) (CaseBranches N0 (Lambda q_3322222222222332222 positive (App Npos (App Coq.PArith.BinPosDef.Pos.mul p_332222222222233222 q_3322222222222332222))))))))))) (Definition Coq.NArith.BinNatDef.N.eqb (Fix (Functions (App eqb 0 (Prod n_3322222222222331 N (Prod m_33222222222223311 N bool)) (Lambda n_3322222222222332 N (Lambda m_33222222222223322 N (Case 0 (Lambda n_332222222222233222 N bool) (CaseMatch n_3322222222222332) (CaseBranches (Case 0 (Lambda m_332222222222233222 N bool) (CaseMatch m_33222222222223322) (CaseBranches true (Lambda p_332222222222233222 positive false))) (Lambda p_332222222222233222 positive (Case 0 (Lambda m_3322222222222332222 N bool) (CaseMatch m_33222222222223322) (CaseBranches false (Lambda q_3322222222222332222 positive (App Coq.PArith.BinPosDef.Pos.eqb p_332222222222233222 q_3322222222222332222))))))))))) 0)) (Definition Coq.NArith.BinNatDef.N.to_nat (Lambda a_3322222222222332 N (Case 0 (Lambda a_33222222222223322 N nat) (CaseMatch a_3322222222222332) (CaseBranches O (Lambda p_33222222222223322 positive (App Coq.PArith.BinPosDef.Pos.to_nat p_33222222222223322)))))) (Definition Coq.setoid_ring.Ring_theory.SRmorph_Rmorph (Lambda R_3322222222222332 (Sort Type) (Lambda rO_33222222222223322 R_3322222222222332 (Lambda rI_332222222222233222 R_3322222222222332 (Lambda radd_3322222222222332222 (Prod out_3322222222222332221 R_3322222222222332 (Prod out_33222222222223322211 R_3322222222222332 R_3322222222222332)) (Lambda rmul_33222222222223322222 (Prod out_33222222222223322221 R_3322222222222332 (Prod out_332222222222233222211 R_3322222222222332 R_3322222222222332)) (Lambda req_332222222222233222222 (Prod out_332222222222233222221 R_3322222222222332 (Prod out_3322222222222332222211 R_3322222222222332 (Sort Prop))) (Lambda Rsth_3322222222222332222222 (App Equivalence R_3322222222222332 req_332222222222233222222) (Lambda C_33222222222223322222222 (Sort Type) (Lambda cO_332222222222233222222222 C_33222222222223322222222 (Lambda cI_3322222222222332222222222 C_33222222222223322222222 (Lambda cadd_33222222222223322222222222 (Prod out_33222222222223322222222221 C_33222222222223322222222 (Prod out_332222222222233222222222211 C_33222222222223322222222 C_33222222222223322222222)) (Lambda cmul_332222222222233222222222222 (Prod out_332222222222233222222222221 C_33222222222223322222222 (Prod out_3322222222222332222222222211 C_33222222222223322222222 C_33222222222223322222222)) (Lambda ceqb_3322222222222332222222222222 (Prod out_3322222222222332222222222221 C_33222222222223322222222 (Prod out_33222222222223322222222222211 C_33222222222223322222222 bool)) (Lambda phi_33222222222223322222222222222 (Prod out_33222222222223322222222222221 C_33222222222223322222222 R_3322222222222332) (Lambda Smorph_332222222222233222222222222222 (App semi_morph R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 req_332222222222233222222 C_33222222222223322222222 cO_332222222222233222222222 cI_3322222222222332222222222 cadd_33222222222223322222222222 cmul_332222222222233222222222222 ceqb_3322222222222332222222222222 phi_33222222222223322222222222222) (Case 13 (Lambda out_3322222222222332222222222222222 (App semi_morph R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 req_332222222222233222222 C_33222222222223322222222 cO_332222222222233222222222 cI_3322222222222332222222222 cadd_33222222222223322222222222 cmul_332222222222233222222222222 ceqb_3322222222222332222222222222 phi_33222222222223322222222222222) (App ring_morph R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 (App Coq.setoid_ring.Ring_theory.SRsub R_3322222222222332 radd_3322222222222332222) (App Coq.setoid_ring.Ring_theory.SRopp R_3322222222222332) req_332222222222233222222 C_33222222222223322222222 cO_332222222222233222222222 cI_3322222222222332222222222 cadd_33222222222223322222222222 cmul_332222222222233222222222222 cadd_33222222222223322222222222 (Lambda x_33222222222223322222222222222222 C_33222222222223322222222 x_33222222222223322222222222222222) ceqb_3322222222222332222222222222 phi_33222222222223322222222222222)) (CaseMatch Smorph_332222222222233222222222222222) (CaseBranches (Lambda Smorph2_3322222222222332222222222222222 (App req_332222222222233222222 (App phi_33222222222223322222222222222 cO_332222222222233222222222) rO_33222222222223322) (Lambda Smorph3_33222222222223322222222222222222 (App req_332222222222233222222 (App phi_33222222222223322222222222222 cI_3322222222222332222222222) rI_332222222222233222) (Lambda Smorph_add0_332222222222233222222222222222222 (Prod x_332222222222233222222222222222221 C_33222222222223322222222 (Prod y_3322222222222332222222222222222211 C_33222222222223322222222 (App req_332222222222233222222 (App phi_33222222222223322222222222222 (App cadd_33222222222223322222222222 x_332222222222233222222222222222221 y_3322222222222332222222222222222211)) (App radd_3322222222222332222 (App phi_33222222222223322222222222222 x_332222222222233222222222222222221) (App phi_33222222222223322222222222222 y_3322222222222332222222222222222211))))) (Lambda Smorph_mul0_3322222222222332222222222222222222 (Prod x_3322222222222332222222222222222221 C_33222222222223322222222 (Prod y_33222222222223322222222222222222211 C_33222222222223322222222 (App req_332222222222233222222 (App phi_33222222222223322222222222222 (App cmul_332222222222233222222222222 x_3322222222222332222222222222222221 y_33222222222223322222222222222222211)) (App rmul_33222222222223322222 (App phi_33222222222223322222222222222 x_3322222222222332222222222222222221) (App phi_33222222222223322222222222222 y_33222222222223322222222222222222211))))) (Lambda Smorph_eq0_33222222222223322222222222222222222 (Prod x_33222222222223322222222222222222221 C_33222222222223322222222 (Prod y_332222222222233222222222222222222211 C_33222222222223322222222 (Prod out_3322222222222332222222222222222222111 (App eq bool (App ceqb_3322222222222332222222222222 x_33222222222223322222222222222222221 y_332222222222233222222222222222222211) true) (App req_332222222222233222222 (App phi_33222222222223322222222222222 x_33222222222223322222222222222222221) (App phi_33222222222223322222222222222 y_332222222222233222222222222222222211))))) (App mkmorph R_3322222222222332 rO_33222222222223322 rI_332222222222233222 radd_3322222222222332222 rmul_33222222222223322222 (App Coq.setoid_ring.Ring_theory.SRsub R_3322222222222332 radd_3322222222222332222) (App Coq.setoid_ring.Ring_theory.SRopp R_3322222222222332) req_332222222222233222222 C_33222222222223322222222 cO_332222222222233222222222 cI_3322222222222332222222222 cadd_33222222222223322222222222 cmul_332222222222233222222222222 cadd_33222222222223322222222222 (Lambda x_332222222222233222222222222222222222 C_33222222222223322222222 x_332222222222233222222222222222222222) ceqb_3322222222222332222222222222 phi_33222222222223322222222222222 Smorph2_3322222222222332222222222222222 Smorph3_33222222222223322222222222222222 Smorph_add0_332222222222233222222222222222222 Smorph_add0_332222222222233222222222222222222 Smorph_mul0_3322222222222332222222222222222222 (Lambda x_332222222222233222222222222222222222 C_33222222222223322222222 (App Coq.Classes.RelationClasses.reflexivity R_3322222222222332 req_332222222222233222222 (App Coq.Classes.RelationClasses.Equivalence_Reflexive R_3322222222222332 req_332222222222233222222 Rsth_3322222222222332222222) (App Coq.setoid_ring.Ring_theory.SRopp R_3322222222222332 (App phi_33222222222223322222222222222 x_332222222222233222222222222222222222)))) Smorph_eq0_33222222222223322222222222222222222)))))))))))))))))))))))) (Definition Coq.setoid_ring.ArithRing.nat_morph_N (App mkRmorph nat O (App S O) Coq.Init.Nat.add Coq.Init.Nat.mul (App eq nat) N N0 (App Npos xH) Coq.NArith.BinNatDef.N.add Coq.NArith.BinNatDef.N.mul Coq.NArith.BinNatDef.N.eqb Coq.NArith.BinNatDef.N.to_nat (App eq_refl nat O) (App eq_refl nat (App S O)) Coq.NArith.Nnat.N2Nat.inj_add Coq.NArith.Nnat.N2Nat.inj_mul (Lambda x_3322222222222332 N (Lambda y_33222222222223322 N (Lambda H_332222222222233222 (App eq bool (App Coq.NArith.BinNatDef.N.eqb x_3322222222222332 y_33222222222223322) true) (LetIn H0_3322222222222332223 (Lambda n_3322222222222332222 N (Lambda m_33222222222223322222 N (Case 2 (Lambda out_332222222222233222222 (App and (Prod out_332222222222233222221 (App eq bool (App Coq.NArith.BinNatDef.N.eqb n_3322222222222332222 m_33222222222223322222) true) (App eq N n_3322222222222332222 m_33222222222223322222)) (Prod out_332222222222233222221 (App eq N n_3322222222222332222 m_33222222222223322222) (App eq bool (App Coq.NArith.BinNatDef.N.eqb n_3322222222222332222 m_33222222222223322222) true))) (Prod out_3322222222222332222221 (App eq bool (App Coq.NArith.BinNatDef.N.eqb n_3322222222222332222 m_33222222222223322222) true) (App eq N n_3322222222222332222 m_33222222222223322222))) (CaseMatch (App Coq.NArith.BinNat.N.eqb_eq n_3322222222222332222 m_33222222222223322222)) (CaseBranches (Lambda out_332222222222233222222 (Prod out_332222222222233222221 (App eq bool (App Coq.NArith.BinNatDef.N.eqb n_3322222222222332222 m_33222222222223322222) true) (App eq N n_3322222222222332222 m_33222222222223322222)) (Lambda out_3322222222222332222222 (Prod out_3322222222222332222221 (App eq N n_3322222222222332222 m_33222222222223322222) (App eq bool (App Coq.NArith.BinNatDef.N.eqb n_3322222222222332222 m_33222222222223322222) true)) out_332222222222233222222)))))) (Prod n_3322222222222332221 N (Prod m_33222222222223322211 N (Prod out_332222222222233222111 (App eq bool (App Coq.NArith.BinNatDef.N.eqb n_3322222222222332221 m_33222222222223322211) true) (App eq N n_3322222222222332221 m_33222222222223322211)))) (LetIn H_33222222222223322233 (App H0_3322222222222332223 x_3322222222222332 y_33222222222223322 H_332222222222233222) (App eq N x_3322222222222332 y_33222222222223322) (App Coq.Init.Logic.eq_ind_r N y_33222222222223322 (Lambda x_332222222222233222332 N (App eq nat (App Coq.NArith.BinNatDef.N.to_nat x_332222222222233222332) (App Coq.NArith.BinNatDef.N.to_nat y_33222222222223322))) (App eq_refl nat (App Coq.NArith.BinNatDef.N.to_nat y_33222222222223322)) x_3322222222222332 H_33222222222223322233)))))))) (Definition Coq.setoid_ring.Ring_theory.id_phi_N (Lambda x_3322222222222332 N x_3322222222222332)) (Definition Coq.setoid_ring.Ring_theory.pow_N (Lambda R_3322222222222332 (Sort Type) (Lambda rI_33222222222223322 R_3322222222222332 (Lambda rmul_332222222222233222 (Prod out_332222222222233221 R_3322222222222332 (Prod out_3322222222222332211 R_3322222222222332 R_3322222222222332)) (Lambda x_3322222222222332222 R_3322222222222332 (Lambda p_33222222222223322222 N (Case 0 (Lambda p_332222222222233222222 N R_3322222222222332) (CaseMatch p_33222222222223322222) (CaseBranches rI_33222222222223322 (Lambda p_332222222222233222222 positive (App Coq.setoid_ring.Ring_theory.pow_pos R_3322222222222332 rmul_332222222222233222 x_3322222222222332222 p_332222222222233222222)))))))))) (Definition Coq.setoid_ring.Ring_theory.pow_N_th (Lambda R_3322222222222332 (Sort Type) (Lambda rI_33222222222223322 R_3322222222222332 (Lambda rmul_332222222222233222 (Prod out_332222222222233221 R_3322222222222332 (Prod out_3322222222222332211 R_3322222222222332 R_3322222222222332)) (Lambda req_3322222222222332222 (Prod out_3322222222222332221 R_3322222222222332 (Prod out_33222222222223322211 R_3322222222222332 (Sort Prop))) (Lambda Rsth_33222222222223322222 (App Equivalence R_3322222222222332 req_3322222222222332222) (App mkpow_th R_3322222222222332 rI_33222222222223322 rmul_332222222222233222 req_3322222222222332222 N Coq.setoid_ring.Ring_theory.id_phi_N (App Coq.setoid_ring.Ring_theory.pow_N R_3322222222222332 rI_33222222222223322 rmul_332222222222233222) (App Coq.setoid_ring.Ring_theory.pow_N_pow_N R_3322222222222332 rI_33222222222223322 rmul_332222222222233222 req_3322222222222332222 Rsth_33222222222223322222)))))))) (Definition Coq.NArith.BinNatDef.N.div_eucl (Lambda a_3322222222222332 N (Lambda b_33222222222223322 N (Case 0 (Lambda a_332222222222233222 N (App prod N N)) (CaseMatch a_3322222222222332) (CaseBranches (App pair N N N0 N0) (Lambda na_332222222222233222 positive (Case 0 (Lambda b_3322222222222332222 N (App prod N N)) (CaseMatch b_33222222222223322) (CaseBranches (App pair N N N0 a_3322222222222332) (Lambda p_3322222222222332222 positive (App Coq.NArith.BinNatDef.N.pos_div_eucl na_332222222222233222 b_33222222222223322)))))))))) (Definition Coq.setoid_ring.InitialRing.Ntriv_div_th (Lambda R_3322222222222332 (Sort Type) (Lambda req_33222222222223322 (Prod out_33222222222223321 R_3322222222222332 (Prod out_332222222222233211 R_3322222222222332 (Sort Prop))) (Lambda Rsth_332222222222233222 (App Coq.Setoids.Setoid.Setoid_Theory R_3322222222222332 req_33222222222223322) (Lambda nphi_3322222222222332222 (Prod out_3322222222222332221 N R_3322222222222332) (App mkdiv_th R_3322222222222332 req_33222222222223322 N Coq.NArith.BinNatDef.N.add Coq.NArith.BinNatDef.N.mul nphi_3322222222222332222 Coq.NArith.BinNatDef.N.div_eucl (Lambda a_33222222222223322222 N (Lambda b_332222222222233222222 N (App (Case 2 (Lambda p_3322222222222332222222 (App prod N N) (Prod out_33222222222223322222221 (Case 2 (Lambda p_33222222222223322222222 (App prod N N) (Sort Prop)) (CaseMatch p_3322222222222332222222) (CaseBranches (Lambda q_33222222222223322222222 N (Lambda r_332222222222233222222222 N (App eq N a_33222222222223322222 (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul b_332222222222233222222 q_33222222222223322222222) r_332222222222233222222222)))))) (Case 2 (Lambda p_332222222222233222222212 (App prod N N) (Sort Prop)) (CaseMatch p_3322222222222332222222) (CaseBranches (Lambda q_332222222222233222222212 N (Lambda r_3322222222222332222222122 N (App req_33222222222223322 (App nphi_3322222222222332222 a_33222222222223322222) (App nphi_3322222222222332222 (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul b_332222222222233222222 q_332222222222233222222212) r_3322222222222332222222122))))))))) (CaseMatch (App Coq.NArith.BinNatDef.N.div_eucl a_33222222222223322222 b_332222222222233222222)) (CaseBranches (Lambda n_3322222222222332222222 N (Lambda n0_33222222222223322222222 N (Lambda H_332222222222233222222222 (App eq N a_33222222222223322222 (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul b_332222222222233222222 n_3322222222222332222222) n0_33222222222223322222222)) (App Coq.Init.Logic.eq_ind_r N (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul b_332222222222233222222 n_3322222222222332222222) n0_33222222222223322222222) (Lambda a_3322222222222332222222222 N (App req_33222222222223322 (App nphi_3322222222222332222 a_3322222222222332222222222) (App nphi_3322222222222332222 (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul b_332222222222233222222 n_3322222222222332222222) n0_33222222222223322222222)))) (App Coq.Init.Logic.eq_ind_r N (App Coq.NArith.BinNatDef.N.mul n_3322222222222332222222 b_332222222222233222222) (Lambda n_3322222222222332222222222 N (App req_33222222222223322 (App nphi_3322222222222332222 (App Coq.NArith.BinNatDef.N.add n_3322222222222332222222222 n0_33222222222223322222222)) (App nphi_3322222222222332222 (App Coq.NArith.BinNatDef.N.add n_3322222222222332222222222 n0_33222222222223322222222)))) (App Coq.Setoids.Setoid.Seq_refl R_3322222222222332 req_33222222222223322 Rsth_332222222222233222 (App nphi_3322222222222332222 (App Coq.NArith.BinNatDef.N.add (App Coq.NArith.BinNatDef.N.mul n_3322222222222332222222 b_332222222222233222222) n0_33222222222223322222222))) (App Coq.NArith.BinNatDef.N.mul b_332222222222233222222 n_3322222222222332222222) (App Coq.NArith.BinNat.N.mul_comm b_332222222222233222222 n_3322222222222332222222)) a_33222222222223322222 H_332222222222233222222222)))))) (App Coq.NArith.BinNat.N.div_eucl_spec a_33222222222223322222 b_332222222222233222222)))))))))) (Definition Coq.setoid_ring.ArithRing.natr_ring_lemma1 (App Coq.setoid_ring.Ring_polynom.ring_correct nat O (App S O) Coq.Init.Nat.add Coq.Init.Nat.mul (App Coq.setoid_ring.Ring_theory.SRsub nat Coq.Init.Nat.add) (App Coq.setoid_ring.Ring_theory.SRopp nat) (App eq nat) (App Coq.setoid_ring.Ring_theory.Eqsth nat) (App Coq.setoid_ring.Ring_theory.SReqe_Reqe nat Coq.Init.Nat.add Coq.Init.Nat.mul (App eq nat) (App Coq.setoid_ring.Ring_theory.Eq_s_ext nat Coq.Init.Nat.add Coq.Init.Nat.mul)) (App Coq.setoid_ring.Ring_theory.SRth_ARth nat O (App S O) Coq.Init.Nat.add Coq.Init.Nat.mul (App eq nat) (App Coq.setoid_ring.Ring_theory.Eqsth nat) Coq.setoid_ring.ArithRing.natSRth) N N0 (App Npos xH) Coq.NArith.BinNatDef.N.add Coq.NArith.BinNatDef.N.mul Coq.NArith.BinNatDef.N.add (Lambda x_3322222222222332 N x_3322222222222332) Coq.NArith.BinNatDef.N.eqb Coq.NArith.BinNatDef.N.to_nat (App Coq.setoid_ring.Ring_theory.SRmorph_Rmorph nat O (App S O) Coq.Init.Nat.add Coq.Init.Nat.mul (App eq nat) (App Coq.setoid_ring.Ring_theory.Eqsth nat) N N0 (App Npos xH) Coq.NArith.BinNatDef.N.add Coq.NArith.BinNatDef.N.mul Coq.NArith.BinNatDef.N.eqb Coq.NArith.BinNatDef.N.to_nat Coq.setoid_ring.ArithRing.nat_morph_N) N Coq.setoid_ring.Ring_theory.id_phi_N (App Coq.setoid_ring.Ring_theory.pow_N nat (App S O) Coq.Init.Nat.mul) (App Coq.setoid_ring.Ring_theory.pow_N_th nat (App S O) Coq.Init.Nat.mul (App eq nat) (App Coq.setoid_ring.Ring_theory.Eqsth nat)) Coq.NArith.BinNatDef.N.div_eucl (App Coq.setoid_ring.InitialRing.Ntriv_div_th nat (App eq nat) (App Coq.setoid_ring.Ring_theory.Eqsth nat) Coq.NArith.BinNatDef.N.to_nat))) (Definition Coq.setoid_ring.Ring_tac.ring_subst_niter (App Coq.Init.Nat.mul (App Coq.Init.Nat.mul (App S (App S (App S (App S (App S (App S (App S (App S (App S (App S O)))))))))) (App S (App S (App S (App S (App S (App S (App S (App S (App S (App S O))))))))))) (App S (App S (App S (App S (App S (App S (App S (App S (App S (App S O)))))))))))) (Definition Coq.setoid_ring.Ring_polynom.mon_of_pol (Lambda C_332222222222233222222222222222 (Sort Type) (Lambda cO_3322222222222332222222222222222 C_332222222222233222222222222222 (Lambda ceqb_33222222222223322222222222222222 (Prod out_33222222222223322222222222222221 C_332222222222233222222222222222 (Prod out_332222222222233222222222222222211 C_332222222222233222222222222222 bool)) (Fix (Functions (App mon_of_pol 0 (Prod P_332222222222233222222222222222221 (App Pol C_332222222222233222222222222222) (App option (App prod C_332222222222233222222222222222 Mon))) (Lambda P_332222222222233222222222222222222 (App Pol C_332222222222233222222222222222) (Case 1 (Lambda P_3322222222222332222222222222222222 (App Pol C_332222222222233222222222222222) (App option (App prod C_332222222222233222222222222222 Mon))) (CaseMatch P_332222222222233222222222222222222) (CaseBranches (Lambda c_3322222222222332222222222222222222 C_332222222222233222222222222222 (Case 0 (Lambda b_33222222222223322222222222222222222 bool (App option (App prod C_332222222222233222222222222222 Mon))) (CaseMatch (App ceqb_33222222222223322222222222222222 c_3322222222222332222222222222222222 cO_3322222222222332222222222222222)) (CaseBranches (App None (App prod C_332222222222233222222222222222 Mon)) (App Some (App prod C_332222222222233222222222222222 Mon) (App pair C_332222222222233222222222222222 Mon c_3322222222222332222222222222222222 mon0))))) (Lambda j_3322222222222332222222222222222222 positive (Lambda P_33222222222223322222222222222222222 (App Pol C_332222222222233222222222222222) (Case 1 (Lambda x_332222222222233222222222222222222222 (App option (App prod C_332222222222233222222222222222 Mon)) (App option (App prod C_332222222222233222222222222222 Mon))) (CaseMatch (App mon_of_pol P_33222222222223322222222222222222222)) (CaseBranches (Lambda p_332222222222233222222222222222222222 (App prod C_332222222222233222222222222222 Mon) (Case 2 (Lambda p_3322222222222332222222222222222222222 (App prod C_332222222222233222222222222222 Mon) (App option (App prod C_332222222222233222222222222222 Mon))) (CaseMatch p_332222222222233222222222222222222222) (CaseBranches (Lambda c_3322222222222332222222222222222222222 C_332222222222233222222222222222 (Lambda m_33222222222223322222222222222222222222 Mon (App Some (App prod C_332222222222233222222222222222 Mon) (App pair C_332222222222233222222222222222 Mon c_3322222222222332222222222222222222222 (App Coq.setoid_ring.Ring_polynom.mkZmon j_3322222222222332222222222222222222 m_33222222222223322222222222222222222222)))))))) (App None (App prod C_332222222222233222222222222222 Mon)))))) (Lambda P_3322222222222332222222222222222222 (App Pol C_332222222222233222222222222222) (Lambda i_33222222222223322222222222222222222 positive (Lambda Q_332222222222233222222222222222222222 (App Pol C_332222222222233222222222222222) (Case 0 (Lambda b_3322222222222332222222222222222222222 bool (App option (App prod C_332222222222233222222222222222 Mon))) (CaseMatch (App Coq.setoid_ring.Ring_polynom.Peq C_332222222222233222222222222222 ceqb_33222222222223322222222222222222 Q_332222222222233222222222222222222222 (App Coq.setoid_ring.Ring_polynom.P0 C_332222222222233222222222222222 cO_3322222222222332222222222222222))) (CaseBranches (Case 1 (Lambda x_3322222222222332222222222222222222222 (App option (App prod C_332222222222233222222222222222 Mon)) (App option (App prod C_332222222222233222222222222222 Mon))) (CaseMatch (App mon_of_pol P_3322222222222332222222222222222222)) (CaseBranches (Lambda p_3322222222222332222222222222222222222 (App prod C_332222222222233222222222222222 Mon) (Case 2 (Lambda p_33222222222223322222222222222222222222 (App prod C_332222222222233222222222222222 Mon) (App option (App prod C_332222222222233222222222222222 Mon))) (CaseMatch p_3322222222222332222222222222222222222) (CaseBranches (Lambda c_33222222222223322222222222222222222222 C_332222222222233222222222222222 (Lambda m_332222222222233222222222222222222222222 Mon (App Some (App prod C_332222222222233222222222222222 Mon) (App pair C_332222222222233222222222222222 Mon c_33222222222223322222222222222222222222 (App Coq.setoid_ring.Ring_polynom.mkVmon i_33222222222223322222222222222222222 m_332222222222233222222222222222222222222)))))))) (App None (App prod C_332222222222233222222222222222 Mon)))) (App None (App prod C_332222222222233222222222222222 Mon)))))))))))) 0))))) (Definition Coq.setoid_ring.Ring_polynom.norm_subst (Lambda C_332222222222233222222222222222 (Sort Type) (Lambda cO_3322222222222332222222222222222 C_332222222222233222222222222222 (Lambda cI_33222222222223322222222222222222 C_332222222222233222222222222222 (Lambda cadd_332222222222233222222222222222222 (Prod out_332222222222233222222222222222221 C_332222222222233222222222222222 (Prod out_3322222222222332222222222222222211 C_332222222222233222222222222222 C_332222222222233222222222222222)) (Lambda cmul_3322222222222332222222222222222222 (Prod out_3322222222222332222222222222222221 C_332222222222233222222222222222 (Prod out_33222222222223322222222222222222211 C_332222222222233222222222222222 C_332222222222233222222222222222)) (Lambda csub_33222222222223322222222222222222222 (Prod out_33222222222223322222222222222222221 C_332222222222233222222222222222 (Prod out_332222222222233222222222222222222211 C_332222222222233222222222222222 C_332222222222233222222222222222)) (Lambda copp_332222222222233222222222222222222222 (Prod out_332222222222233222222222222222222221 C_332222222222233222222222222222 C_332222222222233222222222222222) (Lambda ceqb_3322222222222332222222222222222222222 (Prod out_3322222222222332222222222222222222221 C_332222222222233222222222222222 (Prod out_33222222222223322222222222222222222211 C_332222222222233222222222222222 bool)) (Lambda cdiv_33222222222223322222222222222222222222 (Prod out_33222222222223322222222222222222222221 C_332222222222233222222222222222 (Prod out_332222222222233222222222222222222222211 C_332222222222233222222222222222 (App prod C_332222222222233222222222222222 C_332222222222233222222222222222))) (Lambda n_332222222222233222222222222222222222222 nat (Lambda lmp_3322222222222332222222222222222222222222 (App list (App prod (App prod C_332222222222233222222222222222 Mon) (App Pol C_332222222222233222222222222222))) (LetIn subst_l_33222222222223322222222222222222222222223 (Lambda P_33222222222223322222222222222222222222222 (App Pol C_332222222222233222222222222222) (App Coq.setoid_ring.Ring_polynom.PNSubstL C_332222222222233222222222222222 cO_3322222222222332222222222222222 cI_33222222222223322222222222222222 cadd_332222222222233222222222222222222 cmul_3322222222222332222222222222222222 ceqb_3322222222222332222222222222222222222 cdiv_33222222222223322222222222222222222222 P_33222222222223322222222222222222222222222 lmp_3322222222222332222222222222222222222222 n_332222222222233222222222222222222222222 n_332222222222233222222222222222222222222)) (Prod P_33222222222223322222222222222222222222221 (App Pol C_332222222222233222222222222222) (App Pol C_332222222222233222222222222222)) (Lambda pe_332222222222233222222222222222222222222232 (App PExpr C_332222222222233222222222222222) (App subst_l_33222222222223322222222222222222222222223 (App Coq.setoid_ring.Ring_polynom.norm_aux C_332222222222233222222222222222 cO_3322222222222332222222222222222 cI_33222222222223322222222222222222 cadd_332222222222233222222222222222222 cmul_3322222222222332222222222222222222 csub_33222222222223322222222222222222222 copp_332222222222233222222222222222222222 ceqb_3322222222222332222222222222222222222 pe_332222222222233222222222222222222222222232)))))))))))))))) (Definition Coq.setoid_ring.Ring_polynom.mk_monpol_list (Lambda C_3322222222222332 (Sort Type) (Lambda cO_33222222222223322 C_3322222222222332 (Lambda cI_332222222222233222 C_3322222222222332 (Lambda cadd_3322222222222332222 (Prod out_3322222222222332221 C_3322222222222332 (Prod out_33222222222223322211 C_3322222222222332 C_3322222222222332)) (Lambda cmul_33222222222223322222 (Prod out_33222222222223322221 C_3322222222222332 (Prod out_332222222222233222211 C_3322222222222332 C_3322222222222332)) (Lambda csub_332222222222233222222 (Prod out_332222222222233222221 C_3322222222222332 (Prod out_3322222222222332222211 C_3322222222222332 C_3322222222222332)) (Lambda copp_3322222222222332222222 (Prod out_3322222222222332222221 C_3322222222222332 C_3322222222222332) (Lambda ceqb_33222222222223322222222 (Prod out_33222222222223322222221 C_3322222222222332 (Prod out_332222222222233222222211 C_3322222222222332 bool)) (Lambda cdiv_332222222222233222222222 (Prod out_332222222222233222222221 C_3322222222222332 (Prod out_3322222222222332222222211 C_3322222222222332 (App prod C_3322222222222332 C_3322222222222332))) (Fix (Functions (App mk_monpol_list 0 (Prod lpe_3322222222222332222222221 (App list (App prod (App PExpr C_3322222222222332) (App PExpr C_3322222222222332))) (App list (App prod (App prod C_3322222222222332 Mon) (App Pol C_3322222222222332)))) (Lambda lpe_3322222222222332222222222 (App list (App prod (App PExpr C_3322222222222332) (App PExpr C_3322222222222332))) (Case 1 (Lambda lpe_33222222222223322222222222 (App list (App prod (App PExpr C_3322222222222332) (App PExpr C_3322222222222332))) (App list (App prod (App prod C_3322222222222332 Mon) (App Pol C_3322222222222332)))) (CaseMatch lpe_3322222222222332222222222) (CaseBranches (App nil (App prod (App prod C_3322222222222332 Mon) (App Pol C_3322222222222332))) (Lambda p_33222222222223322222222222 (App prod (App PExpr C_3322222222222332) (App PExpr C_3322222222222332)) (Lambda lpe_332222222222233222222222222 (App list (App prod (App PExpr C_3322222222222332) (App PExpr C_3322222222222332))) (Case 2 (Lambda p_3322222222222332222222222222 (App prod (App PExpr C_3322222222222332) (App PExpr C_3322222222222332)) (App list (App prod (App prod C_3322222222222332 Mon) (App Pol C_3322222222222332)))) (CaseMatch p_33222222222223322222222222) (CaseBranches (Lambda me_3322222222222332222222222222 (App PExpr C_3322222222222332) (Lambda pe_33222222222223322222222222222 (App PExpr C_3322222222222332) (Case 1 (Lambda x_332222222222233222222222222222 (App option (App prod C_3322222222222332 Mon)) (App list (App prod (App prod C_3322222222222332 Mon) (App Pol C_3322222222222332)))) (CaseMatch (App Coq.setoid_ring.Ring_polynom.mon_of_pol C_3322222222222332 cO_33222222222223322 ceqb_33222222222223322222222 (App Coq.setoid_ring.Ring_polynom.norm_subst C_3322222222222332 cO_33222222222223322 cI_332222222222233222 cadd_3322222222222332222 cmul_33222222222223322222 csub_332222222222233222222 copp_3322222222222332222222 ceqb_33222222222223322222222 cdiv_332222222222233222222222 O (App nil (App prod (App prod C_3322222222222332 Mon) (App Pol C_3322222222222332))) me_3322222222222332222222222222))) (CaseBranches (Lambda m_332222222222233222222222222222 (App prod C_3322222222222332 Mon) (App cons (App prod (App prod C_3322222222222332 Mon) (App Pol C_3322222222222332)) (App pair (App prod C_3322222222222332 Mon) (App Pol C_3322222222222332) m_332222222222233222222222222222 (App Coq.setoid_ring.Ring_polynom.norm_subst C_3322222222222332 cO_33222222222223322 cI_332222222222233222 cadd_3322222222222332222 cmul_33222222222223322222 csub_332222222222233222222 copp_3322222222222332222222 ceqb_33222222222223322222222 cdiv_332222222222233222222222 O (App nil (App prod (App prod C_3322222222222332 Mon) (App Pol C_3322222222222332))) pe_33222222222223322222222222222)) (App mk_monpol_list lpe_332222222222233222222222222))) (App mk_monpol_list lpe_332222222222233222222222222)))))))))))))) 0))))))))))) (Definition Coq.PArith.BinPosDef.Pos.compare (App Coq.PArith.BinPosDef.Pos.compare_cont Eq)) (Definition Coq.setoid_ring.Ring_polynom.Peq (Lambda C_33222222222223332 (Sort Type) (Lambda ceqb_332222222222233322 (Prod out_332222222222233321 C_33222222222223332 (Prod out_3322222222222333211 C_33222222222223332 bool)) (Fix (Functions (App Peq 0 (Prod P_3322222222222333221 (App Pol C_33222222222223332) (Prod P'_33222222222223332211 (App Pol C_33222222222223332) bool)) (Lambda P_3322222222222333222 (App Pol C_33222222222223332) (Lambda P'_33222222222223332222 (App Pol C_33222222222223332) (Case 1 (Lambda P_332222222222233322222 (App Pol C_33222222222223332) bool) (CaseMatch P_3322222222222333222) (CaseBranches (Lambda c_332222222222233322222 C_33222222222223332 (Case 1 (Lambda P'_3322222222222333222222 (App Pol C_33222222222223332) bool) (CaseMatch P'_33222222222223332222) (CaseBranches (Lambda c'_3322222222222333222222 C_33222222222223332 (App ceqb_332222222222233322 c_332222222222233322222 c'_3322222222222333222222)) (Lambda p_3322222222222333222222 positive (Lambda p0_33222222222223332222222 (App Pol C_33222222222223332) false)) (Lambda p_3322222222222333222222 (App Pol C_33222222222223332) (Lambda p0_33222222222223332222222 positive (Lambda p1_332222222222233322222222 (App Pol C_33222222222223332) false)))))) (Lambda j_332222222222233322222 positive (Lambda Q_3322222222222333222222 (App Pol C_33222222222223332) (Case 1 (Lambda P'_33222222222223332222222 (App Pol C_33222222222223332) bool) (CaseMatch P'_33222222222223332222) (CaseBranches (Lambda c_33222222222223332222222 C_33222222222223332 false) (Lambda j'_33222222222223332222222 positive (Lambda Q'_332222222222233322222222 (App Pol C_33222222222223332) (Case 0 (Lambda x_3322222222222333222222222 comparison bool) (CaseMatch (App Coq.PArith.BinPosDef.Pos.compare j_332222222222233322222 j'_33222222222223332222222)) (CaseBranches (App Peq Q_3322222222222333222222 Q'_332222222222233322222222) false false)))) (Lambda p_33222222222223332222222 (App Pol C_33222222222223332) (Lambda p0_332222222222233322222222 positive (Lambda p1_3322222222222333222222222 (App Pol C_33222222222223332) false))))))) (Lambda P_332222222222233322222 (App Pol C_33222222222223332) (Lambda i_3322222222222333222222 positive (Lambda Q_33222222222223332222222 (App Pol C_33222222222223332) (Case 1 (Lambda P'_332222222222233322222222 (App Pol C_33222222222223332) bool) (CaseMatch P'_33222222222223332222) (CaseBranches (Lambda c_332222222222233322222222 C_33222222222223332 false) (Lambda p_332222222222233322222222 positive (Lambda p0_3322222222222333222222222 (App Pol C_33222222222223332) false)) (Lambda P'_332222222222233322222222 (App Pol C_33222222222223332) (Lambda i'_3322222222222333222222222 positive (Lambda Q'_33222222222223332222222222 (App Pol C_33222222222223332) (Case 0 (Lambda x_332222222222233322222222222 comparison bool) (CaseMatch (App Coq.PArith.BinPosDef.Pos.compare i_3322222222222333222222 i'_3322222222222333222222222)) (CaseBranches (Case 0 (Lambda b_332222222222233322222222222 bool bool) (CaseMatch (App Peq P_332222222222233322222 P'_332222222222233322222222)) (CaseBranches (App Peq Q_33222222222223332222222 Q'_33222222222223332222222222) false)) false false)))))))))))))))) 0)))) (Definition Coq.Arith.PeanoNat.Nat.add_le_mono_l (Lambda n_332222222222232222222 nat (Lambda m_3322222222222322222222 nat (Lambda p_33222222222223222222222 nat (Cast (App Coq.Arith.PeanoNat.Nat.bi_induction (Lambda t_332222222222232222222222 nat (App Coq.Init.Logic.iff (App le n_332222222222232222222 m_3322222222222322222222) (App le (App Coq.Init.Nat.add t_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add t_332222222222232222222222 m_3322222222222322222222)))) (Cast (Cast (Lambda x_332222222222232222222222 nat (Lambda y_3322222222222322222222222 nat (Lambda H_33222222222223222222222222 (App eq nat x_332222222222232222222222 y_3322222222222322222222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App Coq.Init.Logic.iff (App le n_332222222222232222222 m_3322222222222322222222) (App le (App Coq.Init.Nat.add x_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add x_332222222222232222222222 m_3322222222222322222222))) (App Coq.Init.Logic.iff (App le n_332222222222232222222 m_3322222222222322222222) (App le (App Coq.Init.Nat.add y_3322222222222322222222222 n_332222222222232222222) (App Coq.Init.Nat.add y_3322222222222322222222222 m_3322222222222322222222))) (App Coq.Classes.Morphisms.per_partial_app_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App le n_332222222222232222222 m_3322222222222322222222) (App le (App Coq.Init.Nat.add x_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add x_332222222222232222222222 m_3322222222222322222222)) (App le (App Coq.Init.Nat.add y_3322222222222322222222222 n_332222222222232222222) (App Coq.Init.Nat.add y_3322222222222322222222222 m_3322222222222322222222)) (App Coq.Arith.PeanoNat.Nat.le_wd (App Coq.Init.Nat.add x_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add y_3322222222222322222222222 n_332222222222232222222) (App Coq.Arith.PeanoNat.Nat.add_wd x_332222222222232222222222 y_3322222222222322222222222 H_33222222222223222222222222 n_332222222222232222222 n_332222222222232222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) n_332222222222232222222)) (App Coq.Init.Nat.add x_332222222222232222222222 m_3322222222222322222222) (App Coq.Init.Nat.add y_3322222222222322222222222 m_3322222222222322222222) (App Coq.Arith.PeanoNat.Nat.add_wd x_332222222222232222222222 y_3322222222222322222222222 H_33222222222223222222222222 m_3322222222222322222222 m_3322222222222322222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) m_3322222222222322222222)))) (App Coq.Init.Logic.iff (App le n_332222222222232222222 m_3322222222222322222222) (App le (App Coq.Init.Nat.add y_3322222222222322222222222 n_332222222222232222222) (App Coq.Init.Nat.add y_3322222222222322222222222 m_3322222222222322222222))) (App Coq.Init.Logic.iff (App le n_332222222222232222222 m_3322222222222322222222) (App le (App Coq.Init.Nat.add y_3322222222222322222222222 n_332222222222232222222) (App Coq.Init.Nat.add y_3322222222222322222222222 m_3322222222222322222222))) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App Coq.Init.Logic.iff (App le n_332222222222232222222 m_3322222222222322222222) (App le (App Coq.Init.Nat.add y_3322222222222322222222222 n_332222222222232222222) (App Coq.Init.Nat.add y_3322222222222322222222222 m_3322222222222322222222)))) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Logic.iff (App le n_332222222222232222222 m_3322222222222322222222) (App le (App Coq.Init.Nat.add y_3322222222222322222222222 n_332222222222232222222) (App Coq.Init.Nat.add y_3322222222222322222222222 m_3322222222222322222222)))))))) REVERTcast (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff (Lambda t_332222222222232222222222 nat (App Coq.Init.Logic.iff (App le n_332222222222232222222 m_3322222222222322222222) (App le (App Coq.Init.Nat.add t_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add t_332222222222232222222222 m_3322222222222322222222)))) (Lambda t_332222222222232222222222 nat (App Coq.Init.Logic.iff (App le n_332222222222232222222 m_3322222222222322222222) (App le (App Coq.Init.Nat.add t_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add t_332222222222232222222222 m_3322222222222322222222)))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_332222222222232222222221 nat (Sort Prop)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (Lambda t_332222222222232222222222 nat (App Coq.Init.Logic.iff (App le n_332222222222232222222 m_3322222222222322222222) (App le (App Coq.Init.Nat.add t_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add t_332222222222232222222222 m_3322222222222322222222)))))) (App (Lambda lemma_332222222222232222222222 (App eq nat (App Coq.Init.Nat.add O n_332222222222232222222) n_332222222222232222222) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App le n_332222222222232222222 m_3322222222222322222222) (App le (App Coq.Init.Nat.add O n_332222222222232222222) (App Coq.Init.Nat.add O m_3322222222222322222222)) (App le n_332222222222232222222 (App Coq.Init.Nat.add O m_3322222222222322222222)) (App Coq.Arith.PeanoNat.Nat.le_wd (App Coq.Init.Nat.add O n_332222222222232222222) n_332222222222232222222 lemma_332222222222232222222222 (App Coq.Init.Nat.add O m_3322222222222322222222) (App Coq.Init.Nat.add O m_3322222222222322222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App Coq.Init.Nat.add O m_3322222222222322222222))))) (App Coq.Arith.PeanoNat.Nat.add_0_l n_332222222222232222222) (App (Lambda lemma_332222222222232222222222 (App eq nat (App Coq.Init.Nat.add O m_3322222222222322222222) m_3322222222222322222222) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App le n_332222222222232222222 m_3322222222222322222222) (App le n_332222222222232222222 (App Coq.Init.Nat.add O m_3322222222222322222222)) (App le n_332222222222232222222 m_3322222222222322222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_3322222222222322222222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) le Coq.Arith.PeanoNat.Nat.le_wd n_332222222222232222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) n_332222222222232222222) (App Coq.Init.Nat.add O m_3322222222222322222222) m_3322222222222322222222 lemma_332222222222232222222222))) (App Coq.Arith.PeanoNat.Nat.add_0_l m_3322222222222322222222) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App le n_332222222222232222222 m_3322222222222322222222)))) (Lambda p_332222222222232222222222 nat (App (Lambda lemma_3322222222222322222222222 (App eq nat (App Coq.Init.Nat.add (App S p_332222222222232222222222) n_332222222222232222222) (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Logic.iff (App le n_332222222222232222222 m_3322222222222322222222) (App le (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222))) (App Coq.Init.Logic.iff (App le n_332222222222232222222 m_3322222222222322222222) (App le (App Coq.Init.Nat.add (App S p_332222222222232222222222) n_332222222222232222222) (App Coq.Init.Nat.add (App S p_332222222222232222222222) m_3322222222222322222222))) (App Coq.Init.Logic.iff (App le n_332222222222232222222 m_3322222222222322222222) (App le (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) (App Coq.Init.Nat.add (App S p_332222222222232222222222) m_3322222222222322222222))) (App Coq.Classes.Morphisms.per_partial_app_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App le n_332222222222232222222 m_3322222222222322222222) (App le (App Coq.Init.Nat.add (App S p_332222222222232222222222) n_332222222222232222222) (App Coq.Init.Nat.add (App S p_332222222222232222222222) m_3322222222222322222222)) (App le (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) (App Coq.Init.Nat.add (App S p_332222222222232222222222) m_3322222222222322222222)) (App Coq.Arith.PeanoNat.Nat.le_wd (App Coq.Init.Nat.add (App S p_332222222222232222222222) n_332222222222232222222) (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) lemma_3322222222222322222222222 (App Coq.Init.Nat.add (App S p_332222222222232222222222) m_3322222222222322222222) (App Coq.Init.Nat.add (App S p_332222222222232222222222) m_3322222222222322222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App Coq.Init.Nat.add (App S p_332222222222232222222222) m_3322222222222322222222)))))) (App Coq.Arith.PeanoNat.Nat.add_succ_l p_332222222222232222222222 n_332222222222232222222) (App (Lambda lemma_3322222222222322222222222 (App eq nat (App Coq.Init.Nat.add (App S p_332222222222232222222222) m_3322222222222322222222) (App S (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Logic.iff (App le n_332222222222232222222 m_3322222222222322222222) (App le (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222))) (App Coq.Init.Logic.iff (App le n_332222222222232222222 m_3322222222222322222222) (App le (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) (App Coq.Init.Nat.add (App S p_332222222222232222222222) m_3322222222222322222222))) (App Coq.Init.Logic.iff (App le n_332222222222232222222 m_3322222222222322222222) (App le (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) (App S (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222)))) (App Coq.Classes.Morphisms.per_partial_app_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App le n_332222222222232222222 m_3322222222222322222222) (App le (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) (App Coq.Init.Nat.add (App S p_332222222222232222222222) m_3322222222222322222222)) (App le (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) (App S (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_33222222222223222222222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) le Coq.Arith.PeanoNat.Nat.le_wd (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222))) (App Coq.Init.Nat.add (App S p_332222222222232222222222) m_3322222222222322222222) (App S (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222)) lemma_3322222222222322222222222)))) (App Coq.Arith.PeanoNat.Nat.add_succ_l p_332222222222232222222222 m_3322222222222322222222) (App (Lambda lemma_3322222222222322222222222 (App Coq.Init.Logic.iff (App le (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222)) (App le (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) (App S (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222)))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Logic.iff (App le n_332222222222232222222 m_3322222222222322222222) (App le (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222))) (App Coq.Init.Logic.iff (App le n_332222222222232222222 m_3322222222222322222222) (App le (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) (App S (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222)))) (App Coq.Init.Logic.iff (App le n_332222222222232222222 m_3322222222222322222222) (App le (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222))) (App Coq.Classes.Morphisms.per_partial_app_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App le n_332222222222232222222 m_3322222222222322222222) (App le (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) (App S (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222))) (App le (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222)) (App Coq.Classes.RelationClasses.symmetry (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Symmetric (App le (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222)) (App le (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) (App S (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222))) lemma_3322222222222322222222222)))) (App Coq.Arith.PeanoNat.Nat.succ_le_mono (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222)) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Logic.iff (App le n_332222222222232222222 m_3322222222222322222222) (App le (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222)))))))) p_33222222222223222222222) REVERTcast (App Coq.Init.Logic.iff (App le n_332222222222232222222 m_3322222222222322222222) (App le (App Coq.Init.Nat.add p_33222222222223222222222 n_332222222222232222222) (App Coq.Init.Nat.add p_33222222222223222222222 m_3322222222222322222222)))))))) (Definition Coq.Arith.Plus.plus_le_compat_l (Lambda n_332222222222232 nat (Lambda m_3322222222222322 nat (Lambda p_33222222222223222 nat (LetIn H_332222222222232223 (Lambda n_332222222222232222 nat (Lambda m_3322222222222322222 nat (Lambda p_33222222222223222222 nat (Case 2 (Lambda out_332222222222232222222 (App and (Prod out_332222222222232222221 (App le n_332222222222232222 m_3322222222222322222) (App le (App Coq.Init.Nat.add p_33222222222223222222 n_332222222222232222) (App Coq.Init.Nat.add p_33222222222223222222 m_3322222222222322222))) (Prod out_332222222222232222221 (App le (App Coq.Init.Nat.add p_33222222222223222222 n_332222222222232222) (App Coq.Init.Nat.add p_33222222222223222222 m_3322222222222322222)) (App le n_332222222222232222 m_3322222222222322222))) (Prod out_3322222222222322222221 (App le n_332222222222232222 m_3322222222222322222) (App le (App Coq.Init.Nat.add p_33222222222223222222 n_332222222222232222) (App Coq.Init.Nat.add p_33222222222223222222 m_3322222222222322222)))) (CaseMatch (App Coq.Arith.PeanoNat.Nat.add_le_mono_l n_332222222222232222 m_3322222222222322222 p_33222222222223222222)) (CaseBranches (Lambda out_332222222222232222222 (Prod out_332222222222232222221 (App le n_332222222222232222 m_3322222222222322222) (App le (App Coq.Init.Nat.add p_33222222222223222222 n_332222222222232222) (App Coq.Init.Nat.add p_33222222222223222222 m_3322222222222322222))) (Lambda out_3322222222222322222222 (Prod out_3322222222222322222221 (App le (App Coq.Init.Nat.add p_33222222222223222222 n_332222222222232222) (App Coq.Init.Nat.add p_33222222222223222222 m_3322222222222322222)) (App le n_332222222222232222 m_3322222222222322222)) out_332222222222232222222))))))) (Prod n_332222222222232221 nat (Prod m_3322222222222322211 nat (Prod p_33222222222223222111 nat (Prod out_332222222222232221111 (App le n_332222222222232221 m_3322222222222322211) (App le (App Coq.Init.Nat.add p_33222222222223222111 n_332222222222232221) (App Coq.Init.Nat.add p_33222222222223222111 m_3322222222222322211)))))) (App H_332222222222232223 n_332222222222232 m_3322222222222322 p_33222222222223222)))))) (Definition Coq.Init.Logic.eq_ind_r (Lambda A_33222222222223222 (Sort Type) (Lambda x_332222222222232222 A_33222222222223222 (Lambda P_3322222222222322222 (Prod out_3322222222222322221 A_33222222222223222 (Sort Prop)) (Lambda H_33222222222223222222 (App P_3322222222222322222 x_332222222222232222) (Lambda y_332222222222232222222 A_33222222222223222 (Lambda H0_3322222222222322222222 (App eq A_33222222222223222 y_332222222222232222222 x_332222222222232222) (App Coq.Init.Logic.eq_ind A_33222222222223222 x_332222222222232222 (Lambda y_33222222222223222222222 A_33222222222223222 (App P_3322222222222322222 y_33222222222223222222222)) H_33222222222223222222 y_332222222222232222222 (App Coq.Init.Logic.eq_sym A_33222222222223222 y_332222222222232222222 x_332222222222232222 H0_3322222222222322222222))))))))) (Definition Coq.Arith.PeanoNat.Nat.le_add_r (Lambda n_33222222222223222 nat (Lambda m_332222222222232222 nat (Cast (App Coq.Arith.PeanoNat.Nat.induction (Lambda t_3322222222222322222 nat (App le n_33222222222223222 (App Coq.Init.Nat.add n_33222222222223222 t_3322222222222322222))) (Cast (Cast (Lambda x_3322222222222322222 nat (Lambda y_33222222222223222222 nat (Lambda H_332222222222232222222 (App eq nat x_3322222222222322222 y_33222222222223222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App le n_33222222222223222 (App Coq.Init.Nat.add n_33222222222223222 x_3322222222222322222)) (App le n_33222222222223222 (App Coq.Init.Nat.add n_33222222222223222 y_33222222222223222222)) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_3322222222222322222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) le Coq.Arith.PeanoNat.Nat.le_wd n_33222222222223222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) n_33222222222223222) (App Coq.Init.Nat.add n_33222222222223222 x_3322222222222322222) (App Coq.Init.Nat.add n_33222222222223222 y_33222222222223222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_3322222222222322222221 nat nat) (App eq nat) (App Coq.Classes.Morphisms.respectful nat nat (App eq nat) (App eq nat)) Coq.Init.Nat.add Coq.Arith.PeanoNat.Nat.add_wd n_33222222222223222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) n_33222222222223222) x_3322222222222322222 y_33222222222223222222 H_332222222222232222222)) (App le n_33222222222223222 (App Coq.Init.Nat.add n_33222222222223222 y_33222222222223222222)) (App le n_33222222222223222 (App Coq.Init.Nat.add n_33222222222223222 y_33222222222223222222)) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App le n_33222222222223222 (App Coq.Init.Nat.add n_33222222222223222 y_33222222222223222222))) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App le n_33222222222223222 (App Coq.Init.Nat.add n_33222222222223222 y_33222222222223222222))))))) REVERTcast (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff (Lambda t_3322222222222322222 nat (App le n_33222222222223222 (App Coq.Init.Nat.add n_33222222222223222 t_3322222222222322222))) (Lambda t_3322222222222322222 nat (App le n_33222222222223222 (App Coq.Init.Nat.add n_33222222222223222 t_3322222222222322222))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_3322222222222322221 nat (Sort Prop)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (Lambda t_3322222222222322222 nat (App le n_33222222222223222 (App Coq.Init.Nat.add n_33222222222223222 t_3322222222222322222))))) (App (Lambda lemma_3322222222222322222 (App eq nat (App Coq.Init.Nat.add n_33222222222223222 O) n_33222222222223222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_33222222222223222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) le (App Coq.Classes.Morphisms.subrelation_proper (Prod out_33222222222223222221 nat (Prod out_332222222222232222211 nat (Sort Prop))) (App Coq.Classes.Morphisms.respectful nat (Prod out_33222222222223222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff)) le Coq.Arith.PeanoNat.Nat.le_wd (App Coq.Classes.Morphisms.respectful nat (Prod out_33222222222223222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful nat (Prod out_33222222222223222221 nat (Sort Prop)) (App eq nat) (App eq nat) (App Coq.Classes.Morphisms.subrelation_refl nat (App eq nat)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful nat (Sort Prop) (App eq nat) (App eq nat) (App Coq.Classes.Morphisms.subrelation_refl nat (App eq nat)) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation))) n_33222222222223222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) n_33222222222223222) (App Coq.Init.Nat.add n_33222222222223222 O) n_33222222222223222 lemma_3322222222222322222)) (App Coq.Arith.PeanoNat.Nat.add_0_r n_33222222222223222) (App Coq.Arith.PeanoNat.Nat.eq_le_incl n_33222222222223222 n_33222222222223222 (App Coq.Classes.RelationClasses.reflexivity nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) n_33222222222223222))) (Lambda m_3322222222222322222 nat (Lambda IH_33222222222223222222 (App le n_33222222222223222 (App Coq.Init.Nat.add n_33222222222223222 m_3322222222222322222)) (App (Lambda lemma_332222222222232222222 (App eq nat (App Coq.Init.Nat.add n_33222222222223222 (App S m_3322222222222322222)) (App S (App Coq.Init.Nat.add n_33222222222223222 m_3322222222222322222))) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_3322222222222322222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) le (App Coq.Classes.Morphisms.subrelation_proper (Prod out_3322222222222322222221 nat (Prod out_33222222222223222222211 nat (Sort Prop))) (App Coq.Classes.Morphisms.respectful nat (Prod out_3322222222222322222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff)) le Coq.Arith.PeanoNat.Nat.le_wd (App Coq.Classes.Morphisms.respectful nat (Prod out_3322222222222322222221 nat (Sort Prop)) (App eq nat) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl))) tt (App Coq.Classes.Morphisms.subrelation_respectful nat (Prod out_3322222222222322222221 nat (Sort Prop)) (App eq nat) (App eq nat) (App Coq.Classes.Morphisms.subrelation_refl nat (App eq nat)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl)) (App Coq.Classes.Morphisms.subrelation_respectful nat (Sort Prop) (App eq nat) (App eq nat) (App Coq.Classes.Morphisms.subrelation_refl nat (App eq nat)) Coq.Init.Logic.iff (App Coq.Program.Basics.flip (Sort Prop) (Sort Prop) (Sort Prop) Coq.Program.Basics.impl) Coq.Classes.Morphisms.iff_flip_impl_subrelation))) n_33222222222223222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) n_33222222222223222) (App Coq.Init.Nat.add n_33222222222223222 (App S m_3322222222222322222)) (App S (App Coq.Init.Nat.add n_33222222222223222 m_3322222222222322222)) lemma_332222222222232222222)) (App Coq.Arith.PeanoNat.Nat.add_succ_r n_33222222222223222 m_3322222222222322222) (App Coq.Arith.PeanoNat.Nat.le_le_succ_r n_33222222222223222 (App Coq.Init.Nat.add n_33222222222223222 m_3322222222222322222) IH_33222222222223222222)))) m_332222222222232222) REVERTcast (App le n_33222222222223222 (App Coq.Init.Nat.add n_33222222222223222 m_332222222222232222)))))) (Definition Coq.Arith.PeanoNat.Nat.add_comm (Lambda n_33222222222223222 nat (Lambda m_332222222222232222 nat (Cast (App Coq.Arith.PeanoNat.Nat.bi_induction (Lambda t_3322222222222322222 nat (App eq nat (App Coq.Init.Nat.add t_3322222222222322222 m_332222222222232222) (App Coq.Init.Nat.add m_332222222222232222 t_3322222222222322222))) (Cast (Cast (Lambda x_3322222222222322222 nat (Lambda y_33222222222223222222 nat (Lambda H_332222222222232222222 (App eq nat x_3322222222222322222 y_33222222222223222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App eq nat (App Coq.Init.Nat.add x_3322222222222322222 m_332222222222232222) (App Coq.Init.Nat.add m_332222222222232222 x_3322222222222322222)) (App eq nat (App Coq.Init.Nat.add y_33222222222223222222 m_332222222222232222) (App Coq.Init.Nat.add m_332222222222232222 y_33222222222223222222)) (App Coq.Classes.Morphisms.PER_morphism nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_PER nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App Coq.Init.Nat.add x_3322222222222322222 m_332222222222232222) (App Coq.Init.Nat.add y_33222222222223222222 m_332222222222232222) (App Coq.Arith.PeanoNat.Nat.add_wd x_3322222222222322222 y_33222222222223222222 H_332222222222232222222 m_332222222222232222 m_332222222222232222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) m_332222222222232222)) (App Coq.Init.Nat.add m_332222222222232222 x_3322222222222322222) (App Coq.Init.Nat.add m_332222222222232222 y_33222222222223222222) (App Coq.Classes.Morphisms.Reflexive_partial_app_morphism nat (Prod out_3322222222222322222221 nat nat) (App eq nat) (App Coq.Classes.Morphisms.respectful nat nat (App eq nat) (App eq nat)) Coq.Init.Nat.add Coq.Arith.PeanoNat.Nat.add_wd m_332222222222232222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) m_332222222222232222) x_3322222222222322222 y_33222222222223222222 H_332222222222232222222)) (App eq nat (App Coq.Init.Nat.add y_33222222222223222222 m_332222222222232222) (App Coq.Init.Nat.add m_332222222222232222 y_33222222222223222222)) (App eq nat (App Coq.Init.Nat.add y_33222222222223222222 m_332222222222232222) (App Coq.Init.Nat.add m_332222222222232222 y_33222222222223222222)) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App eq nat (App Coq.Init.Nat.add y_33222222222223222222 m_332222222222232222) (App Coq.Init.Nat.add m_332222222222232222 y_33222222222223222222))) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq nat (App Coq.Init.Nat.add y_33222222222223222222 m_332222222222232222) (App Coq.Init.Nat.add m_332222222222232222 y_33222222222223222222))))))) REVERTcast (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff (Lambda t_3322222222222322222 nat (App eq nat (App Coq.Init.Nat.add t_3322222222222322222 m_332222222222232222) (App Coq.Init.Nat.add m_332222222222232222 t_3322222222222322222))) (Lambda t_3322222222222322222 nat (App eq nat (App Coq.Init.Nat.add t_3322222222222322222 m_332222222222232222) (App Coq.Init.Nat.add m_332222222222232222 t_3322222222222322222))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_3322222222222322221 nat (Sort Prop)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (Lambda t_3322222222222322222 nat (App eq nat (App Coq.Init.Nat.add t_3322222222222322222 m_332222222222232222) (App Coq.Init.Nat.add m_332222222222232222 t_3322222222222322222))))) (App (Lambda lemma_3322222222222322222 (App eq nat (App Coq.Init.Nat.add m_332222222222232222 O) m_332222222222232222) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_PER nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App Coq.Init.Nat.add O m_332222222222232222) (App Coq.Init.Nat.add m_332222222222232222 O) m_332222222222232222 lemma_3322222222222322222)) (App Coq.Arith.PeanoNat.Nat.add_0_r m_332222222222232222) (App (Lambda lemma_3322222222222322222 (App eq nat (App Coq.Init.Nat.add O m_332222222222232222) m_332222222222232222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Transitive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App Coq.Init.Nat.add O m_332222222222232222) m_332222222222232222 lemma_3322222222222322222 m_332222222222232222 m_332222222222232222 (App Coq.Classes.Morphisms.eq_proper_proxy nat m_332222222222232222))) (App Coq.Arith.PeanoNat.Nat.add_0_l m_332222222222232222) (App Coq.Classes.RelationClasses.reflexivity nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) m_332222222222232222))) (Lambda n_3322222222222322222 nat (App (Lambda lemma_33222222222223222222 (App eq nat (App Coq.Init.Nat.add m_332222222222232222 (App S n_3322222222222322222)) (App S (App Coq.Init.Nat.add m_332222222222232222 n_3322222222222322222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq nat (App Coq.Init.Nat.add n_3322222222222322222 m_332222222222232222) (App Coq.Init.Nat.add m_332222222222232222 n_3322222222222322222)) (App eq nat (App Coq.Init.Nat.add (App S n_3322222222222322222) m_332222222222232222) (App Coq.Init.Nat.add m_332222222222232222 (App S n_3322222222222322222))) (App eq nat (App Coq.Init.Nat.add (App S n_3322222222222322222) m_332222222222232222) (App S (App Coq.Init.Nat.add m_332222222222232222 n_3322222222222322222))) (App Coq.Classes.Morphisms.per_partial_app_morphism nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_PER nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App Coq.Init.Nat.add (App S n_3322222222222322222) m_332222222222232222) (App Coq.Init.Nat.add m_332222222222232222 (App S n_3322222222222322222)) (App S (App Coq.Init.Nat.add m_332222222222232222 n_3322222222222322222)) lemma_33222222222223222222))) (App Coq.Arith.PeanoNat.Nat.add_succ_r m_332222222222232222 n_3322222222222322222) (App (Lambda lemma_33222222222223222222 (App eq nat (App Coq.Init.Nat.add (App S n_3322222222222322222) m_332222222222232222) (App S (App Coq.Init.Nat.add n_3322222222222322222 m_332222222222232222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq nat (App Coq.Init.Nat.add n_3322222222222322222 m_332222222222232222) (App Coq.Init.Nat.add m_332222222222232222 n_3322222222222322222)) (App eq nat (App Coq.Init.Nat.add (App S n_3322222222222322222) m_332222222222232222) (App S (App Coq.Init.Nat.add m_332222222222232222 n_3322222222222322222))) (App eq nat (App S (App Coq.Init.Nat.add n_3322222222222322222 m_332222222222232222)) (App S (App Coq.Init.Nat.add m_332222222222232222 n_3322222222222322222))) (App Coq.Classes.Morphisms.PER_morphism nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_PER nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App Coq.Init.Nat.add (App S n_3322222222222322222) m_332222222222232222) (App S (App Coq.Init.Nat.add n_3322222222222322222 m_332222222222232222)) lemma_33222222222223222222 (App S (App Coq.Init.Nat.add m_332222222222232222 n_3322222222222322222)) (App S (App Coq.Init.Nat.add m_332222222222232222 n_3322222222222322222)) (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App S (App Coq.Init.Nat.add m_332222222222232222 n_3322222222222322222)))))) (App Coq.Arith.PeanoNat.Nat.add_succ_l n_3322222222222322222 m_332222222222232222) (App (Lambda lemma_33222222222223222222 (App Coq.Init.Logic.iff (App eq nat (App S (App Coq.Init.Nat.add n_3322222222222322222 m_332222222222232222)) (App S (App Coq.Init.Nat.add m_332222222222232222 n_3322222222222322222))) (App eq nat (App Coq.Init.Nat.add n_3322222222222322222 m_332222222222232222) (App Coq.Init.Nat.add m_332222222222232222 n_3322222222222322222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq nat (App Coq.Init.Nat.add n_3322222222222322222 m_332222222222232222) (App Coq.Init.Nat.add m_332222222222232222 n_3322222222222322222)) (App eq nat (App S (App Coq.Init.Nat.add n_3322222222222322222 m_332222222222232222)) (App S (App Coq.Init.Nat.add m_332222222222232222 n_3322222222222322222))) (App eq nat (App Coq.Init.Nat.add n_3322222222222322222 m_332222222222232222) (App Coq.Init.Nat.add m_332222222222232222 n_3322222222222322222)) lemma_33222222222223222222)) (App Coq.Arith.PeanoNat.Nat.succ_inj_wd (App Coq.Init.Nat.add n_3322222222222322222 m_332222222222232222) (App Coq.Init.Nat.add m_332222222222232222 n_3322222222222322222)) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq nat (App Coq.Init.Nat.add n_3322222222222322222 m_332222222222232222) (App Coq.Init.Nat.add m_332222222222232222 n_3322222222222322222))))))) n_33222222222223222) REVERTcast (App eq nat (App Coq.Init.Nat.add n_33222222222223222 m_332222222222232222) (App Coq.Init.Nat.add m_332222222222232222 n_33222222222223222)))))) (Definition Coq.Arith.Plus.le_plus_r (Lambda n_332222222222232 nat (Lambda m_3322222222222322 nat (App Coq.Init.Logic.eq_ind_r nat (App Coq.Init.Nat.add m_3322222222222322 n_332222222222232) (Lambda n_33222222222223222 nat (App le m_3322222222222322 n_33222222222223222)) (App Coq.Arith.PeanoNat.Nat.le_add_r m_3322222222222322 n_332222222222232) (App Coq.Init.Nat.add n_332222222222232 m_3322222222222322) (App Coq.Arith.PeanoNat.Nat.add_comm n_332222222222232 m_3322222222222322))))) (Definition Coq.Arith.PeanoNat.Nat.lt_le_trans (Lambda n_33222222222222 nat (Lambda m_332222222222222 nat (Lambda p_3322222222222222 nat (Lambda H_33222222222222222 (App Coq.Init.Peano.lt n_33222222222222 m_332222222222222) (Lambda H0_332222222222222222 (App le m_332222222222222 p_3322222222222222) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.not_ge_lt n_33222222222222 p_3322222222222222 (Cast (Lambda H1_3322222222222222222 (App le p_3322222222222222 n_33222222222222) (App (Lambda H2_33222222222222222222 (App Coq.Init.Peano.lt p_3322222222222222 m_332222222222222) (App (Lambda H3_332222222222222222222 (App Coq.Init.Peano.lt m_332222222222222 m_332222222222222) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.lt_irrefl m_332222222222222 H3_332222222222222222222)) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.le_lt_trans m_332222222222222 p_3322222222222222 m_332222222222222 H0_332222222222222222 H2_33222222222222222222))) (App Coq.Arith.PeanoNat.Nat.Private_OrderTac.Tac.le_lt_trans p_3322222222222222 n_33222222222222 m_332222222222222 H1_3322222222222222222 H_33222222222222222))) REVERTcast (App Coq.Init.Logic.not (App le p_3322222222222222 n_33222222222222)))))))))) (Definition Coq.Arith.Plus.le_plus_l (Lambda n_33222222222222 nat (Lambda m_332222222222222 nat (App Coq.Arith.PeanoNat.Nat.le_add_r n_33222222222222 m_332222222222222)))) (Definition Coq.Arith.PeanoNat.Nat.add_cancel_l (Lambda n_332222222222232222222 nat (Lambda m_3322222222222322222222 nat (Lambda p_33222222222223222222222 nat (Cast (App Coq.Arith.PeanoNat.Nat.bi_induction (Lambda t_332222222222232222222222 nat (App Coq.Init.Logic.iff (App eq nat (App Coq.Init.Nat.add t_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add t_332222222222232222222222 m_3322222222222322222222)) (App eq nat n_332222222222232222222 m_3322222222222322222222))) (Cast (Cast (Lambda x_332222222222232222222222 nat (Lambda y_3322222222222322222222222 nat (Lambda H_33222222222223222222222222 (App eq nat x_332222222222232222222222 y_3322222222222322222222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App Coq.Init.Logic.iff (App eq nat (App Coq.Init.Nat.add x_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add x_332222222222232222222222 m_3322222222222322222222)) (App eq nat n_332222222222232222222 m_3322222222222322222222)) (App Coq.Init.Logic.iff (App eq nat (App Coq.Init.Nat.add y_3322222222222322222222222 n_332222222222232222222) (App Coq.Init.Nat.add y_3322222222222322222222222 m_3322222222222322222222)) (App eq nat n_332222222222232222222 m_3322222222222322222222)) (App Coq.Classes.Morphisms.PER_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq nat (App Coq.Init.Nat.add x_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add x_332222222222232222222222 m_3322222222222322222222)) (App eq nat (App Coq.Init.Nat.add y_3322222222222322222222222 n_332222222222232222222) (App Coq.Init.Nat.add y_3322222222222322222222222 m_3322222222222322222222)) (App Coq.Classes.Morphisms.PER_morphism nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_PER nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App Coq.Init.Nat.add x_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add y_3322222222222322222222222 n_332222222222232222222) (App Coq.Arith.PeanoNat.Nat.add_wd x_332222222222232222222222 y_3322222222222322222222222 H_33222222222223222222222222 n_332222222222232222222 n_332222222222232222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) n_332222222222232222222)) (App Coq.Init.Nat.add x_332222222222232222222222 m_3322222222222322222222) (App Coq.Init.Nat.add y_3322222222222322222222222 m_3322222222222322222222) (App Coq.Arith.PeanoNat.Nat.add_wd x_332222222222232222222222 y_3322222222222322222222222 H_33222222222223222222222222 m_3322222222222322222222 m_3322222222222322222222 (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) m_3322222222222322222222))) (App eq nat n_332222222222232222222 m_3322222222222322222222) (App eq nat n_332222222222232222222 m_3322222222222322222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq nat n_332222222222232222222 m_3322222222222322222222))) (App Coq.Init.Logic.iff (App eq nat (App Coq.Init.Nat.add y_3322222222222322222222222 n_332222222222232222222) (App Coq.Init.Nat.add y_3322222222222322222222222 m_3322222222222322222222)) (App eq nat n_332222222222232222222 m_3322222222222322222222)) (App Coq.Init.Logic.iff (App eq nat (App Coq.Init.Nat.add y_3322222222222322222222222 n_332222222222232222222) (App Coq.Init.Nat.add y_3322222222222322222222222 m_3322222222222322222222)) (App eq nat n_332222222222232222222 m_3322222222222322222222)) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App Coq.Init.Logic.iff (App eq nat (App Coq.Init.Nat.add y_3322222222222322222222222 n_332222222222232222222) (App Coq.Init.Nat.add y_3322222222222322222222222 m_3322222222222322222222)) (App eq nat n_332222222222232222222 m_3322222222222322222222))) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Logic.iff (App eq nat (App Coq.Init.Nat.add y_3322222222222322222222222 n_332222222222232222222) (App Coq.Init.Nat.add y_3322222222222322222222222 m_3322222222222322222222)) (App eq nat n_332222222222232222222 m_3322222222222322222222))))))) REVERTcast (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff (Lambda t_332222222222232222222222 nat (App Coq.Init.Logic.iff (App eq nat (App Coq.Init.Nat.add t_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add t_332222222222232222222222 m_3322222222222322222222)) (App eq nat n_332222222222232222222 m_3322222222222322222222))) (Lambda t_332222222222232222222222 nat (App Coq.Init.Logic.iff (App eq nat (App Coq.Init.Nat.add t_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add t_332222222222232222222222 m_3322222222222322222222)) (App eq nat n_332222222222232222222 m_3322222222222322222222))))) REVERTcast (App Coq.Classes.Morphisms.Proper (Prod out_332222222222232222222221 nat (Sort Prop)) (App Coq.Classes.Morphisms.respectful nat (Sort Prop) (App eq nat) Coq.Init.Logic.iff) (Lambda t_332222222222232222222222 nat (App Coq.Init.Logic.iff (App eq nat (App Coq.Init.Nat.add t_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add t_332222222222232222222222 m_3322222222222322222222)) (App eq nat n_332222222222232222222 m_3322222222222322222222))))) (App (Lambda lemma_332222222222232222222222 (App eq nat (App Coq.Init.Nat.add O n_332222222222232222222) n_332222222222232222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App eq nat (App Coq.Init.Nat.add O n_332222222222232222222) (App Coq.Init.Nat.add O m_3322222222222322222222)) (App eq nat n_332222222222232222222 (App Coq.Init.Nat.add O m_3322222222222322222222)) (App Coq.Classes.Morphisms.PER_morphism nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_PER nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App Coq.Init.Nat.add O n_332222222222232222222) n_332222222222232222222 lemma_332222222222232222222222 (App Coq.Init.Nat.add O m_3322222222222322222222) (App Coq.Init.Nat.add O m_3322222222222322222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App Coq.Init.Nat.add O m_3322222222222322222222))) (App eq nat n_332222222222232222222 m_3322222222222322222222) (App eq nat n_332222222222232222222 m_3322222222222322222222) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App eq nat n_332222222222232222222 m_3322222222222322222222)))) (App Coq.Arith.PeanoNat.Nat.add_0_l n_332222222222232222222) (App (Lambda lemma_332222222222232222222222 (App eq nat (App Coq.Init.Nat.add O m_3322222222222322222222) m_3322222222222322222222) (App Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Transitive (App eq nat n_332222222222232222222 (App Coq.Init.Nat.add O m_3322222222222322222222)) (App eq nat n_332222222222232222222 m_3322222222222322222222) (App Coq.Classes.Morphisms.per_partial_app_morphism nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_PER nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) n_332222222222232222222 (App Coq.Init.Nat.add O m_3322222222222322222222) m_3322222222222322222222 lemma_332222222222232222222222) (App eq nat n_332222222222232222222 m_3322222222222322222222) (App eq nat n_332222222222232222222 m_3322222222222322222222) (App Coq.Classes.Morphisms.eq_proper_proxy (Sort Prop) (App eq nat n_332222222222232222222 m_3322222222222322222222)))) (App Coq.Arith.PeanoNat.Nat.add_0_l m_3322222222222322222222) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq nat n_332222222222232222222 m_3322222222222322222222)))) (Lambda p_332222222222232222222222 nat (App (Lambda lemma_3322222222222322222222222 (App eq nat (App Coq.Init.Nat.add (App S p_332222222222232222222222) n_332222222222232222222) (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Logic.iff (App eq nat (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222)) (App eq nat n_332222222222232222222 m_3322222222222322222222)) (App Coq.Init.Logic.iff (App eq nat (App Coq.Init.Nat.add (App S p_332222222222232222222222) n_332222222222232222222) (App Coq.Init.Nat.add (App S p_332222222222232222222222) m_3322222222222322222222)) (App eq nat n_332222222222232222222 m_3322222222222322222222)) (App Coq.Init.Logic.iff (App eq nat (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) (App Coq.Init.Nat.add (App S p_332222222222232222222222) m_3322222222222322222222)) (App eq nat n_332222222222232222222 m_3322222222222322222222)) (App Coq.Classes.Morphisms.PER_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq nat (App Coq.Init.Nat.add (App S p_332222222222232222222222) n_332222222222232222222) (App Coq.Init.Nat.add (App S p_332222222222232222222222) m_3322222222222322222222)) (App eq nat (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) (App Coq.Init.Nat.add (App S p_332222222222232222222222) m_3322222222222322222222)) (App Coq.Classes.Morphisms.PER_morphism nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_PER nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App Coq.Init.Nat.add (App S p_332222222222232222222222) n_332222222222232222222) (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) lemma_3322222222222322222222222 (App Coq.Init.Nat.add (App S p_332222222222232222222222) m_3322222222222322222222) (App Coq.Init.Nat.add (App S p_332222222222232222222222) m_3322222222222322222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_Reflexive nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App Coq.Init.Nat.add (App S p_332222222222232222222222) m_3322222222222322222222))) (App eq nat n_332222222222232222222 m_3322222222222322222222) (App eq nat n_332222222222232222222 m_3322222222222322222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq nat n_332222222222232222222 m_3322222222222322222222))))) (App Coq.Arith.PeanoNat.Nat.add_succ_l p_332222222222232222222222 n_332222222222232222222) (App (Lambda lemma_3322222222222322222222222 (App eq nat (App Coq.Init.Nat.add (App S p_332222222222232222222222) m_3322222222222322222222) (App S (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Logic.iff (App eq nat (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222)) (App eq nat n_332222222222232222222 m_3322222222222322222222)) (App Coq.Init.Logic.iff (App eq nat (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) (App Coq.Init.Nat.add (App S p_332222222222232222222222) m_3322222222222322222222)) (App eq nat n_332222222222232222222 m_3322222222222322222222)) (App Coq.Init.Logic.iff (App eq nat (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) (App S (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222))) (App eq nat n_332222222222232222222 m_3322222222222322222222)) (App Coq.Classes.Morphisms.PER_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq nat (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) (App Coq.Init.Nat.add (App S p_332222222222232222222222) m_3322222222222322222222)) (App eq nat (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) (App S (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222))) (App Coq.Classes.Morphisms.per_partial_app_morphism nat (App eq nat) (App Coq.Classes.RelationClasses.Equivalence_PER nat (App eq nat) Coq.Arith.PeanoNat.Nat.eq_equiv) (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) (App Coq.Init.Nat.add (App S p_332222222222232222222222) m_3322222222222322222222) (App S (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222)) lemma_3322222222222322222222222) (App eq nat n_332222222222232222222 m_3322222222222322222222) (App eq nat n_332222222222232222222 m_3322222222222322222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq nat n_332222222222232222222 m_3322222222222322222222))))) (App Coq.Arith.PeanoNat.Nat.add_succ_l p_332222222222232222222222 m_3322222222222322222222) (App (Lambda lemma_3322222222222322222222222 (App Coq.Init.Logic.iff (App eq nat (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) (App S (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222))) (App eq nat (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222))) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App Coq.Init.Logic.iff (App eq nat (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222)) (App eq nat n_332222222222232222222 m_3322222222222322222222)) (App Coq.Init.Logic.iff (App eq nat (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) (App S (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222))) (App eq nat n_332222222222232222222 m_3322222222222322222222)) (App Coq.Init.Logic.iff (App eq nat (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222)) (App eq nat n_332222222222232222222 m_3322222222222322222222)) (App Coq.Classes.Morphisms.PER_morphism (Sort Prop) Coq.Init.Logic.iff (App Coq.Classes.RelationClasses.Equivalence_PER (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_equivalence) (App eq nat (App S (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222)) (App S (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222))) (App eq nat (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222)) lemma_3322222222222322222222222 (App eq nat n_332222222222232222222 m_3322222222222322222222) (App eq nat n_332222222222232222222 m_3322222222222322222222) (App Coq.Classes.Morphisms.reflexive_proper_proxy (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App eq nat n_332222222222232222222 m_3322222222222322222222))))) (App Coq.Arith.PeanoNat.Nat.succ_inj_wd (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222)) (App Coq.Classes.RelationClasses.reflexivity (Sort Prop) Coq.Init.Logic.iff Coq.Classes.RelationClasses.iff_Reflexive (App Coq.Init.Logic.iff (App eq nat (App Coq.Init.Nat.add p_332222222222232222222222 n_332222222222232222222) (App Coq.Init.Nat.add p_332222222222232222222222 m_3322222222222322222222)) (App eq nat n_332222222222232222222 m_3322222222222322222222))))))) p_33222222222223222222222) REVERTcast (App Coq.Init.Logic.iff (App eq nat (App Coq.Init.Nat.add p_33222222222223222222222 n_332222222222232222222) (App Coq.Init.Nat.add p_33222222222223222222222 m_3322222222222322222222)) (App eq nat n_332222222222232222222 m_3322222222222322222222))))))) (Definition Coq.Arith.Plus.plus_reg_l (Lambda n_332222222222232 nat (Lambda m_3322222222222322 nat (Lambda p_33222222222223222 nat (LetIn H_332222222222232223 (Lambda n_332222222222232222 nat (Lambda m_3322222222222322222 nat (Lambda p_33222222222223222222 nat (Case 2 (Lambda out_332222222222232222222 (App and (Prod out_332222222222232222221 (App eq nat (App Coq.Init.Nat.add p_33222222222223222222 n_332222222222232222) (App Coq.Init.Nat.add p_33222222222223222222 m_3322222222222322222)) (App eq nat n_332222222222232222 m_3322222222222322222)) (Prod out_332222222222232222221 (App eq nat n_332222222222232222 m_3322222222222322222) (App eq nat (App Coq.Init.Nat.add p_33222222222223222222 n_332222222222232222) (App Coq.Init.Nat.add p_33222222222223222222 m_3322222222222322222)))) (Prod out_3322222222222322222221 (App eq nat (App Coq.Init.Nat.add p_33222222222223222222 n_332222222222232222) (App Coq.Init.Nat.add p_33222222222223222222 m_3322222222222322222)) (App eq nat n_332222222222232222 m_3322222222222322222))) (CaseMatch (App Coq.Arith.PeanoNat.Nat.add_cancel_l n_332222222222232222 m_3322222222222322222 p_33222222222223222222)) (CaseBranches (Lambda out_332222222222232222222 (Prod out_332222222222232222221 (App eq nat (App Coq.Init.Nat.add p_33222222222223222222 n_332222222222232222) (App Coq.Init.Nat.add p_33222222222223222222 m_3322222222222322222)) (App eq nat n_332222222222232222 m_3322222222222322222)) (Lambda out_3322222222222322222222 (Prod out_3322222222222322222221 (App eq nat n_332222222222232222 m_3322222222222322222) (App eq nat (App Coq.Init.Nat.add p_33222222222223222222 n_332222222222232222) (App Coq.Init.Nat.add p_33222222222223222222 m_3322222222222322222))) out_332222222222232222222))))))) (Prod n_332222222222232221 nat (Prod m_3322222222222322211 nat (Prod p_33222222222223222111 nat (Prod out_332222222222232221111 (App eq nat (App Coq.Init.Nat.add p_33222222222223222111 n_332222222222232221) (App Coq.Init.Nat.add p_33222222222223222111 m_3322222222222322211)) (App eq nat n_332222222222232221 m_3322222222222322211))))) (App H_332222222222232223 n_332222222222232 m_3322222222222322 p_33222222222223222)))))) (Definition Coq.Init.Logic.eq_trans (Lambda A_33222222222223333322222 (Sort Type) (Lambda x_332222222222233333222222 A_33222222222223333322222 (Lambda y_3322222222222333332222222 A_33222222222223333322222 (Lambda z_33222222222223333322222222 A_33222222222223333322222 (Lambda H_332222222222233333222222222 (App eq A_33222222222223333322222 x_332222222222233333222222 y_3322222222222333332222222) (Lambda H0_3322222222222333332222222222 (App eq A_33222222222223333322222 y_3322222222222333332222222 z_33222222222223333322222222) (Case 2 (Lambda y_33222222222223333322222222222 A_33222222222223333322222 (Lambda out_332222222222233333222222222222 (App eq A_33222222222223333322222 y_3322222222222333332222222 y_33222222222223333322222222222) (App eq A_33222222222223333322222 x_332222222222233333222222 y_33222222222223333322222222222))) (CaseMatch H0_3322222222222333332222222222) (CaseBranches H_332222222222233333222222222))))))))) (Definition Coq.Init.Logic.f_equal (Lambda A_33222222222223333322222 (Sort Type) (Lambda B_332222222222233333222222 (Sort Type) (Lambda f_3322222222222333332222222 (Prod out_3322222222222333332222221 A_33222222222223333322222 B_332222222222233333222222) (Lambda x_33222222222223333322222222 A_33222222222223333322222 (Lambda y_332222222222233333222222222 A_33222222222223333322222 (Lambda H_3322222222222333332222222222 (App eq A_33222222222223333322222 x_33222222222223333322222222 y_332222222222233333222222222) (Case 2 (Lambda y_33222222222223333322222222222 A_33222222222223333322222 (Lambda out_332222222222233333222222222222 (App eq A_33222222222223333322222 x_33222222222223333322222222 y_33222222222223333322222222222) (App eq B_332222222222233333222222 (App f_3322222222222333332222222 x_33222222222223333322222222) (App f_3322222222222333332222222 y_33222222222223333322222222222)))) (CaseMatch H_3322222222222333332222222222) (CaseBranches (App eq_refl B_332222222222233333222222 (App f_3322222222222333332222222 x_33222222222223333322222222))))))))))) (Definition ZornsLemma.FunctionProperties.injective (Lambda X_332 (Sort Type) (Lambda Y_3322 (Sort Type) (Lambda f_33222 (Prod out_33221 X_332 Y_3322) (Prod x1_332221 X_332 (Prod x2_3322211 X_332 (Prod out_33222111 (App eq Y_3322 (App f_33222 x1_332221) (App f_33222 x2_3322211)) (App eq X_332 x1_332221 x2_3322211)))))))) (Definition ZornsLemma.CountableTypes.countable_nat_product (LetIn sum_1_to_n_3 (Fix (Functions (App sum_1_to_n 0 (Prod n_1 nat nat) (Lambda n_2 nat (Case 0 (Lambda n_22 nat nat) (CaseMatch n_2) (CaseBranches O (Lambda m_22 nat (App Coq.Init.Nat.add (App sum_1_to_n m_22) n_2))))))) 0) (Prod n_1 nat nat) (App intro_nat_injection (App prod nat nat) (Lambda p_32 (App prod nat nat) (Case 2 (Lambda p_322 (App prod nat nat) nat) (CaseMatch p_32) (CaseBranches (Lambda m_322 nat (Lambda n_3222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_322 n_3222)) n_3222)))))) (LetIn H_33 (Lambda m_32 nat (Lambda n_322 nat (Lambda H_3222 (App Coq.Init.Peano.lt m_32 n_322) (App Coq.Init.Peano.le_ind (App S m_32) (Lambda n_32222 nat (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) m_32) (App sum_1_to_n_3 n_32222))) (Cast (Cast (App Coq.Arith.Gt.gt_le_S (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) m_32) (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) (App S m_32)) (Cast (App Coq.Arith.Plus.plus_lt_compat_l m_32 (App S m_32) (App sum_1_to_n_3 m_32) (App Coq.Arith.PeanoNat.Nat.lt_succ_diag_r m_32)) REVERTcast (App Coq.Init.Peano.gt (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) (App S m_32)) (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) m_32)))) REVERTcast (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) m_32) (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) (App S m_32)))) REVERTcast (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) m_32) (App sum_1_to_n_3 (App S m_32)))) (Lambda m0_32222 nat (Lambda H_322222 (App le (App S m_32) m0_32222) (Lambda IHle_3222222 (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) m_32) (App sum_1_to_n_3 m0_32222)) (App Coq.Arith.PeanoNat.Nat.lt_trans (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) m_32) (App sum_1_to_n_3 m0_32222) (App sum_1_to_n_3 (App S m0_32222)) IHle_3222222 (Cast (LetIn H0_32222223 (Cast (App Coq.Arith.Gt.gt_le_S O (App S m0_32222) (Cast (Cast (App Coq.Arith.Lt.lt_le_S O (App S m0_32222) (App Coq.Arith.PeanoNat.Nat.lt_0_succ m0_32222)) REVERTcast (App Coq.Init.Peano.lt O (App S m0_32222))) REVERTcast (App Coq.Init.Peano.gt (App S m0_32222) O))) REVERTcast (App Coq.Init.Peano.lt O (App S m0_32222))) (App Coq.Init.Peano.lt O (App S m0_32222)) (LetIn H1_322222233 (Cast (App Coq.Arith.Gt.gt_le_S (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) O) (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) (App S m0_32222)) (Cast (App Coq.Arith.Plus.plus_lt_compat_l O (App S m0_32222) (App sum_1_to_n_3 m0_32222) H0_32222223) REVERTcast (App Coq.Init.Peano.gt (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) (App S m0_32222)) (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) O)))) REVERTcast (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) O) (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) (App S m0_32222)))) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) O) (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) (App S m0_32222))) (LetIn H2_3222222333 (App Coq.Init.Logic.eq_sym nat (App sum_1_to_n_3 m0_32222) (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) O) (App Coq.Init.Peano.plus_n_O (App sum_1_to_n_3 m0_32222))) (App eq nat (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) O) (App sum_1_to_n_3 m0_32222)) (LetIn H1_32222223333 (App Coq.Init.Logic.eq_ind nat (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) O) (Lambda n_32222223332 nat (App Coq.Init.Peano.lt n_32222223332 (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) (App S m0_32222)))) H1_322222233 (App sum_1_to_n_3 m0_32222) H2_3222222333) (App Coq.Init.Peano.lt (App sum_1_to_n_3 m0_32222) (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) (App S m0_32222))) H1_32222223333)))) REVERTcast (App Coq.Init.Peano.lt (App sum_1_to_n_3 m0_32222) (App sum_1_to_n_3 (App S m0_32222)))))))) n_322 H_3222)))) (Prod m_31 nat (Prod n_311 nat (Prod out_3111 (App Coq.Init.Peano.lt m_31 n_311) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 m_31) m_31) (App sum_1_to_n_3 n_311))))) (Cast (Lambda x1_332 (App prod nat nat) (Lambda x2_3322 (App prod nat nat) (Lambda H0_33222 (App eq nat (Case 2 (Lambda p_33222 (App prod nat nat) nat) (CaseMatch x1_332) (CaseBranches (Lambda m_33222 nat (Lambda n_332222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_33222 n_332222)) n_332222))))) (Case 2 (Lambda p_33222 (App prod nat nat) nat) (CaseMatch x2_3322) (CaseBranches (Lambda m_33222 nat (Lambda n_332222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_33222 n_332222)) n_332222)))))) (App (Case 2 (Lambda p_332222 (App prod nat nat) (Prod H0_3322221 (App eq nat (Case 2 (Lambda p_3322222 (App prod nat nat) nat) (CaseMatch p_332222) (CaseBranches (Lambda m_3322222 nat (Lambda n_33222222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_3322222 n_33222222)) n_33222222))))) (Case 2 (Lambda p_3322222 (App prod nat nat) nat) (CaseMatch x2_3322) (CaseBranches (Lambda m_3322222 nat (Lambda n_33222222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_3322222 n_33222222)) n_33222222)))))) (App eq (App prod nat nat) p_332222 x2_3322))) (CaseMatch x1_332) (CaseBranches (Lambda x1_332222 nat (Lambda y1_3322222 nat (Lambda H0_33222222 (App eq nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (Case 2 (Lambda p_33222222 (App prod nat nat) nat) (CaseMatch x2_3322) (CaseBranches (Lambda m_33222222 nat (Lambda n_332222222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_33222222 n_332222222)) n_332222222)))))) (App (Case 2 (Lambda p_332222222 (App prod nat nat) (Prod H0_3322222221 (App eq nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (Case 2 (Lambda p_3322222222 (App prod nat nat) nat) (CaseMatch p_332222222) (CaseBranches (Lambda m_3322222222 nat (Lambda n_33222222222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_3322222222 n_33222222222)) n_33222222222)))))) (App eq (App prod nat nat) (App pair nat nat x1_332222 y1_3322222) p_332222222))) (CaseMatch x2_3322) (CaseBranches (Lambda x2_332222222 nat (Lambda y2_3322222222 nat (Lambda H0_33222222222 (App eq nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) (Case 2 (Lambda s_332222222222 (App sumor (App sumbool (App Coq.Init.Peano.lt (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App eq nat (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222))) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add x2_332222222 y2_3322222222) (App Coq.Init.Nat.add x1_332222 y1_3322222))) (App eq (App prod nat nat) (App pair nat nat x1_332222 y1_3322222) (App pair nat nat x2_332222222 y2_3322222222))) (CaseMatch (App Coq.Arith.Compare_dec.lt_eq_lt_dec (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222))) (CaseBranches (Lambda s_332222222222 (App sumbool (App Coq.Init.Peano.lt (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App eq nat (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222))) (Case 2 (Lambda s_3322222222222 (App sumbool (App Coq.Init.Peano.lt (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App eq nat (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222))) (App eq (App prod nat nat) (App pair nat nat x1_332222 y1_3322222) (App pair nat nat x2_332222222 y2_3322222222))) (CaseMatch s_332222222222) (CaseBranches (Lambda l_3322222222222 (App Coq.Init.Peano.lt (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (LetIn H1_33222222222223 (App Coq.Arith.PeanoNat.Nat.le_lt_trans (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (LetIn H1_33222222222223 (LetIn hyp_list_33222222222223 (App nil (App prod (App PExpr N) (App PExpr N))) (App list (App prod (App PExpr N) (App PExpr N))) (LetIn fv_list_332222222222233 (App cons nat (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App cons nat x1_332222 (App cons nat y1_3322222 (App nil nat)))) (App list nat) (App Coq.setoid_ring.ArithRing.natr_ring_lemma1 Coq.setoid_ring.Ring_tac.ring_subst_niter fv_list_332222222222233 hyp_list_33222222222223 (App PEadd N (App PEX N xH) (App PEadd N (App PEX N (App xO xH)) (App PEX N (App xI xH)))) (App PEadd N (App PEadd N (App PEX N xH) (App PEX N (App xI xH))) (App PEX N (App xO xH))) I (Cast (App eq_refl bool true) VMcast (App eq bool (LetIn lmp_3322222222222333 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list N N0 (App Npos xH) Coq.NArith.BinNatDef.N.add Coq.NArith.BinNatDef.N.mul Coq.NArith.BinNatDef.N.add (Lambda x_3322222222222332 N x_3322222222222332) Coq.NArith.BinNatDef.N.eqb Coq.NArith.BinNatDef.N.div_eucl hyp_list_33222222222223) (App list (App prod (App prod N Mon) (App Pol N))) (App Coq.setoid_ring.Ring_polynom.Peq N Coq.NArith.BinNatDef.N.eqb (App Coq.setoid_ring.Ring_polynom.norm_subst N N0 (App Npos xH) Coq.NArith.BinNatDef.N.add Coq.NArith.BinNatDef.N.mul Coq.NArith.BinNatDef.N.add (Lambda x_33222222222223332 N x_33222222222223332) Coq.NArith.BinNatDef.N.eqb Coq.NArith.BinNatDef.N.div_eucl Coq.setoid_ring.Ring_tac.ring_subst_niter lmp_3322222222222333 (App PEadd N (App PEX N xH) (App PEadd N (App PEX N (App xO xH)) (App PEX N (App xI xH))))) (App Coq.setoid_ring.Ring_polynom.norm_subst N N0 (App Npos xH) Coq.NArith.BinNatDef.N.add Coq.NArith.BinNatDef.N.mul Coq.NArith.BinNatDef.N.add (Lambda x_33222222222223332 N x_33222222222223332) Coq.NArith.BinNatDef.N.eqb Coq.NArith.BinNatDef.N.div_eucl Coq.setoid_ring.Ring_tac.ring_subst_niter lmp_3322222222222333 (App PEadd N (App PEadd N (App PEX N xH) (App PEX N (App xI xH))) (App PEX N (App xO xH)))))) true))))) (App eq nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App Coq.Init.Nat.add (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) x1_332222)) (App Coq.Arith.Plus.plus_le_compat_l y1_3322222 (App Coq.Init.Nat.add x1_332222 y1_3322222) (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App Coq.Arith.Plus.le_plus_r x1_332222 y1_3322222))) (App Coq.Arith.PeanoNat.Nat.lt_le_trans (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (App H_33 (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222) l_3322222222222) (App Coq.Arith.Plus.le_plus_l (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222))) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) (LetIn H1_332222222222233 (App Coq.Init.Logic.eq_ind nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (Lambda n_332222222222232 nat (App Coq.Init.Peano.lt n_332222222222232 (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222))) H1_33222222222223 (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) H0_33222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) (App Coq.Init.Logic.False_ind (App eq (App prod nat nat) (App pair nat nat x1_332222 y1_3322222) (App pair nat nat x2_332222222 y2_3322222222)) (App (Cast (App Coq.Arith.PeanoNat.Nat.lt_irrefl (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) REVERTcast (Prod H1_3322222222222331 (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) False)) H1_332222222222233))))) (Lambda e_3322222222222 (App eq nat (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (LetIn H1_33222222222223 (LetIn H0_33222222222223 (App Coq.Init.Logic.eq_ind nat (App Coq.Init.Nat.add x1_332222 y1_3322222) (Lambda n_33222222222222 nat (App eq nat (App Coq.Init.Nat.add (App sum_1_to_n_3 n_33222222222222) y1_3322222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222))) H0_33222222222 (App Coq.Init.Nat.add x2_332222222 y2_3322222222) e_3322222222222) (App eq nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y1_3322222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) (LetIn H0_332222222222233 (App Coq.Arith.Plus.plus_reg_l y1_3322222 y2_3322222222 (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) H0_33222222222223) (App eq nat y1_3322222 y2_3322222222) H0_332222222222233)) (App eq nat y1_3322222 y2_3322222222) (LetIn H2_332222222222233 H1_33222222222223 (App eq nat y1_3322222 y2_3322222222) (App (LetIn H2_3322222222222333 (LetIn e_3322222222222333 (App Coq.Init.Logic.eq_ind nat y1_3322222 (Lambda y1_3322222222222332 nat (App eq nat (App Coq.Init.Nat.add x1_332222 y1_3322222222222332) (App Coq.Init.Nat.add x2_332222222 y2_3322222222))) e_3322222222222 y2_3322222222 H1_33222222222223) (App eq nat (App Coq.Init.Nat.add x1_332222 y2_3322222222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (LetIn e_33222222222223333 (App Coq.Init.Logic.eq_ind nat (App Coq.Init.Nat.add x1_332222 y2_3322222222) (Lambda n_33222222222223332 nat (App eq nat n_33222222222223332 (App Coq.Init.Nat.add x2_332222222 y2_3322222222))) e_3322222222222333 (App Coq.Init.Nat.add y2_3322222222 x1_332222) (App Coq.Arith.PeanoNat.Nat.add_comm x1_332222 y2_3322222222)) (App eq nat (App Coq.Init.Nat.add y2_3322222222 x1_332222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (LetIn e_332222222222233333 (App Coq.Init.Logic.eq_ind nat (App Coq.Init.Nat.add x2_332222222 y2_3322222222) (Lambda n_332222222222233332 nat (App eq nat (App Coq.Init.Nat.add y2_3322222222 x1_332222) n_332222222222233332)) e_33222222222223333 (App Coq.Init.Nat.add y2_3322222222 x2_332222222) (App Coq.Arith.PeanoNat.Nat.add_comm x2_332222222 y2_3322222222)) (App eq nat (App Coq.Init.Nat.add y2_3322222222 x1_332222) (App Coq.Init.Nat.add y2_3322222222 x2_332222222)) (LetIn e_3322222222222333333 (App Coq.Arith.Plus.plus_reg_l x1_332222 x2_332222222 y2_3322222222 e_332222222222233333) (App eq nat x1_332222 x2_332222222) e_3322222222222333333)))) (App eq nat x1_332222 x2_332222222) (App (LetIn H2_33222222222223333 (App eq_refl (Sort Set) nat) (App eq (Sort Set) nat nat) (App (LetIn H2_332222222222233333 (App eq_refl (Sort Set) nat) (App eq (Sort Set) nat nat) (App (Lambda H2_3322222222222333332 (App eq (Sort Set) nat nat) (Lambda H3_33222222222223333322 (App eq (Sort Set) nat nat) (Lambda H4_332222222222233333222 (App eq nat x1_332222 x2_332222222) (Lambda H5_3322222222222333332222 (App eq nat y1_3322222 y2_3322222222) (App Coq.Init.Logic.eq_trans (App prod nat nat) (App pair nat nat x1_332222 y1_3322222) (App pair nat nat x2_332222222 y1_3322222) (App pair nat nat x2_332222222 y2_3322222222) (App Coq.Init.Logic.f_equal (Prod out_33222222222223333322221 nat (App prod nat nat)) (App prod nat nat) (Lambda f_33222222222223333322222 (Prod out_33222222222223333322221 nat (App prod nat nat)) (App f_33222222222223333322222 y1_3322222)) (App pair nat nat x1_332222) (App pair nat nat x2_332222222) (App Coq.Init.Logic.eq_trans (Prod out_33222222222223333322221 nat (App prod nat nat)) (App pair nat nat x1_332222) (App pair nat nat x1_332222) (App pair nat nat x2_332222222) (App Coq.Init.Logic.f_equal (Prod out_33222222222223333322221 nat (Prod out_332222222222233333222211 nat (App prod nat nat))) (Prod out_33222222222223333322221 nat (App prod nat nat)) (Lambda f_33222222222223333322222 (Prod out_33222222222223333322221 nat (Prod out_332222222222233333222211 nat (App prod nat nat))) (App f_33222222222223333322222 x1_332222)) (App pair nat nat) (App pair nat nat) (App eq_refl (Prod out_33222222222223333322221 nat (Prod out_332222222222233333222211 nat (App prod nat nat))) (App pair nat nat))) (App Coq.Init.Logic.f_equal nat (Prod out_33222222222223333322221 nat (App prod nat nat)) (App pair nat nat) x1_332222 x2_332222222 H4_332222222222233333222))) (App Coq.Init.Logic.f_equal nat (App prod nat nat) (App pair nat nat x2_332222222) y1_3322222 y2_3322222222 H5_3322222222222333332222)))))) H2_332222222222233333)) H2_33222222222223333)) H2_3322222222222333)) H2_332222222222233))))))) (Lambda l_332222222222 (App Coq.Init.Peano.lt (App Coq.Init.Nat.add x2_332222222 y2_3322222222) (App Coq.Init.Nat.add x1_332222 y1_3322222)) (LetIn H1_3322222222223 (App Coq.Arith.PeanoNat.Nat.le_lt_trans (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (App Coq.Arith.Plus.plus_le_compat_l y2_3322222222 (App Coq.Init.Nat.add x2_332222222 y2_3322222222) (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App Coq.Arith.Plus.le_plus_r x2_332222222 y2_3322222222)) (App Coq.Arith.PeanoNat.Nat.lt_le_trans (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (App H_33 (App Coq.Init.Nat.add x2_332222222 y2_3322222222) (App Coq.Init.Nat.add x1_332222 y1_3322222) l_332222222222) (App Coq.Arith.Plus.le_plus_l (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222))) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222)) (LetIn H1_33222222222233 (App Coq.Init.Logic.eq_ind nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (Lambda n_33222222222232 nat (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) n_33222222222232)) H1_3322222222223 (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) H0_33222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) (App Coq.Init.Logic.False_ind (App eq (App prod nat nat) (App pair nat nat x1_332222 y1_3322222) (App pair nat nat x2_332222222 y2_3322222222)) (App (Cast (App Coq.Arith.PeanoNat.Nat.lt_irrefl (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) REVERTcast (Prod H1_332222222222331 (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) False)) H1_33222222222233)))))))))))) H0_33222222)))))) H0_33222)))) REVERTcast (App ZornsLemma.FunctionProperties.injective (App prod nat nat) nat (Lambda p_332 (App prod nat nat) (Case 2 (Lambda p_3322 (App prod nat nat) nat) (CaseMatch p_332) (CaseBranches (Lambda m_3322 nat (Lambda n_33222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_3322 n_33222)) n_33222)))))))))))) (Definition Coq.PArith.BinPosDef.Pos.iter_op (Lambda A_32222 (Sort Type) (Lambda op_322222 (Prod out_322221 A_32222 (Prod out_3222211 A_32222 A_32222)) (Fix (Functions (App iter 0 (Prod p_3222221 positive (Prod a_32222211 A_32222 A_32222)) (Lambda p_3222222 positive (Lambda a_32222222 A_32222 (Case 0 (Lambda p_322222222 positive A_32222) (CaseMatch p_3222222) (CaseBranches (Lambda p_322222222 positive (App op_322222 a_32222222 (App iter p_322222222 (App op_322222 a_32222222 a_32222222)))) (Lambda p_322222222 positive (App iter p_322222222 (App op_322222 a_32222222 a_32222222))) a_32222222)))))) 0)))) (Definition Coq.PArith.BinPosDef.Pos.to_nat (Lambda x_3222 positive (App Coq.PArith.BinPosDef.Pos.iter_op nat Coq.Init.Nat.add x_3222 (App S O)))) (Definition Coq.PArith.BinPosDef.Pos.of_nat (Fix (Functions (App of_nat 0 (Prod n_3222222221 nat positive) (Lambda n_3222222222 nat (Case 0 (Lambda n_32222222222 nat positive) (CaseMatch n_3222222222) (CaseBranches xH (Lambda x_32222222222 nat (Case 0 (Lambda x_322222222222 nat positive) (CaseMatch x_32222222222) (CaseBranches xH (Lambda n_322222222222 nat (App Coq.PArith.BinPosDef.Pos.succ (App of_nat x_32222222222))))))))))) 0)) (Definition Coq.PArith.Pnat.Pos2Nat.id (Lambda p_3222222222 positive (App Coq.PArith.BinPos.Pos.peano_ind (Lambda p_32222222222 positive (App eq positive (App Coq.PArith.BinPosDef.Pos.of_nat (App Coq.PArith.BinPosDef.Pos.to_nat p_32222222222)) p_32222222222)) (App eq_refl positive xH) (Lambda p_32222222222 positive (Lambda IHp_322222222222 (App eq positive (App Coq.PArith.BinPosDef.Pos.of_nat (App Coq.PArith.BinPosDef.Pos.to_nat p_32222222222)) p_32222222222) (App Coq.Init.Logic.eq_ind_r nat (App S (App Coq.PArith.BinPosDef.Pos.to_nat p_32222222222)) (Lambda n_3222222222222 nat (App eq positive (App Coq.PArith.BinPosDef.Pos.of_nat n_3222222222222) (App Coq.PArith.BinPosDef.Pos.succ p_32222222222))) (App (Lambda lemma_3222222222222 (App eq positive (App Coq.PArith.BinPosDef.Pos.of_nat (App Coq.PArith.BinPosDef.Pos.to_nat p_32222222222)) p_32222222222) (App Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism positive (App eq positive) (App Coq.Classes.RelationClasses.Equivalence_PER positive (App eq positive) (App Coq.Classes.RelationClasses.eq_equivalence positive)) (App Coq.PArith.BinPosDef.Pos.of_nat (App S (App Coq.PArith.BinPosDef.Pos.to_nat p_32222222222))) (App Coq.PArith.BinPosDef.Pos.succ p_32222222222) (App Coq.PArith.BinPosDef.Pos.succ (App Coq.PArith.BinPosDef.Pos.of_nat (App Coq.PArith.BinPosDef.Pos.to_nat p_32222222222))) (App Coq.Classes.Morphisms.reflexive_proper (Prod x_32222222222221 positive positive) (App Coq.Classes.Morphisms.respectful positive positive (App eq positive) (App eq positive)) (App Coq.Classes.Morphisms.reflexive_eq_dom_reflexive positive positive (App eq positive) (App Coq.Classes.RelationClasses.eq_Reflexive positive)) Coq.PArith.BinPosDef.Pos.succ p_32222222222 (App Coq.PArith.BinPosDef.Pos.of_nat (App Coq.PArith.BinPosDef.Pos.to_nat p_32222222222)) (App Coq.Classes.RelationClasses.symmetry positive (App eq positive) (App Coq.Classes.RelationClasses.eq_Symmetric positive) (App Coq.PArith.BinPosDef.Pos.of_nat (App Coq.PArith.BinPosDef.Pos.to_nat p_32222222222)) p_32222222222 lemma_3222222222222)))) IHp_322222222222 (LetIn e_3222222222223 (App Coq.PArith.Pnat.Pos2Nat.is_succ p_32222222222) (App ex nat (Lambda n_3222222222222 nat (App eq nat (App Coq.PArith.BinPosDef.Pos.to_nat p_32222222222) (App S n_3222222222222)))) (Case 2 (Lambda out_32222222222232 (App ex nat (Lambda n_32222222222232 nat (App eq nat (App Coq.PArith.BinPosDef.Pos.to_nat p_32222222222) (App S n_32222222222232)))) (App eq positive (App Coq.PArith.BinPosDef.Pos.of_nat (App S (App Coq.PArith.BinPosDef.Pos.to_nat p_32222222222))) (App Coq.PArith.BinPosDef.Pos.succ (App Coq.PArith.BinPosDef.Pos.of_nat (App Coq.PArith.BinPosDef.Pos.to_nat p_32222222222))))) (CaseMatch e_3222222222223) (CaseBranches (Lambda n_32222222222232 nat (Lambda H_322222222222322 (App eq nat (App Coq.PArith.BinPosDef.Pos.to_nat p_32222222222) (App S n_32222222222232)) (App Coq.Init.Logic.eq_ind_r nat (App S n_32222222222232) (Lambda n_3222222222223222 nat (App eq positive (App Coq.PArith.BinPosDef.Pos.of_nat (App S n_3222222222223222)) (App Coq.PArith.BinPosDef.Pos.succ (App Coq.PArith.BinPosDef.Pos.of_nat n_3222222222223222)))) (App eq_refl positive (App Coq.PArith.BinPosDef.Pos.succ (App Coq.PArith.BinPosDef.Pos.of_nat (App S n_32222222222232)))) (App Coq.PArith.BinPosDef.Pos.to_nat p_32222222222) H_322222222222322))))))) (App Coq.PArith.BinPosDef.Pos.to_nat (App Coq.PArith.BinPosDef.Pos.succ p_32222222222)) (App Coq.PArith.Pnat.Pos2Nat.inj_succ p_32222222222)))) p_3222222222))) (Definition Coq.PArith.Pnat.Pos2Nat.inj (Lambda p_3222222 positive (Lambda q_32222222 positive (Lambda H_322222222 (App eq nat (App Coq.PArith.BinPosDef.Pos.to_nat p_3222222) (App Coq.PArith.BinPosDef.Pos.to_nat q_32222222)) (App Coq.Init.Logic.eq_ind positive (App Coq.PArith.BinPosDef.Pos.of_nat (App Coq.PArith.BinPosDef.Pos.to_nat p_3222222)) (Lambda p_3222222222 positive (App eq positive p_3222222222 q_32222222)) (App Coq.Init.Logic.eq_ind positive (App Coq.PArith.BinPosDef.Pos.of_nat (App Coq.PArith.BinPosDef.Pos.to_nat q_32222222)) (Lambda q_3222222222 positive (App eq positive (App Coq.PArith.BinPosDef.Pos.of_nat (App Coq.PArith.BinPosDef.Pos.to_nat p_3222222)) q_3222222222)) (App Coq.Init.Logic.eq_ind_r nat (App Coq.PArith.BinPosDef.Pos.to_nat q_32222222) (Lambda n_3222222222 nat (App eq positive (App Coq.PArith.BinPosDef.Pos.of_nat n_3222222222) (App Coq.PArith.BinPosDef.Pos.of_nat (App Coq.PArith.BinPosDef.Pos.to_nat q_32222222)))) (App eq_refl positive (App Coq.PArith.BinPosDef.Pos.of_nat (App Coq.PArith.BinPosDef.Pos.to_nat q_32222222))) (App Coq.PArith.BinPosDef.Pos.to_nat p_3222222) H_322222222) q_32222222 (App Coq.PArith.Pnat.Pos2Nat.id q_32222222)) p_3222222 (App Coq.PArith.Pnat.Pos2Nat.id p_3222222)))))) (Definition ZornsLemma.CountableTypes.positive_countable (App intro_nat_injection positive Coq.PArith.BinPosDef.Pos.to_nat (Cast (Lambda x1_3222 positive (Lambda x2_32222 positive (Lambda H_322222 (App eq nat (App Coq.PArith.BinPosDef.Pos.to_nat x1_3222) (App Coq.PArith.BinPosDef.Pos.to_nat x2_32222)) (App Coq.PArith.Pnat.Pos2Nat.inj x1_3222 x2_32222 H_322222)))) REVERTcast (App ZornsLemma.FunctionProperties.injective positive nat Coq.PArith.BinPosDef.Pos.to_nat)))) (Definition ZornsLemma.CountableTypes.Z_countable (LetIn c_3223223 ZornsLemma.CountableTypes.countable_nat_product (App CountableT (App prod nat nat)) (Case 1 (Lambda out_32232232 (App CountableT (App prod nat nat)) (App CountableT Z)) (CaseMatch c_3223223) (CaseBranches (Lambda f_32232232 (Prod out_32232231 (App prod nat nat) nat) (Lambda H_322322322 (App ZornsLemma.FunctionProperties.injective (App prod nat nat) nat f_32232232) (LetIn c_3223223223 ZornsLemma.CountableTypes.positive_countable (App CountableT positive) (Case 1 (Lambda out_32232232232 (App CountableT positive) (App CountableT Z)) (CaseMatch c_3223223223) (CaseBranches (Lambda g_32232232232 (Prod out_32232232231 positive nat) (Lambda H0_322322322322 (App ZornsLemma.FunctionProperties.injective positive nat g_32232232232) (App intro_nat_injection Z (Lambda n_3223223223222 Z (Case 0 (Lambda n_32232232232222 Z nat) (CaseMatch n_3223223223222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_32232232232222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_32232232232222)))) (Lambda p_32232232232222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_32232232232222))))))) (Cast (Lambda n1_3223223223222 Z (Lambda n2_32232232232222 Z (Lambda H1_322322322322222 (App eq nat (Case 0 (Lambda n_322322322322222 Z nat) (CaseMatch n1_3223223223222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_322322322322222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_322322322322222)))) (Lambda p_322322322322222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_322322322322222)))))) (Case 0 (Lambda n_322322322322222 Z nat) (CaseMatch n2_32232232232222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_322322322322222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_322322322322222)))) (Lambda p_322322322322222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_322322322322222))))))) (App (Case 0 (Lambda z_3223223223222222 Z (Prod H1_32232232232222221 (App eq nat (Case 0 (Lambda n_32232232232222222 Z nat) (CaseMatch z_3223223223222222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_32232232232222222)))) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_32232232232222222)))))) (Case 0 (Lambda n_32232232232222222 Z nat) (CaseMatch n2_32232232232222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_32232232232222222)))) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_32232232232222222))))))) (App eq Z z_3223223223222222 n2_32232232232222))) (CaseMatch n1_3223223223222) (CaseBranches (Lambda H1_3223223223222222 (App eq nat (App f_32232232 (App pair nat nat O O)) (Case 0 (Lambda n_3223223223222222 Z nat) (CaseMatch n2_32232232232222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_3223223223222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_3223223223222222)))) (Lambda p_3223223223222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_3223223223222222))))))) (App (Case 0 (Lambda z_32232232232222222 Z (Prod H1_322322322322222221 (App eq nat (App f_32232232 (App pair nat nat O O)) (Case 0 (Lambda n_322322322322222222 Z nat) (CaseMatch z_32232232232222222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_322322322322222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_322322322322222222)))) (Lambda p_322322322322222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_322322322322222222))))))) (App eq Z Z0 z_32232232232222222))) (CaseMatch n2_32232232232222) (CaseBranches (Lambda H1_32232232232222222 (App eq nat (App f_32232232 (App pair nat nat O O)) (App f_32232232 (App pair nat nat O O))) (LetIn H1_322322322322222223 (App H_322322322 (App pair nat nat O O) (App pair nat nat O O) H1_32232232232222222) (App eq (App prod nat nat) (App pair nat nat O O) (App pair nat nat O O)) (App eq_refl Z Z0))) (Lambda p2_32232232232222222 positive (Lambda H1_322322322322222222 (App eq nat (App f_32232232 (App pair nat nat O O)) (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p2_32232232232222222)))) (LetIn H1_3223223223222222223 (App H_322322322 (App pair nat nat O O) (App pair nat nat (App S O) (App g_32232232232 p2_32232232232222222)) H1_322322322322222222) (App eq (App prod nat nat) (App pair nat nat O O) (App pair nat nat (App S O) (App g_32232232232 p2_32232232232222222))) (LetIn H2_32232232232222222233 (App Coq.Init.Logic.eq_ind (App prod nat nat) (App pair nat nat O O) (Lambda e_32232232232222222232 (App prod nat nat) (Case 2 (Lambda p_322322322322222222322 (App prod nat nat) (Sort Prop)) (CaseMatch e_32232232232222222232) (CaseBranches (Lambda n_322322322322222222322 nat (Lambda n_3223223223222222223222 nat (Case 0 (Lambda n_32232232232222222232222 nat (Sort Prop)) (CaseMatch n_322322322322222222322) (CaseBranches True (Lambda out_32232232232222222232222 nat False)))))))) I (App pair nat nat (App S O) (App g_32232232232 p2_32232232232222222)) H1_3223223223222222223) False (App Coq.Init.Logic.False_ind (App eq Z Z0 (App Zpos p2_32232232232222222)) H2_32232232232222222233))))) (Lambda p2_32232232232222222 positive (Lambda H1_322322322322222222 (App eq nat (App f_32232232 (App pair nat nat O O)) (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p2_32232232232222222)))) (LetIn H1_3223223223222222223 (App H_322322322 (App pair nat nat O O) (App pair nat nat (App S (App S O)) (App g_32232232232 p2_32232232232222222)) H1_322322322322222222) (App eq (App prod nat nat) (App pair nat nat O O) (App pair nat nat (App S (App S O)) (App g_32232232232 p2_32232232232222222))) (LetIn H2_32232232232222222233 (App Coq.Init.Logic.eq_ind (App prod nat nat) (App pair nat nat O O) (Lambda e_32232232232222222232 (App prod nat nat) (Case 2 (Lambda p_322322322322222222322 (App prod nat nat) (Sort Prop)) (CaseMatch e_32232232232222222232) (CaseBranches (Lambda n_322322322322222222322 nat (Lambda n_3223223223222222223222 nat (Case 0 (Lambda n_32232232232222222232222 nat (Sort Prop)) (CaseMatch n_322322322322222222322) (CaseBranches True (Lambda out_32232232232222222232222 nat False)))))))) I (App pair nat nat (App S (App S O)) (App g_32232232232 p2_32232232232222222)) H1_3223223223222222223) False (App Coq.Init.Logic.False_ind (App eq Z Z0 (App Zneg p2_32232232232222222)) H2_32232232232222222233))))))) H1_3223223223222222)) (Lambda p1_3223223223222222 positive (Lambda H1_32232232232222222 (App eq nat (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222))) (Case 0 (Lambda n_32232232232222222 Z nat) (CaseMatch n2_32232232232222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_32232232232222222)))) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_32232232232222222))))))) (App (Case 0 (Lambda z_322322322322222222 Z (Prod H1_3223223223222222221 (App eq nat (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222))) (Case 0 (Lambda n_3223223223222222222 Z nat) (CaseMatch z_322322322322222222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_3223223223222222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_3223223223222222222)))) (Lambda p_3223223223222222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_3223223223222222222))))))) (App eq Z (App Zpos p1_3223223223222222) z_322322322322222222))) (CaseMatch n2_32232232232222) (CaseBranches (Lambda H1_322322322322222222 (App eq nat (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222))) (App f_32232232 (App pair nat nat O O))) (LetIn H1_3223223223222222223 (App H_322322322 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (App pair nat nat O O) H1_322322322322222222) (App eq (App prod nat nat) (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (App pair nat nat O O)) (LetIn H2_32232232232222222233 (App Coq.Init.Logic.eq_ind (App prod nat nat) (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (Lambda e_32232232232222222232 (App prod nat nat) (Case 2 (Lambda p_322322322322222222322 (App prod nat nat) (Sort Prop)) (CaseMatch e_32232232232222222232) (CaseBranches (Lambda n_322322322322222222322 nat (Lambda n_3223223223222222223222 nat (Case 0 (Lambda n_32232232232222222232222 nat (Sort Prop)) (CaseMatch n_322322322322222222322) (CaseBranches False (Lambda out_32232232232222222232222 nat True)))))))) I (App pair nat nat O O) H1_3223223223222222223) False (App Coq.Init.Logic.False_ind (App eq Z (App Zpos p1_3223223223222222) Z0) H2_32232232232222222233)))) (Lambda p2_322322322322222222 positive (Lambda H1_3223223223222222222 (App eq nat (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222))) (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222)))) (LetIn H1_32232232232222222223 (App H_322322322 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222)) H1_3223223223222222222) (App eq (App prod nat nat) (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222))) (LetIn H2_322322322322222222233 (App Coq.Init.Logic.f_equal (App prod nat nat) nat (Lambda e_322322322322222222232 (App prod nat nat) (Case 2 (Lambda p_3223223223222222222322 (App prod nat nat) nat) (CaseMatch e_322322322322222222232) (CaseBranches (Lambda n_3223223223222222222322 nat (Lambda n_32232232232222222223222 nat n_32232232232222222223222))))) (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222)) H1_32232232232222222223) (App eq nat (App g_32232232232 p1_3223223223222222) (App g_32232232232 p2_322322322322222222)) (App (Lambda H2_3223223223222222222332 (App eq nat (App g_32232232232 p1_3223223223222222) (App g_32232232232 p2_322322322322222222)) (LetIn H3_32232232232222222223323 (App H0_322322322322 p1_3223223223222222 p2_322322322322222222 H2_3223223223222222222332) (App eq positive p1_3223223223222222 p2_322322322322222222) (App (Lambda H3_322322322322222222233232 (App eq positive p1_3223223223222222 p2_322322322322222222) (App Coq.Init.Logic.eq_trans Z (App Zpos p1_3223223223222222) (App Zpos p1_3223223223222222) (App Zpos p2_322322322322222222) (App Coq.Init.Logic.f_equal (Prod out_3223223223222222222332321 positive Z) Z (Lambda f0_3223223223222222222332322 (Prod out_3223223223222222222332321 positive Z) (App f0_3223223223222222222332322 p1_3223223223222222)) Zpos Zpos (App eq_refl (Prod out_3223223223222222222332321 positive Z) Zpos)) (App Coq.Init.Logic.f_equal positive Z Zpos p1_3223223223222222 p2_322322322322222222 H3_322322322322222222233232))) H3_32232232232222222223323))) H2_322322322322222222233))))) (Lambda p2_322322322322222222 positive (Lambda H1_3223223223222222222 (App eq nat (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222))) (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222)))) (LetIn H1_32232232232222222223 (App H_322322322 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222)) H1_3223223223222222222) (App eq (App prod nat nat) (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222))) (LetIn H2_322322322322222222233 (App Coq.Init.Logic.eq_ind (App prod nat nat) (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (Lambda e_322322322322222222232 (App prod nat nat) (Case 2 (Lambda p_3223223223222222222322 (App prod nat nat) (Sort Prop)) (CaseMatch e_322322322322222222232) (CaseBranches (Lambda n_3223223223222222222322 nat (Lambda n_32232232232222222223222 nat (Case 0 (Lambda n_322322322322222222232222 nat (Sort Prop)) (CaseMatch n_3223223223222222222322) (CaseBranches False (Lambda n_322322322322222222232222 nat (Case 0 (Lambda n_3223223223222222222322222 nat (Sort Prop)) (CaseMatch n_322322322322222222232222) (CaseBranches True (Lambda out_3223223223222222222322222 nat False))))))))))) I (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222)) H1_32232232232222222223) False (App Coq.Init.Logic.False_ind (App eq Z (App Zpos p1_3223223223222222) (App Zneg p2_322322322322222222)) H2_322322322322222222233))))))) H1_32232232232222222))) (Lambda p1_3223223223222222 positive (Lambda H1_32232232232222222 (App eq nat (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222))) (Case 0 (Lambda n_32232232232222222 Z nat) (CaseMatch n2_32232232232222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_32232232232222222)))) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_32232232232222222))))))) (App (Case 0 (Lambda z_322322322322222222 Z (Prod H1_3223223223222222221 (App eq nat (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222))) (Case 0 (Lambda n_3223223223222222222 Z nat) (CaseMatch z_322322322322222222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_3223223223222222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_3223223223222222222)))) (Lambda p_3223223223222222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_3223223223222222222))))))) (App eq Z (App Zneg p1_3223223223222222) z_322322322322222222))) (CaseMatch n2_32232232232222) (CaseBranches (Lambda H1_322322322322222222 (App eq nat (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222))) (App f_32232232 (App pair nat nat O O))) (LetIn H1_3223223223222222223 (App H_322322322 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (App pair nat nat O O) H1_322322322322222222) (App eq (App prod nat nat) (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (App pair nat nat O O)) (LetIn H2_32232232232222222233 (App Coq.Init.Logic.eq_ind (App prod nat nat) (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (Lambda e_32232232232222222232 (App prod nat nat) (Case 2 (Lambda p_322322322322222222322 (App prod nat nat) (Sort Prop)) (CaseMatch e_32232232232222222232) (CaseBranches (Lambda n_322322322322222222322 nat (Lambda n_3223223223222222223222 nat (Case 0 (Lambda n_32232232232222222232222 nat (Sort Prop)) (CaseMatch n_322322322322222222322) (CaseBranches False (Lambda out_32232232232222222232222 nat True)))))))) I (App pair nat nat O O) H1_3223223223222222223) False (App Coq.Init.Logic.False_ind (App eq Z (App Zneg p1_3223223223222222) Z0) H2_32232232232222222233)))) (Lambda p2_322322322322222222 positive (Lambda H1_3223223223222222222 (App eq nat (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222))) (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222)))) (LetIn H1_32232232232222222223 (App H_322322322 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222)) H1_3223223223222222222) (App eq (App prod nat nat) (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222))) (LetIn H2_322322322322222222233 (App Coq.Init.Logic.eq_ind (App prod nat nat) (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (Lambda e_322322322322222222232 (App prod nat nat) (Case 2 (Lambda p_3223223223222222222322 (App prod nat nat) (Sort Prop)) (CaseMatch e_322322322322222222232) (CaseBranches (Lambda n_3223223223222222222322 nat (Lambda n_32232232232222222223222 nat (Case 0 (Lambda n_322322322322222222232222 nat (Sort Prop)) (CaseMatch n_3223223223222222222322) (CaseBranches False (Lambda n_322322322322222222232222 nat (Case 0 (Lambda n_3223223223222222222322222 nat (Sort Prop)) (CaseMatch n_322322322322222222232222) (CaseBranches False (Lambda out_3223223223222222222322222 nat True))))))))))) I (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222)) H1_32232232232222222223) False (App Coq.Init.Logic.False_ind (App eq Z (App Zneg p1_3223223223222222) (App Zpos p2_322322322322222222)) H2_322322322322222222233))))) (Lambda p2_322322322322222222 positive (Lambda H1_3223223223222222222 (App eq nat (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222))) (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222)))) (LetIn H1_32232232232222222223 (App H_322322322 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222)) H1_3223223223222222222) (App eq (App prod nat nat) (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222))) (LetIn H2_322322322322222222233 (App Coq.Init.Logic.f_equal (App prod nat nat) nat (Lambda e_322322322322222222232 (App prod nat nat) (Case 2 (Lambda p_3223223223222222222322 (App prod nat nat) nat) (CaseMatch e_322322322322222222232) (CaseBranches (Lambda n_3223223223222222222322 nat (Lambda n_32232232232222222223222 nat n_32232232232222222223222))))) (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222)) H1_32232232232222222223) (App eq nat (App g_32232232232 p1_3223223223222222) (App g_32232232232 p2_322322322322222222)) (App (Lambda H2_3223223223222222222332 (App eq nat (App g_32232232232 p1_3223223223222222) (App g_32232232232 p2_322322322322222222)) (LetIn H3_32232232232222222223323 (App H0_322322322322 p1_3223223223222222 p2_322322322322222222 H2_3223223223222222222332) (App eq positive p1_3223223223222222 p2_322322322322222222) (App (Lambda H3_322322322322222222233232 (App eq positive p1_3223223223222222 p2_322322322322222222) (App Coq.Init.Logic.eq_trans Z (App Zneg p1_3223223223222222) (App Zneg p1_3223223223222222) (App Zneg p2_322322322322222222) (App Coq.Init.Logic.f_equal (Prod out_3223223223222222222332321 positive Z) Z (Lambda f0_3223223223222222222332322 (Prod out_3223223223222222222332321 positive Z) (App f0_3223223223222222222332322 p1_3223223223222222)) Zneg Zneg (App eq_refl (Prod out_3223223223222222222332321 positive Z) Zneg)) (App Coq.Init.Logic.f_equal positive Z Zneg p1_3223223223222222 p2_322322322322222222 H3_322322322322222222233232))) H3_32232232232222222223323))) H2_322322322322222222233))))))) H1_32232232232222222))))) H1_322322322322222)))) REVERTcast (App ZornsLemma.FunctionProperties.injective Z nat (Lambda n_3223223223222 Z (Case 0 (Lambda n_32232232232222 Z nat) (CaseMatch n_3223223223222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_32232232232222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_32232232232222)))) (Lambda p_32232232232222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_32232232232222))))))))))))))))))))) (Definition ZornsLemma.CountableTypes.Q_countable (LetIn c_3 ZornsLemma.CountableTypes.countable_nat_product (App CountableT (App prod nat nat)) (Case 1 (Lambda out_32 (App CountableT (App prod nat nat)) (App CountableT Q)) (CaseMatch c_3) (CaseBranches (Lambda f_32 (Prod out_31 (App prod nat nat) nat) (Lambda H_322 (App ZornsLemma.FunctionProperties.injective (App prod nat nat) nat f_32) (LetIn c_3223 ZornsLemma.CountableTypes.positive_countable (App CountableT positive) (Case 1 (Lambda out_32232 (App CountableT positive) (App CountableT Q)) (CaseMatch c_3223) (CaseBranches (Lambda g_32232 (Prod out_32231 positive nat) (Lambda H0_322322 (App ZornsLemma.FunctionProperties.injective positive nat g_32232) (LetIn c_3223223 ZornsLemma.CountableTypes.Z_countable (App CountableT Z) (Case 1 (Lambda out_32232232 (App CountableT Z) (App CountableT Q)) (CaseMatch c_3223223) (CaseBranches (Lambda h_32232232 (Prod out_32232231 Z nat) (Lambda H1_322322322 (App ZornsLemma.FunctionProperties.injective Z nat h_32232232) (App intro_nat_injection Q (Lambda q_3223223222 Q (Case 0 (Lambda q_32232232222 Q nat) (CaseMatch q_3223223222) (CaseBranches (Lambda n_32232232222 Z (Lambda d_322322322222 positive (App f_32 (App pair nat nat (App h_32232232 n_32232232222) (App g_32232 d_322322322222)))))))) (Cast (Lambda q1_3223223222 Q (Lambda q2_32232232222 Q (Lambda H2_322322322222 (App eq nat (Case 0 (Lambda q_322322322222 Q nat) (CaseMatch q1_3223223222) (CaseBranches (Lambda n_322322322222 Z (Lambda d_3223223222222 positive (App f_32 (App pair nat nat (App h_32232232 n_322322322222) (App g_32232 d_3223223222222))))))) (Case 0 (Lambda q_322322322222 Q nat) (CaseMatch q2_32232232222) (CaseBranches (Lambda n_322322322222 Z (Lambda d_3223223222222 positive (App f_32 (App pair nat nat (App h_32232232 n_322322322222) (App g_32232 d_3223223222222)))))))) (App (Case 0 (Lambda q_3223223222222 Q (Prod H2_32232232222221 (App eq nat (Case 0 (Lambda q_32232232222222 Q nat) (CaseMatch q_3223223222222) (CaseBranches (Lambda n_32232232222222 Z (Lambda d_322322322222222 positive (App f_32 (App pair nat nat (App h_32232232 n_32232232222222) (App g_32232 d_322322322222222))))))) (Case 0 (Lambda q_32232232222222 Q nat) (CaseMatch q2_32232232222) (CaseBranches (Lambda n_32232232222222 Z (Lambda d_322322322222222 positive (App f_32 (App pair nat nat (App h_32232232 n_32232232222222) (App g_32232 d_322322322222222)))))))) (App eq Q q_3223223222222 q2_32232232222))) (CaseMatch q1_3223223222) (CaseBranches (Lambda n1_3223223222222 Z (Lambda d1_32232232222222 positive (Lambda H2_322322322222222 (App eq nat (App f_32 (App pair nat nat (App h_32232232 n1_3223223222222) (App g_32232 d1_32232232222222))) (Case 0 (Lambda q_322322322222222 Q nat) (CaseMatch q2_32232232222) (CaseBranches (Lambda n_322322322222222 Z (Lambda d_3223223222222222 positive (App f_32 (App pair nat nat (App h_32232232 n_322322322222222) (App g_32232 d_3223223222222222)))))))) (App (Case 0 (Lambda q_3223223222222222 Q (Prod H2_32232232222222221 (App eq nat (App f_32 (App pair nat nat (App h_32232232 n1_3223223222222) (App g_32232 d1_32232232222222))) (Case 0 (Lambda q_32232232222222222 Q nat) (CaseMatch q_3223223222222222) (CaseBranches (Lambda n_32232232222222222 Z (Lambda d_322322322222222222 positive (App f_32 (App pair nat nat (App h_32232232 n_32232232222222222) (App g_32232 d_322322322222222222)))))))) (App eq Q (App Qmake n1_3223223222222 d1_32232232222222) q_3223223222222222))) (CaseMatch q2_32232232222) (CaseBranches (Lambda n2_3223223222222222 Z (Lambda d2_32232232222222222 positive (Lambda H2_322322322222222222 (App eq nat (App f_32 (App pair nat nat (App h_32232232 n1_3223223222222) (App g_32232 d1_32232232222222))) (App f_32 (App pair nat nat (App h_32232232 n2_3223223222222222) (App g_32232 d2_32232232222222222)))) (LetIn H2_3223223222222222223 (App H_322 (App pair nat nat (App h_32232232 n1_3223223222222) (App g_32232 d1_32232232222222)) (App pair nat nat (App h_32232232 n2_3223223222222222) (App g_32232 d2_32232232222222222)) H2_322322322222222222) (App eq (App prod nat nat) (App pair nat nat (App h_32232232 n1_3223223222222) (App g_32232 d1_32232232222222)) (App pair nat nat (App h_32232232 n2_3223223222222222) (App g_32232 d2_32232232222222222))) (LetIn H3_32232232222222222233 (App Coq.Init.Logic.f_equal (App prod nat nat) nat (Lambda e_32232232222222222232 (App prod nat nat) (Case 2 (Lambda p_322322322222222222322 (App prod nat nat) nat) (CaseMatch e_32232232222222222232) (CaseBranches (Lambda n_322322322222222222322 nat (Lambda n_3223223222222222223222 nat n_322322322222222222322))))) (App pair nat nat (App h_32232232 n1_3223223222222) (App g_32232 d1_32232232222222)) (App pair nat nat (App h_32232232 n2_3223223222222222) (App g_32232 d2_32232232222222222)) H2_3223223222222222223) (App eq nat (App h_32232232 n1_3223223222222) (App h_32232232 n2_3223223222222222)) (App (LetIn H3_322322322222222222333 (App Coq.Init.Logic.f_equal (App prod nat nat) nat (Lambda e_322322322222222222332 (App prod nat nat) (Case 2 (Lambda p_3223223222222222223322 (App prod nat nat) nat) (CaseMatch e_322322322222222222332) (CaseBranches (Lambda n_3223223222222222223322 nat (Lambda n_32232232222222222233222 nat n_32232232222222222233222))))) (App pair nat nat (App h_32232232 n1_3223223222222) (App g_32232 d1_32232232222222)) (App pair nat nat (App h_32232232 n2_3223223222222222) (App g_32232 d2_32232232222222222)) H2_3223223222222222223) (App eq nat (App g_32232 d1_32232232222222) (App g_32232 d2_32232232222222222)) (App (Lambda H3_3223223222222222223332 (App eq nat (App g_32232 d1_32232232222222) (App g_32232 d2_32232232222222222)) (Lambda H4_32232232222222222233322 (App eq nat (App h_32232232 n1_3223223222222) (App h_32232232 n2_3223223222222222)) (LetIn H5_322322322222222222333223 (App H0_322322 d1_32232232222222 d2_32232232222222222 H3_3223223222222222223332) (App eq positive d1_32232232222222 d2_32232232222222222) (App (LetIn H5_3223223222222222223332233 (App H1_322322322 n1_3223223222222 n2_3223223222222222 H4_32232232222222222233322) (App eq Z n1_3223223222222 n2_3223223222222222) (App (Lambda H5_32232232222222222233322332 (App eq Z n1_3223223222222 n2_3223223222222222) (Lambda H6_322322322222222222333223322 (App eq positive d1_32232232222222 d2_32232232222222222) (App Coq.Init.Logic.eq_trans Q (App Qmake n1_3223223222222 d1_32232232222222) (App Qmake n2_3223223222222222 d1_32232232222222) (App Qmake n2_3223223222222222 d2_32232232222222222) (App Coq.Init.Logic.f_equal (Prod Qden_3223223222222222223332233221 positive Q) Q (Lambda f0_3223223222222222223332233222 (Prod Qden_3223223222222222223332233221 positive Q) (App f0_3223223222222222223332233222 d1_32232232222222)) (App Qmake n1_3223223222222) (App Qmake n2_3223223222222222) (App Coq.Init.Logic.eq_trans (Prod Qden_3223223222222222223332233221 positive Q) (App Qmake n1_3223223222222) (App Qmake n1_3223223222222) (App Qmake n2_3223223222222222) (App Coq.Init.Logic.f_equal (Prod Qnum_3223223222222222223332233221 Z (Prod Qden_32232232222222222233322332211 positive Q)) (Prod Qden_3223223222222222223332233221 positive Q) (Lambda f0_3223223222222222223332233222 (Prod Qnum_3223223222222222223332233221 Z (Prod Qden_32232232222222222233322332211 positive Q)) (App f0_3223223222222222223332233222 n1_3223223222222)) Qmake Qmake (App eq_refl (Prod Qnum_3223223222222222223332233221 Z (Prod Qden_32232232222222222233322332211 positive Q)) Qmake)) (App Coq.Init.Logic.f_equal Z (Prod Qden_3223223222222222223332233221 positive Q) Qmake n1_3223223222222 n2_3223223222222222 H5_32232232222222222233322332))) (App Coq.Init.Logic.f_equal positive Q (App Qmake n2_3223223222222222) d1_32232232222222 d2_32232232222222222 H6_322322322222222222333223322)))) H5_3223223222222222223332233)) H5_322322322222222222333223)))) H3_322322322222222222333)) H3_32232232222222222233)))))))) H2_322322322222222)))))) H2_322322322222)))) REVERTcast (App ZornsLemma.FunctionProperties.injective Q nat (Lambda q_3223223222 Q (Case 0 (Lambda q_32232232222 Q nat) (CaseMatch q_3223223222) (CaseBranches (Lambda n_32232232222 Z (Lambda d_322322322222 positive (App f_32 (App pair nat nat (App h_32232232 n_32232232222) (App g_32232 d_322322322222))))))))))))))))))))))))))) 