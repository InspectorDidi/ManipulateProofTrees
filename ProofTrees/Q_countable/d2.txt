(Definition ZornsLemma.CountableTypes.countable_nat_product (LetIn sum_1_to_n_3 (Fix (Functions (App sum_1_to_n 0 (Prod n_1 nat nat) (Lambda n_2 nat (Case 0 (Lambda n_22 nat nat) (CaseMatch n_2) (CaseBranches O (Lambda m_22 nat (App Coq.Init.Nat.add (App sum_1_to_n m_22) n_2))))))) 0) (Prod n_1 nat nat) (App intro_nat_injection (App prod nat nat) (Lambda p_32 (App prod nat nat) (Case 2 (Lambda p_322 (App prod nat nat) nat) (CaseMatch p_32) (CaseBranches (Lambda m_322 nat (Lambda n_3222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_322 n_3222)) n_3222)))))) (LetIn H_33 (Lambda m_32 nat (Lambda n_322 nat (Lambda H_3222 (App Coq.Init.Peano.lt m_32 n_322) (App Coq.Init.Peano.le_ind (App S m_32) (Lambda n_32222 nat (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) m_32) (App sum_1_to_n_3 n_32222))) (Cast (Cast (App Coq.Arith.Gt.gt_le_S (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) m_32) (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) (App S m_32)) (Cast (App Coq.Arith.Plus.plus_lt_compat_l m_32 (App S m_32) (App sum_1_to_n_3 m_32) (App Coq.Arith.PeanoNat.Nat.lt_succ_diag_r m_32)) REVERTcast (App Coq.Init.Peano.gt (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) (App S m_32)) (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) m_32)))) REVERTcast (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) m_32) (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) (App S m_32)))) REVERTcast (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) m_32) (App sum_1_to_n_3 (App S m_32)))) (Lambda m0_32222 nat (Lambda H_322222 (App le (App S m_32) m0_32222) (Lambda IHle_3222222 (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) m_32) (App sum_1_to_n_3 m0_32222)) (App Coq.Arith.PeanoNat.Nat.lt_trans (App Coq.Init.Nat.add (App sum_1_to_n_3 m_32) m_32) (App sum_1_to_n_3 m0_32222) (App sum_1_to_n_3 (App S m0_32222)) IHle_3222222 (Cast (LetIn H0_32222223 (Cast (App Coq.Arith.Gt.gt_le_S O (App S m0_32222) (Cast (Cast (App Coq.Arith.Lt.lt_le_S O (App S m0_32222) (App Coq.Arith.PeanoNat.Nat.lt_0_succ m0_32222)) REVERTcast (App Coq.Init.Peano.lt O (App S m0_32222))) REVERTcast (App Coq.Init.Peano.gt (App S m0_32222) O))) REVERTcast (App Coq.Init.Peano.lt O (App S m0_32222))) (App Coq.Init.Peano.lt O (App S m0_32222)) (LetIn H1_322222233 (Cast (App Coq.Arith.Gt.gt_le_S (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) O) (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) (App S m0_32222)) (Cast (App Coq.Arith.Plus.plus_lt_compat_l O (App S m0_32222) (App sum_1_to_n_3 m0_32222) H0_32222223) REVERTcast (App Coq.Init.Peano.gt (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) (App S m0_32222)) (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) O)))) REVERTcast (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) O) (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) (App S m0_32222)))) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) O) (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) (App S m0_32222))) (LetIn H2_3222222333 (App Coq.Init.Logic.eq_sym nat (App sum_1_to_n_3 m0_32222) (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) O) (App Coq.Init.Peano.plus_n_O (App sum_1_to_n_3 m0_32222))) (App eq nat (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) O) (App sum_1_to_n_3 m0_32222)) (LetIn H1_32222223333 (App Coq.Init.Logic.eq_ind nat (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) O) (Lambda n_32222223332 nat (App Coq.Init.Peano.lt n_32222223332 (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) (App S m0_32222)))) H1_322222233 (App sum_1_to_n_3 m0_32222) H2_3222222333) (App Coq.Init.Peano.lt (App sum_1_to_n_3 m0_32222) (App Coq.Init.Nat.add (App sum_1_to_n_3 m0_32222) (App S m0_32222))) H1_32222223333)))) REVERTcast (App Coq.Init.Peano.lt (App sum_1_to_n_3 m0_32222) (App sum_1_to_n_3 (App S m0_32222)))))))) n_322 H_3222)))) (Prod m_31 nat (Prod n_311 nat (Prod out_3111 (App Coq.Init.Peano.lt m_31 n_311) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 m_31) m_31) (App sum_1_to_n_3 n_311))))) (Cast (Lambda x1_332 (App prod nat nat) (Lambda x2_3322 (App prod nat nat) (Lambda H0_33222 (App eq nat (Case 2 (Lambda p_33222 (App prod nat nat) nat) (CaseMatch x1_332) (CaseBranches (Lambda m_33222 nat (Lambda n_332222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_33222 n_332222)) n_332222))))) (Case 2 (Lambda p_33222 (App prod nat nat) nat) (CaseMatch x2_3322) (CaseBranches (Lambda m_33222 nat (Lambda n_332222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_33222 n_332222)) n_332222)))))) (App (Case 2 (Lambda p_332222 (App prod nat nat) (Prod H0_3322221 (App eq nat (Case 2 (Lambda p_3322222 (App prod nat nat) nat) (CaseMatch p_332222) (CaseBranches (Lambda m_3322222 nat (Lambda n_33222222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_3322222 n_33222222)) n_33222222))))) (Case 2 (Lambda p_3322222 (App prod nat nat) nat) (CaseMatch x2_3322) (CaseBranches (Lambda m_3322222 nat (Lambda n_33222222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_3322222 n_33222222)) n_33222222)))))) (App eq (App prod nat nat) p_332222 x2_3322))) (CaseMatch x1_332) (CaseBranches (Lambda x1_332222 nat (Lambda y1_3322222 nat (Lambda H0_33222222 (App eq nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (Case 2 (Lambda p_33222222 (App prod nat nat) nat) (CaseMatch x2_3322) (CaseBranches (Lambda m_33222222 nat (Lambda n_332222222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_33222222 n_332222222)) n_332222222)))))) (App (Case 2 (Lambda p_332222222 (App prod nat nat) (Prod H0_3322222221 (App eq nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (Case 2 (Lambda p_3322222222 (App prod nat nat) nat) (CaseMatch p_332222222) (CaseBranches (Lambda m_3322222222 nat (Lambda n_33222222222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_3322222222 n_33222222222)) n_33222222222)))))) (App eq (App prod nat nat) (App pair nat nat x1_332222 y1_3322222) p_332222222))) (CaseMatch x2_3322) (CaseBranches (Lambda x2_332222222 nat (Lambda y2_3322222222 nat (Lambda H0_33222222222 (App eq nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) (Case 2 (Lambda s_332222222222 (App sumor (App sumbool (App Coq.Init.Peano.lt (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App eq nat (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222))) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add x2_332222222 y2_3322222222) (App Coq.Init.Nat.add x1_332222 y1_3322222))) (App eq (App prod nat nat) (App pair nat nat x1_332222 y1_3322222) (App pair nat nat x2_332222222 y2_3322222222))) (CaseMatch (App Coq.Arith.Compare_dec.lt_eq_lt_dec (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222))) (CaseBranches (Lambda s_332222222222 (App sumbool (App Coq.Init.Peano.lt (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App eq nat (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222))) (Case 2 (Lambda s_3322222222222 (App sumbool (App Coq.Init.Peano.lt (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App eq nat (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222))) (App eq (App prod nat nat) (App pair nat nat x1_332222 y1_3322222) (App pair nat nat x2_332222222 y2_3322222222))) (CaseMatch s_332222222222) (CaseBranches (Lambda l_3322222222222 (App Coq.Init.Peano.lt (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (LetIn H1_33222222222223 (App Coq.Arith.PeanoNat.Nat.le_lt_trans (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (LetIn H1_33222222222223 (LetIn hyp_list_33222222222223 (App nil (App prod (App PExpr N) (App PExpr N))) (App list (App prod (App PExpr N) (App PExpr N))) (LetIn fv_list_332222222222233 (App cons nat (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App cons nat x1_332222 (App cons nat y1_3322222 (App nil nat)))) (App list nat) (App Coq.setoid_ring.ArithRing.natr_ring_lemma1 Coq.setoid_ring.Ring_tac.ring_subst_niter fv_list_332222222222233 hyp_list_33222222222223 (App PEadd N (App PEX N xH) (App PEadd N (App PEX N (App xO xH)) (App PEX N (App xI xH)))) (App PEadd N (App PEadd N (App PEX N xH) (App PEX N (App xI xH))) (App PEX N (App xO xH))) I (Cast (App eq_refl bool true) VMcast (App eq bool (LetIn lmp_3322222222222333 (App Coq.setoid_ring.Ring_polynom.mk_monpol_list N N0 (App Npos xH) Coq.NArith.BinNatDef.N.add Coq.NArith.BinNatDef.N.mul Coq.NArith.BinNatDef.N.add (Lambda x_3322222222222332 N x_3322222222222332) Coq.NArith.BinNatDef.N.eqb Coq.NArith.BinNatDef.N.div_eucl hyp_list_33222222222223) (App list (App prod (App prod N Mon) (App Pol N))) (App Coq.setoid_ring.Ring_polynom.Peq N Coq.NArith.BinNatDef.N.eqb (App Coq.setoid_ring.Ring_polynom.norm_subst N N0 (App Npos xH) Coq.NArith.BinNatDef.N.add Coq.NArith.BinNatDef.N.mul Coq.NArith.BinNatDef.N.add (Lambda x_33222222222223332 N x_33222222222223332) Coq.NArith.BinNatDef.N.eqb Coq.NArith.BinNatDef.N.div_eucl Coq.setoid_ring.Ring_tac.ring_subst_niter lmp_3322222222222333 (App PEadd N (App PEX N xH) (App PEadd N (App PEX N (App xO xH)) (App PEX N (App xI xH))))) (App Coq.setoid_ring.Ring_polynom.norm_subst N N0 (App Npos xH) Coq.NArith.BinNatDef.N.add Coq.NArith.BinNatDef.N.mul Coq.NArith.BinNatDef.N.add (Lambda x_33222222222223332 N x_33222222222223332) Coq.NArith.BinNatDef.N.eqb Coq.NArith.BinNatDef.N.div_eucl Coq.setoid_ring.Ring_tac.ring_subst_niter lmp_3322222222222333 (App PEadd N (App PEadd N (App PEX N xH) (App PEX N (App xI xH))) (App PEX N (App xO xH)))))) true))))) (App eq nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App Coq.Init.Nat.add (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) x1_332222)) (App Coq.Arith.Plus.plus_le_compat_l y1_3322222 (App Coq.Init.Nat.add x1_332222 y1_3322222) (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App Coq.Arith.Plus.le_plus_r x1_332222 y1_3322222))) (App Coq.Arith.PeanoNat.Nat.lt_le_trans (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (App H_33 (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222) l_3322222222222) (App Coq.Arith.Plus.le_plus_l (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222))) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) (LetIn H1_332222222222233 (App Coq.Init.Logic.eq_ind nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (Lambda n_332222222222232 nat (App Coq.Init.Peano.lt n_332222222222232 (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222))) H1_33222222222223 (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) H0_33222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) (App Coq.Init.Logic.False_ind (App eq (App prod nat nat) (App pair nat nat x1_332222 y1_3322222) (App pair nat nat x2_332222222 y2_3322222222)) (App (Cast (App Coq.Arith.PeanoNat.Nat.lt_irrefl (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) REVERTcast (Prod H1_3322222222222331 (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) False)) H1_332222222222233))))) (Lambda e_3322222222222 (App eq nat (App Coq.Init.Nat.add x1_332222 y1_3322222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (LetIn H1_33222222222223 (LetIn H0_33222222222223 (App Coq.Init.Logic.eq_ind nat (App Coq.Init.Nat.add x1_332222 y1_3322222) (Lambda n_33222222222222 nat (App eq nat (App Coq.Init.Nat.add (App sum_1_to_n_3 n_33222222222222) y1_3322222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222))) H0_33222222222 (App Coq.Init.Nat.add x2_332222222 y2_3322222222) e_3322222222222) (App eq nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y1_3322222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) (LetIn H0_332222222222233 (App Coq.Arith.Plus.plus_reg_l y1_3322222 y2_3322222222 (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) H0_33222222222223) (App eq nat y1_3322222 y2_3322222222) H0_332222222222233)) (App eq nat y1_3322222 y2_3322222222) (LetIn H2_332222222222233 H1_33222222222223 (App eq nat y1_3322222 y2_3322222222) (App (LetIn H2_3322222222222333 (LetIn e_3322222222222333 (App Coq.Init.Logic.eq_ind nat y1_3322222 (Lambda y1_3322222222222332 nat (App eq nat (App Coq.Init.Nat.add x1_332222 y1_3322222222222332) (App Coq.Init.Nat.add x2_332222222 y2_3322222222))) e_3322222222222 y2_3322222222 H1_33222222222223) (App eq nat (App Coq.Init.Nat.add x1_332222 y2_3322222222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (LetIn e_33222222222223333 (App Coq.Init.Logic.eq_ind nat (App Coq.Init.Nat.add x1_332222 y2_3322222222) (Lambda n_33222222222223332 nat (App eq nat n_33222222222223332 (App Coq.Init.Nat.add x2_332222222 y2_3322222222))) e_3322222222222333 (App Coq.Init.Nat.add y2_3322222222 x1_332222) (App Coq.Arith.PeanoNat.Nat.add_comm x1_332222 y2_3322222222)) (App eq nat (App Coq.Init.Nat.add y2_3322222222 x1_332222) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (LetIn e_332222222222233333 (App Coq.Init.Logic.eq_ind nat (App Coq.Init.Nat.add x2_332222222 y2_3322222222) (Lambda n_332222222222233332 nat (App eq nat (App Coq.Init.Nat.add y2_3322222222 x1_332222) n_332222222222233332)) e_33222222222223333 (App Coq.Init.Nat.add y2_3322222222 x2_332222222) (App Coq.Arith.PeanoNat.Nat.add_comm x2_332222222 y2_3322222222)) (App eq nat (App Coq.Init.Nat.add y2_3322222222 x1_332222) (App Coq.Init.Nat.add y2_3322222222 x2_332222222)) (LetIn e_3322222222222333333 (App Coq.Arith.Plus.plus_reg_l x1_332222 x2_332222222 y2_3322222222 e_332222222222233333) (App eq nat x1_332222 x2_332222222) e_3322222222222333333)))) (App eq nat x1_332222 x2_332222222) (App (LetIn H2_33222222222223333 (App eq_refl (Sort Set) nat) (App eq (Sort Set) nat nat) (App (LetIn H2_332222222222233333 (App eq_refl (Sort Set) nat) (App eq (Sort Set) nat nat) (App (Lambda H2_3322222222222333332 (App eq (Sort Set) nat nat) (Lambda H3_33222222222223333322 (App eq (Sort Set) nat nat) (Lambda H4_332222222222233333222 (App eq nat x1_332222 x2_332222222) (Lambda H5_3322222222222333332222 (App eq nat y1_3322222 y2_3322222222) (App Coq.Init.Logic.eq_trans (App prod nat nat) (App pair nat nat x1_332222 y1_3322222) (App pair nat nat x2_332222222 y1_3322222) (App pair nat nat x2_332222222 y2_3322222222) (App Coq.Init.Logic.f_equal (Prod out_33222222222223333322221 nat (App prod nat nat)) (App prod nat nat) (Lambda f_33222222222223333322222 (Prod out_33222222222223333322221 nat (App prod nat nat)) (App f_33222222222223333322222 y1_3322222)) (App pair nat nat x1_332222) (App pair nat nat x2_332222222) (App Coq.Init.Logic.eq_trans (Prod out_33222222222223333322221 nat (App prod nat nat)) (App pair nat nat x1_332222) (App pair nat nat x1_332222) (App pair nat nat x2_332222222) (App Coq.Init.Logic.f_equal (Prod out_33222222222223333322221 nat (Prod out_332222222222233333222211 nat (App prod nat nat))) (Prod out_33222222222223333322221 nat (App prod nat nat)) (Lambda f_33222222222223333322222 (Prod out_33222222222223333322221 nat (Prod out_332222222222233333222211 nat (App prod nat nat))) (App f_33222222222223333322222 x1_332222)) (App pair nat nat) (App pair nat nat) (App eq_refl (Prod out_33222222222223333322221 nat (Prod out_332222222222233333222211 nat (App prod nat nat))) (App pair nat nat))) (App Coq.Init.Logic.f_equal nat (Prod out_33222222222223333322221 nat (App prod nat nat)) (App pair nat nat) x1_332222 x2_332222222 H4_332222222222233333222))) (App Coq.Init.Logic.f_equal nat (App prod nat nat) (App pair nat nat x2_332222222) y1_3322222 y2_3322222222 H5_3322222222222333332222)))))) H2_332222222222233333)) H2_33222222222223333)) H2_3322222222222333)) H2_332222222222233))))))) (Lambda l_332222222222 (App Coq.Init.Peano.lt (App Coq.Init.Nat.add x2_332222222 y2_3322222222) (App Coq.Init.Nat.add x1_332222 y1_3322222)) (LetIn H1_3322222222223 (App Coq.Arith.PeanoNat.Nat.le_lt_trans (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (App Coq.Arith.Plus.plus_le_compat_l y2_3322222222 (App Coq.Init.Nat.add x2_332222222 y2_3322222222) (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App Coq.Arith.Plus.le_plus_r x2_332222222 y2_3322222222)) (App Coq.Arith.PeanoNat.Nat.lt_le_trans (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (App H_33 (App Coq.Init.Nat.add x2_332222222 y2_3322222222) (App Coq.Init.Nat.add x1_332222 y1_3322222) l_332222222222) (App Coq.Arith.Plus.le_plus_l (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222))) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222)) (LetIn H1_33222222222233 (App Coq.Init.Logic.eq_ind nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x1_332222 y1_3322222)) y1_3322222) (Lambda n_33222222222232 nat (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) n_33222222222232)) H1_3322222222223 (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) H0_33222222222) (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) (App Coq.Init.Logic.False_ind (App eq (App prod nat nat) (App pair nat nat x1_332222 y1_3322222) (App pair nat nat x2_332222222 y2_3322222222)) (App (Cast (App Coq.Arith.PeanoNat.Nat.lt_irrefl (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) REVERTcast (Prod H1_332222222222331 (App Coq.Init.Peano.lt (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222) (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add x2_332222222 y2_3322222222)) y2_3322222222)) False)) H1_33222222222233)))))))))))) H0_33222222)))))) H0_33222)))) REVERTcast (App ZornsLemma.FunctionProperties.injective (App prod nat nat) nat (Lambda p_332 (App prod nat nat) (Case 2 (Lambda p_3322 (App prod nat nat) nat) (CaseMatch p_332) (CaseBranches (Lambda m_3322 nat (Lambda n_33222 nat (App Coq.Init.Nat.add (App sum_1_to_n_3 (App Coq.Init.Nat.add m_3322 n_33222)) n_33222)))))))))))) (Definition ZornsLemma.FunctionProperties.injective (Lambda X_322 (Sort Type) (Lambda Y_3222 (Sort Type) (Lambda f_32222 (Prod out_32221 X_322 Y_3222) (Prod x1_322221 X_322 (Prod x2_3222211 X_322 (Prod out_32222111 (App eq Y_3222 (App f_32222 x1_322221) (App f_32222 x2_3222211)) (App eq X_322 x1_322221 x2_3222211)))))))) (Definition ZornsLemma.CountableTypes.positive_countable (App intro_nat_injection positive Coq.PArith.BinPosDef.Pos.to_nat (Cast (Lambda x1_3222 positive (Lambda x2_32222 positive (Lambda H_322222 (App eq nat (App Coq.PArith.BinPosDef.Pos.to_nat x1_3222) (App Coq.PArith.BinPosDef.Pos.to_nat x2_32222)) (App Coq.PArith.Pnat.Pos2Nat.inj x1_3222 x2_32222 H_322222)))) REVERTcast (App ZornsLemma.FunctionProperties.injective positive nat Coq.PArith.BinPosDef.Pos.to_nat)))) (Definition ZornsLemma.CountableTypes.Z_countable (LetIn c_3223223 ZornsLemma.CountableTypes.countable_nat_product (App CountableT (App prod nat nat)) (Case 1 (Lambda out_32232232 (App CountableT (App prod nat nat)) (App CountableT Z)) (CaseMatch c_3223223) (CaseBranches (Lambda f_32232232 (Prod out_32232231 (App prod nat nat) nat) (Lambda H_322322322 (App ZornsLemma.FunctionProperties.injective (App prod nat nat) nat f_32232232) (LetIn c_3223223223 ZornsLemma.CountableTypes.positive_countable (App CountableT positive) (Case 1 (Lambda out_32232232232 (App CountableT positive) (App CountableT Z)) (CaseMatch c_3223223223) (CaseBranches (Lambda g_32232232232 (Prod out_32232232231 positive nat) (Lambda H0_322322322322 (App ZornsLemma.FunctionProperties.injective positive nat g_32232232232) (App intro_nat_injection Z (Lambda n_3223223223222 Z (Case 0 (Lambda n_32232232232222 Z nat) (CaseMatch n_3223223223222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_32232232232222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_32232232232222)))) (Lambda p_32232232232222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_32232232232222))))))) (Cast (Lambda n1_3223223223222 Z (Lambda n2_32232232232222 Z (Lambda H1_322322322322222 (App eq nat (Case 0 (Lambda n_322322322322222 Z nat) (CaseMatch n1_3223223223222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_322322322322222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_322322322322222)))) (Lambda p_322322322322222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_322322322322222)))))) (Case 0 (Lambda n_322322322322222 Z nat) (CaseMatch n2_32232232232222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_322322322322222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_322322322322222)))) (Lambda p_322322322322222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_322322322322222))))))) (App (Case 0 (Lambda z_3223223223222222 Z (Prod H1_32232232232222221 (App eq nat (Case 0 (Lambda n_32232232232222222 Z nat) (CaseMatch z_3223223223222222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_32232232232222222)))) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_32232232232222222)))))) (Case 0 (Lambda n_32232232232222222 Z nat) (CaseMatch n2_32232232232222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_32232232232222222)))) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_32232232232222222))))))) (App eq Z z_3223223223222222 n2_32232232232222))) (CaseMatch n1_3223223223222) (CaseBranches (Lambda H1_3223223223222222 (App eq nat (App f_32232232 (App pair nat nat O O)) (Case 0 (Lambda n_3223223223222222 Z nat) (CaseMatch n2_32232232232222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_3223223223222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_3223223223222222)))) (Lambda p_3223223223222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_3223223223222222))))))) (App (Case 0 (Lambda z_32232232232222222 Z (Prod H1_322322322322222221 (App eq nat (App f_32232232 (App pair nat nat O O)) (Case 0 (Lambda n_322322322322222222 Z nat) (CaseMatch z_32232232232222222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_322322322322222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_322322322322222222)))) (Lambda p_322322322322222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_322322322322222222))))))) (App eq Z Z0 z_32232232232222222))) (CaseMatch n2_32232232232222) (CaseBranches (Lambda H1_32232232232222222 (App eq nat (App f_32232232 (App pair nat nat O O)) (App f_32232232 (App pair nat nat O O))) (LetIn H1_322322322322222223 (App H_322322322 (App pair nat nat O O) (App pair nat nat O O) H1_32232232232222222) (App eq (App prod nat nat) (App pair nat nat O O) (App pair nat nat O O)) (App eq_refl Z Z0))) (Lambda p2_32232232232222222 positive (Lambda H1_322322322322222222 (App eq nat (App f_32232232 (App pair nat nat O O)) (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p2_32232232232222222)))) (LetIn H1_3223223223222222223 (App H_322322322 (App pair nat nat O O) (App pair nat nat (App S O) (App g_32232232232 p2_32232232232222222)) H1_322322322322222222) (App eq (App prod nat nat) (App pair nat nat O O) (App pair nat nat (App S O) (App g_32232232232 p2_32232232232222222))) (LetIn H2_32232232232222222233 (App Coq.Init.Logic.eq_ind (App prod nat nat) (App pair nat nat O O) (Lambda e_32232232232222222232 (App prod nat nat) (Case 2 (Lambda p_322322322322222222322 (App prod nat nat) (Sort Prop)) (CaseMatch e_32232232232222222232) (CaseBranches (Lambda n_322322322322222222322 nat (Lambda n_3223223223222222223222 nat (Case 0 (Lambda n_32232232232222222232222 nat (Sort Prop)) (CaseMatch n_322322322322222222322) (CaseBranches True (Lambda out_32232232232222222232222 nat False)))))))) I (App pair nat nat (App S O) (App g_32232232232 p2_32232232232222222)) H1_3223223223222222223) False (App Coq.Init.Logic.False_ind (App eq Z Z0 (App Zpos p2_32232232232222222)) H2_32232232232222222233))))) (Lambda p2_32232232232222222 positive (Lambda H1_322322322322222222 (App eq nat (App f_32232232 (App pair nat nat O O)) (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p2_32232232232222222)))) (LetIn H1_3223223223222222223 (App H_322322322 (App pair nat nat O O) (App pair nat nat (App S (App S O)) (App g_32232232232 p2_32232232232222222)) H1_322322322322222222) (App eq (App prod nat nat) (App pair nat nat O O) (App pair nat nat (App S (App S O)) (App g_32232232232 p2_32232232232222222))) (LetIn H2_32232232232222222233 (App Coq.Init.Logic.eq_ind (App prod nat nat) (App pair nat nat O O) (Lambda e_32232232232222222232 (App prod nat nat) (Case 2 (Lambda p_322322322322222222322 (App prod nat nat) (Sort Prop)) (CaseMatch e_32232232232222222232) (CaseBranches (Lambda n_322322322322222222322 nat (Lambda n_3223223223222222223222 nat (Case 0 (Lambda n_32232232232222222232222 nat (Sort Prop)) (CaseMatch n_322322322322222222322) (CaseBranches True (Lambda out_32232232232222222232222 nat False)))))))) I (App pair nat nat (App S (App S O)) (App g_32232232232 p2_32232232232222222)) H1_3223223223222222223) False (App Coq.Init.Logic.False_ind (App eq Z Z0 (App Zneg p2_32232232232222222)) H2_32232232232222222233))))))) H1_3223223223222222)) (Lambda p1_3223223223222222 positive (Lambda H1_32232232232222222 (App eq nat (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222))) (Case 0 (Lambda n_32232232232222222 Z nat) (CaseMatch n2_32232232232222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_32232232232222222)))) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_32232232232222222))))))) (App (Case 0 (Lambda z_322322322322222222 Z (Prod H1_3223223223222222221 (App eq nat (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222))) (Case 0 (Lambda n_3223223223222222222 Z nat) (CaseMatch z_322322322322222222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_3223223223222222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_3223223223222222222)))) (Lambda p_3223223223222222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_3223223223222222222))))))) (App eq Z (App Zpos p1_3223223223222222) z_322322322322222222))) (CaseMatch n2_32232232232222) (CaseBranches (Lambda H1_322322322322222222 (App eq nat (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222))) (App f_32232232 (App pair nat nat O O))) (LetIn H1_3223223223222222223 (App H_322322322 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (App pair nat nat O O) H1_322322322322222222) (App eq (App prod nat nat) (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (App pair nat nat O O)) (LetIn H2_32232232232222222233 (App Coq.Init.Logic.eq_ind (App prod nat nat) (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (Lambda e_32232232232222222232 (App prod nat nat) (Case 2 (Lambda p_322322322322222222322 (App prod nat nat) (Sort Prop)) (CaseMatch e_32232232232222222232) (CaseBranches (Lambda n_322322322322222222322 nat (Lambda n_3223223223222222223222 nat (Case 0 (Lambda n_32232232232222222232222 nat (Sort Prop)) (CaseMatch n_322322322322222222322) (CaseBranches False (Lambda out_32232232232222222232222 nat True)))))))) I (App pair nat nat O O) H1_3223223223222222223) False (App Coq.Init.Logic.False_ind (App eq Z (App Zpos p1_3223223223222222) Z0) H2_32232232232222222233)))) (Lambda p2_322322322322222222 positive (Lambda H1_3223223223222222222 (App eq nat (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222))) (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222)))) (LetIn H1_32232232232222222223 (App H_322322322 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222)) H1_3223223223222222222) (App eq (App prod nat nat) (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222))) (LetIn H2_322322322322222222233 (App Coq.Init.Logic.f_equal (App prod nat nat) nat (Lambda e_322322322322222222232 (App prod nat nat) (Case 2 (Lambda p_3223223223222222222322 (App prod nat nat) nat) (CaseMatch e_322322322322222222232) (CaseBranches (Lambda n_3223223223222222222322 nat (Lambda n_32232232232222222223222 nat n_32232232232222222223222))))) (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222)) H1_32232232232222222223) (App eq nat (App g_32232232232 p1_3223223223222222) (App g_32232232232 p2_322322322322222222)) (App (Lambda H2_3223223223222222222332 (App eq nat (App g_32232232232 p1_3223223223222222) (App g_32232232232 p2_322322322322222222)) (LetIn H3_32232232232222222223323 (App H0_322322322322 p1_3223223223222222 p2_322322322322222222 H2_3223223223222222222332) (App eq positive p1_3223223223222222 p2_322322322322222222) (App (Lambda H3_322322322322222222233232 (App eq positive p1_3223223223222222 p2_322322322322222222) (App Coq.Init.Logic.eq_trans Z (App Zpos p1_3223223223222222) (App Zpos p1_3223223223222222) (App Zpos p2_322322322322222222) (App Coq.Init.Logic.f_equal (Prod out_3223223223222222222332321 positive Z) Z (Lambda f0_3223223223222222222332322 (Prod out_3223223223222222222332321 positive Z) (App f0_3223223223222222222332322 p1_3223223223222222)) Zpos Zpos (App eq_refl (Prod out_3223223223222222222332321 positive Z) Zpos)) (App Coq.Init.Logic.f_equal positive Z Zpos p1_3223223223222222 p2_322322322322222222 H3_322322322322222222233232))) H3_32232232232222222223323))) H2_322322322322222222233))))) (Lambda p2_322322322322222222 positive (Lambda H1_3223223223222222222 (App eq nat (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222))) (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222)))) (LetIn H1_32232232232222222223 (App H_322322322 (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222)) H1_3223223223222222222) (App eq (App prod nat nat) (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222))) (LetIn H2_322322322322222222233 (App Coq.Init.Logic.eq_ind (App prod nat nat) (App pair nat nat (App S O) (App g_32232232232 p1_3223223223222222)) (Lambda e_322322322322222222232 (App prod nat nat) (Case 2 (Lambda p_3223223223222222222322 (App prod nat nat) (Sort Prop)) (CaseMatch e_322322322322222222232) (CaseBranches (Lambda n_3223223223222222222322 nat (Lambda n_32232232232222222223222 nat (Case 0 (Lambda n_322322322322222222232222 nat (Sort Prop)) (CaseMatch n_3223223223222222222322) (CaseBranches False (Lambda n_322322322322222222232222 nat (Case 0 (Lambda n_3223223223222222222322222 nat (Sort Prop)) (CaseMatch n_322322322322222222232222) (CaseBranches True (Lambda out_3223223223222222222322222 nat False))))))))))) I (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222)) H1_32232232232222222223) False (App Coq.Init.Logic.False_ind (App eq Z (App Zpos p1_3223223223222222) (App Zneg p2_322322322322222222)) H2_322322322322222222233))))))) H1_32232232232222222))) (Lambda p1_3223223223222222 positive (Lambda H1_32232232232222222 (App eq nat (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222))) (Case 0 (Lambda n_32232232232222222 Z nat) (CaseMatch n2_32232232232222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_32232232232222222)))) (Lambda p_32232232232222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_32232232232222222))))))) (App (Case 0 (Lambda z_322322322322222222 Z (Prod H1_3223223223222222221 (App eq nat (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222))) (Case 0 (Lambda n_3223223223222222222 Z nat) (CaseMatch z_322322322322222222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_3223223223222222222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_3223223223222222222)))) (Lambda p_3223223223222222222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_3223223223222222222))))))) (App eq Z (App Zneg p1_3223223223222222) z_322322322322222222))) (CaseMatch n2_32232232232222) (CaseBranches (Lambda H1_322322322322222222 (App eq nat (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222))) (App f_32232232 (App pair nat nat O O))) (LetIn H1_3223223223222222223 (App H_322322322 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (App pair nat nat O O) H1_322322322322222222) (App eq (App prod nat nat) (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (App pair nat nat O O)) (LetIn H2_32232232232222222233 (App Coq.Init.Logic.eq_ind (App prod nat nat) (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (Lambda e_32232232232222222232 (App prod nat nat) (Case 2 (Lambda p_322322322322222222322 (App prod nat nat) (Sort Prop)) (CaseMatch e_32232232232222222232) (CaseBranches (Lambda n_322322322322222222322 nat (Lambda n_3223223223222222223222 nat (Case 0 (Lambda n_32232232232222222232222 nat (Sort Prop)) (CaseMatch n_322322322322222222322) (CaseBranches False (Lambda out_32232232232222222232222 nat True)))))))) I (App pair nat nat O O) H1_3223223223222222223) False (App Coq.Init.Logic.False_ind (App eq Z (App Zneg p1_3223223223222222) Z0) H2_32232232232222222233)))) (Lambda p2_322322322322222222 positive (Lambda H1_3223223223222222222 (App eq nat (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222))) (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222)))) (LetIn H1_32232232232222222223 (App H_322322322 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222)) H1_3223223223222222222) (App eq (App prod nat nat) (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222))) (LetIn H2_322322322322222222233 (App Coq.Init.Logic.eq_ind (App prod nat nat) (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (Lambda e_322322322322222222232 (App prod nat nat) (Case 2 (Lambda p_3223223223222222222322 (App prod nat nat) (Sort Prop)) (CaseMatch e_322322322322222222232) (CaseBranches (Lambda n_3223223223222222222322 nat (Lambda n_32232232232222222223222 nat (Case 0 (Lambda n_322322322322222222232222 nat (Sort Prop)) (CaseMatch n_3223223223222222222322) (CaseBranches False (Lambda n_322322322322222222232222 nat (Case 0 (Lambda n_3223223223222222222322222 nat (Sort Prop)) (CaseMatch n_322322322322222222232222) (CaseBranches False (Lambda out_3223223223222222222322222 nat True))))))))))) I (App pair nat nat (App S O) (App g_32232232232 p2_322322322322222222)) H1_32232232232222222223) False (App Coq.Init.Logic.False_ind (App eq Z (App Zneg p1_3223223223222222) (App Zpos p2_322322322322222222)) H2_322322322322222222233))))) (Lambda p2_322322322322222222 positive (Lambda H1_3223223223222222222 (App eq nat (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222))) (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222)))) (LetIn H1_32232232232222222223 (App H_322322322 (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222)) H1_3223223223222222222) (App eq (App prod nat nat) (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222))) (LetIn H2_322322322322222222233 (App Coq.Init.Logic.f_equal (App prod nat nat) nat (Lambda e_322322322322222222232 (App prod nat nat) (Case 2 (Lambda p_3223223223222222222322 (App prod nat nat) nat) (CaseMatch e_322322322322222222232) (CaseBranches (Lambda n_3223223223222222222322 nat (Lambda n_32232232232222222223222 nat n_32232232232222222223222))))) (App pair nat nat (App S (App S O)) (App g_32232232232 p1_3223223223222222)) (App pair nat nat (App S (App S O)) (App g_32232232232 p2_322322322322222222)) H1_32232232232222222223) (App eq nat (App g_32232232232 p1_3223223223222222) (App g_32232232232 p2_322322322322222222)) (App (Lambda H2_3223223223222222222332 (App eq nat (App g_32232232232 p1_3223223223222222) (App g_32232232232 p2_322322322322222222)) (LetIn H3_32232232232222222223323 (App H0_322322322322 p1_3223223223222222 p2_322322322322222222 H2_3223223223222222222332) (App eq positive p1_3223223223222222 p2_322322322322222222) (App (Lambda H3_322322322322222222233232 (App eq positive p1_3223223223222222 p2_322322322322222222) (App Coq.Init.Logic.eq_trans Z (App Zneg p1_3223223223222222) (App Zneg p1_3223223223222222) (App Zneg p2_322322322322222222) (App Coq.Init.Logic.f_equal (Prod out_3223223223222222222332321 positive Z) Z (Lambda f0_3223223223222222222332322 (Prod out_3223223223222222222332321 positive Z) (App f0_3223223223222222222332322 p1_3223223223222222)) Zneg Zneg (App eq_refl (Prod out_3223223223222222222332321 positive Z) Zneg)) (App Coq.Init.Logic.f_equal positive Z Zneg p1_3223223223222222 p2_322322322322222222 H3_322322322322222222233232))) H3_32232232232222222223323))) H2_322322322322222222233))))))) H1_32232232232222222))))) H1_322322322322222)))) REVERTcast (App ZornsLemma.FunctionProperties.injective Z nat (Lambda n_3223223223222 Z (Case 0 (Lambda n_32232232232222 Z nat) (CaseMatch n_3223223223222) (CaseBranches (App f_32232232 (App pair nat nat O O)) (Lambda p_32232232232222 positive (App f_32232232 (App pair nat nat (App S O) (App g_32232232232 p_32232232232222)))) (Lambda p_32232232232222 positive (App f_32232232 (App pair nat nat (App S (App S O)) (App g_32232232232 p_32232232232222))))))))))))))))))))) (Definition Coq.Init.Logic.f_equal (Lambda A_32232232222222222232 (Sort Type) (Lambda B_322322322222222222322 (Sort Type) (Lambda f_3223223222222222223222 (Prod out_3223223222222222223221 A_32232232222222222232 B_322322322222222222322) (Lambda x_32232232222222222232222 A_32232232222222222232 (Lambda y_322322322222222222322222 A_32232232222222222232 (Lambda H_3223223222222222223222222 (App eq A_32232232222222222232 x_32232232222222222232222 y_322322322222222222322222) (Case 2 (Lambda y_32232232222222222232222222 A_32232232222222222232 (Lambda out_322322322222222222322222222 (App eq A_32232232222222222232 x_32232232222222222232222 y_32232232222222222232222222) (App eq B_322322322222222222322 (App f_3223223222222222223222 x_32232232222222222232222) (App f_3223223222222222223222 y_32232232222222222232222222)))) (CaseMatch H_3223223222222222223222222) (CaseBranches (App eq_refl B_322322322222222222322 (App f_3223223222222222223222 x_32232232222222222232222))))))))))) (Definition Coq.Init.Logic.eq_trans (Lambda A_3223223222222222223332233222 (Sort Type) (Lambda x_32232232222222222233322332222 A_3223223222222222223332233222 (Lambda y_322322322222222222333223322222 A_3223223222222222223332233222 (Lambda z_3223223222222222223332233222222 A_3223223222222222223332233222 (Lambda H_32232232222222222233322332222222 (App eq A_3223223222222222223332233222 x_32232232222222222233322332222 y_322322322222222222333223322222) (Lambda H0_322322322222222222333223322222222 (App eq A_3223223222222222223332233222 y_322322322222222222333223322222 z_3223223222222222223332233222222) (Case 2 (Lambda y_3223223222222222223332233222222222 A_3223223222222222223332233222 (Lambda out_32232232222222222233322332222222222 (App eq A_3223223222222222223332233222 y_322322322222222222333223322222 y_3223223222222222223332233222222222) (App eq A_3223223222222222223332233222 x_32232232222222222233322332222 y_3223223222222222223332233222222222))) (CaseMatch H0_322322322222222222333223322222222) (CaseBranches H_32232232222222222233322332222222))))))))) (Definition ZornsLemma.CountableTypes.Q_countable (LetIn c_3 ZornsLemma.CountableTypes.countable_nat_product (App CountableT (App prod nat nat)) (Case 1 (Lambda out_32 (App CountableT (App prod nat nat)) (App CountableT Q)) (CaseMatch c_3) (CaseBranches (Lambda f_32 (Prod out_31 (App prod nat nat) nat) (Lambda H_322 (App ZornsLemma.FunctionProperties.injective (App prod nat nat) nat f_32) (LetIn c_3223 ZornsLemma.CountableTypes.positive_countable (App CountableT positive) (Case 1 (Lambda out_32232 (App CountableT positive) (App CountableT Q)) (CaseMatch c_3223) (CaseBranches (Lambda g_32232 (Prod out_32231 positive nat) (Lambda H0_322322 (App ZornsLemma.FunctionProperties.injective positive nat g_32232) (LetIn c_3223223 ZornsLemma.CountableTypes.Z_countable (App CountableT Z) (Case 1 (Lambda out_32232232 (App CountableT Z) (App CountableT Q)) (CaseMatch c_3223223) (CaseBranches (Lambda h_32232232 (Prod out_32232231 Z nat) (Lambda H1_322322322 (App ZornsLemma.FunctionProperties.injective Z nat h_32232232) (App intro_nat_injection Q (Lambda q_3223223222 Q (Case 0 (Lambda q_32232232222 Q nat) (CaseMatch q_3223223222) (CaseBranches (Lambda n_32232232222 Z (Lambda d_322322322222 positive (App f_32 (App pair nat nat (App h_32232232 n_32232232222) (App g_32232 d_322322322222)))))))) (Cast (Lambda q1_3223223222 Q (Lambda q2_32232232222 Q (Lambda H2_322322322222 (App eq nat (Case 0 (Lambda q_322322322222 Q nat) (CaseMatch q1_3223223222) (CaseBranches (Lambda n_322322322222 Z (Lambda d_3223223222222 positive (App f_32 (App pair nat nat (App h_32232232 n_322322322222) (App g_32232 d_3223223222222))))))) (Case 0 (Lambda q_322322322222 Q nat) (CaseMatch q2_32232232222) (CaseBranches (Lambda n_322322322222 Z (Lambda d_3223223222222 positive (App f_32 (App pair nat nat (App h_32232232 n_322322322222) (App g_32232 d_3223223222222)))))))) (App (Case 0 (Lambda q_3223223222222 Q (Prod H2_32232232222221 (App eq nat (Case 0 (Lambda q_32232232222222 Q nat) (CaseMatch q_3223223222222) (CaseBranches (Lambda n_32232232222222 Z (Lambda d_322322322222222 positive (App f_32 (App pair nat nat (App h_32232232 n_32232232222222) (App g_32232 d_322322322222222))))))) (Case 0 (Lambda q_32232232222222 Q nat) (CaseMatch q2_32232232222) (CaseBranches (Lambda n_32232232222222 Z (Lambda d_322322322222222 positive (App f_32 (App pair nat nat (App h_32232232 n_32232232222222) (App g_32232 d_322322322222222)))))))) (App eq Q q_3223223222222 q2_32232232222))) (CaseMatch q1_3223223222) (CaseBranches (Lambda n1_3223223222222 Z (Lambda d1_32232232222222 positive (Lambda H2_322322322222222 (App eq nat (App f_32 (App pair nat nat (App h_32232232 n1_3223223222222) (App g_32232 d1_32232232222222))) (Case 0 (Lambda q_322322322222222 Q nat) (CaseMatch q2_32232232222) (CaseBranches (Lambda n_322322322222222 Z (Lambda d_3223223222222222 positive (App f_32 (App pair nat nat (App h_32232232 n_322322322222222) (App g_32232 d_3223223222222222)))))))) (App (Case 0 (Lambda q_3223223222222222 Q (Prod H2_32232232222222221 (App eq nat (App f_32 (App pair nat nat (App h_32232232 n1_3223223222222) (App g_32232 d1_32232232222222))) (Case 0 (Lambda q_32232232222222222 Q nat) (CaseMatch q_3223223222222222) (CaseBranches (Lambda n_32232232222222222 Z (Lambda d_322322322222222222 positive (App f_32 (App pair nat nat (App h_32232232 n_32232232222222222) (App g_32232 d_322322322222222222)))))))) (App eq Q (App Qmake n1_3223223222222 d1_32232232222222) q_3223223222222222))) (CaseMatch q2_32232232222) (CaseBranches (Lambda n2_3223223222222222 Z (Lambda d2_32232232222222222 positive (Lambda H2_322322322222222222 (App eq nat (App f_32 (App pair nat nat (App h_32232232 n1_3223223222222) (App g_32232 d1_32232232222222))) (App f_32 (App pair nat nat (App h_32232232 n2_3223223222222222) (App g_32232 d2_32232232222222222)))) (LetIn H2_3223223222222222223 (App H_322 (App pair nat nat (App h_32232232 n1_3223223222222) (App g_32232 d1_32232232222222)) (App pair nat nat (App h_32232232 n2_3223223222222222) (App g_32232 d2_32232232222222222)) H2_322322322222222222) (App eq (App prod nat nat) (App pair nat nat (App h_32232232 n1_3223223222222) (App g_32232 d1_32232232222222)) (App pair nat nat (App h_32232232 n2_3223223222222222) (App g_32232 d2_32232232222222222))) (LetIn H3_32232232222222222233 (App Coq.Init.Logic.f_equal (App prod nat nat) nat (Lambda e_32232232222222222232 (App prod nat nat) (Case 2 (Lambda p_322322322222222222322 (App prod nat nat) nat) (CaseMatch e_32232232222222222232) (CaseBranches (Lambda n_322322322222222222322 nat (Lambda n_3223223222222222223222 nat n_322322322222222222322))))) (App pair nat nat (App h_32232232 n1_3223223222222) (App g_32232 d1_32232232222222)) (App pair nat nat (App h_32232232 n2_3223223222222222) (App g_32232 d2_32232232222222222)) H2_3223223222222222223) (App eq nat (App h_32232232 n1_3223223222222) (App h_32232232 n2_3223223222222222)) (App (LetIn H3_322322322222222222333 (App Coq.Init.Logic.f_equal (App prod nat nat) nat (Lambda e_322322322222222222332 (App prod nat nat) (Case 2 (Lambda p_3223223222222222223322 (App prod nat nat) nat) (CaseMatch e_322322322222222222332) (CaseBranches (Lambda n_3223223222222222223322 nat (Lambda n_32232232222222222233222 nat n_32232232222222222233222))))) (App pair nat nat (App h_32232232 n1_3223223222222) (App g_32232 d1_32232232222222)) (App pair nat nat (App h_32232232 n2_3223223222222222) (App g_32232 d2_32232232222222222)) H2_3223223222222222223) (App eq nat (App g_32232 d1_32232232222222) (App g_32232 d2_32232232222222222)) (App (Lambda H3_3223223222222222223332 (App eq nat (App g_32232 d1_32232232222222) (App g_32232 d2_32232232222222222)) (Lambda H4_32232232222222222233322 (App eq nat (App h_32232232 n1_3223223222222) (App h_32232232 n2_3223223222222222)) (LetIn H5_322322322222222222333223 (App H0_322322 d1_32232232222222 d2_32232232222222222 H3_3223223222222222223332) (App eq positive d1_32232232222222 d2_32232232222222222) (App (LetIn H5_3223223222222222223332233 (App H1_322322322 n1_3223223222222 n2_3223223222222222 H4_32232232222222222233322) (App eq Z n1_3223223222222 n2_3223223222222222) (App (Lambda H5_32232232222222222233322332 (App eq Z n1_3223223222222 n2_3223223222222222) (Lambda H6_322322322222222222333223322 (App eq positive d1_32232232222222 d2_32232232222222222) (App Coq.Init.Logic.eq_trans Q (App Qmake n1_3223223222222 d1_32232232222222) (App Qmake n2_3223223222222222 d1_32232232222222) (App Qmake n2_3223223222222222 d2_32232232222222222) (App Coq.Init.Logic.f_equal (Prod Qden_3223223222222222223332233221 positive Q) Q (Lambda f0_3223223222222222223332233222 (Prod Qden_3223223222222222223332233221 positive Q) (App f0_3223223222222222223332233222 d1_32232232222222)) (App Qmake n1_3223223222222) (App Qmake n2_3223223222222222) (App Coq.Init.Logic.eq_trans (Prod Qden_3223223222222222223332233221 positive Q) (App Qmake n1_3223223222222) (App Qmake n1_3223223222222) (App Qmake n2_3223223222222222) (App Coq.Init.Logic.f_equal (Prod Qnum_3223223222222222223332233221 Z (Prod Qden_32232232222222222233322332211 positive Q)) (Prod Qden_3223223222222222223332233221 positive Q) (Lambda f0_3223223222222222223332233222 (Prod Qnum_3223223222222222223332233221 Z (Prod Qden_32232232222222222233322332211 positive Q)) (App f0_3223223222222222223332233222 n1_3223223222222)) Qmake Qmake (App eq_refl (Prod Qnum_3223223222222222223332233221 Z (Prod Qden_32232232222222222233322332211 positive Q)) Qmake)) (App Coq.Init.Logic.f_equal Z (Prod Qden_3223223222222222223332233221 positive Q) Qmake n1_3223223222222 n2_3223223222222222 H5_32232232222222222233322332))) (App Coq.Init.Logic.f_equal positive Q (App Qmake n2_3223223222222222) d1_32232232222222 d2_32232232222222222 H6_322322322222222222333223322)))) H5_3223223222222222223332233)) H5_322322322222222222333223)))) H3_322322322222222222333)) H3_32232232222222222233)))))))) H2_322322322222222)))))) H2_322322322222)))) REVERTcast (App ZornsLemma.FunctionProperties.injective Q nat (Lambda q_3223223222 Q (Case 0 (Lambda q_32232232222 Q nat) (CaseMatch q_3223223222) (CaseBranches (Lambda n_32232232222 Z (Lambda d_322322322222 positive (App f_32 (App pair nat nat (App h_32232232 n_32232232222) (App g_32232 d_322322322222))))))))))))))))))))))))))) 